var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var CaiyunbangMdr3 = /** @class */ (function (_super) {
                __extends(CaiyunbangMdr3, _super);
                function CaiyunbangMdr3() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    _this._endTime = 0;
                    _this._actType = 14 /* CaiyunbangCharge */;
                    return _this;
                }
                CaiyunbangMdr3.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(250 /* Caiyunbang */);
                    this._view.list.itemRenderer = activity.CaiyunbangItem3;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                CaiyunbangMdr3.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var eventType = this._actType == 14 /* CaiyunbangCharge */
                        ? "on_caiyunbang_leichong_info_update" /* ON_CAIYUNBANG_LEICHONG_INFO_UPDATE */
                        : "on_caiyunbang_login_info_update" /* ON_CAIYUNBANG_LOGIN_INFO_UPDATE */;
                    this.onNt(eventType, this.updateView, this);
                };
                CaiyunbangMdr3.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.clearLoginHint(this._actType);
                    this._endTime = this._proxy.getCurOpenAct().c_end_time;
                    if (this._endTime) {
                        this.update(TimeMgr.time);
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    var banner = this._actType == 14 /* CaiyunbangCharge */ ? 'leichonghaoliguanggaotu' : 'denglufuliguanggaotu';
                    this._view.updateBanner(banner, true);
                    this.updateView();
                };
                CaiyunbangMdr3.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                CaiyunbangMdr3.prototype.updateView = function () {
                    var actData = this._proxy.getCurOpenAct();
                    if (!actData || !actData.reward_list) {
                        return;
                    }
                    var list = [];
                    for (var _i = 0, _a = actData.reward_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        var stateInfo = this._actType == 14 /* CaiyunbangCharge */
                            ? this._proxy.getChargeStateInfo(item.index)
                            : this._proxy.getLoginStateInfo(item.index);
                        list.push({
                            actType: this._actType,
                            reward: item,
                            status: stateInfo && stateInfo.statue || 0 /* NotFinish */
                        });
                    }
                    //大奖展示
                    var bigReward;
                    if (this._actType == 14 /* CaiyunbangCharge */) {
                        bigReward = actData.reward_list[actData.reward_list.length - 1].rewards[0];
                    }
                    this._view.updateBigReward(bigReward);
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                };
                CaiyunbangMdr3.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return CaiyunbangMdr3;
            }(game.MdrBase));
            activity.CaiyunbangMdr3 = CaiyunbangMdr3;
            __reflect(CaiyunbangMdr3.prototype, "game.mod.activity.CaiyunbangMdr3", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_exchange_shop_info = msg.c2s_exchange_shop_info;
            var c2s_exchange_shop_buy_prop = msg.c2s_exchange_shop_buy_prop;
            var c2s_exchange_shop_refresh_prop = msg.c2s_exchange_shop_refresh_prop;
            var s2c_exchange_shop_info = msg.s2c_exchange_shop_info;
            var c2s_daolv_house_info = msg.c2s_daolv_house_info;
            var c2s_daolv_house_buy_prop = msg.c2s_daolv_house_buy_prop;
            var s2c_daolv_house_info = msg.s2c_daolv_house_info;
            var ExchangeShopProxy = /** @class */ (function (_super) {
                __extends(ExchangeShopProxy, _super);
                function ExchangeShopProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(ExchangeShopProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                ExchangeShopProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.ExchangeShopModel();
                    this.onProto(s2c_exchange_shop_info, this.s2c_exchange_shop_info, this);
                    this.onProto(s2c_daolv_house_info, this.s2c_daolv_house_info, this);
                };
                /**--------------------协议start-------------------- */
                /**获取商品信息 */
                ExchangeShopProxy.prototype.c2s_exchange_shop_info = function (shop_type) {
                    var msg = new c2s_exchange_shop_info();
                    msg.shop_type = shop_type;
                    this.sendProto(msg);
                };
                /**购买商店 */
                ExchangeShopProxy.prototype.c2s_exchange_shop_buy_prop = function (index, buy_cnt, shop_type) {
                    if (shop_type === void 0) { shop_type = this.getTypeByIndex(); }
                    var msg = new c2s_exchange_shop_buy_prop();
                    msg.index = index;
                    msg.buy_cnt = buy_cnt;
                    msg.shop_type = shop_type;
                    this.sendProto(msg);
                };
                /**刷新商店 */
                ExchangeShopProxy.prototype.c2s_exchange_shop_refresh_prop = function (shop_type) {
                    var msg = new c2s_exchange_shop_refresh_prop();
                    msg.shop_type = shop_type;
                    this.sendProto(msg);
                };
                /**特殊逻辑 道侣商店 */
                ExchangeShopProxy.prototype.c2s_daolv_house_info = function () {
                    var msg = new c2s_daolv_house_info();
                    this.sendProto(msg);
                };
                /**道侣商店购买商品 */
                ExchangeShopProxy.prototype.c2s_daolv_house_buy_prop = function (index, buy_cnt) {
                    var msg = new c2s_daolv_house_buy_prop();
                    msg.index = index;
                    msg.buy_cnt = buy_cnt;
                    this.sendProto(msg);
                };
                /**返回道侣商品信息 */
                ExchangeShopProxy.prototype.s2c_daolv_house_info = function (n) {
                    var msg = n.body;
                    if (msg.infos) {
                        this._model.daolvShopMap = {};
                        for (var _i = 0, _a = msg.infos; _i < _a.length; _i++) {
                            var info = _a[_i];
                            this._model.daolvShopMap[info.index] = info;
                        }
                    }
                    this.onUpdateHintDaolv();
                    this.sendNt("on_update_exchange_shop_info" /* ON_UPDATE_EXCHANGE_SHOP_INFO */);
                };
                /**返回商品信息 */
                ExchangeShopProxy.prototype.s2c_exchange_shop_info = function (n) {
                    var msg = n.body;
                    if (msg && msg.infos) {
                        for (var _i = 0, _a = msg.infos; _i < _a.length; _i++) {
                            var info = _a[_i];
                            this._model.shopMap[info.shop_type] = info;
                        }
                    }
                    this.onUpdateHint(msg.oper, msg.oper == 2 ? msg.infos[0].shop_type : 0);
                    this.sendNt("on_update_exchange_shop_info" /* ON_UPDATE_EXCHANGE_SHOP_INFO */);
                };
                /**--------------------协议end-------------------- */
                ExchangeShopProxy.prototype.getShopList = function (type) {
                    var info = this._model.shopMap[type];
                    var list = [];
                    if (info && info.is_random) {
                        if (type == 2 /* Type1 */) {
                            return this.getType1List(type);
                        }
                        return this.getShowCfgListByRandom(type);
                    }
                    else {
                        var cfgArr = game.getConfigListByName("shop.json" /* Store */);
                        for (var _i = 0, cfgArr_1 = cfgArr; _i < cfgArr_1.length; _i++) {
                            var cfg = cfgArr_1[_i];
                            if (!mod.StoreUtil.checkStoreCfgShow(cfg)) {
                                continue;
                            }
                            if (cfg.type == type) {
                                list.push(cfg);
                            }
                        }
                    }
                    return list;
                };
                ExchangeShopProxy.prototype.getSpecialList = function () {
                    var list = [];
                    for (var key in this._model.daolvShopMap) {
                        var item = this._model.daolvShopMap[key];
                        var cfg = game.getConfigByNameId("daolv_shop.json" /* DaoLvShop */, item.index);
                        if (cfg) {
                            list.push(cfg);
                        }
                    }
                    return list;
                };
                ExchangeShopProxy.prototype.getCfgListByType = function (type) {
                    if (this._model.cfgMap[type]) {
                        return this._model.cfgMap[type];
                    }
                    var cfgs = game.getConfigListByName("shop.json" /* Store */);
                    for (var _i = 0, cfgs_1 = cfgs; _i < cfgs_1.length; _i++) {
                        var cfg = cfgs_1[_i];
                        if (!this._model.cfgMap[cfg.type]) {
                            this._model.cfgMap[cfg.type] = [];
                        }
                        this._model.cfgMap[cfg.type].push(cfg);
                    }
                    return this._model.cfgMap[type];
                };
                ExchangeShopProxy.prototype.getType1List = function (type) {
                    var shopData = this._model.shopMap[type];
                    var info = shopData.info;
                    var list = [];
                    var sorts = [];
                    for (var _i = 0, info_1 = info; _i < info_1.length; _i++) {
                        var data = info_1[_i];
                        var cfg = game.getConfigByNameId("shop.json" /* Store */, data.index);
                        list.push(cfg);
                        sorts.push(cfg.sort);
                    }
                    var cfgs = this.getCfgListByType(type);
                    for (var _a = 0, cfgs_2 = cfgs; _a < cfgs_2.length; _a++) {
                        var cfg = cfgs_2[_a];
                        if (sorts.indexOf(cfg.sort) > -1) {
                            continue;
                        }
                        if (!mod.StoreUtil.checkStoreCfgShow(cfg)) {
                            continue;
                        }
                        list.push(cfg);
                        sorts.push(cfg.sort);
                    }
                    return list.sort(function (a, b) {
                        return a.sort - b.sort;
                    });
                };
                /**随机配置 */
                ExchangeShopProxy.prototype.getShowCfgListByRandom = function (type) {
                    var shopData = this._model.shopMap[type];
                    var info = shopData.info;
                    var sortNum = [];
                    if (info) {
                        for (var _i = 0, info_2 = info; _i < info_2.length; _i++) {
                            var item = info_2[_i];
                            var cfg = game.getConfigByNameId("shop.json" /* Store */, item.index);
                            if (cfg && sortNum.indexOf(cfg.sort) < 0) {
                                sortNum.push(cfg.sort);
                            }
                        }
                    }
                    var rst = [];
                    var cfgs = this.getCfgListByType(type);
                    var addSort = []; //已添加的排序
                    cfgs.sort(function (a, b) { return a.sort - b.sort; });
                    for (var _a = 0, cfgs_3 = cfgs; _a < cfgs_3.length; _a++) {
                        var cfg = cfgs_3[_a];
                        if (!mod.StoreUtil.checkStoreCfgShow(cfg)) {
                            continue;
                        }
                        //sort相同的只能存在一个
                        if (sortNum.indexOf(cfg.sort) > -1 && !this.getInfoByTypeIndex(cfg.index)) {
                            continue;
                        }
                        if (addSort.indexOf(cfg.sort) > -1) {
                            continue;
                        }
                        addSort.push(cfg.sort);
                        rst.push(cfg);
                    }
                    return rst;
                };
                /**获取单个商品的状态数据 */
                ExchangeShopProxy.prototype.getInfoByTypeIndex = function (index, type) {
                    if (type === void 0) { type = this.getTypeByIndex(); }
                    if (type == 10 /* Type5 */) {
                        return this._model.daolvShopMap[index];
                    }
                    var shopData = this._model.shopMap[type];
                    if (!shopData) {
                        return null;
                    }
                    var info = shopData.info;
                    if (!info) {
                        return null;
                    }
                    for (var _i = 0, info_3 = info; _i < info_3.length; _i++) {
                        var item = info_3[_i];
                        if (item.index == index) {
                            return item;
                        }
                    }
                    return null;
                };
                /**刷新时间 */
                ExchangeShopProxy.prototype.getRefreshType = function (type) {
                    if (type == 10 /* Type5 */) {
                        return 3;
                    }
                    var cfgArr = this.getShopList(type);
                    if (cfgArr && cfgArr.length > 0) {
                        return cfgArr[0].lmt_type;
                    }
                    return 0;
                };
                /**获取商店类型 */
                ExchangeShopProxy.prototype.getTypeByIndex = function () {
                    // return this._model.shopTypeList[index];
                    return this._model.shopType;
                };
                /**获取刷新次数 */
                ExchangeShopProxy.prototype.getRefreshCount = function (type) {
                    var info = this._model.shopMap[type];
                    if (info) {
                        return info.refresh_cnt || 0;
                    }
                    return 0;
                };
                /**获取大奖道具 */
                ExchangeShopProxy.prototype.getBigReward = function (type) {
                    var id = this._model.paramIdMap[type];
                    if (id && id != "") {
                        var cfg = game.getConfigByNameId("param.json" /* Param */, id);
                        if (cfg) {
                            return cfg.value;
                        }
                    }
                    return 0;
                };
                ExchangeShopProxy.prototype.getListType = function () {
                    return this._model.shopTypeList;
                };
                Object.defineProperty(ExchangeShopProxy.prototype, "shopType", {
                    // public get tabIdx(): number {
                    //     return this._model.tabIdx;
                    // }
                    // public set tabIdx(val: number) {
                    //     this._model.tabIdx = val;
                    // }
                    get: function () {
                        return this._model.shopType;
                    },
                    set: function (val) {
                        this._model.shopType = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**获取标题id */
                ExchangeShopProxy.prototype.getTitleByType = function (type) {
                    return this._model.titleIdByType[type];
                };
                /**根据类型获取道具id */
                ExchangeShopProxy.prototype.getCoinIdByType = function (type) {
                    return this._model.getCoinIdByType[type];
                };
                /**根据类型获取功能开启id */
                ExchangeShopProxy.prototype.getOpenIdxByType = function (type) {
                    return this._model.getOpenIdxByType[type];
                };
                ExchangeShopProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    for (var key in this._model.typeByPropCoin) {
                        if (keys.indexOf(game.PropIndexToKey[+key]) > -1 || keys.indexOf("vip_lv" /* vip_lv */) > -1) {
                            var type = this._model.typeByPropCoin[key];
                            if (type == 10 /* Type5 */) {
                                this.onUpdateHintDaolv();
                            }
                            else {
                                this.onUpdateHintByType(type);
                            }
                        }
                    }
                };
                ExchangeShopProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    for (var key in this._model.typeByPropId) {
                        if (indexs.indexOf(+key) > -1) {
                            var type = this._model.typeByPropId[key];
                            this.onUpdateHintByType(type);
                        }
                    }
                };
                ExchangeShopProxy.prototype.onUpdateHint = function (oper, type) {
                    if (oper == 1) {
                        var types = this.getListType();
                        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
                            var tp = types_1[_i];
                            this.onUpdateHintByType(tp);
                        }
                    }
                    else {
                        this.onUpdateHintByType(type);
                    }
                };
                //兑换红点
                ExchangeShopProxy.prototype.getHintByExchangeType = function (type) {
                    var cfgArr = this.getShopList(type);
                    var bool = false;
                    for (var _i = 0, cfgArr_2 = cfgArr; _i < cfgArr_2.length; _i++) {
                        var cfg = cfgArr_2[_i];
                        var info = this.getInfoByTypeIndex(cfg.index, type);
                        var bought_cnt = info ? info.bought_cnt : 0; //已购买次数
                        var lmt_cnt = cfg.lmt_cnt; //限购次数
                        var left_cnt = lmt_cnt - bought_cnt; //剩余购买次数
                        bool = left_cnt > 0 && mod.BagUtil.checkPropCnt(cfg.coin_type, cfg.price);
                        if (bool) {
                            // HintMgr.setHint(bool, [ModName.Activity, MainActivityViewType.ExchangeShop, `0${type}`]);
                            break;
                        }
                    }
                    return bool;
                };
                ExchangeShopProxy.prototype.onUpdateHintByType = function (type) {
                    // let cfgArr: ShopConfig[] = this.getShopList(type);
                    // let bool: boolean = false;
                    // for (let cfg of cfgArr) {
                    //     let info = this.getInfoByTypeIndex(cfg.index, type) as treasure_house_info;
                    //     let bought_cnt = info ? info.bought_cnt : 0;//已购买次数
                    //     let lmt_cnt = cfg.lmt_cnt;//限购次数
                    //     let left_cnt = lmt_cnt - bought_cnt;//剩余购买次数
                    //     bool = left_cnt > 0 && BagUtil.checkPropCnt(cfg.coin_type, cfg.price);
                    //     if (bool) {
                    //         // HintMgr.setHint(bool, [ModName.Activity, MainActivityViewType.ExchangeShop, `0${type}`]);
                    //         break;
                    //     }
                    // }
                    var bool = this.getHintByExchangeType(type);
                    mod.HintMgr.setHint(bool, ["27" /* Activity */, "54" /* ExchangeShop */, "0" + type]);
                    if (type == 3 /* Type2 */) {
                        mod.HintMgr.setHint(bool, ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "36" /* SummonExchange */]);
                    }
                };
                ExchangeShopProxy.prototype.onUpdateHintDaolv = function () {
                    for (var key in this._model.daolvShopMap) {
                        var info = this._model.daolvShopMap[key];
                        var bought_cnt = info ? info.week_cnt : 0; //已购买次数
                        var left_cnt = void 0, lmt_cnt = void 0;
                        var cfg = game.getConfigByNameId("daolv_shop.json" /* DaoLvShop */, info.index);
                        if (cfg.lmt_type == 1) {
                            lmt_cnt = info.max_cnt; //终生购买次数<每周购买次数
                            left_cnt = lmt_cnt - bought_cnt;
                        }
                        else if (cfg.lmt_type == 2) {
                            lmt_cnt = cfg.lmt_cnt;
                            left_cnt = lmt_cnt - bought_cnt;
                        }
                        else if (cfg.lmt_type == 3) {
                            lmt_cnt = cfg.lmt_cnt;
                            left_cnt = lmt_cnt - info.life_cnt;
                        }
                        var bool = left_cnt > 0 && mod.BagUtil.checkPropCnt(cfg.coin_type, cfg.price);
                        if (bool) {
                            mod.HintMgr.setHint(bool, ["27" /* Activity */, "54" /* ExchangeShop */, "0" + 10 /* Type5 */]);
                            return;
                        }
                    }
                    mod.HintMgr.setHint(false, ["27" /* Activity */, "54" /* ExchangeShop */, "0" + 10 /* Type5 */]);
                };
                return ExchangeShopProxy;
            }(game.ProxyBase));
            activity.ExchangeShopProxy = ExchangeShopProxy;
            __reflect(ExchangeShopProxy.prototype, "game.mod.activity.ExchangeShopProxy", ["game.mod.IExchangeShopProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var callLater = egret.callLater;
            /**通用战令mdr*/
            var GameOrderMdr = /** @class */ (function (_super) {
                __extends(GameOrderMdr, _super);
                function GameOrderMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.GameOrderView);
                    return _this;
                }
                GameOrderMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(207 /* GameOrder */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.list_item.itemRenderer = activity.GameOrderItem;
                    this._view.list_item.dataProvider = this._listItemData = new eui.ArrayCollection();
                    this._view.scroller["$hasScissor"] = true;
                    // this._view.img_banner.source = ResUtil.getUiJpg("giving_banner");
                };
                GameOrderMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_unlock, egret.TouchEvent.TOUCH_TAP, this.clickBtnStatus3);
                    addEventListener(this._view.btn, egret.TouchEvent.TOUCH_TAP, this.onClick);
                    this.onNt("on_update_giving_list" /* ON_UPDATE_GIVING_LIST */, this.onUpdateView, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                };
                GameOrderMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                GameOrderMdr.prototype.onHide = function () {
                    this._proxy.selType = null;
                    this._view.btn_unlock.clearEffect();
                    this._view.btn.clearEffect();
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                /**onShow内调用*/
                GameOrderMdr.prototype.updateView = function () {
                    var type = this._gameOrderType;
                    this._view.img_icon.source = "giving_icon_" + type;
                    if (type == 7 /* Chaojilicai */ || type == 8 /* Zhizunlicai */) {
                        this._view.img_type.source = "giving_type1_" + type;
                        this._view.img_type1.source = "giving_type_7";
                        this._view.img_type2.source = "giving_type2_" + type;
                    }
                    else {
                        this._view.img_type.source = "giving_type_" + (type == 4 /* XiuXian */ ? 1 : type);
                        this._view.img_type1.source = "giving_title_2";
                        this._view.img_type2.source = type == 6 /* Huanjing */ ? "giving_type2_6" : "giving_title_1";
                    }
                    if (this._proxy.model.bannerType[type]) {
                        this._view.img_banner.source = game.ResUtil.getUiJpg(this._proxy.model.bannerType[type]);
                    }
                    else {
                        this._view.img_banner.source = game.ResUtil.getUiJpg("giving_banner");
                    }
                    this._endTime = this.getEndTime(type);
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                        this._view.gr_time.visible = true;
                    }
                    else {
                        this._view.gr_time.visible = false;
                    }
                    this._view.btn_unlock.setEffect("chongzhi" /* ShouChongQianWang */);
                    this._view.btn_unlock.img_bg.width = this._view.btn_unlock.width;
                    this._view.btn_unlock.img_bg.height = this._view.btn_unlock.height;
                    this._view.btn.setEffect("tiaozhan" /* Tiaozhan */);
                    this.onUpdateView();
                    this.onUpdateIndex();
                };
                /**
                 * 默认监听 ActivityEvent.ON_UPDATE_GIVING_LIST 回调
                 */
                GameOrderMdr.prototype.onUpdateView = function () {
                    var type = this._gameOrderType;
                    var status = this.getBtnStatus(type);
                    if (status == 1) {
                        var gotoStr = '前往挑战';
                        if (game.GameOrderTypeBtnStr[type]) {
                            gotoStr = game.GameOrderTypeBtnStr[type];
                        }
                        this._view.btn.label = gotoStr;
                    }
                    else if (status == 2 || status == 0) {
                        this._view.btn.label = "全部领取";
                    }
                    else if (status == 3) {
                        this._view.btn.label = "解锁战令";
                    }
                    this._view.btn.redPoint.visible = status == 2;
                    this._view.btn_unlock.visible = !this.getIsBought(type);
                    var cfg = game.getConfigByNameId("game_order_type.json" /* GameOrderType */, type);
                    if (type == 8 /* Zhizunlicai */ || type == 7 /* Chaojilicai */) {
                        var rmb = mod.PayUtil.getRmbValue(cfg.recharge_id);
                        this._view.btn_unlock.setFontPrice(rmb);
                    }
                    else {
                        this._view.btn_unlock.setImage("giving_btn_" + type, true);
                    }
                    if (cfg.target) {
                        this._listData.source = cfg.target;
                    }
                    this._view.img_tips.visible = !cfg.target;
                    this._view.gr_icon.visible = !this._view.img_tips.visible;
                    if (this._proxy.model.notTipsType.indexOf(type) > -1) {
                        this._view.img_tips.visible = false; //特殊的不展示，字体已嵌入banner中
                    }
                    if (this._view.img_tips.visible) {
                        this._view.img_tips.source = "giving_tips_" + type;
                    }
                    this._listItemData.source = this.getListByType(type);
                    var val = this._proxy.getValueByType(type);
                    var valStr = val + '';
                    if (type == 4 /* XiuXian */) {
                        valStr = mod.RoleUtil.getRebirthLvStrNoZhuan(val) + '转';
                    }
                    var str = game.GameOrderTypeStr[this._gameOrderType] + game.TextUtil.addColor(valStr, 8585074 /* GREEN */);
                    this._view.lab_cur.textFlow = game.TextUtil.parseHtml(str);
                };
                /**滚动到可领取位置*/
                GameOrderMdr.prototype.onUpdateIndex = function () {
                    var _this = this;
                    var type = this._gameOrderType;
                    var pos = this.getPosByType();
                    var child = this.getListByType(type).length;
                    callLater(function () {
                        mod.ScrollUtil.moveVToAssign(_this._view.scroller, pos, 134, 200, child);
                    }, this);
                };
                /**获取可领取位置*/
                GameOrderMdr.prototype.getPosByType = function () {
                    return this._proxy.getPosByType(this._gameOrderType);
                };
                /**
                 * 三种按钮状态的点击事件
                 * 1前往挑战
                 * 2全部领取
                 * 3解锁战令
                 */
                GameOrderMdr.prototype.onClick = function () {
                    var status = this.getBtnStatus(this._gameOrderType);
                    switch (status) {
                        case 1:
                            this.clickBtnStatus1();
                            break;
                        case 2:
                            this.clickBtnStatus2();
                            break;
                        case 3:
                            this.clickBtnStatus3();
                            break;
                    }
                };
                /** 通用红点事件监听 */
                GameOrderMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    var hintPath = this._proxy.model.hintPath[this._gameOrderType];
                    if (hintPath && data.node == mod.HintMgr.getType(hintPath)) {
                        this._view.btn.redPoint.visible = data.value;
                    }
                };
                GameOrderMdr.prototype.update = function (time) {
                    if (!this._endTime) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime < 0) {
                        this._view.lab_time.text = game.getLanById("battle_cue29" /* battle_cue29 */);
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.lab_time.textFlow = game.TextUtil.parseHtml(game.TimeUtil.formatSecond(leftTime, "d天H时", true));
                };
                /**重写，战令结束时间，返回0就是没有倒计时*/
                GameOrderMdr.prototype.getEndTime = function (type) {
                    return this._proxy.getEndTime(type);
                };
                /**
                 * 获取按钮状态
                 * 1前往挑战
                 * 2全部领取
                 * 3解锁战令
                 */
                GameOrderMdr.prototype.getBtnStatus = function (type) {
                    return this._proxy.getBtnStatus(type);
                };
                /**重写，是否购买战令*/
                GameOrderMdr.prototype.getIsBought = function (type) {
                    return this._proxy.getIsBought(type);
                };
                /**重写，获取列表数据 */
                GameOrderMdr.prototype.getListByType = function (type) {
                    // let list = this._proxy.getListByType(type);
                    // let list1: IGameOrderItemData[] = [];
                    // for (let item of list) {
                    //     list1.push({
                    //         type,
                    //         isBought: this.getIsBought(type),
                    //         ...item
                    //     });
                    // }
                    return this._proxy.getListByType(type);
                };
                /**前往挑战，按钮状态1*/
                GameOrderMdr.prototype.clickBtnStatus1 = function () {
                    var cfg = game.getConfigByNameId("game_order_type.json" /* GameOrderType */, this._gameOrderType);
                    mod.ViewMgr.getIns().showViewByID(cfg.jump);
                };
                /**请求领取战令奖励，按钮状态2*/
                GameOrderMdr.prototype.clickBtnStatus2 = function () {
                    this._proxy.c2s_game_order_get_rewards(this._gameOrderType);
                };
                /**解锁战令，按钮状态3*/
                GameOrderMdr.prototype.clickBtnStatus3 = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "40" /* GameOrderUnlock */, [this._gameOrderType, this.getReward(), this.getRewardCanGet()]);
                };
                /**购买后累计可领取的付费奖励*/
                GameOrderMdr.prototype.getReward = function () {
                    return this._proxy.getReward(this._gameOrderType) || [];
                };
                /**现在购买可立即领取的付费奖励*/
                GameOrderMdr.prototype.getRewardCanGet = function () {
                    return this._proxy.getRewardCanGet(this._gameOrderType) || [];
                };
                return GameOrderMdr;
            }(game.MdrBase));
            activity.GameOrderMdr = GameOrderMdr;
            __reflect(GameOrderMdr.prototype, "game.mod.activity.GameOrderMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ExchangeShopBaseItem = /** @class */ (function (_super) {
                __extends(ExchangeShopBaseItem, _super);
                function ExchangeShopBaseItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ExchangeShopBaseItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 215 /* ExchangeShop */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn, this.onClick, this);
                };
                ExchangeShopBaseItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ExchangeShopBaseItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    this.img_bg.source = "common_shop_bg";
                    this.img_bought.source = "yishouqing2";
                    this.icon.setData(cfg.prop[0]);
                    this.lab_name.textFlow = this.icon.getPropName(true, true);
                    this.lab_limit.visible = cfg.lmt_type != 0;
                    this.img_tag.visible = !!cfg.tag;
                    if (cfg.tag) {
                        this.img_tag.source = cfg.tag;
                    }
                    this.btn.visible = (!this.left_cnt && this.left_cnt !== 0) || this.left_cnt > 0;
                    this.lab_limit.visible = this.btn.visible;
                    this.img_bought.visible = !this.btn.visible;
                    if (this.btn.visible) {
                        this.btn.setCost([cfg.coin_type, cfg.price]);
                        this.btn.setHint(mod.BagUtil.checkPropCnt(cfg.coin_type, cfg.price));
                    }
                    this.args = {
                        prop: cfg.prop[0],
                        cost: [cfg.coin_type, cfg.price],
                        lmt_type: this.lmt_type,
                        lmt_cnt: this.lmt_cnt,
                        left_cnt: this.left_cnt,
                    };
                };
                ExchangeShopBaseItem.prototype.onClick = function () {
                    // facade.showView();
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "55" /* ExchangeShopTips */, this.args);
                };
                return ExchangeShopBaseItem;
            }(mod.BaseRenderer));
            activity.ExchangeShopBaseItem = ExchangeShopBaseItem;
            __reflect(ExchangeShopBaseItem.prototype, "game.mod.activity.ExchangeShopBaseItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var CaiyunbangMdr4 = /** @class */ (function (_super) {
                __extends(CaiyunbangMdr4, _super);
                function CaiyunbangMdr4() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.ExchangeView);
                    _this._endTime = 0;
                    return _this;
                }
                CaiyunbangMdr4.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(250 /* Caiyunbang */);
                    this._view.list.itemRenderer = activity.CaiyunbangItem4;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_banner.source = game.ResUtil.getUiJpg('caishenduihuanguanggaotu');
                    this._view.img_bg.source = game.ResUtil.getUiJpg('caishenduihuanbeijingtu');
                };
                CaiyunbangMdr4.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_caiyunbang_duihuan_info_update" /* ON_CAIYUNBANG_DUIHUAN_INFO_UPDATE */, this.updateView, this);
                };
                CaiyunbangMdr4.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getCurOpenAct().c_end_time;
                    if (this._endTime) {
                        this.update(TimeMgr.time);
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    this.updateView();
                };
                CaiyunbangMdr4.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                CaiyunbangMdr4.prototype.updateView = function () {
                    var actData = this._proxy.getCurOpenAct();
                    if (!actData || !actData.reward_list) {
                        return;
                    }
                    var bigReward = null;
                    var list = [];
                    var size = actData.reward_list.length;
                    for (var i = 0; i < size; i++) {
                        var item = actData.reward_list[i];
                        if (i == 0 && !bigReward) {
                            bigReward = item.rewards[0];
                        }
                        list.push({
                            actType: 15 /* CaiyunbangExchange */,
                            reward: item,
                            status: 0 //item里处理
                        });
                    }
                    this._view.updateBigReward(bigReward); //大奖
                    this._listData.replaceAll(list);
                };
                CaiyunbangMdr4.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    // this._view.lb_time.text = TimeUtil.formatSecond(leftTime, 'd天H时', true);
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return CaiyunbangMdr4;
            }(game.MdrBase));
            activity.CaiyunbangMdr4 = CaiyunbangMdr4;
            __reflect(CaiyunbangMdr4.prototype, "game.mod.activity.CaiyunbangMdr4", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CaiyunbangMdr5 = /** @class */ (function (_super) {
                __extends(CaiyunbangMdr5, _super);
                function CaiyunbangMdr5() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._actType = 16 /* CaiyunbangLogin */;
                    return _this;
                }
                return CaiyunbangMdr5;
            }(activity.CaiyunbangMdr3));
            activity.CaiyunbangMdr5 = CaiyunbangMdr5;
            __reflect(CaiyunbangMdr5.prototype, "game.mod.activity.CaiyunbangMdr5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var ArrayCollection = eui.ArrayCollection;
            var CarnivalGiftMdr = /** @class */ (function (_super) {
                __extends(CarnivalGiftMdr, _super);
                function CarnivalGiftMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.CarnivalGiftView);
                    return _this;
                }
                CarnivalGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.CarnivalGiftRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                CarnivalGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_carnival_gift_update" /* ON_CARNIVAL_GIFT_UPDATE */, this.updateItemList, this);
                };
                CarnivalGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateTime();
                    this.updateItemList();
                    this._carnivalProxy.setZhaohuanlibaoIsFirst(false);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                CarnivalGiftMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                CarnivalGiftMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CarnivalGiftMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                CarnivalGiftMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = actInfo.reward_list;
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                return CarnivalGiftMdr;
            }(game.EffectMdrBase));
            activity.CarnivalGiftMdr = CarnivalGiftMdr;
            __reflect(CarnivalGiftMdr.prototype, "game.mod.activity.CarnivalGiftMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var ArrayCollection = eui.ArrayCollection;
            var CarnivalMdr = /** @class */ (function (_super) {
                __extends(CarnivalMdr, _super);
                function CarnivalMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.CarnivalView);
                    return _this;
                }
                CarnivalMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.CarnivalRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                CarnivalMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_carnival_update" /* ON_CARNIVAL_UPDATE */, this.onInfoUpdate, this);
                };
                CarnivalMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateTime();
                    this.updateLoopCnt();
                    this.updateItemList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                CarnivalMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                CarnivalMdr.prototype.onInfoUpdate = function () {
                    this.updateLoopCnt();
                    this.updateItemList();
                };
                CarnivalMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CarnivalMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                CarnivalMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = actInfo.reward_list.concat();
                    var tmps = [];
                    for (var _i = 0, rewardList_1 = rewardList; _i < rewardList_1.length; _i++) {
                        var reward = rewardList_1[_i];
                        var sort = reward.index; //从小到大排序
                        var hasDraw = this._carnivalProxy.hasCarnivalDraw(actInfo.act_id, reward);
                        if (hasDraw) {
                            sort += 10000000;
                        }
                        else {
                            var canDraw = this._carnivalProxy.canCarnivalDraw(actInfo.act_id, reward);
                            if (canDraw) {
                                sort -= 100000;
                            }
                        }
                        tmps.push({ sort: sort, reward: reward });
                    }
                    tmps.sort(game.SortTools.sortByRort);
                    rewardList = [];
                    for (var _a = 0, tmps_1 = tmps; _a < tmps_1.length; _a++) {
                        var info = tmps_1[_a];
                        rewardList.push(info.reward);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                CarnivalMdr.prototype.updateLoopCnt = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var cnt = this._carnivalProxy.getLoopNum(actInfo.act_id);
                    var maxCnt = actInfo && actInfo.param ? actInfo.param[1] : 0; //总的轮次
                    this._view.lab_count.text = cnt + "/" + maxCnt;
                };
                return CarnivalMdr;
            }(game.EffectMdrBase));
            activity.CarnivalMdr = CarnivalMdr;
            __reflect(CarnivalMdr.prototype, "game.mod.activity.CarnivalMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var CarnivalMibaoMdr = /** @class */ (function (_super) {
                __extends(CarnivalMibaoMdr, _super);
                function CarnivalMibaoMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.CarnivalMibaoView);
                    return _this;
                }
                CarnivalMibaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                };
                CarnivalMibaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this); //属性刷新，有货币
                    this.onNt("on_carnival_mibao_update" /* ON_CARNIVAL_MIBAO_UPDATE */, this.updateItemList, this);
                };
                CarnivalMibaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateItemList();
                    this._proxy.checkActTips(1 /* Carnival */);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                CarnivalMibaoMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                CarnivalMibaoMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    var key = game.PropIndexToKey[this._view.costItem.index];
                    if (key && keys.indexOf(key) >= 0) {
                        this._view.costItem.updateShow();
                    }
                };
                CarnivalMibaoMdr.prototype.initShow = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var propIndex = this._carnivalProxy.getMibaoProp(actInfo);
                    var cfg = game.GameConfig.getPropConfigById(propIndex);
                    var tipsStr = game.StringUtil.substitute(game.getLanById("carnival_tips1" /* carnival_tips1 */), [cfg.name]);
                    this._view.lab_tips.text = tipsStr;
                    this._view.costItem.setDataYellow(propIndex);
                    this._itemList = [
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4,
                        this._view.item5,
                        this._view.item6,
                        this._view.item7,
                        this._view.item8,
                        this._view.item9
                    ];
                    var addEventListener = this.onEgret.bind(this);
                    for (var _i = 0, _a = this._itemList; _i < _a.length; _i++) {
                        var item = _a[_i];
                        addEventListener(item.btn_draw, TouchEvent.TOUCH_TAP, this.onClickItem);
                    }
                    this._lineList = [
                        this._view.img_line1,
                        this._view.img_line2,
                        this._view.img_line3,
                        this._view.img_line4,
                        this._view.img_line5,
                        this._view.img_line6,
                        this._view.img_line7,
                        this._view.img_line8
                    ];
                };
                CarnivalMibaoMdr.prototype.onClickItem = function (e) {
                    var actInfo = this._proxy.curOpenAct;
                    var clickBtn = e.target;
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        if (item.btn_draw != clickBtn) {
                            continue;
                        }
                        //点击宝箱
                        var data = item.data;
                        mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "106" /* CarnivalMibaoReward */, { data: data, actId: actInfo.act_id });
                        break;
                    }
                };
                CarnivalMibaoMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CarnivalMibaoMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                CarnivalMibaoMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = actInfo.reward_list;
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var isShow = i < rewardList.length; //配置的宝箱可能小于9
                        item.visible = isShow;
                        var hasDraw = false; //已领取
                        if (isShow) {
                            var reward = rewardList[i];
                            var index = reward.index;
                            hasDraw = this._carnivalProxy.hasMibaoDraw(actInfo.act_id, index);
                            var canDraw = this._carnivalProxy.canMibaoDraw(actInfo.act_id, reward);
                            var hasLastDarw = this._carnivalProxy.hasLastMibaoDraw(actInfo.act_id, index);
                            var isBig = i == this._itemList.length - 1;
                            var data = { reward: reward, hasDraw: hasDraw, canDraw: canDraw, hasLastDarw: hasLastDarw, isBig: isBig };
                            item.setData(data);
                        }
                        var line = i < this._lineList.length ? this._lineList[i] : null;
                        if (line) {
                            var isShowLine = i < rewardList.length - 1; //9个宝箱8条线
                            line.visible = isShowLine && hasDraw;
                        }
                    }
                };
                return CarnivalMibaoMdr;
            }(game.EffectMdrBase));
            activity.CarnivalMibaoMdr = CarnivalMibaoMdr;
            __reflect(CarnivalMibaoMdr.prototype, "game.mod.activity.CarnivalMibaoMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var CarnivalRankMdr = /** @class */ (function (_super) {
                __extends(CarnivalRankMdr, _super);
                function CarnivalRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.CarnivalRankView);
                    return _this;
                }
                CarnivalRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = activity.CarnivalRankRender;
                    this._view.list_rank.dataProvider = this._itemList;
                };
                CarnivalRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.btn_lastRank, TouchEvent.TOUCH_TAP, this.onClickLastRank);
                    addEventListener(this._view.btn_go, TouchEvent.TOUCH_TAP, this.onClickGo);
                    this.onNt("on_carnival_rank_update" /* ON_CARNIVAL_RANK_UPDATE */, this.onInfoUpdate, this);
                };
                CarnivalRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var actInfo = this._proxy.curOpenAct;
                    this._isCross = actInfo.type == 21 /* CarnivalCrossRank */;
                    this._view.scr["$hasScissor"] = true;
                    this.updateTime();
                    this.updateMyInfo();
                    this.updateRankList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                CarnivalRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                CarnivalRankMdr.prototype.onClickReward = function () {
                    if (!this._canDraw) {
                        game.PromptBox.getIns().show(game.getLanById("shoulie_point" /* shoulie_point */));
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    this._proxy.c2s_oper_act_get_info(actInfo.act_id, 3 /* Reward */);
                };
                CarnivalRankMdr.prototype.onClickLastRank = function () {
                    //上期排名
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "107" /* CarnivalRankSection */);
                };
                CarnivalRankMdr.prototype.onClickGo = function () {
                    mod.ViewMgr.getIns().showViewByID(29 /* Summon */);
                };
                CarnivalRankMdr.prototype.onInfoUpdate = function () {
                    this.updateMyInfo();
                    this.updateRankList();
                };
                CarnivalRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CarnivalRankMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                CarnivalRankMdr.prototype.updateMyInfo = function () {
                    var actInfo = this._proxy.curOpenAct;
                    this._canDraw = this._carnivalProxy.canDraw(actInfo.act_id);
                    this._view.btn_reward.redPoint.visible = this._canDraw;
                    this._view.btn_reward.iconDisplay.source = this._canDraw ? "box_close" : "box_open";
                    var myData = this._carnivalProxy.getMyData(actInfo.act_id);
                    var rankStr = "";
                    var maxRank = this._proxy.getMaxRank(actInfo);
                    if (myData && myData.rank_num) {
                        rankStr += myData.rank_num <= maxRank ? myData.rank_num : maxRank + "+"; //50+
                    }
                    else {
                        rankStr += game.getLanById("tishi_13" /* tishi_13 */); //未上榜
                    }
                    var rankId = this._isCross ? "tongtiange_tips16" /* tongtiange_tips16 */ : "tongtiange_tips15" /* tongtiange_tips15 */; //我的排名，仙宗排名
                    this._view.lab_rank.text = game.StringUtil.substitute(game.getLanById(rankId), [rankStr]);
                    var score = myData && myData.value && myData.value.toNumber() || 0;
                    var myRankId = this._isCross ? "tongtiange_tips18" /* tongtiange_tips18 */ : "tongtiange_tips17" /* tongtiange_tips17 */; //我的次数，仙宗次数
                    this._view.lab_num.text = game.StringUtil.substitute(game.getLanById(myRankId), [score]);
                };
                CarnivalRankMdr.prototype.updateRankList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var topInfo = this._carnivalProxy.getRankInfo(actInfo.act_id, 1);
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    this._view.grp_first.visible = !this._isCross; //宗门排行才显示
                    if (this._view.grp_first.visible) {
                        var firstStr = topInfo && topInfo.guild_name || game.getLanById("tishi_2" /* tishi_2 */);
                        this._view.lab_first.text = firstStr;
                    }
                    var rewardList = actInfo.reward_list;
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                return CarnivalRankMdr;
            }(game.EffectMdrBase));
            activity.CarnivalRankMdr = CarnivalRankMdr;
            __reflect(CarnivalRankMdr.prototype, "game.mod.activity.CarnivalRankMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var ArrayCollection = eui.ArrayCollection;
            var CarnivalZhaohuanMdr = /** @class */ (function (_super) {
                __extends(CarnivalZhaohuanMdr, _super);
                function CarnivalZhaohuanMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftDrawView);
                    return _this;
                }
                CarnivalZhaohuanMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.CarnivalZhaohuanRender;
                    this._view.list_item.dataProvider = this._itemList;
                    this._view.img_banner.source = game.ResUtil.getUiJpg("carnivalzhaohuan_bg");
                };
                CarnivalZhaohuanMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_carnival_zhaohuan_update" /* ON_CARNIVAL_ZHAOHUAN_UPDATE */, this.updateItemList, this);
                };
                CarnivalZhaohuanMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateItemList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                CarnivalZhaohuanMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                CarnivalZhaohuanMdr.prototype.initShow = function () {
                    //todo
                    //this._view.img_banner.source = "";
                };
                CarnivalZhaohuanMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CarnivalZhaohuanMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                CarnivalZhaohuanMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = actInfo.reward_list.concat();
                    var tmps = [];
                    for (var _i = 0, rewardList_2 = rewardList; _i < rewardList_2.length; _i++) {
                        var reward = rewardList_2[_i];
                        var sort = reward.index; //从小到大排序
                        var hasDraw = this._carnivalProxy.hasCarnivalZhaohuanDraw(actInfo.act_id, reward);
                        if (hasDraw) {
                            sort += 10000000;
                        }
                        else {
                            var canDraw = this._carnivalProxy.canCarnivalZhaohuanDraw(actInfo.act_id, reward);
                            if (canDraw) {
                                sort -= 100000;
                            }
                        }
                        tmps.push({ sort: sort, reward: reward });
                    }
                    tmps.sort(game.SortTools.sortByRort);
                    rewardList = [];
                    for (var _a = 0, tmps_2 = tmps; _a < tmps_2.length; _a++) {
                        var info = tmps_2[_a];
                        rewardList.push(info.reward);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                return CarnivalZhaohuanMdr;
            }(game.EffectMdrBase));
            activity.CarnivalZhaohuanMdr = CarnivalZhaohuanMdr;
            __reflect(CarnivalZhaohuanMdr.prototype, "game.mod.activity.CarnivalZhaohuanMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var CaiyunbangMdr2 = /** @class */ (function (_super) {
                __extends(CaiyunbangMdr2, _super);
                function CaiyunbangMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    return _this;
                }
                CaiyunbangMdr2.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._actProxy = this.retProxy(50 /* Activity */);
                    this._proxy = this.retProxy(250 /* Caiyunbang */);
                    this._view.list_rank.itemRenderer = activity.CaiyunbangRankItem;
                    this._view.list_rank.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_rule.visible = true;
                    this._view.timeItem.visible = true;
                    this._view.img_type2.source = 'caiyunyinji';
                    this._view.img_type3.source = 'paimingjiangli';
                };
                CaiyunbangMdr2.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    this.onNt("on_caiyunbang_rank_info_update" /* ON_CAIYUNBANG_RANK_INFO_UPDATE */, this.updateView, this);
                };
                CaiyunbangMdr2.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        this.update(TimeMgr.time);
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    this._actData = this._proxy.getCurOpenAct();
                    if (!this._actData) {
                        DEBUG && console.log("caiyunbang \u8D22\u8FD0\u699C\u6CA1\u6709\u6392\u884C\u6570\u636E"); //todo
                        return;
                    }
                    this._actProxy.c2s_oper_act_get_info(this._actData.act_id, 3 /* Reward */);
                    DEBUG && console.log("caiyunbang " + this._actData.act_id + " \u8D22\u8FD0\u699C\u8BF7\u6C42\u6392\u884C\u5956\u52B1c2s_oper_act_get_info"); //todo
                    //this._proxy.checkActTips(NotTipsType.CaiyunbangRank);
                };
                CaiyunbangMdr2.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                CaiyunbangMdr2.prototype.updateView = function () {
                    DEBUG && console.log("caiyunbang " + this._actData.act_id + " \u8D22\u8FD0\u699C\u8BF7\u6C42\u6392\u884C\u5956\u52B1\u56DE\u8C03s2c_activity_caiyun_rank_info"); //todo
                    var yinjiIdx = this._actData.param[1]; //货币id
                    var propCfg = game.GameConfig.getPropConfigById(yinjiIdx);
                    var name = propCfg && propCfg.name || '';
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(game.getLanById("rank_txt1" /* rank_txt1 */) + name + '：'
                        + game.StringUtil.getPowerNumStr(this._proxy.getMyScore()));
                    // + TextUtil.addColor(StringUtil.getPowerNumStr(this._proxy.getMyScore()), WhiteColor.GREEN));
                    var upNum = this._actData.param[2]; //上榜所需数量
                    this._view.lab_rank.text = name + upNum + game.getLanById("shangbang" /* shangbang */);
                    this._view.img_tips.visible = !!this._actData.desc;
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(this._actData.desc, 2330156 /* GREEN */));
                    var reward_list = this._actData.reward_list || [];
                    var list = [];
                    for (var i = 0; i < reward_list.length; i++) {
                        var rankNo = reward_list[i].cond_1[0];
                        var rankRange = [];
                        var teammate = void 0;
                        if (i == reward_list.length - 1) {
                            rankRange = [rankNo - 1]; //显示50+
                        }
                        else if (i < 3) {
                            rankRange = [rankNo, rankNo]; //前三名
                            teammate = this._proxy.getRankTeammate(rankNo);
                        }
                        else {
                            var nextRankNo = reward_list[i + 1].cond_1[0];
                            rankRange = [rankNo, nextRankNo - 1]; //显示范围[4,10]等
                        }
                        list.push({
                            actReward: reward_list[i],
                            rankRange: rankRange,
                            teammate: teammate
                        });
                    }
                    this._listData.replaceAll(list);
                    var topPlayer = this._proxy.getRankTeammate(1);
                    if (topPlayer) {
                        this.updateRankUIRole(this._view.grp_eff, topPlayer);
                    }
                };
                CaiyunbangMdr2.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("caiyunbang_tips2" /* caiyunbang_tips2 */));
                };
                CaiyunbangMdr2.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return CaiyunbangMdr2;
            }(game.EffectMdrBase));
            activity.CaiyunbangMdr2 = CaiyunbangMdr2;
            __reflect(CaiyunbangMdr2.prototype, "game.mod.activity.CaiyunbangMdr2", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var Tween = base.Tween;
            var Handler = base.Handler;
            var CaiyunbangMdr1 = /** @class */ (function (_super) {
                __extends(CaiyunbangMdr1, _super);
                function CaiyunbangMdr1() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.CaiyunbangView1);
                    _this._lastPos = 0; //上一轮缓动目标位置，默认0
                    _this._maxSize = 8; //icon个数
                    _this._roundNum = 0; //缓动个数
                    return _this;
                }
                CaiyunbangMdr1.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(250 /* Caiyunbang */);
                };
                CaiyunbangMdr1.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do1, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    addEventListener(this._view.btn_do10, egret.TouchEvent.TOUCH_TAP, this.onClickTen, this);
                    this.onNt("on_caiyunbang_qifu_info_update" /* ON_CAIYUNBANG_QIFU_INFO_UPDATE */, this.onUpdateView, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                CaiyunbangMdr1.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var actType = 12 /* CaiyunbangTurntable */;
                    this._proxy.clearLoginHint(actType);
                    this._endTime = this._proxy.getCurOpenAct().c_end_time;
                    if (this._endTime) {
                        this.update(TimeMgr.time);
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    this.updateView();
                    this._proxy.checkActTips(7 /* CaiyunbangTurntable */);
                };
                CaiyunbangMdr1.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                //特效处理
                CaiyunbangMdr1.prototype.onUpdateView = function () {
                    //目标位置
                    var targetIdx = this._proxy.getQifuTargetIdx();
                    var dis;
                    if (this._lastPos > targetIdx) {
                        dis = this._maxSize - this._lastPos + targetIdx;
                    }
                    else {
                        dis = targetIdx - this._lastPos;
                    }
                    //缓动个数
                    this._roundNum = this._maxSize + dis;
                    // console.log(`caiyunbang targetIdx: ${this._lastPos} ${targetIdx}, ${this._roundNum}`);
                    this.setTween(1);
                };
                CaiyunbangMdr1.prototype.setTween = function (idx) {
                    var lastIcon = this._view["icon" + this._lastPos];
                    var lastIconData = lastIcon.data;
                    lastIconData.sel = false;
                    lastIcon.data = lastIconData;
                    this._lastPos++;
                    if (this._lastPos >= this._maxSize) {
                        this._lastPos = 0;
                    }
                    var curIcon = this._view["icon" + this._lastPos];
                    var curIconData = curIcon.data;
                    curIconData.sel = true;
                    curIcon.data = curIconData;
                    //结束
                    if (idx >= this._roundNum) {
                        this.onTweenEnd();
                        return;
                    }
                    Tween.get(this).delay(100).exec(Handler.alloc(this, this.setTween, [idx + 1]));
                };
                //缓动结束
                CaiyunbangMdr1.prototype.onTweenEnd = function () {
                    mod.PropTipsMgr.getIns().showBestPropCenter(this._proxy.getQifuProp());
                    this.updateCost();
                    this._roundNum = 0; //清除
                    Tween.remove(this);
                };
                CaiyunbangMdr1.prototype.updateView = function () {
                    this.updateReward();
                    this.updateCost();
                };
                CaiyunbangMdr1.prototype.updateReward = function () {
                    var rewards = this._proxy.getQifuRewards();
                    for (var i = 0; i < rewards.length; i++) {
                        var item = this._view["icon" + i];
                        if (item) {
                            var prop = game.PropData.create(rewards[i].idx, rewards[i].cnt);
                            item.data = { prop: prop, sel: this._lastPos == i };
                        }
                    }
                };
                CaiyunbangMdr1.prototype.updateCost = function () {
                    var cost = this._proxy.getQifuCost();
                    this._view.costIcon1.updateShow(cost);
                    var cost1 = this._proxy.getQifuCost(2 /* Ten */);
                    this._view.costIcon10.updateShow(cost1);
                    this._view.btn_do1.setHint(this._proxy.getQifuHint());
                    this._view.btn_do10.setHint(this._proxy.getQifuHint(2 /* Ten */));
                    var times = this._proxy.getQifuTimes();
                    var timesStr = game.TextUtil.addColor(times + '', 8585074 /* GREEN */);
                    var str = game.StringUtil.substitute(game.getLanById("caiyunbang_tips1" /* caiyunbang_tips1 */), [timesStr]);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                };
                CaiyunbangMdr1.prototype.onClick = function () {
                    if (this._proxy.canQifu(1 /* Once */, true)) {
                        this._proxy.c2s_activity_caiyun_qifu(1 /* Once */);
                    }
                };
                CaiyunbangMdr1.prototype.onClickTen = function () {
                    if (this._proxy.canQifu(2 /* Ten */, true)) {
                        this._proxy.c2s_activity_caiyun_qifu(2 /* Ten */);
                    }
                };
                CaiyunbangMdr1.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                CaiyunbangMdr1.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var qifuCost = this._proxy.getQifuCost();
                    if (indexs.indexOf(qifuCost[0]) > -1) {
                        this.updateCost();
                    }
                };
                return CaiyunbangMdr1;
            }(game.MdrBase));
            activity.CaiyunbangMdr1 = CaiyunbangMdr1;
            __reflect(CaiyunbangMdr1.prototype, "game.mod.activity.CaiyunbangMdr1", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var ExchangeShopMdr = /** @class */ (function (_super) {
                __extends(ExchangeShopMdr, _super);
                function ExchangeShopMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.ExchangeView);
                    _this._listData = new ArrayCollection();
                    return _this;
                }
                ExchangeShopMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(215 /* ExchangeShop */);
                    this.onInitList();
                };
                ExchangeShopMdr.prototype.onInitList = function () {
                    this._view.list.itemRenderer = activity.ExchangeShopItem;
                    this._view.list.dataProvider = this._listData;
                };
                ExchangeShopMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_refresh, TouchEvent.TOUCH_TAP, this.onClickRefresh, this);
                    this.onNt("on_update_exchange_shop_info" /* ON_UPDATE_EXCHANGE_SHOP_INFO */, this.onUpdateList, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this);
                };
                ExchangeShopMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.setType();
                    this.onUpdateList();
                    this.onUpdateView();
                    mod.HintMgr.setHint(false, ["27" /* Activity */, "54" /* ExchangeShop */, "0" + this._type]);
                };
                ExchangeShopMdr.prototype.setType = function () {
                    this._type = this._proxy.getTypeByIndex();
                };
                ExchangeShopMdr.prototype.onUpdateView = function () {
                    this._view.img_banner.source = game.ResUtil.getUiJpg("shop_banner_" + this._type);
                    this._lmt_type = this._proxy.getRefreshType(this._type);
                    if (this._lmt_type == 1 || this._lmt_type == 3) {
                        this.onUpdateTime();
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    this._view.btn_refresh.visible = this._type == 2 /* Type1 */;
                    this._view.btn_refresh.x = this._view.timeItem.x + this._view.timeItem.width + 30;
                    var prop = this._proxy.getBigReward(this._type);
                    this._view.updateBigReward(prop ? [prop, 1] : null);
                };
                ExchangeShopMdr.prototype.onUpdateList = function () {
                    var list = this._proxy.getShopList(this._type);
                    this._listData.source = list;
                };
                ExchangeShopMdr.prototype.update = function (time) {
                    this.onUpdateTime();
                };
                ExchangeShopMdr.prototype.onUpdateTime = function () {
                    var endTime;
                    if (this._lmt_type == 3) {
                        endTime = game.TimeUtil.getNextWeekTime();
                    }
                    else if (this._lmt_type == 1) {
                        endTime = game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, 1);
                    }
                    else {
                        TimeMgr.removeUpdateItem(this);
                    }
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, '', game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                ExchangeShopMdr.prototype.onClickRefresh = function () {
                    var _this = this;
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "exchange_shop_refresh_number");
                    var str;
                    var count = this._proxy.getRefreshCount(this._type);
                    var cost = game.getConfigByNameId("param.json" /* Param */, "exchange_shop_refresh");
                    if (count < cfg.value) {
                        str = game.StringUtil.substitute(game.getLanById("exchange_shop_refresh1" /* exchange_shop_refresh1 */), [game.TextUtil.addColor("(" + count + "/" + cfg.value + ")", 8585074 /* GREEN */)]);
                    }
                    else {
                        var prop = game.PropData.create(cost.value[0], cost.value[1]);
                        str = game.StringUtil.substitute(game.getLanById("exchange_shop_refresh2" /* exchange_shop_refresh2 */), [game.TextUtil.addColor("" + prop.count + prop.cfg.name, 8585074 /* GREEN */)]);
                    }
                    var self = this;
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, function () {
                        if (count >= cfg.value && !mod.BagUtil.checkPropCnt(cost.value[0], cost.value[1], 2 /* Text */)) {
                            return;
                        }
                        self._proxy.c2s_exchange_shop_refresh_prop(_this._type);
                    }));
                };
                ExchangeShopMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                ExchangeShopMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("vip_lv" /* vip_lv */) > -1) {
                        this.onUpdateList();
                    }
                };
                return ExchangeShopMdr;
            }(game.MdrBase));
            activity.ExchangeShopMdr = ExchangeShopMdr;
            __reflect(ExchangeShopMdr.prototype, "game.mod.activity.ExchangeShopMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var FlyGiftMdr = /** @class */ (function (_super) {
                __extends(FlyGiftMdr, _super);
                function FlyGiftMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.FlyGiftView);
                    return _this;
                }
                FlyGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.FlyGiftRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                FlyGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_fly_rank_update_gift" /* ON_FLY_RANK_UPDATE_GIFT */, this.updateItemList, this);
                };
                FlyGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateItemList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                FlyGiftMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                FlyGiftMdr.prototype.initShow = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rankAct = this._proxy.getOperActByType(8 /* FlyRank */, actInfo.entrance);
                    var rewards = this._flyRankProxy.getTopRewards(rankAct, 1, 1);
                    this._view.icon_bigreward.setData(rewards[0]);
                };
                FlyGiftMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                FlyGiftMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                FlyGiftMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = actInfo.reward_list;
                    var tmps = [];
                    for (var _i = 0, rewardList_3 = rewardList; _i < rewardList_3.length; _i++) {
                        var reward = rewardList_3[_i];
                        var sort = reward.index; //从小到大排序
                        var hasBuy = this._flyRankProxy.hasGiftBuy(actInfo.act_id, reward);
                        if (hasBuy) {
                            sort += 10000000;
                        }
                        tmps.push({ sort: sort, reward: reward });
                    }
                    tmps.sort(game.SortTools.sortByRort);
                    rewardList = [];
                    for (var _a = 0, tmps_3 = tmps; _a < tmps_3.length; _a++) {
                        var info = tmps_3[_a];
                        rewardList.push(info.reward);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                return FlyGiftMdr;
            }(game.EffectMdrBase));
            activity.FlyGiftMdr = FlyGiftMdr;
            __reflect(FlyGiftMdr.prototype, "game.mod.activity.FlyGiftMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var FlyRankMdr = /** @class */ (function (_super) {
                __extends(FlyRankMdr, _super);
                function FlyRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.FlyRankView);
                    return _this;
                }
                FlyRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = activity.FlyRankRender;
                    this._view.list_rank.dataProvider = this._itemList;
                };
                FlyRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.btn_lastRank, TouchEvent.TOUCH_TAP, this.onClickLastRank);
                    addEventListener(this._view.btn_go, TouchEvent.TOUCH_TAP, this.onClickGo);
                    this.onNt("on_fly_rank_update" /* ON_FLY_RANK_UPDATE */, this.onInfoUpdate, this);
                };
                FlyRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateMyInfo();
                    this.updateRankList();
                    this._proxy.checkActTips(3 /* FlyRank */);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                FlyRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                FlyRankMdr.prototype.onClickReward = function () {
                    if (!this._canDraw) {
                        game.PromptBox.getIns().show(game.getLanById("shoulie_point" /* shoulie_point */));
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    this._proxy.c2s_oper_act_get_info(actInfo.act_id, 3 /* Reward */);
                };
                FlyRankMdr.prototype.onClickLastRank = function () {
                    //上期排名
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "90" /* FlyRankSection */);
                };
                FlyRankMdr.prototype.onClickGo = function () {
                    var jumpIdx = game.FlyPropToJumpIdx[this._propIndex];
                    if (!jumpIdx) {
                        return;
                    }
                    mod.ViewMgr.getIns().showViewByID(jumpIdx);
                };
                FlyRankMdr.prototype.onInfoUpdate = function () {
                    this.updateMyInfo();
                    this.updateRankList();
                };
                FlyRankMdr.prototype.initShow = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var propIndex = this._flyRankProxy.getRankProp(actInfo);
                    this._propIndex = propIndex;
                    this._view.img_prop.source = "flyrank_prop_" + propIndex;
                    var cfg = game.GameConfig.getPropConfigById(propIndex);
                    var tipsStr1 = game.StringUtil.substitute(game.getLanById("fly_rank_tips1" /* fly_rank_tips1 */), [cfg.name]);
                    var tipsStr3 = game.StringUtil.substitute(game.getLanById("fly_rank_tips6" /* fly_rank_tips6 */), [cfg.name]);
                    //通过唯一道具判断显示不同的文本
                    if (cfg.index == 1450100140) {
                        this._view.lab_tips1.text = tipsStr3;
                    }
                    else {
                        this._view.lab_tips1.text = tipsStr1;
                    }
                    var topScore = this._flyRankProxy.getTopScore(actInfo);
                    this._topScore = topScore;
                    var tipsStr2 = game.StringUtil.substitute(game.getLanById("fly_rank_tips2" /* fly_rank_tips2 */), [topScore]);
                    this._view.lab_tips2.text = tipsStr2;
                };
                FlyRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                FlyRankMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                FlyRankMdr.prototype.updateMyInfo = function () {
                    var actInfo = this._proxy.curOpenAct;
                    this._canDraw = this._flyRankProxy.canDraw(actInfo.act_id);
                    this._view.btn_reward.redPoint.visible = this._canDraw;
                    this._view.btn_reward.iconDisplay.source = this._canDraw ? "box_close" : "box_open";
                    var myData = this._flyRankProxy.getMyData(actInfo.act_id);
                    var rankStr = game.getLanById("tishi_12" /* tishi_12 */) + "："; //我的排行：
                    var maxRank = this._flyRankProxy.getMaxRank(actInfo);
                    if (myData && myData.rank_num) {
                        rankStr += myData.rank_num <= maxRank ? myData.rank_num : maxRank + "+"; //50+
                    }
                    else {
                        rankStr += game.getLanById("tishi_13" /* tishi_13 */); //未上榜
                    }
                    this._view.lab_rank.text = rankStr;
                    var score = myData && myData.value && myData.value.toNumber() || 0;
                    this._view.lab_num.text = game.getLanById("battle_cue46" /* battle_cue46 */) + "：" + score; //我的积分：0
                    var tipsStr3 = "";
                    var limitScore = actInfo && actInfo.param ? actInfo.param[2] : 0; //上榜限制积分
                    if (score < limitScore) {
                        //未达到上榜积分
                        var leftScore = limitScore - score;
                        tipsStr3 = game.StringUtil.substitute(game.getLanById("fly_rank_tips3" /* fly_rank_tips3 */), [leftScore]);
                    }
                    else {
                        //已达到上榜积分
                        if (score < this._topScore) {
                            var leftScore = this._topScore - score;
                            tipsStr3 = game.StringUtil.substitute(game.getLanById("fly_rank_tips4" /* fly_rank_tips4 */), [leftScore]);
                        }
                    }
                    this._view.lab_tips3.text = tipsStr3;
                    this._view.grp_tips3.visible = tipsStr3 != "";
                };
                FlyRankMdr.prototype.updateRankList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var topInfo = this._flyRankProxy.getRankInfo(actInfo.act_id, 1);
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    var rewardList = this._flyRankProxy.getRewardList(actInfo);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                return FlyRankMdr;
            }(game.EffectMdrBase));
            activity.FlyRankMdr = FlyRankMdr;
            __reflect(FlyRankMdr.prototype, "game.mod.activity.FlyRankMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var FlyRebateMdr = /** @class */ (function (_super) {
                __extends(FlyRebateMdr, _super);
                function FlyRebateMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.FlyRebateView);
                    return _this;
                }
                FlyRebateMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.FlyRebateRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                FlyRebateMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_fly_rank_update_rebate" /* ON_FLY_RANK_UPDATE_REBATE */, this.onInfoUpdate, this);
                };
                FlyRebateMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateLoopCnt();
                    this.updateItemList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                FlyRebateMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                FlyRebateMdr.prototype.onInfoUpdate = function () {
                    this.updateLoopCnt();
                    this.updateItemList();
                };
                FlyRebateMdr.prototype.initShow = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewards = actInfo.reward_list[actInfo.reward_list.length - 1].rewards;
                    this._view.icon_bigreward.setData(rewards[0]);
                };
                FlyRebateMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                FlyRebateMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                FlyRebateMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = actInfo.reward_list.concat();
                    var tmps = [];
                    for (var _i = 0, rewardList_4 = rewardList; _i < rewardList_4.length; _i++) {
                        var reward = rewardList_4[_i];
                        var sort = reward.index; //从小到大排序
                        var hasDraw = this._flyRankProxy.hasRebateDraw(actInfo.act_id, reward);
                        if (hasDraw) {
                            sort += 10000000;
                        }
                        else {
                            var canDraw = this._flyRankProxy.canRebateDraw(actInfo.act_id, reward);
                            if (canDraw) {
                                sort -= 100000;
                            }
                        }
                        tmps.push({ sort: sort, reward: reward });
                    }
                    tmps.sort(game.SortTools.sortByRort);
                    rewardList = [];
                    for (var _a = 0, tmps_4 = tmps; _a < tmps_4.length; _a++) {
                        var info = tmps_4[_a];
                        rewardList.push(info.reward);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                };
                FlyRebateMdr.prototype.updateLoopCnt = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var cnt = this._flyRankProxy.getLoopNum(actInfo.act_id);
                    var maxCnt = actInfo && actInfo.param ? actInfo.param[2] : 0; //总的轮次
                    this._view.lab_count.text = cnt + "/" + maxCnt;
                };
                return FlyRebateMdr;
            }(game.EffectMdrBase));
            activity.FlyRebateMdr = FlyRebateMdr;
            __reflect(FlyRebateMdr.prototype, "game.mod.activity.FlyRebateMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var FlyWarMainMdr = /** @class */ (function (_super) {
                __extends(FlyWarMainMdr, _super);
                function FlyWarMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: 'feishengling_icon',
                            mdr: activity.FlyWarMdr,
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: 'renwu_icon',
                            mdr: activity.FlyTaskMdr,
                        }
                    ];
                    return _this;
                }
                FlyWarMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                    this._view.timeItem.visible = true;
                };
                FlyWarMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_fly_rank_update_war" /* ON_FLY_RANK_UPDATE_WAR */, this.updateWarHint, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this); //属性刷新，有货币
                    this.onNt("on_task_hint" /* ON_TASK_HINT */, this.onTaskHint, this); //任务红点，数据携带任务类型列表
                };
                FlyWarMainMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateTime();
                    this.updateWarHint();
                    this.updateTaskHint();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                FlyWarMainMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                FlyWarMainMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                FlyWarMainMdr.prototype.updateTime = function () {
                    this._view.timeItem.updateActTime(this._proxy.curOpenAct);
                };
                FlyWarMainMdr.prototype.updateWarHint = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var hint = this._flyRankProxy.getWarRewardHint(actInfo);
                    this.updateHint("01" /* TabBtnType01 */, hint);
                };
                FlyWarMainMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("feisheng_exp" /* feisheng_exp */) > -1) {
                        this.updateWarHint();
                    }
                };
                FlyWarMainMdr.prototype.onTaskHint = function (n) {
                    var types = n.body;
                    var type = 43 /* Fly */;
                    if (types.indexOf(type) < 0) {
                        return;
                    }
                    this.updateTaskHint();
                };
                FlyWarMainMdr.prototype.updateTaskHint = function () {
                    var hint = mod.TaskUtil.getTaskHint(43 /* Fly */);
                    this.updateHint("02" /* TabBtnType02 */, hint);
                };
                FlyWarMainMdr.prototype.updateHint = function (btnType, hint) {
                    var list = this._btnList.source;
                    var len = list ? list.length : 0;
                    if (!len) {
                        return;
                    }
                    var pos = _super.prototype.getMdrPosByType.call(this, btnType);
                    var btnData = list[pos];
                    if (!!btnData.showHint != hint) { //过滤undefined!=false
                        btnData.showHint = hint;
                        this._btnList.itemUpdated(btnData);
                    }
                };
                return FlyWarMainMdr;
            }(mod.WndSecondMdr));
            activity.FlyWarMainMdr = FlyWarMainMdr;
            __reflect(FlyWarMainMdr.prototype, "game.mod.activity.FlyWarMainMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            /**通用战令item*/
            var GameOrderItem = /** @class */ (function (_super) {
                __extends(GameOrderItem, _super);
                function GameOrderItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.GivingItemSkin";
                    return _this;
                }
                GameOrderItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list.itemRenderer = mod.IconGot;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                GameOrderItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                GameOrderItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.grp_gray.visible = !data.isBought;
                    //付费奖励
                    var list = [];
                    var payStatus = data.payStatus || 0 /* NotFinish */;
                    for (var _i = 0, _a = data.cfg.rewad_1; _i < _a.length; _i++) {
                        var reward = _a[_i];
                        list.push({
                            prop: game.PropData.create(reward[0], reward[1]),
                            isGot: payStatus == 2 /* Draw */,
                            showTips: true
                        });
                    }
                    this._listData.source = list;
                    //免费奖励
                    var freeStatus = data.freeStatus || 0 /* NotFinish */;
                    this.icon.setData({
                        prop: data.cfg.reward,
                        isGot: freeStatus == 2 /* Draw */,
                        showHint: freeStatus == 1 /* Finish */,
                        showTips: true
                    });
                    if (data.type == 4 /* XiuXian */) {
                        this.lab_val.text = mod.RoleUtil.getRebirthLvStrNoZhuan(data.cfg.target) + "\u8F6C";
                        var target = mod.RoleUtil.getRebirthLv(data.cfg.target);
                        var val_1 = mod.RoleUtil.getRebirthLv(data.val) || 0;
                        var next = data.next;
                        var start = data.before;
                        this.bar.setData({ start: start, val: val_1, target: target, next: next });
                        return;
                    }
                    var valStr = data.cfg.target + '';
                    if (data.type == 8 /* Zhizunlicai */) {
                        var time = data.cfg.target;
                        var timeStr = void 0;
                        if (time >= game.Second.Day) {
                            timeStr = game.TimeUtil.formatSecond(time, 'd天H时');
                        }
                        else {
                            timeStr = game.TimeUtil.formatSecond(time, 'H时m分');
                        }
                        valStr = timeStr;
                    }
                    this.lab_val.text = valStr;
                    var val = data.val || 0;
                    this.bar.setData({ start: data.before, val: val, target: data.cfg.target, next: data.next });
                };
                return GameOrderItem;
            }(mod.BaseListenerRenderer));
            activity.GameOrderItem = GameOrderItem;
            __reflect(GameOrderItem.prototype, "game.mod.activity.GameOrderItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxMdr7 = /** @class */ (function (_super) {
                __extends(ZcxMdr7, _super);
                function ZcxMdr7() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ZcxFundView);
                    _this._type = 1 /* Fuli */;
                    return _this;
                }
                ZcxMdr7.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = activity.ZcxFundItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZcxMdr7.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_buy, egret.TouchEvent.TOUCH_TAP, this.onClickBuy, this);
                    addEventListener(this._view.btn_gift, egret.TouchEvent.TOUCH_TAP, this.onClickGift, this);
                    this.onNt("on_zcx_fund_update" /* ON_ZCX_FUND_UPDATE */, this.updateView, this);
                };
                ZcxMdr7.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.img_fundtype.source = "zcx_fund" + this._type;
                    var param = game.GameConfig.getParamConfigById("zhaocai_show" + this._type);
                    var str1 = param.value[1][1];
                    var str2 = param.value[2][1];
                    this.addBmpFont(str1 + "", game.BmpTextCfg[228 /* HuanJingFont */], this._view.gr_font1);
                    this.addBmpFont(str2 + "", game.BmpTextCfg[228 /* HuanJingFont */], this._view.gr_font2);
                    this.updateView();
                };
                ZcxMdr7.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                ZcxMdr7.prototype.updateView = function () {
                    var cfgs = this._proxy.getFundCfgList(this._type);
                    var list = [];
                    for (var _i = 0, cfgs_4 = cfgs; _i < cfgs_4.length; _i++) {
                        var cfg = cfgs_4[_i];
                        list.push({
                            cfg: cfg,
                            status: this._proxy.getReceiveStatus(this._type, cfg.index)
                        });
                    }
                    this._listData.replaceAll(list);
                    var isBought = this._proxy.isBought(this._type);
                    if (isBought) {
                        this._view.btnTipsBase.visible = false;
                        var isReceiveAll = this._proxy.isReceiveAll(this._type);
                        var isReceiveToday = this._proxy.isReceiveToday(this._type);
                        if (isReceiveAll || isReceiveToday) {
                            this._view.lb_desc.visible = true;
                            this._view.btn_buy.visible = false;
                            this._view.lb_desc.textFlow = game.TextUtil.parseHtml(game.getLanById(isReceiveAll ? "zcx_tips16" /* zcx_tips16 */ : "zcx_tips15" /* zcx_tips15 */));
                        }
                        else {
                            this._view.btn_buy.visible = true;
                            this._view.lb_desc.visible = false;
                            this._view.btn_buy.setImage('common_get', true);
                            this.addEftByParentScale(this._view.btn_buy.group_eft);
                            this._view.btn_buy.setHint(!isReceiveToday);
                        }
                    }
                    else {
                        this._view.lb_desc.visible = false;
                        this._view.btn_buy.visible = true;
                        this._view.btnTipsBase.visible = true;
                        var productId = this._proxy.getFundProductId(this._type);
                        var rmb = mod.PayUtil.getRmbValue(productId);
                        this._view.btn_buy.setFontPrice(rmb);
                        this._view.btnTipsBase.updateShow(game.getLanById("zcx_tips20" /* zcx_tips20 */));
                        this.addEftByParentScale(this._view.btn_buy.group_eft);
                    }
                    this._view.img_baoxiang.source = isBought ? 'zcx_dabaoxiang' : 'zcx_dabaoxiang_hui';
                    this.updateBtnGift();
                };
                //福利按钮状态
                ZcxMdr7.prototype.updateBtnGift = function () {
                    var status = this._proxy.getBoxStatus(this._type);
                    this._view.btn_gift.setHint(status == 1 /* Finish */);
                    var isDraw = status == 2 /* Draw */;
                    this._view.btn_gift.icon = isDraw ? 'box_open' : 'box_close';
                };
                ZcxMdr7.prototype.onClickBuy = function () {
                    if (!this._proxy.isBought(this._type)) {
                        mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "109" /* ZcxUnlock */, this._type);
                    }
                    else {
                        this._proxy.c2s_zcx_fund_day_reward(this._type);
                    }
                };
                ZcxMdr7.prototype.onClickGift = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "108" /* ZcxFuli */, this._type);
                };
                return ZcxMdr7;
            }(game.EffectMdrBase));
            activity.ZcxMdr7 = ZcxMdr7;
            __reflect(ZcxMdr7.prototype, "game.mod.activity.ZcxMdr7");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var _a;
            var c2s_draw_get_rank_info = msg.c2s_draw_get_rank_info;
            var s2c_draw_send_rank_info = msg.s2c_draw_send_rank_info;
            var s2c_draw_send_fengyun_info = msg.s2c_draw_send_fengyun_info;
            var c2s_draw_buy_gift = msg.c2s_draw_buy_gift;
            var s2c_draw_buy_gift_info = msg.s2c_draw_buy_gift_info;
            var c2s_draw_buy_luck_gift = msg.c2s_draw_buy_luck_gift;
            var s2c_draw_buy_luck_gift_info = msg.s2c_draw_buy_luck_gift_info;
            var c2s_draw_button_click = msg.c2s_draw_button_click;
            var s2c_draw_get_rewards = msg.s2c_draw_get_rewards;
            var s2c_draw_base_data = msg.s2c_draw_base_data;
            var c2s_draw_get_fengyun_rewards = msg.c2s_draw_get_fengyun_rewards;
            var facade = base.facade;
            var Handler = base.Handler;
            var SummonProxy = /** @class */ (function (_super) {
                __extends(SummonProxy, _super);
                function SummonProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(SummonProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                SummonProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.SummonModel();
                    this.onProto(s2c_draw_send_rank_info, this.s2c_draw_send_rank_info, this);
                    this.onProto(s2c_draw_send_fengyun_info, this.s2c_draw_send_fengyun_info, this);
                    this.onProto(s2c_draw_buy_gift_info, this.s2c_draw_buy_gift_info, this);
                    this.onProto(s2c_draw_buy_luck_gift_info, this.s2c_draw_buy_luck_gift_info, this);
                    this.onProto(s2c_draw_get_rewards, this.s2c_draw_get_rewards, this);
                    this.onProto(s2c_draw_base_data, this.s2c_draw_base_data, this);
                };
                /**--------------------协议start-------------------- */
                /**
                 * 点击抽奖
                 * @param button_type 1单抽   2十连    3百抽
                 * */
                SummonProxy.prototype.c2s_draw_button_click = function (button_type) {
                    var msg = new c2s_draw_button_click();
                    msg.button_type = button_type;
                    this.sendProto(msg);
                };
                /**请求排行数据 */
                SummonProxy.prototype.c2s_draw_get_rank_info = function () {
                    var msg = new c2s_draw_get_rank_info();
                    this.sendProto(msg);
                };
                /**礼券购买奖励 */
                SummonProxy.prototype.c2s_draw_buy_gift = function (index) {
                    var msg = new c2s_draw_buy_gift();
                    msg.index = index;
                    this.sendProto(msg);
                };
                /**购买命运豪礼 */
                SummonProxy.prototype.c2s_draw_buy_luck_gift = function (itype, index) {
                    var msg = new c2s_draw_buy_luck_gift();
                    msg.itype = itype;
                    msg.index = index;
                    this.sendProto(msg);
                };
                /**领取风云录奖励 */
                SummonProxy.prototype.c2s_draw_get_fengyun_rewards = function (index) {
                    var msg = new c2s_draw_get_fengyun_rewards();
                    msg.index = index;
                    this.sendProto(msg);
                };
                /**积分排行 */
                SummonProxy.prototype.s2c_draw_send_rank_info = function (n) {
                    var msg = n.body;
                    if (msg.rank_List && msg.rank_List.length > 0) {
                        this._model.rank_list = msg.rank_List;
                    }
                    if (msg.my_data) {
                        this._model.my_data = msg.my_data;
                    }
                    if (msg.time) {
                        this._model.end_time = msg.time.toNumber();
                    }
                    this.sendNt("on_update_rank" /* ON_UPDATE_RANK */);
                };
                /**风云录数据 */
                SummonProxy.prototype.s2c_draw_send_fengyun_info = function (n) {
                    var msg = n.body;
                    if (msg.list && msg.list.length > 0) {
                        this._model.list = msg.list;
                    }
                    this.onUpdateHintByFengyun();
                    this.sendNt("on_update_fengyun_list" /* ON_UPDATE_FENGYUN_LIST */);
                };
                /**礼券数据 */
                SummonProxy.prototype.s2c_draw_buy_gift_info = function (n) {
                    var msg = n.body;
                    if (msg.item_list && msg.item_list.length > 0) {
                        this._model.item_list = msg.item_list;
                    }
                    // this.onUpdateHintByExchange();
                    this.sendNt("on_update_exchange" /* ON_UPDATE_EXCHANGE */);
                };
                /**命运豪礼数据 */
                SummonProxy.prototype.s2c_draw_buy_luck_gift_info = function (n) {
                    var msg = n.body;
                    if (msg.gift_list) {
                        for (var _i = 0, _a = msg.gift_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.gift_list[item.itype] = item;
                        }
                    }
                    this.onUpdateHintByGift();
                    this.sendNt("on_update_summon_gift" /* ON_UPDATE_SUMMON_GIFT */);
                };
                /**抽奖获得 */
                SummonProxy.prototype.s2c_draw_get_rewards = function (n) {
                    var msg = n.body;
                    if (msg.item_list && msg.item_list.length > 0) {
                        if (msg.luck_num) {
                            this.luck_num = msg.luck_num;
                        }
                        if (msg.item_list.length <= 10) {
                            var countType = msg.item_list.length == 1 ? 1 /* Once */ : 2 /* Ten */;
                            var data = {
                                type: msg.type,
                                list: msg.item_list,
                                luckNum: msg.luck_num || 0,
                                cost: this.getSummonEffectCostPropData(msg.type, countType),
                                handler: this.getSummonEffectHandler(msg.type, countType)
                            };
                            facade.showView("27" /* Activity */, "37" /* SummonEffect */, data);
                            this.sendNt("on_update_summon_tween" /* ON_UPDATE_SUMMON_TWEEN */, msg.item_list);
                        }
                        //返回的奖励如果有外显碎片时，则暂停外显弹窗
                        for (var _i = 0, _a = msg.item_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            var prop = game.PropData.create(item.idx);
                            if (prop.propType == 11 /* Surface */) {
                                mod.PropTipsMgr.getIns().pauseSurface(); //外显碎片时则暂停表现
                                break;
                            }
                        }
                    }
                    // this.onUpdateHintByExchange();
                };
                //召唤特效界面的消耗 todo
                SummonProxy.prototype.getSummonEffectCostPropData = function (type, countType) {
                    if (type == 1 /* Summon */) {
                        return this.getPropDataByType(this.model.type);
                    }
                    else if (type == 2 /* Fuchenlinghu */) {
                        var fuchenlinghuProxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                        var cost = fuchenlinghuProxy.getCost(countType);
                        return game.PropData.create(cost[0], cost[1]);
                    }
                    else if (type == 3 /* Linghuxianling */) {
                        var fuchenlinghuProxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                        var cost = fuchenlinghuProxy.getCostSpecial();
                        return game.PropData.create(cost[0], cost[1]);
                    }
                    return null;
                };
                //召唤特效界面的点击回调函数 todo
                SummonProxy.prototype.getSummonEffectHandler = function (type, countType) {
                    var _this = this;
                    if (type == 1 /* Summon */) {
                        return Handler.alloc(this, function () {
                            _this.c2s_draw_button_click(_this.model.type);
                        });
                    }
                    else if (type == 2 /* Fuchenlinghu */) {
                        var fuchenlinghuProxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                        return fuchenlinghuProxy.getOperHandler(countType);
                    }
                    else if (type == 3 /* Linghuxianling */) {
                        var fuchenlinghuProxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                        return fuchenlinghuProxy.getOperHandlerSpecial();
                    }
                    return null;
                };
                /**抽奖数据 */
                SummonProxy.prototype.s2c_draw_base_data = function (n) {
                    var msg = n.body;
                    if (msg.count) {
                        this._model.count = msg.count;
                    }
                    if (msg.score) {
                        this._model.score = msg.score;
                    }
                    if (msg.min_luck_score) {
                        this._model.min_luck_score = msg.min_luck_score;
                    }
                    if (msg.max_luck_score) {
                        this._model.max_luck_score = msg.max_luck_score;
                    }
                    this.sendNt("on_update_summon" /* ON_UPDATE_SUMMON */);
                };
                /**--------------------协议end-------------------- */
                /**获取风云录列表信息*/
                SummonProxy.prototype.getFengYunRankList = function () {
                    var cfgArr = game.getConfigListByName("draw_count_rewards.json" /* DrawCountRewards */);
                    var list = [];
                    outer: for (var _i = 0, cfgArr_3 = cfgArr; _i < cfgArr_3.length; _i++) {
                        var cfg = cfgArr_3[_i];
                        if (this._model.list && this._model.list.length > 0) {
                            for (var _a = 0, _b = this._model.list; _a < _b.length; _a++) {
                                var item = _b[_a];
                                if (item.index == cfg.index) {
                                    list.push({ cfg: cfg, rankInfo: item.role_info, status: item.status });
                                    continue outer;
                                }
                            }
                            list.push({ cfg: cfg, status: 0 });
                        }
                        else {
                            list.push({ cfg: cfg, status: 0 });
                        }
                    }
                    list.sort(function (a, b) {
                        if (a.status == 2 /* Draw */ || b.status == 2 /* Draw */) {
                            if (a.status != b.status) {
                                if (a.status == 2 /* Draw */) {
                                    return 1;
                                }
                                else {
                                    return -1;
                                }
                            }
                        }
                        return a.cfg.index - b.cfg.index;
                    });
                    return list;
                };
                /**获取剩余购买数量 */
                SummonProxy.prototype.getCountByIndex = function (index) {
                    if (this._model.list) {
                        for (var _i = 0, _a = this._model.item_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            if (item.index == index) {
                                return item.count;
                            }
                        }
                    }
                    return -1;
                };
                /**获取排名数据 */
                SummonProxy.prototype.getItemByRank = function (rank) {
                    return this._model.rank_list[rank - 1] || null;
                };
                /**获取区间排行榜列表 参数为排名 需要-1转换索引 */
                SummonProxy.prototype.getListBySection = function (rank) {
                    var strArr = rank.split("-");
                    var arr = this._model.rank_list.slice(+strArr[0] - 1, +strArr[1] - 1);
                    var list = [];
                    if (arr && arr.length > 0) {
                        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                            var item = arr_1[_i];
                            list.push({
                                rank: item.rank_num,
                                name: item.name,
                                value: +item.value
                            });
                        }
                    }
                    /**开始的排名 */
                    var start = +strArr[0] + arr.length;
                    if (start <= +strArr[1]) {
                        var nobody = this.getNobodyListBySection(start, +strArr[1]);
                        for (var _a = 0, nobody_1 = nobody; _a < nobody_1.length; _a++) {
                            var item = nobody_1[_a];
                            list.push(item);
                        }
                        // list.concat(nobody);
                    }
                    return list;
                };
                /**无人上榜的空数组 参数为排名 */
                SummonProxy.prototype.getNobodyListBySection = function (start, end) {
                    var list = [];
                    for (var i = start; i <= end; i++) {
                        list.push({
                            rank: i,
                            name: "虚位以待",
                            value: 0
                        });
                    }
                    return list;
                };
                /**获取排行榜展示列表 (查看排名)*/
                SummonProxy.prototype.getRankList = function () {
                    var cfgArr = game.getConfigListByName("draw_rank.json" /* DrawRank */);
                    var list = [];
                    var _loop_1 = function (cfg) {
                        if (cfg.rank_section[0] == cfg.rank_section[1]) {
                            var rank = cfg.rank_section[0];
                            var item = this_1.getItemByRank(rank);
                            list.push({
                                rank: rank,
                                name: item && item.name || "虚位以待",
                                hurtStr: item && item.value.toString() || "",
                                reward: [cfg.rewards]
                            });
                        }
                        else {
                            var str = game.TextUtil.addLinkHtmlTxt(game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */), 3496307 /* DEFAULT */, "");
                            var last = cfg.rank_section[1] > 100;
                            var rank_1 = last ? cfg.rank_section[0] - 1 + "+" : cfg.rank_section[0] + "-" + cfg.rank_section[1];
                            list.push({
                                rank: rank_1,
                                name: "",
                                reward: [cfg.rewards],
                                lookHandler: base.Handler.alloc(this_1, function () {
                                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "34" /* SummonRankTips */, { rank: rank_1 });
                                })
                            });
                        }
                    };
                    var this_1 = this;
                    for (var _i = 0, cfgArr_4 = cfgArr; _i < cfgArr_4.length; _i++) {
                        var cfg = cfgArr_4[_i];
                        _loop_1(cfg);
                    }
                    return list;
                };
                /**根据类型获取积分 */
                SummonProxy.prototype.getScoreByType = function (type, min) {
                    if (type == 1) {
                        return this._model.score;
                    }
                    else if (type == 2) {
                        return this._model.unluck_score;
                    }
                    else if (type == 3) {
                        if (min == 1) {
                            return this._model.min_luck_score;
                        }
                        else if (min == 2) {
                            return this._model.max_luck_score;
                        }
                    }
                    return 0;
                };
                /**根据类型获取配置 */
                SummonProxy.prototype.getGiftCfgByType = function (type, len) {
                    if (len === void 0) { len = 8; }
                    var cfgArr = game.getConfigByNameId("draw_luck_gift.json" /* DrawLuckGift */, type);
                    var list = [];
                    for (var key in cfgArr) {
                        var cfg = cfgArr[key];
                        var status = this.getStatus(type, cfg.index);
                        // if (status.status != 1) {
                        //     list.push({ type, cfg, status });
                        // }
                        list.push({ type: type, cfg: cfg, status: status });
                    }
                    list.sort(function (a, b) {
                        if (a.status.status != b.status.status) {
                            return a.status.status - b.status.status;
                        }
                        if (!a.status.status) {
                            return a.cfg.index - b.cfg.index;
                        }
                        return b.cfg.index - a.cfg.index;
                    });
                    return list.slice(0, len);
                };
                /**获取命运豪礼礼包状态 */
                SummonProxy.prototype.getStatus = function (type, index) {
                    var info = this._model.gift_list[type];
                    if (!info) {
                        return null;
                    }
                    for (var _i = 0, _a = info.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item.index == index) {
                            return item;
                        }
                    }
                    return null;
                };
                /**剩余次数 保底剩余次数为1时显示下次必得  -1不显示保底*/
                SummonProxy.prototype.getCount = function (count) {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_bottom");
                    if (cfg && cfg.value) {
                        for (var _i = 0, _a = cfg.value; _i < _a.length; _i++) {
                            var v = _a[_i];
                            if (count < v[0]) {
                                return v[0] - count;
                            }
                        }
                    }
                    return -1;
                };
                /**获取单抽/十连需要的道具和数量 */
                SummonProxy.prototype.getPropDataByType = function (type) {
                    var count = activity.CountByType[type];
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_item");
                    var item1 = cfg.value[count];
                    if (item1) {
                        var isEnough = mod.BagUtil.checkPropCnt(item1[0], item1[1]);
                        if (isEnough) {
                            return game.PropData.create(item1[0], item1[1]);
                        }
                    }
                    var cfg2 = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_item_list");
                    var item2 = cfg2.value[count];
                    if (item2) {
                        return game.PropData.create(item2[0], item2[1]);
                    }
                    console.error("检查参数表是否缺少配置");
                    return game.PropData.create(1450000002 /* Xianyu */);
                };
                /**获取保底道具 */
                SummonProxy.prototype.getMustGetProp = function () {
                    // let count: number = this.getCount(this._model.count);
                    // if (count != -1) {
                    //     let cfg: ParamConfig = getConfigByNameId(ConfigName.Param, "zhaohuan_bottom");
                    //     for (let v of cfg.value) {
                    //         if (count <= v[0]) {
                    //             return PropData.create(v[1], v[2]);
                    //         }
                    //     }
                    // }
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_bottom");
                    for (var _i = 0, _a = cfg.value; _i < _a.length; _i++) {
                        var v = _a[_i];
                        if (this._model.count < v[0]) {
                            return game.PropData.create(v[1], v[2]);
                        }
                    }
                    return null;
                };
                Object.defineProperty(SummonProxy.prototype, "myRank", {
                    /**我的排名 */
                    get: function () {
                        return this._model.my_data && this._model.my_data.rank_num;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(SummonProxy.prototype, "myRankCount", {
                    /**我的排名次数 */
                    get: function () {
                        return this._model.my_data && +this._model.my_data.value || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                SummonProxy.prototype.onUpdateHintByGift = function () {
                    var list = this.getGiftCfgByType(2);
                    var root = ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */, "02" /* TabBtnType02 */];
                    if (list) {
                        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
                            var item = list_1[_i];
                            if (this._model.unluck_score >= item.cfg.condition[0]) {
                                mod.HintMgr.setHint(true, root);
                                return;
                            }
                        }
                    }
                    mod.HintMgr.setHint(false, root);
                };
                SummonProxy.prototype.onUpdateHintByFengyun = function () {
                    for (var _i = 0, _a = this._model.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item.status === 1) {
                            mod.HintMgr.setHint(true, ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */, "35" /* SummonRankGods */]);
                            return;
                        }
                    }
                    mod.HintMgr.setHint(false, ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */, "35" /* SummonRankGods */]);
                };
                SummonProxy.prototype.onUpdateHintByExchange = function () {
                    var root = ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "36" /* SummonExchange */];
                    var cfgArr = game.getConfigListByName("draw_gift.json" /* DrawGift */);
                    for (var _i = 0, cfgArr_5 = cfgArr; _i < cfgArr_5.length; _i++) {
                        var cfg = cfgArr_5[_i];
                        if (mod.BagUtil.checkPropCnt(cfg.cost[0], cfg.cost[1])) {
                            mod.HintMgr.setHint(true, root);
                            return;
                        }
                    }
                    mod.HintMgr.setHint(false, root);
                };
                SummonProxy.prototype.onUpdateHintByProp = function () {
                    var root = ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "00"];
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_item");
                    var item1 = cfg.value[activity.CountByType[1 /* Once */]];
                    if (mod.BagUtil.checkPropCnt(item1[0], item1[1])) {
                        mod.HintMgr.setHint(true, root);
                        return;
                    }
                    mod.HintMgr.setHint(false, root);
                };
                SummonProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(1450100114 /* SummonLiQuan */) > -1) {
                        this.onUpdateHintByExchange();
                    }
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_item");
                    var item1 = cfg.value[activity.CountByType[1 /* Once */]];
                    if (indexs.indexOf(item1[0]) > -1) {
                        this.onUpdateHintByProp();
                    }
                };
                /**根据类型获取积分 类型3欧皇不显示 */
                SummonProxy.prototype.getCountByType = function (type) {
                    switch (type) {
                        case 1:
                            return this._model.score;
                        case 2:
                            return this._model.unluck_score;
                        default:
                            return 0;
                    }
                };
                /**获取提示 */
                SummonProxy.prototype.getTipsByType = function (type) {
                    switch (type) {
                        case 1:
                            return "zhaohuan_tips1" /* zhaohuan_tips1 */;
                        case 2:
                            return "zhaohuan_tips2" /* zhaohuan_tips2 */;
                        case 3:
                            return "zhaohuan_tips3" /* zhaohuan_tips3 */;
                        default:
                            return "";
                    }
                };
                Object.defineProperty(SummonProxy.prototype, "luck_num", {
                    get: function () {
                        return this._model.luck_num;
                    },
                    set: function (val) {
                        this._model.luck_num = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(SummonProxy.prototype, "mdrType", {
                    get: function () {
                        return this._model.mdrType;
                    },
                    set: function (val) {
                        this._model.mdrType = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(SummonProxy.prototype, "count", {
                    get: function () {
                        return this._model.count;
                    },
                    enumerable: true,
                    configurable: true
                });
                return SummonProxy;
            }(game.ProxyBase));
            activity.SummonProxy = SummonProxy;
            __reflect(SummonProxy.prototype, "game.mod.activity.SummonProxy");
            activity.CountByType = (_a = {},
                _a[1 /* Once */] = 0,
                _a[2 /* Ten */] = 1,
                _a[3 /* Hund */] = 2,
                _a);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var WonderfulActMdr4 = /** @class */ (function (_super) {
                __extends(WonderfulActMdr4, _super);
                function WonderfulActMdr4() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.WonderfulActView4);
                    _this._type = 3 /* Leijicharge */;
                    return _this;
                }
                WonderfulActMdr4.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                    this._view.list.itemRenderer = activity.WonderfulActItem4;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.gr_bigreward.visible = true;
                    this._view.img_banner.source = game.ResUtil.getUiJpg('leichonghaoli');
                };
                WonderfulActMdr4.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_wonderful_act_addcharge" /* ON_UPDATE_WONDERFUL_ACT_ADDCHARGE */, this.updateView, this);
                    this.onNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, this.onActivityClose, this);
                };
                WonderfulActMdr4.prototype.onActivityClose = function (n) {
                    var actId = n.body;
                    if (actId == this._proxy.getActId(this._type)) {
                        mod.ViewMgr.getIns().showMain();
                    }
                };
                WonderfulActMdr4.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                WonderfulActMdr4.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._listData.removeAll();
                    TimeMgr.removeUpdateItem(this);
                };
                WonderfulActMdr4.prototype.updateView = function () {
                    var actData = this._proxy.getActDataByType(this._type);
                    if (!actData) {
                        return;
                    }
                    var rst = [];
                    var doneRst = [];
                    var reward_list = actData.reward_list || [];
                    for (var _i = 0, reward_list_1 = reward_list; _i < reward_list_1.length; _i++) {
                        var item = reward_list_1[_i];
                        var statusItem = this._proxy.model.list_addcharge[item.index];
                        var itemData = {
                            type: this._type,
                            info: item,
                            status: statusItem && statusItem.status || 0,
                            val: this._proxy.model.num_addcharge
                        };
                        if (statusItem && statusItem.status == 2) {
                            doneRst.push(itemData);
                        }
                        else {
                            rst.push(itemData);
                        }
                    }
                    this._listData.replaceAll(rst.concat(doneRst));
                    var lastItem = reward_list[reward_list.length - 1];
                    if (lastItem && lastItem.rewards) {
                        this._view.icon_bigreward.data = lastItem.rewards[0];
                    }
                };
                WonderfulActMdr4.prototype.getEndTime = function () {
                    return this._proxy.getEndTimeSec(this._type);
                };
                WonderfulActMdr4.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return WonderfulActMdr4;
            }(game.MdrBase));
            activity.WonderfulActMdr4 = WonderfulActMdr4;
            __reflect(WonderfulActMdr4.prototype, "game.mod.activity.WonderfulActMdr4", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxMdr5 = /** @class */ (function (_super) {
                __extends(ZcxMdr5, _super);
                function ZcxMdr5() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._gameOrderType = 7 /* Chaojilicai */;
                    return _this;
                }
                ZcxMdr5.prototype.onUpdateView = function () {
                    _super.prototype.onUpdateView.call(this);
                    var isAllDraw = this._proxy.isRewardAllDraw(this._gameOrderType);
                    if (isAllDraw) {
                        this._view.btn.label = game.GameOrderTypeBtnStr[this._gameOrderType];
                    }
                };
                return ZcxMdr5;
            }(activity.GameOrderMdr));
            activity.ZcxMdr5 = ZcxMdr5;
            __reflect(ZcxMdr5.prototype, "game.mod.activity.ZcxMdr5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuAvatarItem = /** @class */ (function (_super) {
                __extends(FuchenlinghuAvatarItem, _super);
                function FuchenlinghuAvatarItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FuchenlinghuAvatarItem.prototype.dataChanged = function () {
                    _super.prototype.dataChanged.call(this);
                    this.starCom.visible = false;
                    this.img_chuzhan.visible = false;
                    this.setGray();
                };
                return FuchenlinghuAvatarItem;
            }(mod.AvatarItemLongPress));
            activity.FuchenlinghuAvatarItem = FuchenlinghuAvatarItem;
            __reflect(FuchenlinghuAvatarItem.prototype, "game.mod.activity.FuchenlinghuAvatarItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalView = /** @class */ (function (_super) {
                __extends(CarnivalView, _super);
                function CarnivalView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.CarnivalSkin";
                    return _this;
                }
                return CarnivalView;
            }(eui.Component));
            activity.CarnivalView = CarnivalView;
            __reflect(CarnivalView.prototype, "game.mod.activity.CarnivalView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var CarnivalZhaohuanRender = /** @class */ (function (_super) {
                __extends(CarnivalZhaohuanRender, _super);
                function CarnivalZhaohuanRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CarnivalZhaohuanRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._carnivalProxy = facade.retMod("27" /* Activity */).retProxy(252 /* Carnival */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_draw, this.onClickDraw, this);
                };
                CarnivalZhaohuanRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    //条件1：召唤次数
                    var limitScore = data.cond_1 && data.cond_1[0] || 0;
                    var score = this._carnivalProxy.getZhaohuanScore(actInfo.act_id);
                    var descStr = game.StringUtil.substitute(game.getLanById("carnival_tips4" /* carnival_tips4 */), [limitScore])
                        + game.TextUtil.addColor("(" + score + "/" + limitScore + ")", score >= limitScore ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    this._rewardList.source = data.rewards.slice(0, 3);
                    var hasDraw = this._carnivalProxy.hasCarnivalZhaohuanDraw(actInfo.act_id, data);
                    this.btn_draw.visible = !hasDraw;
                    this.img_draw.visible = hasDraw;
                    if (this.btn_draw.visible) {
                        var canDraw = this._carnivalProxy.canCarnivalZhaohuanDraw(actInfo.act_id, data);
                        this._canDraw = canDraw;
                        this.btn_draw.redPoint.visible = canDraw;
                        if (canDraw) {
                            this.btn_draw.labelDisplay.text = game.getLanById("tishi_29" /* tishi_29 */);
                            this.btn_draw.setYellow();
                        }
                        else {
                            this.btn_draw.labelDisplay.text = game.getLanById("chengshen_goto1" /* chengshen_goto1 */);
                            this.btn_draw.setBlue();
                        }
                    }
                };
                CarnivalZhaohuanRender.prototype.onClickDraw = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    if (this._canDraw) {
                        this._carnivalProxy.c2s_activity_kuanghuan_zongmen_zhaohuan_get_reward(actInfo.act_id);
                        return;
                    }
                    //前往召唤
                    mod.ViewMgr.getIns().showViewByID(29 /* Summon */);
                };
                return CarnivalZhaohuanRender;
            }(mod.BaseListenerRenderer));
            activity.CarnivalZhaohuanRender = CarnivalZhaohuanRender;
            __reflect(CarnivalZhaohuanRender.prototype, "game.mod.activity.CarnivalZhaohuanRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CaiyunbangRankItem = /** @class */ (function (_super) {
                __extends(CaiyunbangRankItem, _super);
                function CaiyunbangRankItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CaiyunbangRankItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.lab_num.visible = false;
                    this.list_reward.visible = true;
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                    this._proxy = game.getProxy("27" /* Activity */, 250 /* Caiyunbang */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.lab_name, this.onClick, this);
                };
                CaiyunbangRankItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                CaiyunbangRankItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rankRange = data.rankRange;
                    var rankNo = rankRange[0];
                    if (rankNo <= 3) {
                        this.currentState = rankNo == 1 ? "first" : "default";
                        this.img_rank.visible = true;
                        this.img_rank.source = 'rank' + rankNo;
                        this.lab_rank.text = "";
                        var mate = data.teammate;
                        this.lab_name.text = mate ? mate.name : game.getLanById("tishi_2" /* tishi_2 */);
                        this.lab_power.text = mate && mate.value && mate.value.toString() || '0';
                    }
                    else {
                        this.currentState = "default";
                        this.img_rank.visible = false;
                        if (rankRange.length == 1) {
                            this.lab_rank.text = rankNo + '+';
                            this.lab_name.text = '';
                        }
                        else {
                            this.lab_rank.text = rankRange[0] + '-' + rankRange[1];
                            this.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */)));
                        }
                        this.lab_power.text = '';
                    }
                    this._listData.replaceAll(data.actReward.rewards);
                };
                CaiyunbangRankItem.prototype.onClick = function () {
                    if (this.lab_name.visible && this.lab_name.text == game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */)) {
                        mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "102" /* CaiyunbangRankSection */, this.data.rankRange);
                    }
                };
                return CaiyunbangRankItem;
            }(mod.BaseListenerRenderer));
            activity.CaiyunbangRankItem = CaiyunbangRankItem;
            __reflect(CaiyunbangRankItem.prototype, "game.mod.activity.CaiyunbangRankItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CaiyunbangView1 = /** @class */ (function (_super) {
                __extends(CaiyunbangView1, _super);
                function CaiyunbangView1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.CaiyunbangSkin1";
                    return _this;
                }
                return CaiyunbangView1;
            }(eui.Component));
            activity.CaiyunbangView1 = CaiyunbangView1;
            __reflect(CaiyunbangView1.prototype, "game.mod.activity.CaiyunbangView1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var _a;
            var oper_act_item = msg.oper_act_item;
            activity.ActTypeToMdr = (_a = {},
                _a[8 /* FlyRank */] = { mdr: activity.FlyRankMdr, bg: "pass_rank_bg" },
                _a[9 /* FlyGift */] = { mdr: activity.FlyGiftMdr },
                _a[10 /* FlyRebate */] = { mdr: activity.FlyRebateMdr },
                _a[11 /* FlyWar */] = { mdr: activity.FlyWarMainMdr },
                _a[12 /* CaiyunbangTurntable */] = { mdr: activity.CaiyunbangMdr1, coinIndex0: 1450100149 /* Caiyunjinding */, bg: "caiyunzhuanpanbeijingtu" },
                _a[13 /* CaiyunbangRank */] = { mdr: activity.CaiyunbangMdr2, bg: "pass_rank_bg" },
                _a[14 /* CaiyunbangCharge */] = { mdr: activity.CaiyunbangMdr3 },
                _a[15 /* CaiyunbangExchange */] = { mdr: activity.CaiyunbangMdr4, coinIndex0: 1450000035 /* Caiyunyinji */ },
                _a[16 /* CaiyunbangLogin */] = { mdr: activity.CaiyunbangMdr5 },
                _a[18 /* CarnivalMibao */] = { mdr: activity.CarnivalMibaoMdr, coinIndex0: 1450000036 /* Xingshi */, bg: "carnivalmibao_bg" },
                _a[17 /* CarnivalGift */] = { mdr: activity.CarnivalGiftMdr, bg: "carnivalgift_bg2" },
                _a[19 /* Carnival */] = { mdr: activity.CarnivalMdr },
                _a[20 /* CarnivalZhaohuan */] = { mdr: activity.CarnivalZhaohuanMdr },
                _a[22 /* CarnivalRank */] = { mdr: activity.CarnivalRankMdr, icon: "ui_tab_rank_", bg: "pass_rank_bg" },
                _a[21 /* CarnivalCrossRank */] = { mdr: activity.CarnivalRankMdr, icon: "kuafu_rank_tab", bg: "pass_rank_bg" },
                _a);
            var ActMainMdr = /** @class */ (function (_super) {
                __extends(ActMainMdr, _super);
                function ActMainMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ActMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 50 /* Activity */);
                };
                ActMainMdr.prototype.onShow = function () {
                    if (Array.isArray(this._showArgs)) {
                        this._curActInfo = this._showArgs.shift();
                        this._isSelAct = true; //独立图标以及界面跳转进来的选中对应活动
                    }
                    else if (this._showArgs instanceof oper_act_item) {
                        this._curActInfo = this._showArgs;
                        this._isSelAct = true; //系统跳转进来的选中对应活动
                    }
                    else {
                        this._curActInfo = this._showArgs.actInfo;
                        this._isSelAct = this._showArgs.isSingleIcon; //独立图标以及界面跳转进来的选中对应活动
                    }
                    this._selIndex = 0; //默认选中第一个，独立图标进来的，会选中对应的活动
                    _super.prototype.onShow.call(this);
                };
                ActMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_activity_update" /* ON_ACTIVITY_UPDATE */, this.onActivityUpdate, this);
                    this.onNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, this.onActivityClose, this);
                    this.onNt("on_activity_sel_tab" /* ON_ACTIVITY_SEL_TAB */, this.onActivitySelTab, this);
                };
                ActMainMdr.prototype.onActivityClose = function (n) {
                    var actId = n.body;
                    var curOpenAct = this._proxy.curOpenAct;
                    if (curOpenAct && curOpenAct.act_id == actId) {
                        mod.ViewMgr.getIns().showMain(); //当前活动关闭时，返回主界面
                        return;
                    }
                    //todo，当前入口编号中的其他活动关闭
                };
                ActMainMdr.prototype.onActivityUpdate = function (n) {
                    var actIdList = n.body;
                    for (var _i = 0, actIdList_1 = actIdList; _i < actIdList_1.length; _i++) {
                        var actId = actIdList_1[_i];
                        var actInfo = this._proxy.getActData(actId);
                        if (!actInfo) {
                            continue;
                        }
                        //过滤不是当前入口编号的活动
                        if (actInfo.entrance != this._curActInfo.entrance) {
                            continue;
                        }
                        var actList = this._proxy.getActListByEntrance(actInfo.entrance);
                        if (actList.length != this._btnList.source.length) {
                            this.updateBtnList();
                            break;
                        }
                    }
                };
                ActMainMdr.prototype.onActivitySelTab = function (n) {
                    var actType = n.body;
                    var index = this.getMdrPosByActType(actType);
                    if (index < 0) {
                        return;
                    }
                    this._tab.selectIndex = index;
                    this._tab.show();
                };
                /**获取对应的mdr index*/
                ActMainMdr.prototype.getMdrPosByActType = function (actType) {
                    var list = this._btnList.source;
                    var len = list ? list.length : 0;
                    for (var i = 0; i < len; i++) {
                        var actInfo = list[i].param;
                        if (actInfo.type == actType) {
                            return i;
                        }
                    }
                    return -1;
                };
                /**更新list数据*/
                ActMainMdr.prototype.updateBtnList = function () {
                    var list = [];
                    var mdrs = [];
                    var entrance = this._proxy.getEntrance(this._curActInfo); //部分活动没配置入口，比如飞升特惠，这时候要支持跳转后返回选中
                    var actList = this._proxy.getActListByEntrance(entrance);
                    for (var i = 0; i < actList.length; ++i) {
                        var actInfo = actList[i];
                        var mdrInfo = activity.ActTypeToMdr[actInfo.type];
                        if (!mdrInfo) {
                            continue;
                        }
                        if (this._isSelAct && actInfo.act_id == this._curActInfo.act_id) {
                            this._selIndex = i; //独立图标才选中开启的活动
                        }
                        mdrs.push(mdrInfo.mdr);
                        var btnType = (i + parseInt("01" /* TabBtnType01 */)).toString();
                        var icon = mdrInfo.icon || (game.ActivityTabName + actInfo.type + "_"); //取不到icon就按活动分页规则
                        var entrance_1 = this._proxy.getEntrance(actInfo);
                        var coinIndex0 = mdrInfo.coinIndex0; //其他货币或道具展示
                        var bg = mdrInfo.bg || ""; //背景
                        var data = {
                            btnType: btnType,
                            icon: icon,
                            mdr: mdrInfo.mdr,
                            title: actInfo.name,
                            param: actInfo,
                            hintTypes: ["27" /* Activity */, "80" /* ActMain */, entrance_1, btnType],
                            coinIndex0: coinIndex0,
                            bg: bg
                        };
                        list.push(data);
                    }
                    if (mdrs.length <= 0) {
                        game.PromptBox.getIns().show("当前无活动内容");
                        mod.ViewMgr.getIns().showMain();
                        return;
                    }
                    this._btnList.source = list;
                    this._tab.mdrClsList = mdrs;
                };
                /**刷新显示界面*/
                ActMainMdr.prototype.updateViewShow = function () {
                    this._tab.selectIndex = this._selIndex;
                    this._tab.show();
                };
                /**分页点击时检测*/
                ActMainMdr.prototype.onTabCheck = function (index) {
                    var data = this._btnList.source[index];
                    this._proxy.curOpenAct = data.param; //统一设置中控活动数据
                    //this._tab.params = data.param;//中控活动数据
                    return true;
                };
                /**保存分页数据，子类可重写*/
                ActMainMdr.prototype.setViewData = function () {
                    var data = this._btnList.source[this._tab.selectIndex];
                    // if(!this._firstEnter){
                    //     /**非首次切换分页时，保存分页数据*/
                    //     let actInfo = data.param as oper_act_item;
                    //     ViewMgr.getIns().lastData = [actInfo];
                    // }
                    //首次进入的也保存
                    var actInfo = data.param;
                    mod.ViewMgr.getIns().lastData = [actInfo];
                    this._firstEnter = false;
                };
                return ActMainMdr;
            }(mod.WndBaseMdr));
            activity.ActMainMdr = ActMainMdr;
            __reflect(ActMainMdr.prototype, "game.mod.activity.ActMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var CarnivalMibaoRewardMdr = /** @class */ (function (_super) {
                __extends(CarnivalMibaoRewardMdr, _super);
                function CarnivalMibaoRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.CarnivalMibaoRewardView);
                    _this.isEasyHide = true;
                    return _this;
                }
                CarnivalMibaoRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                };
                CarnivalMibaoRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_buy, TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_carnival_mibao_update" /* ON_CARNIVAL_MIBAO_UPDATE */, this.onInfoUpdate, this);
                };
                CarnivalMibaoRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                };
                CarnivalMibaoRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                CarnivalMibaoRewardMdr.prototype.onInfoUpdate = function () {
                    var data = this._info.data;
                    var actId = this._info.actId;
                    var index = data.reward.index;
                    var hasDraw = this._carnivalProxy.hasMibaoDraw(actId, index);
                    this.updateState(hasDraw);
                };
                CarnivalMibaoRewardMdr.prototype.onClick = function () {
                    if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    var data = this._info.data;
                    var reward = data.reward;
                    var index = reward.index;
                    var actId = this._info.actId;
                    this._carnivalProxy.c2s_activity_kuanghuan_mibao_get_reward(actId, index);
                    this.hide();
                };
                CarnivalMibaoRewardMdr.prototype.initShow = function () {
                    this._info = this._showArgs;
                    var data = this._info.data;
                    var reward = data.reward;
                    var index = reward.index;
                    var titleStr = game.getLanById("carnival_mibao_tips" + index);
                    this._view.secondPop.updateTitleStr(titleStr);
                    this._listData.source = reward.rewards;
                    var tipsStr = game.getLanById("carnival_tips2" /* carnival_tips2 */);
                    this._view.lab_tips.text = tipsStr;
                    var limit = this._carnivalProxy.getMibaoLimit(reward);
                    this._cost = [1450000036 /* Xingshi */, limit];
                    this._view.btn_buy.setCost(this._cost);
                    var hasDraw = data.hasDraw;
                    this.updateState(hasDraw);
                };
                CarnivalMibaoRewardMdr.prototype.updateState = function (hasDraw) {
                    var data = this._info.data;
                    var canDraw = data.canDraw;
                    var hasLastDraw = data.hasLastDarw;
                    this._view.img_state.visible = hasDraw;
                    this._view.lab_tips.visible = !hasLastDraw;
                    this._view.btn_buy.visible = !hasDraw && hasLastDraw;
                    this._view.btn_buy.redPoint.visible = canDraw;
                };
                return CarnivalMibaoRewardMdr;
            }(game.MdrBase));
            activity.CarnivalMibaoRewardMdr = CarnivalMibaoRewardMdr;
            __reflect(CarnivalMibaoRewardMdr.prototype, "game.mod.activity.CarnivalMibaoRewardMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CaiyunbangModel = /** @class */ (function () {
                function CaiyunbangModel() {
                    this.leichong_num = 0;
                    this.leichong_info = {};
                    this.duihuan_info = {};
                    this.login_info = {};
                    this.rank_list = [];
                    this.my_score = 0;
                    this.my_rank_no = 0;
                    //祈福登陆红点 不要了
                    this.qifuLoginHint = false;
                    //累充登陆红点 不要了
                    this.chargeLoginHint = false;
                }
                return CaiyunbangModel;
            }());
            activity.CaiyunbangModel = CaiyunbangModel;
            __reflect(CaiyunbangModel.prototype, "game.mod.activity.CaiyunbangModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var CarnivalRankSectionMdr = /** @class */ (function (_super) {
                __extends(CarnivalRankSectionMdr, _super);
                function CarnivalRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                CarnivalRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._carnivalProxy = this.retProxy(252 /* Carnival */);
                };
                CarnivalRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_carnival_rank_update" /* ON_CARNIVAL_RANK_UPDATE */, this.onInfoUpdate, this);
                    this.onNt("on_carnival_rank_update_last_rank" /* ON_CARNIVAL_RANK_UPDATE_LAST_RANK */, this.onInfoUpdateLastRank, this);
                };
                CarnivalRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this._view.img_type2.source = "zhaohuancishu"; //todo
                    this._lastRank = !this._showArgs || !this._showArgs.start;
                    this._start = this._showArgs && this._showArgs.start;
                    this._end = this._showArgs && this._showArgs.end;
                    this._actInfo = this._proxy.curOpenAct;
                    this._isCross = this._actInfo.type == 21 /* CarnivalCrossRank */;
                    if (!this._lastRank) {
                        //当前排行榜
                        this.updateRank();
                    }
                    else {
                        //上一期排行榜
                        this._view.lab_time.visible = false;
                        var lastRankList = this._carnivalProxy.getLastRankList(this._actInfo.act_id);
                        if (!lastRankList || !lastRankList.length) {
                            this._proxy.c2s_oper_act_get_info(this._actInfo.act_id, 2 /* LastRank */); //请求上期排名
                        }
                        this.updateLastRank();
                    }
                };
                CarnivalRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                CarnivalRankSectionMdr.prototype.onInfoUpdate = function () {
                    if (this._lastRank) {
                        return;
                    }
                    this.updateRank();
                };
                CarnivalRankSectionMdr.prototype.onInfoUpdateLastRank = function () {
                    if (!this._lastRank) {
                        return;
                    }
                    this.updateLastRank();
                };
                //当前排名
                CarnivalRankSectionMdr.prototype.updateRank = function () {
                    var myData = this._carnivalProxy.getMyData(this._actInfo.act_id);
                    var rankList = this._carnivalProxy.getRankList(this._actInfo.act_id);
                    var maxRank = this._end - this._start + 1;
                    var tmpRankList = [];
                    for (var _i = 0, rankList_1 = rankList; _i < rankList_1.length; _i++) {
                        var rankInfo = rankList_1[_i];
                        if (rankInfo.rank_num >= this._start && rankInfo.rank_num <= this._end) {
                            tmpRankList.push(rankInfo);
                        }
                    }
                    this.updateRankList(myData, tmpRankList, maxRank, this._start);
                };
                //上期排名
                CarnivalRankSectionMdr.prototype.updateLastRank = function () {
                    var lastMyData = this._carnivalProxy.getLastMyData(this._actInfo.act_id);
                    var lastRankList = this._carnivalProxy.getLastRankList(this._actInfo.act_id);
                    var maxRank = this._proxy.getMaxRank(this._actInfo);
                    this.updateRankList(lastMyData, lastRankList, maxRank);
                };
                CarnivalRankSectionMdr.prototype.updateRankList = function (myData, rankList, maxRank, start) {
                    var rankStr = "";
                    if (myData && myData.rank_num) {
                        rankStr += myData.rank_num <= maxRank ? myData.rank_num : maxRank + "+"; //50+
                    }
                    else {
                        rankStr += game.getLanById("tishi_13" /* tishi_13 */); //未上榜
                    }
                    var rankId = this._isCross ? "tongtiange_tips16" /* tongtiange_tips16 */ : "tongtiange_tips15" /* tongtiange_tips15 */; //我的排名，仙宗排名
                    this._view.lab_rank.text = game.StringUtil.substitute(game.getLanById(rankId), [rankStr]);
                    var score = myData && myData.value && myData.value.toNumber() || 0;
                    var myRankId = this._isCross ? "tongtiange_tips18" /* tongtiange_tips18 */ : "tongtiange_tips17" /* tongtiange_tips17 */; //我的次数，仙宗次数
                    this._view.lab_score.text = game.StringUtil.substitute(game.getLanById(myRankId), [score]);
                    var list = [];
                    for (var i = 0; i < maxRank; ++i) {
                        var rankInfo = rankList.length > i ? rankList[i] : null;
                        var rankNo = start ? i + start : i + 1;
                        var nameStr = game.getLanById("tishi_2" /* tishi_2 */); //虚位以待
                        if (this._isCross && rankInfo && rankInfo.role_id) {
                            nameStr = rankInfo.name;
                        }
                        else if (!this._isCross && rankInfo && rankInfo.guild_name) {
                            nameStr = game.getLanById("union_title_2" /* union_title_2 */) + ":" + rankInfo.guild_name + "\n"
                                + game.UnionJobStr[1 /* Leader */] + ":" + rankInfo.zongzhu_name;
                        }
                        var rankData = {
                            rank: rankNo,
                            name: nameStr,
                            value: rankInfo && rankInfo.value ? rankInfo.value.toString() : ""
                        };
                        list.push(rankData);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(list);
                    }
                    else {
                        this._itemList.source = list;
                    }
                };
                return CarnivalRankSectionMdr;
            }(game.EffectMdrBase));
            activity.CarnivalRankSectionMdr = CarnivalRankSectionMdr;
            __reflect(CarnivalRankSectionMdr.prototype, "game.mod.activity.CarnivalRankSectionMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_activity_caiyun_qifu_info = msg.s2c_activity_caiyun_qifu_info;
            var s2c_activity_caiyun_leichong = msg.s2c_activity_caiyun_leichong;
            var s2c_activity_caiyun_duihuan = msg.s2c_activity_caiyun_duihuan;
            var s2c_activity_caiyun_login = msg.s2c_activity_caiyun_login;
            var c2s_activity_caiyun_qifu = msg.c2s_activity_caiyun_qifu;
            var c2s_activity_caiyun_leichong_reward = msg.c2s_activity_caiyun_leichong_reward;
            var c2s_activity_caiyun_duihuan = msg.c2s_activity_caiyun_duihuan;
            var c2s_activity_caiyun_login = msg.c2s_activity_caiyun_login;
            var s2c_activity_caiyun_rank_info = msg.s2c_activity_caiyun_rank_info;
            var Handler = base.Handler;
            /**
             * @description 财运榜系统
             */
            var CaiyunbangProxy = /** @class */ (function (_super) {
                __extends(CaiyunbangProxy, _super);
                function CaiyunbangProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._actTypeList = [12 /* CaiyunbangTurntable */, 13 /* CaiyunbangRank */,
                        14 /* CaiyunbangCharge */, 15 /* CaiyunbangExchange */, 16 /* CaiyunbangLogin */];
                    return _this;
                }
                CaiyunbangProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.CaiyunbangModel();
                    this.onProto(s2c_activity_caiyun_qifu_info, this.s2c_activity_caiyun_qifu_info, this);
                    this.onProto(s2c_activity_caiyun_leichong, this.s2c_activity_caiyun_leichong, this);
                    this.onProto(s2c_activity_caiyun_duihuan, this.s2c_activity_caiyun_duihuan, this);
                    this.onProto(s2c_activity_caiyun_login, this.s2c_activity_caiyun_login, this);
                    this.onProto(s2c_activity_caiyun_rank_info, this.s2c_activity_caiyun_rank_info, this);
                };
                // 财运祈福抽奖 抽奖类型 1：单抽 2：十连
                CaiyunbangProxy.prototype.c2s_activity_caiyun_qifu = function (type) {
                    var msg = new c2s_activity_caiyun_qifu();
                    msg.type = type;
                    msg.act_id = this.getActId(12 /* CaiyunbangTurntable */);
                    this.sendProto(msg);
                };
                CaiyunbangProxy.prototype.s2c_activity_caiyun_qifu_info = function (n) {
                    var msg = n.body;
                    this._model.item_list = msg.item_list || [];
                    this._model.times = msg.times || 0;
                    this.updateHint(12 /* CaiyunbangTurntable */);
                    this.sendNt("on_caiyunbang_qifu_info_update" /* ON_CAIYUNBANG_QIFU_INFO_UPDATE */);
                };
                // 领取财运累充奖励
                CaiyunbangProxy.prototype.c2s_activity_caiyun_leichong_reward = function (id) {
                    var msg = new c2s_activity_caiyun_leichong_reward();
                    msg.id = id;
                    msg.act_id = this.getActId(14 /* CaiyunbangCharge */);
                    this.sendProto(msg);
                };
                CaiyunbangProxy.prototype.s2c_activity_caiyun_leichong = function (n) {
                    var msg = n.body;
                    if (msg.info != null) {
                        for (var _i = 0, _a = msg.info; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.leichong_info[item.id] = item;
                        }
                    }
                    if (msg.num != null) {
                        this._model.leichong_num = msg.num.toNumber();
                    }
                    this.updateHint(14 /* CaiyunbangCharge */);
                    this.sendNt("on_caiyunbang_leichong_info_update" /* ON_CAIYUNBANG_LEICHONG_INFO_UPDATE */);
                };
                // 财运兑换
                CaiyunbangProxy.prototype.c2s_activity_caiyun_duihuan = function (id, cnt) {
                    if (cnt === void 0) { cnt = 1; }
                    var msg = new c2s_activity_caiyun_duihuan();
                    msg.id = id;
                    msg.cnt = cnt;
                    msg.act_id = this.getActId(15 /* CaiyunbangExchange */);
                    this.sendProto(msg);
                };
                CaiyunbangProxy.prototype.s2c_activity_caiyun_duihuan = function (n) {
                    var msg = n.body;
                    if (msg.info != null) {
                        for (var _i = 0, _a = msg.info; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.duihuan_info[item.id] = item;
                        }
                    }
                    this.updateHint(15 /* CaiyunbangExchange */);
                    this.sendNt("on_caiyunbang_duihuan_info_update" /* ON_CAIYUNBANG_DUIHUAN_INFO_UPDATE */);
                };
                // 领取财运登录礼包
                CaiyunbangProxy.prototype.c2s_activity_caiyun_login = function (id) {
                    var msg = new c2s_activity_caiyun_login();
                    msg.id = id;
                    msg.act_id = this.getActId(16 /* CaiyunbangLogin */);
                    this.sendProto(msg);
                };
                CaiyunbangProxy.prototype.s2c_activity_caiyun_login = function (n) {
                    var msg = n.body;
                    if (msg.info != null) {
                        for (var _i = 0, _a = msg.info; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.login_info[item.id] = item;
                        }
                    }
                    this.updateHint(16 /* CaiyunbangLogin */);
                    this.sendNt("on_caiyunbang_login_info_update" /* ON_CAIYUNBANG_LOGIN_INFO_UPDATE */);
                };
                // 财运榜
                CaiyunbangProxy.prototype.s2c_activity_caiyun_rank_info = function (n) {
                    var msg = n.body;
                    var actData = this.getActData(13 /* CaiyunbangRank */);
                    if (!actData || !msg.act_id || actData.act_id != msg.act_id) {
                        return;
                    }
                    this._model.rank_list = msg.rank_list || [];
                    this._model.my_score = msg.my_score || 0;
                    this._model.my_rank_no = msg.my_rank_no || 0;
                    this.sendNt("on_caiyunbang_rank_info_update" /* ON_CAIYUNBANG_RANK_INFO_UPDATE */);
                };
                /**====================================== 协议end ======================================*/
                CaiyunbangProxy.prototype.getCurOpenAct = function () {
                    var actProxy = game.getProxy("27" /* Activity */, 50 /* Activity */);
                    return actProxy.curOpenAct;
                };
                CaiyunbangProxy.prototype.getEndTime = function () {
                    var endTime = this.getCurOpenAct().c_end_time;
                    return endTime;
                };
                /**活动最后一天提示*/
                CaiyunbangProxy.prototype.checkActTips = function (type) {
                    var endTime = this.getEndTime();
                    mod.ViewMgr.getIns().showActTips(endTime, type);
                };
                //活动数据，统一接口获取
                CaiyunbangProxy.prototype.getActData = function (type) {
                    var actProxy = game.getProxy("27" /* Activity */, 50 /* Activity */);
                    return actProxy.getOperActByType(type);
                };
                CaiyunbangProxy.prototype.getActId = function (type) {
                    var actData = this.getCurOpenAct();
                    if (!actData || actData.type != type) {
                        return 0;
                    }
                    return actData.act_id;
                };
                //祈福消耗
                CaiyunbangProxy.prototype.getQifuCost = function (type) {
                    if (type === void 0) { type = 1 /* Once */; }
                    var paramCfg = game.GameConfig.getParamConfigById('caiyunbang_xiaohao');
                    var cost = paramCfg.value.concat();
                    if (type == 2 /* Ten */) {
                        cost[1] = cost[1] * 10;
                    }
                    if (mod.BagUtil.checkPropCnt(cost[0], cost[1])) {
                        return cost;
                    }
                    paramCfg = game.GameConfig.getParamConfigById('caiyunbang_xiaohao2');
                    cost = paramCfg.value.concat();
                    if (type == 2 /* Ten */) {
                        cost[1] = cost[1] * 10;
                    }
                    return cost;
                };
                //仙玉消耗
                CaiyunbangProxy.prototype.isXianyu = function (cost) {
                    var paramCfg = game.GameConfig.getParamConfigById('caiyunbang_xiaohao2');
                    var idx = paramCfg.value[0];
                    return cost && cost[0] == idx;
                };
                //能否祈福
                CaiyunbangProxy.prototype.canQifu = function (type, isTips) {
                    if (type === void 0) { type = 1 /* Once */; }
                    if (isTips === void 0) { isTips = false; }
                    var cost = this.getQifuCost(type);
                    return mod.BagUtil.checkPropCnt(cost[0], cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //祈福红点，仙玉不需要红点
                CaiyunbangProxy.prototype.getQifuHint = function (type) {
                    if (type === void 0) { type = 1 /* Once */; }
                    var cost = this.getQifuCost(type);
                    var isXianyu = this.isXianyu(cost);
                    if (isXianyu) {
                        return false;
                    }
                    return mod.BagUtil.checkPropCnt(cost[0], cost[1]);
                };
                //距离祈福次数
                CaiyunbangProxy.prototype.getQifuTimes = function () {
                    if (this._model.times == undefined) {
                        var paramCfg = game.GameConfig.getParamConfigById('caiyunbang_baodi');
                        this._model.times = paramCfg.value;
                    }
                    return this._model.times;
                };
                //祈福道具奖励
                CaiyunbangProxy.prototype.getQifuRewards = function () {
                    if (this._qifuReward) {
                        return this._qifuReward;
                    }
                    var actData = this.getActData(12 /* CaiyunbangTurntable */);
                    if (!actData || !actData.reward_list) {
                        return [];
                    }
                    var list = [];
                    for (var _i = 0, _a = actData.reward_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item.cond_2 && item.cond_2[0] == 2) {
                            //2为大奖
                            list.unshift(item.rewards[0]);
                        }
                        else {
                            list.push(item.rewards[0]);
                        }
                    }
                    this._qifuReward = list;
                    return list;
                };
                //祈福得到的道具
                CaiyunbangProxy.prototype.getQifuProp = function () {
                    return this._model.item_list;
                };
                //祈福抽取目标位置
                CaiyunbangProxy.prototype.getQifuTargetIdx = function () {
                    var target = this.getQifuProp()[0];
                    if (!target) {
                        return 0;
                    }
                    var rewards = this.getQifuRewards();
                    for (var i = 0; i < rewards.length; i++) {
                        var item = rewards[i];
                        if (item && item.idx.eq(target.idx)) {
                            return i;
                        }
                    }
                    return 0;
                };
                //排行榜数据
                CaiyunbangProxy.prototype.getRankTeammate = function (rankNo) {
                    var rankList = this._model.rank_list;
                    if (!rankList || !rankList.length) {
                        return null;
                    }
                    for (var _i = 0, rankList_2 = rankList; _i < rankList_2.length; _i++) {
                        var item = rankList_2[_i];
                        if (item && item.rank_num == rankNo) {
                            return item;
                        }
                    }
                    return null;
                };
                CaiyunbangProxy.prototype.getRankList = function () {
                    return this._model.rank_list;
                };
                CaiyunbangProxy.prototype.getMyRankNo = function () {
                    return this._model.my_rank_no;
                };
                CaiyunbangProxy.prototype.getMyScore = function () {
                    return this._model.my_score;
                };
                //活动内累充金额
                CaiyunbangProxy.prototype.getChargeRmb = function () {
                    return this._model.leichong_num;
                };
                //累充状态
                CaiyunbangProxy.prototype.getChargeStateInfo = function (id) {
                    return this._model.leichong_info[id];
                };
                //登录奖励
                CaiyunbangProxy.prototype.getLoginStateInfo = function (id) {
                    return this._model.login_info[id];
                };
                //兑换消耗
                CaiyunbangProxy.prototype.getExchangeCost = function () {
                    var actData = this.getActData(15 /* CaiyunbangExchange */);
                    return actData && actData.param && actData.param[1] || 1450000035 /* Caiyunyinji */;
                };
                //兑换已购买次数
                CaiyunbangProxy.prototype.getBoughtCnt = function (id) {
                    var info = this._model.duihuan_info[id];
                    return info && info.times || 0;
                };
                CaiyunbangProxy.prototype.onActivityInit = function (n) {
                    var actData = this.getActData(12 /* CaiyunbangTurntable */);
                    if (!actData) {
                        return; //活动未开启
                    }
                    for (var _i = 0, _a = this._actTypeList; _i < _a.length; _i++) {
                        var type = _a[_i];
                        this.updateHint(type);
                    }
                };
                CaiyunbangProxy.prototype.onActivityUpdateByType = function (n) {
                    var types = n.body;
                    for (var _i = 0, _a = this._actTypeList; _i < _a.length; _i++) {
                        var type = _a[_i];
                        if (types.indexOf(type) > -1) {
                            this.updateHint(type);
                        }
                    }
                };
                CaiyunbangProxy.prototype.updateHint = function (type) {
                    var _a;
                    var handler = (_a = {},
                        _a[12 /* CaiyunbangTurntable */] = this.getHintQifu,
                        _a[14 /* CaiyunbangCharge */] = this.getHintCharge,
                        _a[15 /* CaiyunbangExchange */] = this.getHintExchange,
                        _a[16 /* CaiyunbangLogin */] = this.getHintLogin,
                        _a);
                    var proxy = game.getProxy("27" /* Activity */, 50 /* Activity */);
                    proxy.setActHint(type, Handler.alloc(this, handler[type]));
                };
                //祈福红点
                CaiyunbangProxy.prototype.getHintQifu = function () {
                    if (this._model.qifuLoginHint) {
                        return true;
                    }
                    return this.getQifuHint();
                };
                //累充红点
                CaiyunbangProxy.prototype.getHintCharge = function () {
                    if (this._model.chargeLoginHint) {
                        return true;
                    }
                    for (var key in this._model.leichong_info) {
                        var item = this._model.leichong_info[key];
                        if (item && item.statue == 1 /* Finish */) {
                            return true;
                        }
                    }
                    return false;
                };
                //兑换红点
                CaiyunbangProxy.prototype.getHintExchange = function () {
                    var actData = this.getActData(15 /* CaiyunbangExchange */);
                    if (!actData || !actData.reward_list) {
                        return false;
                    }
                    var costIdx = this.getExchangeCost(); //消耗道具id
                    for (var _i = 0, _a = actData.reward_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (!item.cond_1 || !item.cond_2) {
                            continue;
                        }
                        var limitCnt = item.cond_2[0]; //限购次数
                        var boughtCnt = this.getBoughtCnt(item.index);
                        if (boughtCnt >= limitCnt) {
                            continue;
                        }
                        var costCnt = item.cond_1[0]; //消耗数量
                        if (mod.BagUtil.checkPropCnt(costIdx, costCnt)) {
                            return true;
                        }
                    }
                    return false;
                };
                //登录奖励红点
                CaiyunbangProxy.prototype.getHintLogin = function () {
                    for (var key in this._model.login_info) {
                        var item = this._model.login_info[key];
                        if (item && item.statue == 1 /* Finish */) {
                            return true;
                        }
                    }
                    return false;
                };
                CaiyunbangProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var qifuCost = this.getQifuCost();
                    if (indexs.indexOf(qifuCost[0]) > -1) {
                        this.updateHint(12 /* CaiyunbangTurntable */);
                    }
                };
                CaiyunbangProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("caiyun_yinji" /* caiyun_yinji */) > -1) {
                        this.updateHint(15 /* CaiyunbangExchange */);
                    }
                    //仙玉的消耗
                    var qifuCost = this.getQifuCost();
                    if (qifuCost[0] == 1450000002 /* Xianyu */ && keys.indexOf("diamond" /* diamond */) > -1) {
                        this.updateHint(12 /* CaiyunbangTurntable */);
                    }
                };
                //清理登陆红点
                CaiyunbangProxy.prototype.clearLoginHint = function (type) {
                    var lastHint = type == 12 /* CaiyunbangTurntable */ ? this._model.qifuLoginHint : this._model.chargeLoginHint;
                    if (type == 12 /* CaiyunbangTurntable */ && lastHint) {
                        this._model.qifuLoginHint = false;
                    }
                    else if (type == 14 /* CaiyunbangCharge */ && lastHint) {
                        this._model.chargeLoginHint = false;
                    }
                    if (lastHint) {
                        this.updateHint(type);
                    }
                };
                return CaiyunbangProxy;
            }(game.ProxyBase));
            activity.CaiyunbangProxy = CaiyunbangProxy;
            __reflect(CaiyunbangProxy.prototype, "game.mod.activity.CaiyunbangProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var stage = egret.lifecycle.stage;
            var TimeMgr = base.TimeMgr;
            /**
             * 超值礼包
             * 不监听公共事件，只在打开时候更新处理，后期有需求自行调整
             */
            var ChaozhiLibaoMdr = /** @class */ (function (_super) {
                __extends(ChaozhiLibaoMdr, _super);
                function ChaozhiLibaoMdr() {
                    var _this = _super.call(this, game.Layer.main) || this;
                    _this._view = _this.mark('_view', activity.ChaozhiLibaoView);
                    return _this;
                }
                ChaozhiLibaoMdr.prototype.initBtnData = function () {
                    this._btnData = [
                        {
                            id: 1041670197 /* MeiriTehui */,
                            m: "27" /* Activity */,
                            v: "69" /* MeiriTehui */,
                            hintMsg: ["27" /* Activity */, "70" /* ChaozhiLibao */, "69" /* MeiriTehui */]
                        },
                        {
                            id: 1041670211 /* ShenlingGift */,
                            m: "27" /* Activity */,
                            v: "92" /* ShenlingGift */
                            // isHide: !this._shenlingGiftProxy.canOpen()
                        },
                        {
                            id: 1041670208 /* TehuiLibao */,
                            m: "27" /* Activity */,
                            v: "93" /* TehuiLibao */,
                            param: 1 /* TehuiLibao */,
                            showTime: true,
                            endTime: this._tehuiProxy.getEndTime()
                        },
                        {
                            id: 1041670209 /* JinjieTehui */,
                            m: "27" /* Activity */,
                            v: "93" /* TehuiLibao */,
                            param: 2 /* JinjieTehui */,
                            showTime: true,
                            endTime: this._tehuiProxy.getEndTime()
                        },
                        {
                            id: 1041670194 /* SupremeGit */,
                            m: "27" /* Activity */,
                            v: "71" /* SupremeGitMain */,
                            hintMsg: ["27" /* Activity */, "70" /* ChaozhiLibao */, "71" /* SupremeGitMain */],
                            showBack: true
                        },
                        {
                            id: 1041670212 /* FeishengWukong */,
                            m: "27" /* Activity */,
                            v: "100" /* FeishengLibao */,
                            param: 1041670212 /* FeishengWukong */
                        },
                        {
                            id: 1041670213 /* JuebanXianjian */,
                            m: "27" /* Activity */,
                            v: "100" /* FeishengLibao */,
                            param: 1041670213 /* JuebanXianjian */
                        },
                        {
                            id: 1041670214 /* ZhizunShouyin */,
                            m: "27" /* Activity */,
                            v: "100" /* FeishengLibao */,
                            param: 1041670214 /* ZhizunShouyin */
                        },
                        {
                            id: 1041670179 /* XianlvGift */,
                            m: "27" /* Activity */,
                            v: "60" /* XianlvGift */,
                            hintMsg: ["27" /* Activity */, "70" /* ChaozhiLibao */, "60" /* XianlvGift */],
                        }
                    ];
                };
                ChaozhiLibaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._ins = new mod.BtnIconMgr(this._view.gr_btns);
                    mod.BtnIconMgr._insChaozhilibao = this._ins;
                    this._tehuiProxy = game.getProxy("27" /* Activity */, 248 /* TehuiLibao */);
                    this._shenlingGiftProxy = game.getProxy("27" /* Activity */, 246 /* ShenlingGift */);
                };
                ChaozhiLibaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(stage, egret.TouchEvent.TOUCH_TAP, this.onClickStage, this);
                };
                ChaozhiLibaoMdr.prototype.onShow = function () {
                    var _this = this;
                    _super.prototype.onShow.call(this);
                    ChaozhiLibaoMdr.isShow = true;
                    this.initBtnData();
                    this.dealBtnIconList();
                    egret.callLater(function () {
                        _this.calPoint();
                    }, this);
                };
                ChaozhiLibaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    ChaozhiLibaoMdr.isShow = false;
                    this._ins.clear();
                    this._view.gr_btns.removeChildren();
                };
                ChaozhiLibaoMdr.prototype.dealBtnIconList = function () {
                    this._ins.dealBtnIconList(this._btnData, true);
                    //开启按钮定时器
                    if (Object.keys(this._ins._btnTimeMap).length) {
                        if (!TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.addUpdateItem(this, 1000);
                            this.update(TimeMgr.time);
                        }
                    }
                    else {
                        if (TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.removeUpdateItem(this);
                        }
                    }
                };
                //处理单个按钮
                ChaozhiLibaoMdr.prototype.dealSingleBtnIcon = function (id, ins) {
                    if (ins === void 0) { ins = this._ins; }
                    ins.dealSingleBtnIcon(id);
                    //开启按钮定时器
                    var timeMap = ins._btnTimeMap;
                    var mapSize = Object.keys(timeMap).length;
                    if (TimeMgr.hasUpdateItem(this) && !mapSize) {
                        TimeMgr.removeUpdateItem(this);
                    }
                    else if (!TimeMgr.hasUpdateItem(this) && mapSize) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                //计算位置
                ChaozhiLibaoMdr.prototype.calPoint = function () {
                    var btnIcon = mod.BtnIconMgr.insLeft()._showBtnMap[1041670196 /* ChaozhiLibao */];
                    if (!btnIcon) {
                        return;
                    }
                    //计算位置
                    var point = btnIcon.localToGlobal();
                    this._view.x = point.x + 84;
                    this._view.y = point.y;
                    //计算布局
                    var btnSize = Object.keys(this._ins._showBtnMap).length;
                    var layout = new eui.TileLayout();
                    layout.requestedColumnCount = btnSize >= 3 ? 3 : btnSize;
                    layout.paddingLeft = layout.paddingRight = layout.paddingTop = 10;
                    layout.paddingBottom = 20;
                    layout.verticalGap = 12;
                    this._view.gr_btns.layout = layout;
                    this._rectangle = new egret.Rectangle(point.x + 84, point.y, this._view.width, this._view.height);
                };
                ChaozhiLibaoMdr.prototype.onClickStage = function (e) {
                    if (this._rectangle && this._rectangle.contains(e.stageX, e.stageY)) {
                        return;
                    }
                    var btnIcon = mod.BtnIconMgr.insLeft()._showBtnMap[1041670196 /* ChaozhiLibao */];
                    if (btnIcon && btnIcon == e.target) {
                        return;
                    }
                    this.hide();
                };
                ChaozhiLibaoMdr.prototype.update = function (time) {
                    var timeMap = this._ins._btnTimeMap;
                    var keys2 = Object.keys(timeMap);
                    for (var _i = 0, keys2_1 = keys2; _i < keys2_1.length; _i++) {
                        var key = keys2_1[_i];
                        var btnIcon = timeMap[key];
                        if (!btnIcon || !this._ins._showBtnMap[key]) {
                            continue;
                        }
                        if (!this._ins.checkBtnTime(btnIcon.data)) {
                            this.dealSingleBtnIcon(btnIcon.id, this._ins);
                            continue;
                        }
                        btnIcon.updateTime();
                    }
                };
                ChaozhiLibaoMdr.isShow = false;
                return ChaozhiLibaoMdr;
            }(game.MdrBase));
            activity.ChaozhiLibaoMdr = ChaozhiLibaoMdr;
            __reflect(ChaozhiLibaoMdr.prototype, "game.mod.activity.ChaozhiLibaoMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ChaozhiLibaoView = /** @class */ (function (_super) {
                __extends(ChaozhiLibaoView, _super);
                function ChaozhiLibaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ChaozhiLibaoSkin";
                    return _this;
                }
                return ChaozhiLibaoView;
            }(eui.Component));
            activity.ChaozhiLibaoView = ChaozhiLibaoView;
            __reflect(ChaozhiLibaoView.prototype, "game.mod.activity.ChaozhiLibaoView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_feisheng_giftbag_info = msg.s2c_feisheng_giftbag_info;
            /**
             * @description 飞升礼包系统（飞升悟空，绝版仙剑，至尊兽印）
             */
            var FeishengLibaoProxy = /** @class */ (function (_super) {
                __extends(FeishengLibaoProxy, _super);
                function FeishengLibaoProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._openIdxAry = [1041670212 /* FeishengWukong */, 1041670213 /* JuebanXianjian */, 1041670214 /* ZhizunShouyin */];
                    _this._btnIdAry = [1041670212 /* FeishengWukong */, 1041670213 /* JuebanXianjian */, 1041670214 /* ZhizunShouyin */];
                    return _this;
                }
                FeishengLibaoProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this.onProto(s2c_feisheng_giftbag_info, this.s2c_feisheng_giftbag_info, this);
                };
                FeishengLibaoProxy.prototype.s2c_feisheng_giftbag_info = function (n) {
                    var msg = n.body;
                    if (msg.index != null) {
                        this._indexs = msg.index;
                    }
                    this.checkOpen();
                    this.sendNt("on_update_feishenglibao_info" /* ON_UPDATE_FEISHENGLIBAO_INFO */);
                };
                FeishengLibaoProxy.prototype.checkOpen = function () {
                    for (var i = 0; i < this._openIdxAry.length; i++) {
                        var type = this._openIdxAry[i];
                        var canOpen = this.canOpen(type);
                        mod.BtnIconMgr.insChaozhilibao().updateOpen(this._btnIdAry[i], canOpen, null, true);
                    }
                };
                //能否开启
                FeishengLibaoProxy.prototype.canOpen = function (openIdx) {
                    return mod.ViewMgr.getIns().checkViewOpen(openIdx) && !this.isBought(openIdx);
                };
                //是否购买
                FeishengLibaoProxy.prototype.isBought = function (openIdx) {
                    if (!this._indexs) {
                        return false;
                    }
                    var productId = this.getProductId(openIdx);
                    return this._indexs.indexOf(productId) > -1;
                };
                //商品id
                FeishengLibaoProxy.prototype.getProductId = function (openIdx) {
                    var cfgs = mod.StoreUtil.getDirectShopCfgListByType(15 /* FeishengLibao */);
                    var cfg = cfgs ? cfgs[this._openIdxAry.indexOf(openIdx)] : null;
                    return cfg && cfg.product_id || 0;
                };
                //提升数值
                FeishengLibaoProxy.prototype.getUpNumStr = function (openIdx) {
                    var cfgs = mod.StoreUtil.getDirectShopCfgListByType(15 /* FeishengLibao */);
                    var cfg = cfgs ? cfgs[this._openIdxAry.indexOf(openIdx)] : null;
                    return (cfg && cfg.param1 || 0) + '%';
                };
                FeishengLibaoProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdxs = n.body;
                    for (var _i = 0, _a = this._openIdxAry; _i < _a.length; _i++) {
                        var type = _a[_i];
                        if (addIdxs.indexOf(type) > -1) {
                            this.checkOpen();
                            break;
                        }
                    }
                };
                //索引
                FeishengLibaoProxy.prototype.getIdx = function (openIdx) {
                    return this._openIdxAry.indexOf(openIdx);
                };
                return FeishengLibaoProxy;
            }(game.ProxyBase));
            activity.FeishengLibaoProxy = FeishengLibaoProxy;
            __reflect(FeishengLibaoProxy.prototype, "game.mod.activity.FeishengLibaoProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FeishengLibaoView = /** @class */ (function (_super) {
                __extends(FeishengLibaoView, _super);
                function FeishengLibaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FeishengLibaoSkin";
                    return _this;
                }
                return FeishengLibaoView;
            }(eui.Component));
            activity.FeishengLibaoView = FeishengLibaoView;
            __reflect(FeishengLibaoView.prototype, "game.mod.activity.FeishengLibaoView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FeishengLibaoMdr = /** @class */ (function (_super) {
                __extends(FeishengLibaoMdr, _super);
                function FeishengLibaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.FeishengLibaoView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FeishengLibaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(249 /* FeishengLibao */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                FeishengLibaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_buy, egret.TouchEvent.TOUCH_TAP, this.onClickBuy, this);
                    addEventListener(this._view.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    this.onNt("on_update_feishenglibao_info" /* ON_UPDATE_FEISHENGLIBAO_INFO */, this.hide, this);
                };
                FeishengLibaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._openIdx = this._showArgs;
                    this.updateView();
                };
                FeishengLibaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FeishengLibaoMdr.prototype.updateView = function () {
                    var productId = this._proxy.getProductId(this._openIdx);
                    if (!productId) {
                        return;
                    }
                    this._view.btn_buy.setTwoPrice(mod.PayUtil.getRmbValue(productId), mod.PayUtil.getFakeRmbValue(productId));
                    var rewards = mod.PayUtil.getRewards(productId);
                    if (rewards && rewards[0]) {
                        var cfg = game.GameConfig.getPropConfigById(rewards[0][0]);
                        if (cfg && cfg.param1) {
                            var surfaceCfg = game.getConfigById(cfg.param1[0][0]);
                            if (surfaceCfg) {
                                this._view.nameItem.updateShow(surfaceCfg.name, surfaceCfg.quality);
                            }
                            this.addAnimate(cfg.param1[0][0], this._view.gr_eft);
                        }
                        else {
                            this._view.nameItem.updateShow(cfg.name, cfg.quality);
                        }
                        this._view.power.setPowerValue(cfg && cfg.showPower || 0);
                    }
                    this._listData.replaceAll(rewards);
                    var idx = this._proxy.getIdx(this._openIdx);
                    this._view.img_title.source = "feishenglibao_title" + idx;
                    this._view.img_desc.source = "feishenglibao_desc" + idx;
                    var upNumStr = this._proxy.getUpNumStr(this._openIdx);
                    this.addBmpFont(upNumStr, game.BmpTextCfg[219 /* Feishenglibao */], this._view.gr_font);
                };
                FeishengLibaoMdr.prototype.onClickBuy = function () {
                    var productId = this._proxy.getProductId(this._openIdx);
                    mod.PayUtil.pay(productId);
                };
                return FeishengLibaoMdr;
            }(game.EffectMdrBase));
            activity.FeishengLibaoMdr = FeishengLibaoMdr;
            __reflect(FeishengLibaoMdr.prototype, "game.mod.activity.FeishengLibaoMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MeiriTehuiModel = /** @class */ (function () {
                function MeiriTehuiModel() {
                    //剩余天数:0.表示还未购买
                    this.day = 0;
                    this.list = {};
                    this.hintPath = ["27" /* Activity */, "70" /* ChaozhiLibao */, "69" /* MeiriTehui */];
                }
                return MeiriTehuiModel;
            }());
            activity.MeiriTehuiModel = MeiriTehuiModel;
            __reflect(MeiriTehuiModel.prototype, "game.mod.activity.MeiriTehuiModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_daily_tehui_all_info = msg.s2c_daily_tehui_all_info;
            var c2s_daily_tehui_get_reward = msg.c2s_daily_tehui_get_reward;
            var TimeMgr = base.TimeMgr;
            /**
             * @description 每日特惠系统
             */
            var MeiriTehuiProxy = /** @class */ (function (_super) {
                __extends(MeiriTehuiProxy, _super);
                function MeiriTehuiProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MeiriTehuiProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.MeiriTehuiModel();
                    this.onProto(s2c_daily_tehui_all_info, this.s2c_daily_tehui_all_info, this);
                };
                MeiriTehuiProxy.prototype.s2c_daily_tehui_all_info = function (n) {
                    var msg = n.body;
                    this._model.day = msg.day != null ? msg.day : 0;
                    if (msg.list != null) {
                        this._model.list = {};
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.list[item.index] = item;
                        }
                    }
                    else {
                        this._model.list = {};
                    }
                    this.updateHint();
                    this.sendNt("on_update_meiri_tehui_info" /* ON_UDPATE_MEIRI_TEHUI_INFO */);
                };
                //index: (0.标识免费档位) 充值id索引
                MeiriTehuiProxy.prototype.c2s_daily_tehui_get_reward = function (index) {
                    var msg = new c2s_daily_tehui_get_reward();
                    msg.index = index;
                    this.sendProto(msg);
                };
                //免费奖励
                MeiriTehuiProxy.prototype.getFreeRewards = function () {
                    var cfg = game.GameConfig.getParamConfigById('daily_tehui_reward');
                    return cfg ? cfg.value : [];
                };
                //购买配置，最后一个是购买10天的
                MeiriTehuiProxy.prototype.getDirectShopCfgList = function () {
                    return mod.StoreUtil.getDirectShopCfgListByType(9 /* MeiriTehui */);
                };
                //获取状态，1.可领取2.已领取
                MeiriTehuiProxy.prototype.getStatus = function (id) {
                    var data = this._model.list[id];
                    if (data) {
                        return data.state;
                    }
                    return 0 /* NotFinish */;
                };
                //是否购买10天
                MeiriTehuiProxy.prototype.isBuyTenDay = function () {
                    return this._model.day > 0;
                };
                //结束时间戳 todo
                MeiriTehuiProxy.prototype.getEndTime = function () {
                    var day = this._model.day;
                    if (!day) {
                        return 0;
                    }
                    var leftDays = this.getLeftDays() + 1;
                    return game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, leftDays);
                };
                //购买10天后，剩余领取天数
                MeiriTehuiProxy.prototype.getLeftDays = function () {
                    return 10 - this._model.day;
                };
                //已购买过任一档位，则不能购买10天的档位
                MeiriTehuiProxy.prototype.canBuyTenDay = function () {
                    if (this.isBuyTenDay()) {
                        return false;
                    }
                    var cfgList = this.getDirectShopCfgList();
                    for (var i = 0; i < cfgList.length - 1; i++) {
                        var cfg = cfgList[i];
                        if (this._model.list[cfg.product_id]) {
                            return false;
                        }
                    }
                    return true;
                };
                //按钮文本：98元购买10天
                MeiriTehuiProxy.prototype.getBtnTenStr = function () {
                    if (this._btnTenStr) {
                        return this._btnTenStr;
                    }
                    var cfgList = this.getDirectShopCfgList();
                    if (!cfgList || !cfgList.length) {
                        return '';
                    }
                    var lastCfg = cfgList[cfgList.length - 1];
                    var rmb = mod.PayUtil.getRmbValue(lastCfg.product_id) + mod.PayUtil.getRmbUnit() + '购买10天';
                    this._btnTenStr = rmb;
                    return rmb;
                };
                MeiriTehuiProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670197 /* MeiriTehui */)) {
                        return;
                    }
                    var hint = false;
                    var map = this._model.list;
                    for (var key in map) {
                        var item = map[key];
                        if (item && item.state == 1 /* Finish */) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath);
                };
                return MeiriTehuiProxy;
            }(game.ProxyBase));
            activity.MeiriTehuiProxy = MeiriTehuiProxy;
            __reflect(MeiriTehuiProxy.prototype, "game.mod.activity.MeiriTehuiProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MeiriTehuiItem = /** @class */ (function (_super) {
                __extends(MeiriTehuiItem, _super);
                function MeiriTehuiItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.MeiriTehuiItemSkin";
                    return _this;
                }
                MeiriTehuiItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 236 /* MeiriTehui */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn, this.onClick, this);
                };
                MeiriTehuiItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                MeiriTehuiItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.replaceAll(data.rewards);
                    this.img_bought.visible = data.status == 2 /* Draw */;
                    this.btn.visible = !this.img_bought.visible;
                    if (this.btn.visible) {
                        var str = game.getLanById("lingqu" /* lingqu */);
                        if (data.productId && data.status != 1 /* Finish */) {
                            str = mod.PayUtil.getRmbValue(data.productId) + mod.PayUtil.getRmbUnit();
                        }
                        this.btn.label = str;
                        this.btn.setHint(data.status == 1 /* Finish */);
                    }
                };
                MeiriTehuiItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (data.status == 1 /* Finish */) {
                        this._proxy.c2s_daily_tehui_get_reward(data.productId);
                    }
                    else if (data.productId) {
                        mod.PayUtil.pay(data.productId);
                    }
                };
                return MeiriTehuiItem;
            }(mod.BaseListenerRenderer));
            activity.MeiriTehuiItem = MeiriTehuiItem;
            __reflect(MeiriTehuiItem.prototype, "game.mod.activity.MeiriTehuiItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MeiriTehuiView = /** @class */ (function (_super) {
                __extends(MeiriTehuiView, _super);
                function MeiriTehuiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.MeiriTehuiSkin";
                    return _this;
                }
                return MeiriTehuiView;
            }(eui.Component));
            activity.MeiriTehuiView = MeiriTehuiView;
            __reflect(MeiriTehuiView.prototype, "game.mod.activity.MeiriTehuiView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var MeiriTehuiMdr = /** @class */ (function (_super) {
                __extends(MeiriTehuiMdr, _super);
                function MeiriTehuiMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.MeiriTehuiView);
                    _this._endTime = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                MeiriTehuiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(236 /* MeiriTehui */);
                    this._view.list.itemRenderer = activity.MeiriTehuiItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_go.img_bg.source = "yijianniuhuang";
                    this._view.btn_go.img_bg.width = 205;
                    this._view.btn_go.img_bg.height = 68;
                    this._view.btn_go.setImage('hongyuncifu');
                };
                MeiriTehuiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_buyTen, egret.TouchEvent.TOUCH_TAP, this.onClickBuyTen, this);
                    addEventListener(this._view.btn_go, egret.TouchEvent.TOUCH_TAP, this.onClickGo, this);
                    addEventListener(this._view.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    this.onNt("on_update_meiri_tehui_info" /* ON_UDPATE_MEIRI_TEHUI_INFO */, this.updateView, this);
                };
                MeiriTehuiMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.btn_buyTen.label = this._proxy.getBtnTenStr();
                    this.updateView();
                };
                MeiriTehuiMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._endTime = 0;
                };
                MeiriTehuiMdr.prototype.updateView = function () {
                    var list = [];
                    var freeStatus = this._proxy.getStatus(0);
                    list.push({
                        productId: 0,
                        rewards: this._proxy.getFreeRewards(),
                        status: freeStatus
                    });
                    var cfgList = this._proxy.getDirectShopCfgList();
                    for (var i = 0; i < cfgList.length - 1; i++) {
                        var cfg = cfgList[i];
                        var productId = cfg.product_id;
                        var status = this._proxy.getStatus(productId);
                        list.push({
                            productId: productId,
                            rewards: mod.PayUtil.getRewards(productId),
                            status: status
                        });
                    }
                    this._listData.replaceAll(list);
                    var isBuyTen = this._proxy.isBuyTenDay();
                    this._view.timeItem.visible = isBuyTen;
                    this._view.btn_buyTen.visible = !this._view.timeItem.visible;
                    if (isBuyTen) {
                        if (!this._endTime) {
                            this._endTime = this._proxy.getEndTime();
                            TimeMgr.addUpdateItem(this, 1000);
                            this.update(TimeMgr.time);
                        }
                        this._view.lb_free.textFlow = game.TextUtil.parseHtml("\u5DF2\u83B7\u5F97\u6D77\u91CF\u4F18\u60E0\uFF0C\u8FD8\u53EF\u9886\u53D6" + game.TextUtil.addColor(this._proxy.getLeftDays() + '', 65280 /* GREEN */) + "\u5929");
                    }
                    else {
                        if (TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.removeUpdateItem(this);
                        }
                        this._endTime = 0;
                        var freeStr = '额外赠送 ';
                        var tenCfg = cfgList[cfgList.length - 1];
                        var rewards = mod.PayUtil.getRewards(tenCfg.product_id);
                        if (rewards) {
                            for (var _i = 0, rewards_1 = rewards; _i < rewards_1.length; _i++) {
                                var item = rewards_1[_i];
                                var propCfg = game.GameConfig.getPropConfigById(item[0]);
                                if (!propCfg) {
                                    continue;
                                }
                                freeStr += game.TextUtil.addColor(propCfg.name + 'x' + item[1], 65280 /* GREEN */);
                            }
                        }
                        this._view.lb_free.textFlow = game.TextUtil.parseHtml(freeStr);
                        if (this._proxy.canBuyTenDay()) {
                            this._view.btn_buyTen.setYellow();
                        }
                        else {
                            this._view.btn_buyTen.setDisabled();
                        }
                    }
                };
                MeiriTehuiMdr.prototype.onClickBuyTen = function () {
                    if (this._proxy.isBuyTenDay()) {
                        return;
                    }
                    var list = this._proxy.getDirectShopCfgList();
                    var lastCfg = list ? list[list.length - 1] : null;
                    if (!lastCfg) {
                        return;
                    }
                    mod.PayUtil.pay(lastCfg.product_id);
                };
                MeiriTehuiMdr.prototype.onClickGo = function () {
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670195 /* WonderfulAct6 */, true)) {
                        mod.ViewMgr.getIns().showView("27" /* Activity */, "57" /* WonderfulAct */, ["06" /* Btn6 */]);
                    }
                };
                MeiriTehuiMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        this._endTime = 0;
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return MeiriTehuiMdr;
            }(game.MdrBase));
            activity.MeiriTehuiMdr = MeiriTehuiMdr;
            __reflect(MeiriTehuiMdr.prototype, "game.mod.activity.MeiriTehuiMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ShenlingGiftMdr = /** @class */ (function (_super) {
                __extends(ShenlingGiftMdr, _super);
                function ShenlingGiftMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.ShenlingGiftView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ShenlingGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(246 /* ShenlingGift */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ShenlingGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_buy, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_shenling_gift_info_update" /* ON_SHENLING_GIFT_INFO_UPDATE */, this.hide, this);
                };
                ShenlingGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                ShenlingGiftMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._productId = null;
                };
                ShenlingGiftMdr.prototype.updateView = function () {
                    var productId = this._proxy.getProductId();
                    if (!productId) {
                        return;
                    }
                    var giftBagCfg = game.getConfigByNameId("gift_bag.json" /* GiftBag */, productId);
                    if (!giftBagCfg) {
                        return;
                    }
                    this._productId = productId;
                    this._view.icon.data = giftBagCfg.awards[0];
                    this._listData.replaceAll(giftBagCfg.awards.slice(1));
                    var rmb = mod.PayUtil.getRmbValue(productId);
                    var fakeRmb = mod.PayUtil.getFakeRmbValue(productId);
                    this._view.btn_buy.setTwoPrice(rmb, fakeRmb);
                    var type = productId % 4;
                    this._view.img_type.source = "shenlinggift_type" + type;
                    this._view.img_name.source = giftBagCfg.icon || '';
                };
                ShenlingGiftMdr.prototype.onClick = function () {
                    if (this._productId) {
                        mod.PayUtil.pay(this._productId);
                    }
                };
                return ShenlingGiftMdr;
            }(game.MdrBase));
            activity.ShenlingGiftMdr = ShenlingGiftMdr;
            __reflect(ShenlingGiftMdr.prototype, "game.mod.activity.ShenlingGiftMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_tianfu_giftbag_info = msg.s2c_tianfu_giftbag_info;
            /**
             * @description 神灵天赋礼包
             */
            var ShenlingGiftProxy = /** @class */ (function (_super) {
                __extends(ShenlingGiftProxy, _super);
                function ShenlingGiftProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //神灵天赋礼包红点
                    _this._giftHint = true;
                    return _this;
                }
                ShenlingGiftProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this.onProto(s2c_tianfu_giftbag_info, this.s2c_tianfu_giftbag_info, this);
                };
                ShenlingGiftProxy.prototype.s2c_tianfu_giftbag_info = function (n) {
                    var msg = n.body;
                    if (msg.index != null) {
                        this._index = msg.index;
                    }
                    this.checkOpen();
                    this.sendNt("on_shenling_gift_info_update" /* ON_SHENLING_GIFT_INFO_UPDATE */);
                };
                ShenlingGiftProxy.prototype.getProductIdAry = function () {
                    if (!this._productIdAry) {
                        this._productIdAry = [];
                        var cfgList = mod.StoreUtil.getDirectShopCfgListByType(14 /* ShenlingGift */) || [];
                        for (var _i = 0, cfgList_1 = cfgList; _i < cfgList_1.length; _i++) {
                            var cfg = cfgList_1[_i];
                            if (cfg && this._productIdAry.indexOf(cfg.product_id) < 0) {
                                this._productIdAry.push(cfg.product_id);
                            }
                        }
                    }
                    return this._productIdAry;
                };
                //当前商品id
                ShenlingGiftProxy.prototype.getProductId = function () {
                    var ary = this.getProductIdAry();
                    if (!this._index) {
                        return ary[0];
                    }
                    var idx = ary.indexOf(this._index);
                    if (ary[idx + 1]) {
                        return ary[idx + 1];
                    }
                    return null;
                };
                //全购买完毕
                ShenlingGiftProxy.prototype.isAllBought = function () {
                    if (!this._index) {
                        return false;
                    }
                    var ary = this.getProductIdAry();
                    var len = ary ? ary.length : 0;
                    return ary && this._index == ary[len - 1];
                };
                //能否开启
                ShenlingGiftProxy.prototype.canOpen = function () {
                    return mod.ViewMgr.getIns().checkViewOpen(1041670102 /* Shenling */)
                        && mod.ViewMgr.getIns().checkViewOpen(1041670211 /* ShenlingGift */)
                        && mod.PayUtil.checkFirstCharge() && !this.isAllBought();
                };
                ShenlingGiftProxy.prototype.checkOpen = function () {
                    var canOpen = this.canOpen();
                    mod.BtnIconMgr.insChaozhilibao().updateOpen(1041670211 /* ShenlingGift */, !!canOpen, null, true);
                };
                Object.defineProperty(ShenlingGiftProxy.prototype, "giftHint", {
                    get: function () {
                        return this._giftHint;
                    },
                    set: function (hint) {
                        this._giftHint = hint;
                    },
                    enumerable: true,
                    configurable: true
                });
                return ShenlingGiftProxy;
            }(game.ProxyBase));
            activity.ShenlingGiftProxy = ShenlingGiftProxy;
            __reflect(ShenlingGiftProxy.prototype, "game.mod.activity.ShenlingGiftProxy", ["game.mod.IShenlingGiftProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ShenlingGiftView = /** @class */ (function (_super) {
                __extends(ShenlingGiftView, _super);
                function ShenlingGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ShenlingGiftSkin";
                    return _this;
                }
                return ShenlingGiftView;
            }(eui.Component));
            activity.ShenlingGiftView = ShenlingGiftView;
            __reflect(ShenlingGiftView.prototype, "game.mod.activity.ShenlingGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TehuiLibaoModel = /** @class */ (function () {
                function TehuiLibaoModel() {
                    var _a, _b;
                    this.infos = {};
                    this.openIdxs = (_a = {},
                        _a[1 /* TehuiLibao */] = 1041670208 /* TehuiLibao */,
                        _a[2 /* JinjieTehui */] = 1041670209 /* JinjieTehui */,
                        _a);
                    this.btnIdxs = (_b = {},
                        _b[1 /* TehuiLibao */] = 1041670208 /* TehuiLibao */,
                        _b[2 /* JinjieTehui */] = 1041670209 /* JinjieTehui */,
                        _b);
                }
                return TehuiLibaoModel;
            }());
            activity.TehuiLibaoModel = TehuiLibaoModel;
            __reflect(TehuiLibaoModel.prototype, "game.mod.activity.TehuiLibaoModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_cheap_gift_info = msg.s2c_cheap_gift_info;
            var TimeMgr = base.TimeMgr;
            /**
             * @description 特惠礼包&特惠进阶
             */
            var TehuiLibaoProxy = /** @class */ (function (_super) {
                __extends(TehuiLibaoProxy, _super);
                function TehuiLibaoProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TehuiLibaoProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.TehuiLibaoModel();
                    this.onProto(s2c_cheap_gift_info, this.s2c_cheap_gift_info, this);
                };
                TehuiLibaoProxy.prototype.s2c_cheap_gift_info = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    this._model.infos[msg.type] = msg.index;
                    this.onUpdateOpen(msg.type);
                    this.checkTimeOpen(msg.type);
                    this.sendNt("on_update_tehui_libao_info" /* ON_UPDATE_TEHUI_LIBAO_INFO */);
                };
                TehuiLibaoProxy.prototype.isOpen = function (type) {
                    var openIdx = this._model.openIdxs[type];
                    if (!mod.ViewMgr.getIns().checkViewOpen(openIdx)) {
                        return false;
                    }
                    if (!this.getInfo(type)) {
                        return false;
                    }
                    return true;
                };
                TehuiLibaoProxy.prototype.onUpdateOpen = function (type) {
                    var isOpen = this.isOpen(type);
                    var btnIdx = this._model.btnIdxs[type];
                    mod.BtnIconMgr.insChaozhilibao().updateOpen(btnIdx, isOpen, null, true);
                };
                TehuiLibaoProxy.prototype.getInfo = function (type) {
                    return this._model.infos[type];
                };
                TehuiLibaoProxy.prototype.getEndTime = function () {
                    return game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, 1);
                };
                TehuiLibaoProxy.prototype.checkTimeOpen = function (type) {
                    if (type !== 1 /* TehuiLibao */) {
                        return;
                    }
                    if (!this._model.tehuiTime) {
                        this._model.tehuiTime = TimeMgr.time.serverTimeSecond;
                        return;
                    }
                    var date1 = new Date(this._model.tehuiTime * 1000);
                    var date2 = new Date(TimeMgr.time.serverTimeSecond * 1000);
                    if (date1.getFullYear() === date2.getFullYear() &&
                        date1.getMonth() === date2.getMonth() &&
                        date1.getDate() === date2.getDate()) {
                    }
                    else {
                        mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "93" /* TehuiLibao */, 1 /* TehuiLibao */);
                    }
                    this._model.tehuiTime = TimeMgr.time.serverTimeSecond;
                };
                TehuiLibaoProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670208 /* TehuiLibao */) > -1) {
                        this.onUpdateOpen(1 /* TehuiLibao */);
                    }
                    if (addIdx.indexOf(1041670209 /* JinjieTehui */) > -1) {
                        this.onUpdateOpen(2 /* JinjieTehui */);
                    }
                };
                return TehuiLibaoProxy;
            }(game.ProxyBase));
            activity.TehuiLibaoProxy = TehuiLibaoProxy;
            __reflect(TehuiLibaoProxy.prototype, "game.mod.activity.TehuiLibaoProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TehuiLibaoView = /** @class */ (function (_super) {
                __extends(TehuiLibaoView, _super);
                function TehuiLibaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TehuiLibaoSkin";
                    return _this;
                }
                return TehuiLibaoView;
            }(eui.Component));
            activity.TehuiLibaoView = TehuiLibaoView;
            __reflect(TehuiLibaoView.prototype, "game.mod.activity.TehuiLibaoView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var TehuiLibaoMdr = /** @class */ (function (_super) {
                __extends(TehuiLibaoMdr, _super);
                function TehuiLibaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.TehuiLibaoView);
                    _this._listData = new ArrayCollection();
                    _this._endTime = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                TehuiLibaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(248 /* TehuiLibao */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData;
                };
                TehuiLibaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_close, TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_tehui_libao_info" /* ON_UPDATE_TEHUI_LIBAO_INFO */, this.onUpdateView, this);
                };
                TehuiLibaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                    this.onUpdateTime();
                };
                TehuiLibaoMdr.prototype.onUpdateTime = function () {
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                TehuiLibaoMdr.prototype.onUpdateView = function () {
                    this._view.img_bg.source = game.ResUtil.getUiPng("bg_tehuilibao" + this._showArgs);
                    this._view.img_zhekou.source = "tehuilibao_zhekou" + this._showArgs;
                    this._productId = this._proxy.getInfo(this._showArgs);
                    if (!this._productId) {
                        this.hide();
                        return;
                    }
                    var gift = game.getConfigByNameId("gift_bag.json" /* GiftBag */, this._productId);
                    if (gift) {
                        this._listData.replaceAll(gift.awards);
                    }
                    var rmb = mod.PayUtil.getRmbValue(this._productId);
                    var fakeRmb = mod.PayUtil.getFakeRmbValue(this._productId);
                    this._view.btn.setTwoPrice(rmb, fakeRmb);
                };
                TehuiLibaoMdr.prototype.onClick = function () {
                    mod.PayUtil.pay(this._productId);
                };
                TehuiLibaoMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    this._endTime = 0;
                    _super.prototype.onHide.call(this);
                };
                TehuiLibaoMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return TehuiLibaoMdr;
            }(game.MdrBase));
            activity.TehuiLibaoMdr = TehuiLibaoMdr;
            __reflect(TehuiLibaoMdr.prototype, "game.mod.activity.TehuiLibaoMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ChengshenModel = /** @class */ (function () {
                function ChengshenModel() {
                    this.hintType = ["27" /* Activity */, "65" /* ChengshenMain */, "01" /* TabBtnType01 */];
                }
                return ChengshenModel;
            }());
            activity.ChengshenModel = ChengshenModel;
            __reflect(ChengshenModel.prototype, "game.mod.activity.ChengshenModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_chengshen_get_reward = msg.c2s_chengshen_get_reward;
            var s2c_chengshen_update_data = msg.s2c_chengshen_update_data;
            var TimeMgr = base.TimeMgr;
            var ChengshenProxy = /** @class */ (function (_super) {
                __extends(ChengshenProxy, _super);
                function ChengshenProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ChengshenProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.ChengshenModel();
                    this.onProto(s2c_chengshen_update_data, this.s2c_chengshen_update_data, this);
                };
                ChengshenProxy.prototype.c2s_chengshen_get_reward = function (type) {
                    var msg = new c2s_chengshen_get_reward();
                    msg.type = type;
                    this.sendProto(msg);
                };
                ChengshenProxy.prototype.s2c_chengshen_update_data = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.list) {
                        return;
                    }
                    if (!this._model.list || !this._model.list.length) {
                        this._model.list = msg.list;
                    }
                    else {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var info = _a[_i];
                            var pos = this.getInfoPos(info.type);
                            if (pos >= 0) {
                                this._model.list[pos] = info;
                            }
                            else {
                                this._model.list.push(info);
                            }
                        }
                    }
                    this.updateInfo();
                    this.sendNt("on_update_chengshen_reward" /* ON_UPDATE_CHENGSHEN_REWARD */);
                };
                //信息index
                ChengshenProxy.prototype.getInfoPos = function (type) {
                    if (!this._model.list) {
                        return -1;
                    }
                    for (var i = 0; i < this._model.list.length; ++i) {
                        var info = this._model.list[i];
                        if (info.type == type) {
                            return i;
                        }
                    }
                    return -1;
                };
                Object.defineProperty(ChengshenProxy.prototype, "type", {
                    get: function () {
                        return this._model.type;
                    },
                    set: function (type) {
                        this._model.type = type;
                    },
                    enumerable: true,
                    configurable: true
                });
                ChengshenProxy.prototype.getTaskList = function (type) {
                    var paramCfg = game.GameConfig.getParamConfigById("chengshen_task");
                    var pos = type - 1;
                    var taskList = paramCfg.value[pos];
                    return taskList;
                };
                ChengshenProxy.prototype.hasDraw = function (type) {
                    var pos = this.getInfoPos(type);
                    if (pos < 0) {
                        return false;
                    }
                    var info = this._model.list[pos];
                    return info && info.state == 2 /* HasDraw */;
                };
                ChengshenProxy.prototype.canDraw = function (type) {
                    var pos = this.getInfoPos(type);
                    if (pos < 0) {
                        return false;
                    }
                    var info = this._model.list[pos];
                    return info && info.state == 1 /* CanDraw */;
                };
                ChengshenProxy.prototype.getHintByType = function (type) {
                    if (this.canDraw(type)) {
                        return true; //奖励可领取
                    }
                    var taskList = this.getTaskList(type);
                    for (var i = 0; i < taskList.length; ++i) {
                        var index = taskList[i];
                        var task = mod.TaskUtil.getTask(index);
                        if (task && task.status == 1 /* Finish */) {
                            return true; //任务奖励可领取
                        }
                    }
                    return false;
                };
                //是否领完所有奖励
                ChengshenProxy.prototype.hasDrawAllReward = function () {
                    var typeList = [1 /* Summon */, 2 /* Pass */];
                    for (var _i = 0, typeList_1 = typeList; _i < typeList_1.length; _i++) {
                        var type = typeList_1[_i];
                        if (!this.hasDraw(type)) {
                            return false; //奖励未领取
                        }
                    }
                    var taskList = mod.TaskUtil.getTaskList(37 /* Chengshen */); //直接取所有任务
                    for (var _a = 0, taskList_1 = taskList; _a < taskList_1.length; _a++) {
                        var task = taskList_1[_a];
                        if (task.status != 2 /* Draw */) {
                            return false; //任务奖励未领取
                        }
                    }
                    return true;
                };
                ChengshenProxy.prototype.getEndTime = function () {
                    var cfg = game.getConfigByNameId("open_function.json" /* OpenFunction */, 1041670192 /* Chengshen */);
                    var openDay = cfg.svr_open; //开服第几天开启，第1天
                    var serverDay = mod.RoleUtil.getServerDay(); //当前开服天数
                    var paramCfg = game.GameConfig.getParamConfigById("chengshen_day");
                    var continueDay = paramCfg && paramCfg.value; //活动持续天数，,13天
                    var leftDay = openDay + continueDay - serverDay;
                    if (leftDay <= 0) {
                        return 0; //活动已结束
                    }
                    var curTime = TimeMgr.time.serverTimeSecond;
                    return game.TimeUtil.getNextDayTime(curTime, false, leftDay);
                };
                ChengshenProxy.prototype.isOpen = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670192 /* Chengshen */)) {
                        return false; //功能未开启
                    }
                    var endTime = this.getEndTime();
                    if (endTime <= 0) {
                        return false; //活动已结束
                    }
                    if (this.hasDrawAllReward()) {
                        return false; //领完所有奖励
                    }
                    return true;
                };
                ChengshenProxy.prototype.updateInfo = function () {
                    this.updateHint();
                    this.checkIsOpen();
                };
                ChengshenProxy.prototype.checkIsOpen = function () {
                    var isOpen = this.isOpen();
                    mod.BtnIconMgr.insTop().updateOpen(1041670192 /* Chengshen */, isOpen);
                };
                /**更新红点*/
                ChengshenProxy.prototype.updateHint = function () {
                    if (!this.isOpen()) {
                        return;
                    }
                    var hint = false;
                    var typeList = [1 /* Summon */, 2 /* Pass */];
                    for (var _i = 0, typeList_2 = typeList; _i < typeList_2.length; _i++) {
                        var type = typeList_2[_i];
                        if (this.getHintByType(type)) {
                            hint = true;
                            break;
                        }
                    }
                    var hintType = this._model.hintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                ChengshenProxy.prototype.onTaskHint = function (n) {
                    var types = n.body;
                    var type = 37 /* Chengshen */;
                    if (types.indexOf(type) < 0) {
                        return;
                    }
                    this.updateInfo();
                };
                ChengshenProxy.prototype.onServerDayUpdate = function (n) {
                    this.updateInfo();
                };
                /**功能开启刷新按钮*/
                ChengshenProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670192 /* Chengshen */) > -1) {
                        this.updateInfo();
                    }
                };
                /**功能开启刷新按钮*/
                ChengshenProxy.prototype.onOpenFuncInit = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670192 /* Chengshen */) > -1) {
                        this.updateInfo();
                    }
                };
                return ChengshenProxy;
            }(game.ProxyBase));
            activity.ChengshenProxy = ChengshenProxy;
            __reflect(ChengshenProxy.prototype, "game.mod.activity.ChengshenProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ChengshenJibanView = /** @class */ (function (_super) {
                __extends(ChengshenJibanView, _super);
                function ChengshenJibanView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ChengshenJibanSkin";
                    return _this;
                }
                return ChengshenJibanView;
            }(eui.Component));
            activity.ChengshenJibanView = ChengshenJibanView;
            __reflect(ChengshenJibanView.prototype, "game.mod.activity.ChengshenJibanView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var ChengshenTaskItem = /** @class */ (function (_super) {
                __extends(ChengshenTaskItem, _super);
                function ChengshenTaskItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ChengshenTaskItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_draw, this.onClickDraw, this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(235 /* Chengshen */);
                };
                ChengshenTaskItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var task = this.data;
                    var cfg = mod.TaskUtil.getCfg(task.task_id);
                    // let descStr = getLanById("chengshen_task_tips" + this._proxy.type);
                    // descStr = StringUtil.substitute(descStr, [task.target]);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(cfg.desc);
                    var reward = cfg.rewards.length > 0 ? cfg.rewards[0] : null;
                    this.icon.data = reward;
                    var hasDraw = mod.TaskUtil.hasRewardDraw(task);
                    this.btn_draw.visible = !hasDraw;
                    this.img_draw.visible = hasDraw;
                    if (this.btn_draw.visible) {
                        var canDraw = mod.TaskUtil.canRewardDraw(task);
                        ;
                        this.btn_draw.redPoint.visible = canDraw;
                        if (canDraw) {
                            this.btn_draw.labelDisplay.text = game.getLanById("tishi_29" /* tishi_29 */);
                            this.btn_draw.setYellow();
                        }
                        else {
                            var gotoStr = game.getLanById("chengshen_goto" + this._proxy.type);
                            this.btn_draw.labelDisplay.text = gotoStr;
                            this.btn_draw.setBlue();
                        }
                    }
                };
                ChengshenTaskItem.prototype.onClickDraw = function () {
                    mod.TaskUtil.clickTask(this.data);
                };
                return ChengshenTaskItem;
            }(mod.BaseRenderer));
            activity.ChengshenTaskItem = ChengshenTaskItem;
            __reflect(ChengshenTaskItem.prototype, "game.mod.activity.ChengshenTaskItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ChengshenTaskView = /** @class */ (function (_super) {
                __extends(ChengshenTaskView, _super);
                function ChengshenTaskView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ChengshenTaskSkin";
                    return _this;
                }
                return ChengshenTaskView;
            }(eui.Component));
            activity.ChengshenTaskView = ChengshenTaskView;
            __reflect(ChengshenTaskView.prototype, "game.mod.activity.ChengshenTaskView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ChengshenView = /** @class */ (function (_super) {
                __extends(ChengshenView, _super);
                function ChengshenView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ChengshenSkin";
                    return _this;
                }
                return ChengshenView;
            }(eui.Component));
            activity.ChengshenView = ChengshenView;
            __reflect(ChengshenView.prototype, "game.mod.activity.ChengshenView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var ChengshenJibanMdr = /** @class */ (function (_super) {
                __extends(ChengshenJibanMdr, _super);
                function ChengshenJibanMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.ChengshenJibanView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ChengshenJibanMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(235 /* Chengshen */);
                };
                ChengshenJibanMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.item0, TouchEvent.TOUCH_TAP, this.onClickItem0, this);
                    addEventListener(this._view.item1, TouchEvent.TOUCH_TAP, this.onClickItem1, this);
                    this.onNt("on_activity_icon_hide" /* ON_ACTIVITY_ICON_HIDE */, this.onActivityIconHide, this);
                };
                ChengshenJibanMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                };
                ChengshenJibanMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ChengshenJibanMdr.prototype.onActivityIconHide = function (n) {
                    var id = n.body;
                    if (id == 1041670192 /* Chengshen */) {
                        this.hide();
                    }
                };
                ChengshenJibanMdr.prototype.onClickItem0 = function () {
                    mod.ViewMgr.getIns().showPropTips(this._indexList[0]);
                };
                ChengshenJibanMdr.prototype.onClickItem1 = function () {
                    mod.ViewMgr.getIns().showPropTips(this._indexList[1]);
                };
                ChengshenJibanMdr.prototype.initShow = function () {
                    this._indexList = [];
                    var paramCfg = game.GameConfig.getParamConfigById("chengshen_rewards");
                    var infos = paramCfg.value;
                    for (var i = 0; i < infos.length && i < 2; ++i) {
                        var reward = infos[i];
                        var propIndex = reward[0];
                        this._indexList.push(propIndex);
                        var cfg = game.GameConfig.getPropConfigById(propIndex);
                        var index = cfg.param1 ? cfg.param1[0][0] : 0;
                        var surfaceCfg = game.GameConfig.getPropConfigById(index);
                        var item = this._view["item" + i];
                        item.setData(surfaceCfg);
                    }
                };
                return ChengshenJibanMdr;
            }(game.MdrBase));
            activity.ChengshenJibanMdr = ChengshenJibanMdr;
            __reflect(ChengshenJibanMdr.prototype, "game.mod.activity.ChengshenJibanMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ChengshenMainMdr = /** @class */ (function (_super) {
                __extends(ChengshenMainMdr, _super);
                function ChengshenMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "chengshen_tab",
                            mdr: activity.ChengshenMdr,
                            title: "chengshen" /* chengshen */,
                            bg: "chengshen_bg",
                            hintTypes: ["27" /* Activity */, "65" /* ChengshenMain */, "01" /* TabBtnType01 */]
                        }
                        //���������ʱ��Ҫע�⣬������رս���
                    ];
                    return _this;
                }
                ChengshenMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_activity_icon_hide" /* ON_ACTIVITY_ICON_HIDE */, this.onActivityIconHide, this);
                };
                ChengshenMainMdr.prototype.onActivityIconHide = function (n) {
                    var id = n.body;
                    if (id == 1041670192 /* Chengshen */) {
                        this.hide();
                    }
                };
                return ChengshenMainMdr;
            }(mod.WndBaseMdr));
            activity.ChengshenMainMdr = ChengshenMainMdr;
            __reflect(ChengshenMainMdr.prototype, "game.mod.activity.ChengshenMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var ChengshenMdr = /** @class */ (function (_super) {
                __extends(ChengshenMdr, _super);
                function ChengshenMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ChengshenView);
                    return _this;
                }
                ChengshenMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(235 /* Chengshen */);
                };
                ChengshenMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_jiban, TouchEvent.TOUCH_TAP, this.onClickJiban, this);
                    addEventListener(this._view.btn_type1, TouchEvent.TOUCH_TAP, this.onClickType1, this);
                    addEventListener(this._view.btn_type2, TouchEvent.TOUCH_TAP, this.onClickType2, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                    this.onNt("on_update_chengshen_reward" /* ON_UPDATE_CHENGSHEN_REWARD */, this.onInfoUpdate, this);
                };
                ChengshenMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateHint();
                    this.updateTime();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                ChengshenMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                ChengshenMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(37 /* Chengshen */) > -1) {
                        this.updateHint();
                    }
                };
                ChengshenMdr.prototype.onInfoUpdate = function () {
                    this.updateHint();
                };
                ChengshenMdr.prototype.onClickJiban = function () {
                    facade.showView("27" /* Activity */, "66" /* ChengshenJiban */);
                };
                ChengshenMdr.prototype.onClickType1 = function () {
                    facade.showView("27" /* Activity */, "67" /* ChengshenTask */, 1 /* Summon */);
                };
                ChengshenMdr.prototype.onClickType2 = function () {
                    facade.showView("27" /* Activity */, "67" /* ChengshenTask */, 2 /* Pass */);
                };
                ChengshenMdr.prototype.initShow = function () {
                    var paramCfg = game.GameConfig.getParamConfigById("chengshen_rewards");
                    var infos = paramCfg.value;
                    for (var i = 0; i < infos.length && i < 2; ++i) {
                        var reward = infos[i];
                        var propIndex = reward[0];
                        var cfg = game.GameConfig.getPropConfigById(propIndex);
                        var index = cfg.param1 ? cfg.param1[0][0] : 0;
                        var shenlingCfg = game.getConfigById(index);
                        var item = this._view["item" + i];
                        item.updateShow(shenlingCfg.name, shenlingCfg.quality);
                    }
                };
                ChengshenMdr.prototype.updateHint = function () {
                    this._view.btn_type1.redPoint.visible = this._proxy.getHintByType(1 /* Summon */);
                    this._view.btn_type2.redPoint.visible = this._proxy.getHintByType(2 /* Pass */);
                };
                ChengshenMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                ChengshenMdr.prototype.updateTime = function () {
                    var endTime = this._proxy.getEndTime();
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                    }
                };
                return ChengshenMdr;
            }(game.MdrBase));
            activity.ChengshenMdr = ChengshenMdr;
            __reflect(ChengshenMdr.prototype, "game.mod.activity.ChengshenMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var ChengshenTaskMdr = /** @class */ (function (_super) {
                __extends(ChengshenTaskMdr, _super);
                function ChengshenTaskMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.ChengshenTaskView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ChengshenTaskMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(235 /* Chengshen */);
                };
                ChengshenTaskMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_draw, TouchEvent.TOUCH_TAP, this.onClickDraw, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                    this.onNt("on_update_chengshen_reward" /* ON_UPDATE_CHENGSHEN_REWARD */, this.onInfoUpdate, this);
                    this.onNt("on_view_hide" /* ON_VIEW_HIDE */, this.hide, this);
                    this.onNt("on_activity_icon_hide" /* ON_ACTIVITY_ICON_HIDE */, this.onActivityIconHide, this);
                };
                ChengshenTaskMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.type = this._showArgs;
                    this.initShow();
                    this.updateTaskList();
                    this.updateState();
                    this.updateCnt();
                };
                ChengshenTaskMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ChengshenTaskMdr.prototype.onActivityIconHide = function (n) {
                    var id = n.body;
                    if (id == 1041670192 /* Chengshen */) {
                        this.hide();
                    }
                };
                ChengshenTaskMdr.prototype.onClickDraw = function () {
                    if (!this._canDraw) {
                        game.PromptBox.getIns().show(game.getLanById("fight_soul_altar_tips1" /* fight_soul_altar_tips1 */));
                        return;
                    }
                    var type = this._proxy.type;
                    this._proxy.c2s_chengshen_get_reward(type);
                };
                ChengshenTaskMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(37 /* Chengshen */) > -1) {
                        this.updateTaskList();
                        this.updateState();
                    }
                };
                ChengshenTaskMdr.prototype.onInfoUpdate = function () {
                    this.updateState();
                };
                ChengshenTaskMdr.prototype.initShow = function () {
                    var paramCfg = game.GameConfig.getParamConfigById("chengshen_rewards");
                    var type = this._proxy.type;
                    var pos = type - 1;
                    var reward = paramCfg.value[pos];
                    var propIndex = reward[0];
                    var cfg = game.GameConfig.getPropConfigById(propIndex);
                    var index = cfg.param1 ? cfg.param1[0][0] : 0;
                    this._index = index;
                    this._view.baseSurfaceItem.updateShow(index, cfg.god, true);
                    this._view.img_reward.source = "chengshen_reward" + type;
                };
                ChengshenTaskMdr.prototype.updateTaskList = function () {
                    var cfg = game.getConfigById(this._index);
                    if (!cfg) {
                        console.error("取不到神灵配置：", this._index);
                        return;
                    }
                    var tipsStr = game.getLanById("tishi_29" /* tishi_29 */) + cfg.name; //领取XXX
                    var type = this._proxy.type;
                    var taskList = this._proxy.getTaskList(type);
                    var curVal = 0; //当前进度
                    var maxVal = taskList.length; //任务条件
                    for (var i = 0; i < taskList.length; ++i) {
                        var index = taskList[i];
                        var task = mod.TaskUtil.getTask(index);
                        this._view["task" + i].data = task; //设置任务
                        if (task && task.status != 0 /* NotFinish */) {
                            curVal++;
                        }
                    }
                    tipsStr += game.TextUtil.addColor("（" + curVal + "/" + maxVal + "）", curVal >= maxVal ? 8585074 /* GREEN */ : 16731212 /* RED */);
                    //更新任务进度文本
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(tipsStr);
                };
                ChengshenTaskMdr.prototype.updateState = function () {
                    var type = this._proxy.type;
                    var hasDraw = this._proxy.hasDraw(type);
                    this._view.img_draw.visible = hasDraw;
                    this._view.btn_draw.visible = !hasDraw;
                    if (!hasDraw) {
                        var canDraw = this._proxy.canDraw(type);
                        this._canDraw = canDraw;
                        this._view.btn_draw.redPoint.visible = canDraw;
                    }
                };
                ChengshenTaskMdr.prototype.updateCnt = function () {
                    //根据实际系统来取值，也可以根据任务进度处理
                    var type = this._proxy.type;
                    var cntStr = "";
                    if (type == 1 /* Summon */) {
                        var _proxy = this.retProxy(206 /* Summon */);
                        cntStr = game.StringUtil.substitute(game.getLanById("chengshen_tips1" /* chengshen_tips1 */), [_proxy.count]);
                    }
                    else {
                        var _proxy = facade.retMod("42" /* Pass */).retProxy(9 /* Pass */);
                        cntStr = game.StringUtil.substitute(game.getLanById("chengshen_tips2" /* chengshen_tips2 */), [_proxy.curStep - 1]);
                    }
                    this._view.lab_cnt.textFlow = game.TextUtil.parseHtml(cntStr);
                };
                return ChengshenTaskMdr;
            }(game.MdrBase));
            activity.ChengshenTaskMdr = ChengshenTaskMdr;
            __reflect(ChengshenTaskMdr.prototype, "game.mod.activity.ChengshenTaskMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ExchangeShopModel = /** @class */ (function () {
                function ExchangeShopModel() {
                    var _a, _b, _c, _d, _e, _f;
                    // /**tab的index 调用getTypeByIndex拿到类型 */
                    // public tabIdx: number = 0;
                    /**选中的shoptype */
                    this.shopType = 0;
                    /**页签类型列表 */
                    this.shopTypeList = [
                        2 /* Type1 */,
                        3 /* Type2 */,
                        4 /* Type3 */,
                        5 /* Type4 */,
                        10 /* Type5 */,
                        6 /* Type6 */,
                        7 /* Type7 */,
                        8 /* Type8 */,
                        9 /* Type9 */,
                    ];
                    /**缓存商品数据 */
                    this.shopMap = {};
                    /**缓存配置信息 */
                    this.cfgMap = {};
                    /**缓存道侣表数据 */
                    this.daolvShopMap = {};
                    /**大奖配置id */
                    this.paramIdMap = (_a = {},
                        _a[4 /* Type3 */] = "exchange_shop_big_award2",
                        _a[3 /* Type2 */] = "exchange_shop_big_award1",
                        _a[5 /* Type4 */] = "exchange_shop_big_award3",
                        _a[10 /* Type5 */] = "exchange_shop_big_award4",
                        _a[6 /* Type6 */] = "exchange_shop_big_award5",
                        _a);
                    /**根据类型获取道具id */
                    this.getCoinIdByType = (_b = {},
                        _b[2 /* Type1 */] = 1450100005 /* Rlcoin */,
                        _b[3 /* Type2 */] = 1450100007 /* Ticket */,
                        _b[4 /* Type3 */] = 1450000011 /* Jingjibi */,
                        _b[5 /* Type4 */] = 1450000012 /* Fscoin */,
                        _b[10 /* Type5 */] = 1450000029 /* Ssscoin */,
                        _b[6 /* Type6 */] = 1450000015 /* Lmcoin */,
                        _b[7 /* Type7 */] = 1450000016 /* Xzcoin */,
                        _b[8 /* Type8 */] = 1450000017 /* Pretige */,
                        _b[9 /* Type9 */] = 1450000018 /* Sgcoin */,
                        _b);
                    /**获取功能开启id */
                    this.getOpenIdxByType = (_c = {},
                        _c[2 /* Type1 */] = 1041670164 /* ExchangeType1 */,
                        _c[3 /* Type2 */] = 1041670165 /* ExchangeType2 */,
                        _c[4 /* Type3 */] = 1041670166 /* ExchangeType3 */,
                        _c[5 /* Type4 */] = 1041670167 /* ExchangeType4 */,
                        _c[10 /* Type5 */] = 1041670168 /* ExchangeType5 */,
                        _c[6 /* Type6 */] = 1041670169 /* ExchangeType6 */,
                        _c[7 /* Type7 */] = 1041670170 /* ExchangeType7 */,
                        _c[8 /* Type8 */] = 1041670171 /* ExchangeType8 */,
                        _c[9 /* Type9 */] = 1041670172 /* ExchangeType9 */,
                        _c);
                    /**通过道具id更新商店类型红点 */
                    this.typeByPropId = (_d = {},
                        _d[1450100005 /* Rlcoin */] = 2 /* Type1 */,
                        _d[1450100007 /* Ticket */] = 3 /* Type2 */,
                        _d);
                    /**通过货币更新商店类型红点 */
                    this.typeByPropCoin = (_e = {},
                        _e[1450000012 /* Fscoin */] = 5 /* Type4 */,
                        _e[1450000011 /* Jingjibi */] = 4 /* Type3 */,
                        _e[1450000029 /* Ssscoin */] = 10 /* Type5 */,
                        _e[1450000015 /* Lmcoin */] = 6 /* Type6 */,
                        _e[1450000016 /* Xzcoin */] = 7 /* Type7 */,
                        _e[1450000017 /* Pretige */] = 8 /* Type8 */,
                        _e[1450000018 /* Sgcoin */] = 9 /* Type9 */,
                        _e);
                    /**标题 */
                    this.titleIdByType = (_f = {},
                        _f[2 /* Type1 */] = "dhsc_tips1" /* dhsc_tips1 */,
                        _f[3 /* Type2 */] = "dhsc_tips2" /* dhsc_tips2 */,
                        _f[4 /* Type3 */] = "dhsc_tips3" /* dhsc_tips3 */,
                        _f[5 /* Type4 */] = "dhsc_tips4" /* dhsc_tips4 */,
                        _f[10 /* Type5 */] = "dhsc_tips5" /* dhsc_tips5 */,
                        _f[6 /* Type6 */] = "dhsc_tips6" /* dhsc_tips6 */,
                        _f[7 /* Type7 */] = "dhsc_tips7" /* dhsc_tips7 */,
                        _f[8 /* Type8 */] = "dhsc_tips8" /* dhsc_tips8 */,
                        _f[9 /* Type9 */] = "dhsc_tips9" /* dhsc_tips9 */,
                        _f);
                }
                return ExchangeShopModel;
            }());
            activity.ExchangeShopModel = ExchangeShopModel;
            __reflect(ExchangeShopModel.prototype, "game.mod.activity.ExchangeShopModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CaiyunbangItem3 = /** @class */ (function (_super) {
                __extends(CaiyunbangItem3, _super);
                function CaiyunbangItem3() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CaiyunbangItem3.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 250 /* Caiyunbang */);
                };
                CaiyunbangItem3.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                CaiyunbangItem3.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var desc = data.reward.desc;
                    if (data.actType == 14 /* CaiyunbangCharge */) {
                        var rmb = this._proxy.getChargeRmb();
                        var needRmb = data.reward.cond_1[0];
                        var color = rmb >= needRmb ? 2330156 /* GREEN */ : 16719376 /* RED */;
                        desc = desc + game.TextUtil.addColor("(" + rmb + "/" + needRmb + ")", color);
                    }
                    else {
                        var type = data.reward.cond_1[0];
                        if (type == 2 /* Vip */) {
                            var myVip = mod.VipUtil.getShowVipLv();
                            var needVip = data.reward.cond_2[0];
                            var color = myVip >= needVip ? 2330156 /* GREEN */ : 16719376 /* RED */;
                            desc = desc + game.TextUtil.addColor("(" + myVip + "/" + needVip + ")", color);
                        }
                    }
                    this.img_bought.visible = data.status == 2 /* Draw */;
                    this.btn_buy.visible = !this.img_bought.visible;
                    if (this.btn_buy.visible) {
                        this.btn_buy.label = game.getLanById("exp_pool15" /* exp_pool15 */);
                    }
                    if (data.status == 2 /* Draw */) {
                        this.img_bought.visible = true;
                        this.btn_buy.visible = false;
                    }
                    else if (data.status == 1 /* Finish */) {
                        this.img_bought.visible = false;
                        this.btn_buy.visible = true;
                        this.btn_buy.label = game.getLanById("lingqu" /* lingqu */);
                        this.btn_buy.setYellow();
                        this.btn_buy.setHint(true);
                    }
                    else {
                        this.img_bought.visible = false;
                        this.btn_buy.visible = true;
                        var btnStr = game.getLanById("exp_pool15" /* exp_pool15 */);
                        if (data.actType == 16 /* CaiyunbangLogin */) {
                            btnStr = game.getLanById("equip_Rresolve_tips4" /* equip_Rresolve_tips4 */);
                        }
                        this.btn_buy.label = btnStr;
                        this.btn_buy.setBlue();
                        this.btn_buy.setHint(false);
                    }
                    this._listData.replaceAll(data.reward.rewards);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                };
                CaiyunbangItem3.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actType = data.actType;
                    var status = data.status;
                    if (actType == 14 /* CaiyunbangCharge */) {
                        if (status == 1 /* Finish */) {
                            this._proxy.c2s_activity_caiyun_leichong_reward(data.reward.index);
                        }
                        else {
                            mod.ViewMgr.getIns().openCommonRechargeView();
                        }
                    }
                    else {
                        if (status == 1 /* Finish */) {
                            this._proxy.c2s_activity_caiyun_login(data.reward.index);
                        }
                        else {
                            mod.ViewMgr.getIns().openVipView();
                        }
                    }
                };
                return CaiyunbangItem3;
            }(mod.BaseGiftItemRender));
            activity.CaiyunbangItem3 = CaiyunbangItem3;
            __reflect(CaiyunbangItem3.prototype, "game.mod.activity.CaiyunbangItem3");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Handler = base.Handler;
            var CaiyunbangItem4 = /** @class */ (function (_super) {
                __extends(CaiyunbangItem4, _super);
                function CaiyunbangItem4() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CaiyunbangItem4.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 250 /* Caiyunbang */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn, this.onClick, this);
                };
                CaiyunbangItem4.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                CaiyunbangItem4.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var reward = data.reward.rewards[0];
                    this.icon.data = reward;
                    var propCfg = game.GameConfig.getPropConfigById(reward.idx.toNumber());
                    this.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(game.TextUtil.truncateString(propCfg.name), game.ColorUtil.getColorByQuality1(propCfg.quality)));
                    var limitCnt = data.reward.cond_2[0];
                    var boughtCnt = this._proxy.getBoughtCnt(data.reward.index);
                    this.img_bought.visible = boughtCnt >= limitCnt;
                    this.lab_limit.visible = this.btn.visible = !this.img_bought.visible;
                    if (this.lab_limit.visible) {
                        this.lab_limit.textFlow = game.TextUtil.parseHtml(game.getLanById("tongtiange_tips8" /* tongtiange_tips8 */)
                            + game.TextUtil.addColor(limitCnt - boughtCnt + "/" + limitCnt, 2330156 /* GREEN */));
                    }
                    this._bulkData = null;
                    if (this.btn.visible) {
                        var costCnt = data.reward.cond_1[0];
                        var costIdx = this._proxy.getExchangeCost();
                        var cost = [costIdx, costCnt];
                        this.btn.setCost(cost);
                        this.btn.setHint(mod.BagUtil.checkPropCnt(costIdx, costCnt));
                        this._bulkData = {
                            prop: [reward.idx.toNumber(), reward.cnt],
                            cost: cost,
                            lmt_type: 4 /* Limit */,
                            lmt_cnt: limitCnt,
                            left_cnt: limitCnt - boughtCnt,
                            handler: Handler.alloc(this._proxy, this._proxy.c2s_activity_caiyun_duihuan, [data.reward.index])
                        };
                    }
                };
                CaiyunbangItem4.prototype.onClick = function () {
                    if (this._bulkData) {
                        mod.ViewMgr.getIns().openBuyBulkTips(this._bulkData);
                    }
                };
                return CaiyunbangItem4;
            }(mod.BaseListenerRenderer));
            activity.CaiyunbangItem4 = CaiyunbangItem4;
            __reflect(CaiyunbangItem4.prototype, "game.mod.activity.CaiyunbangItem4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Handler = base.Handler;
            var ExchangeShopItem = /** @class */ (function (_super) {
                __extends(ExchangeShopItem, _super);
                function ExchangeShopItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ExchangeShopItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    var info = this._proxy.getInfoByTypeIndex(cfg.index);
                    var bought_cnt = info ? info.bought_cnt : 0; //已购买次数
                    this.lmt_cnt = cfg.lmt_cnt;
                    this.left_cnt = this.lmt_cnt - bought_cnt;
                    this.lmt_type = cfg.lmt_type;
                    var str = "";
                    if (cfg.lmt_type == 1) {
                        //getLanById(LanDef.store5)
                        str = "每日:";
                    }
                    else if (cfg.lmt_type == 2) {
                        str = game.getLanById("store6" /* store6 */);
                    }
                    else {
                        //getLanById(LanDef.store7)
                        str = "每周:";
                    }
                    this.lab_limit.textFlow = game.TextUtil.parseHtml(str + game.TextUtil.addColor(this.left_cnt + "/" + this.lmt_cnt, this.left_cnt > 0 ? "0x238e2c" : 16731212 /* RED */));
                    _super.prototype.dataChanged.call(this);
                    this.args = __assign({}, this.args, { handler: Handler.alloc(this._proxy, this._proxy.c2s_exchange_shop_buy_prop, [cfg.index]) });
                };
                return ExchangeShopItem;
            }(activity.ExchangeShopBaseItem));
            activity.ExchangeShopItem = ExchangeShopItem;
            __reflect(ExchangeShopItem.prototype, "game.mod.activity.ExchangeShopItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Handler = base.Handler;
            var ExchangeShopSpecialItem = /** @class */ (function (_super) {
                __extends(ExchangeShopSpecialItem, _super);
                function ExchangeShopSpecialItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ExchangeShopSpecialItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    var info = this._proxy.getInfoByTypeIndex(cfg.index);
                    var bought_cnt = info ? info.week_cnt : 0; //已购买次数
                    this.lmt_type = 3;
                    var str;
                    //限购类型1先判断周限购再判断终生限购 2终生限购 3周限购 0不限购
                    if (cfg.lmt_type == 1) {
                        str = game.getLanById("store7" /* store7 */);
                        // let life_cnt: number = cfg.cnts[1] - info.life_cnt;//终生可购买剩余次数
                        this.lmt_cnt = info.max_cnt; //终生购买次数<每周购买次数
                        this.left_cnt = this.lmt_cnt - bought_cnt;
                    }
                    else if (cfg.lmt_type == 3) {
                        str = game.getLanById("store7" /* store7 */);
                        this.lmt_cnt = cfg.lmt_cnt;
                        this.left_cnt = this.lmt_cnt - bought_cnt;
                    }
                    else if (cfg.lmt_type == 2) {
                        str = game.getLanById("store6" /* store6 */);
                        this.lmt_cnt = cfg.lmt_cnt;
                        this.left_cnt = this.lmt_cnt - info.life_cnt;
                    }
                    if (cfg.lmt_type != 0) {
                        this.lab_limit.textFlow = game.TextUtil.parseHtml(str + game.TextUtil.addColor(this.left_cnt + "/" + this.lmt_cnt, this.left_cnt > 0 ? "0x238e2c" : 16731212 /* RED */));
                    }
                    else {
                        this.lab_limit.text = "";
                    }
                    _super.prototype.dataChanged.call(this);
                    this.args = __assign({}, this.args, { handler: Handler.alloc(this._proxy, this._proxy.c2s_daolv_house_buy_prop, [cfg.index]) });
                };
                return ExchangeShopSpecialItem;
            }(activity.ExchangeShopBaseItem));
            activity.ExchangeShopSpecialItem = ExchangeShopSpecialItem;
            __reflect(ExchangeShopSpecialItem.prototype, "game.mod.activity.ExchangeShopSpecialItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ExchangeShopBuyTipsMdr = /** @class */ (function (_super) {
                __extends(ExchangeShopBuyTipsMdr, _super);
                function ExchangeShopBuyTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.StoreBuyTipsView);
                    _this._cost = 0; //购买消耗数量
                    _this._leftCnt = 0; //剩余限购次数
                    _this.isEasyHide = true;
                    return _this;
                }
                ExchangeShopBuyTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                };
                ExchangeShopBuyTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_cancel, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    //addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_confirm, egret.TouchEvent.TOUCH_TAP, this.onConfirm, this);
                    addEventListener(this._view.btn_add, egret.TouchEvent.TOUCH_TAP, this.onAdd, this);
                    addEventListener(this._view.btn_addTen, egret.TouchEvent.TOUCH_TAP, this.onAddTen, this);
                    addEventListener(this._view.btn_subtract, egret.TouchEvent.TOUCH_TAP, this.onSubtract, this);
                    addEventListener(this._view.btn_subtractTen, egret.TouchEvent.TOUCH_TAP, this.onSubtractTen, this);
                };
                ExchangeShopBuyTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                    this.setCnt(1); //重置次数
                };
                ExchangeShopBuyTipsMdr.prototype.updateView = function () {
                    var _a = this._showArgs, prop = _a.prop, lmt_cnt = _a.lmt_cnt, lmt_type = _a.lmt_type, cost = _a.cost, left_cnt = _a.left_cnt;
                    var propCfg = game.GameConfig.getPropConfigById(prop[0]);
                    if (!propCfg) {
                        return;
                    }
                    this._view.lb_name.text = propCfg.name;
                    this._view.icon.data = game.PropData.create(prop[0], prop[1]);
                    if (left_cnt != null && lmt_type != null) {
                        var str = '';
                        if (lmt_type == 1 /* Daily */) {
                            str = game.getLanById("store5" /* store5 */);
                        }
                        else if (lmt_type == 2 /* Lifetime */) {
                            str = game.getLanById("store6" /* store6 */);
                        }
                        else if (lmt_type == 3 /* Weekly */) {
                            str = game.getLanById("store7" /* store7 */);
                        }
                        else if (lmt_type == 4 /* Limit */) {
                            str = '限购:';
                        }
                        // let str = lmt_type == 1 ? getLanById(LanDef.store5) : (lmt_type == 2 ? getLanById(LanDef.store6) : getLanById(LanDef.store7));
                        this._view.lb_buyDesc.textFlow = game.TextUtil.parseHtml(str + game.TextUtil.addColor(left_cnt + "/" + lmt_cnt, 8585074 /* GREEN */));
                    }
                    else {
                        this._view.lb_buyDesc.text = "";
                    }
                    this._leftCnt = left_cnt || 0; //剩余购买次数
                    this._cost = cost[1];
                    var costCfg = game.GameConfig.getPropConfigById(cost[0]);
                    this._view.costIcon.imgCost = costCfg.icon;
                    this.updateCostIcon();
                };
                ExchangeShopBuyTipsMdr.prototype.updateCostIcon = function () {
                    var cost = this._cost * this.getCnt();
                    var color = mod.BagUtil.checkPropCnt(this._showArgs.cost[0], cost) ? 2330156 /* GREEN */ : 16719376 /* RED */;
                    this._view.costIcon.setLabCost("" + cost, color);
                };
                ExchangeShopBuyTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ExchangeShopBuyTipsMdr.prototype.onConfirm = function () {
                    var cnt = this.getCnt();
                    if (this._leftCnt && this._leftCnt < cnt) {
                        return;
                    }
                    if (!mod.BagUtil.checkPropCnt(this._showArgs.cost[0], this._cost * cnt, 1 /* Dialog */)) {
                        this.hide();
                        return;
                    }
                    var handler = this._showArgs.handler;
                    handler.exec(cnt);
                    this.hide();
                };
                ExchangeShopBuyTipsMdr.prototype.getCnt = function () {
                    return Number(this._view.lb_cnt.text) || 1;
                };
                ExchangeShopBuyTipsMdr.prototype.setCnt = function (cnt) {
                    this._view.lb_cnt.text = cnt + '';
                    this.updateCostIcon();
                };
                ExchangeShopBuyTipsMdr.prototype.onAdd = function () {
                    var cnt = this.getCnt();
                    if (this._leftCnt && cnt >= this._leftCnt) {
                        return;
                    }
                    this.setCnt(++cnt);
                };
                ExchangeShopBuyTipsMdr.prototype.onAddTen = function () {
                    var cnt = this.getCnt();
                    if (this._leftCnt && cnt >= this._leftCnt) {
                        return;
                    }
                    if (this._leftCnt) {
                        this.setCnt(Math.min(cnt + 10, this._leftCnt));
                    }
                    else {
                        this.setCnt(cnt + 10);
                    }
                };
                ExchangeShopBuyTipsMdr.prototype.onSubtract = function () {
                    var cnt = this.getCnt();
                    if (cnt <= 1) {
                        return;
                    }
                    this.setCnt(--cnt);
                };
                ExchangeShopBuyTipsMdr.prototype.onSubtractTen = function () {
                    var cnt = this.getCnt();
                    if (cnt <= 1) {
                        return;
                    }
                    this.setCnt(Math.max(cnt - 10, 1));
                };
                return ExchangeShopBuyTipsMdr;
            }(game.MdrBase));
            activity.ExchangeShopBuyTipsMdr = ExchangeShopBuyTipsMdr;
            __reflect(ExchangeShopBuyTipsMdr.prototype, "game.mod.activity.ExchangeShopBuyTipsMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ExchangeShopMainMdr = /** @class */ (function (_super) {
                __extends(ExchangeShopMainMdr, _super);
                function ExchangeShopMainMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ExchangeShopMainMdr.prototype.onInit = function () {
                    this._proxy = this.retProxy(215 /* ExchangeShop */);
                    _super.prototype.onInit.call(this);
                };
                ExchangeShopMainMdr.prototype.onShow = function () {
                    var types = this._proxy.getListType();
                    this._btnData = [];
                    for (var _i = 0, types_2 = types; _i < types_2.length; _i++) {
                        var type = types_2[_i];
                        var btnType = "0" + type;
                        var title = this._proxy.getTitleByType(type);
                        var coinIndex0 = this._proxy.getCoinIdByType(type);
                        var openIdx = this._proxy.getOpenIdxByType(type);
                        this._btnData.push({
                            btnType: btnType,
                            title: title,
                            coinIndex0: coinIndex0,
                            bg: "beijingtu_duihuan",
                            icon: "shop_type" + type,
                            mdr: type == 10 /* Type5 */ ? activity.ExchangeShopSpecialMdr : activity.ExchangeShopMdr,
                            hintTypes: ["27" /* Activity */, "54" /* ExchangeShop */, btnType],
                            openIdx: openIdx,
                        });
                    }
                    _super.prototype.onShow.call(this);
                };
                ExchangeShopMainMdr.prototype.onTabCheck = function (index) {
                    // this._proxy.tabIdx = +this._btnData[index].btnType;
                    // return true;
                    var data = this._btnList.source[index];
                    this._proxy.shopType = +data.btnType;
                    return _super.prototype.onTabCheck.call(this, index);
                };
                ExchangeShopMainMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return ExchangeShopMainMdr;
            }(mod.WndBaseMdr));
            activity.ExchangeShopMainMdr = ExchangeShopMainMdr;
            __reflect(ExchangeShopMainMdr.prototype, "game.mod.activity.ExchangeShopMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var CaiyunbangRankSectionMdr = /** @class */ (function (_super) {
                __extends(CaiyunbangRankSectionMdr, _super);
                function CaiyunbangRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this._startRank = 4; //展示4-9
                    _this._endRank = 9;
                    _this.isEasyHide = true;
                    return _this;
                }
                CaiyunbangRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(250 /* Caiyunbang */);
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.lab_time.visible = true;
                    this._view.img_type2.source = "caiyunyinji";
                };
                CaiyunbangRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                CaiyunbangRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._startRank = this._showArgs[0];
                    this._endRank = this._showArgs[1];
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this._endTime = this._proxy.getCurOpenAct().c_end_time;
                    if (this._endTime) {
                        this.update(TimeMgr.time);
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    this.updateView();
                };
                CaiyunbangRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                CaiyunbangRankSectionMdr.prototype.updateView = function () {
                    var rankList = this._proxy.getRankList();
                    var list = [];
                    for (var i = this._startRank; i <= this._endRank; i++) {
                        var mate = rankList[i];
                        list.push({
                            rank: i,
                            name: mate ? mate.name : game.getLanById("tishi_2" /* tishi_2 */),
                            value: mate && mate.value ? mate.value.toString() : ''
                        });
                    }
                    this._listData.replaceAll(list);
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(game.getLanById("battle_cue46" /* battle_cue46 */) + '：' + this._proxy.getMyScore());
                    var myRank = this._proxy.getMyRankNo();
                    var myRankStr = game.getLanById("tishi_13" /* tishi_13 */);
                    if (myRank) {
                        myRankStr = myRank + '';
                    }
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.getLanById("tishi_12" /* tishi_12 */) + "：" + myRankStr);
                };
                CaiyunbangRankSectionMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.lab_time.text = game.TimeUtil.formatSecond(leftTime, 'd天H时', true) + "后发放奖励";
                };
                return CaiyunbangRankSectionMdr;
            }(game.MdrBase));
            activity.CaiyunbangRankSectionMdr = CaiyunbangRankSectionMdr;
            __reflect(CaiyunbangRankSectionMdr.prototype, "game.mod.activity.CaiyunbangRankSectionMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ExchangeShopSpecialMdr = /** @class */ (function (_super) {
                __extends(ExchangeShopSpecialMdr, _super);
                function ExchangeShopSpecialMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ExchangeShopSpecialMdr.prototype.onInitList = function () {
                    this._view.list.itemRenderer = activity.ExchangeShopSpecialItem;
                    this._view.list.dataProvider = this._listData;
                };
                ExchangeShopSpecialMdr.prototype.onUpdateList = function () {
                    var list = this._proxy.getSpecialList();
                    this._listData.source = list;
                };
                return ExchangeShopSpecialMdr;
            }(activity.ExchangeShopMdr));
            activity.ExchangeShopSpecialMdr = ExchangeShopSpecialMdr;
            __reflect(ExchangeShopSpecialMdr.prototype, "game.mod.activity.ExchangeShopSpecialMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FirstModel = /** @class */ (function () {
                function FirstModel() {
                    var _a;
                    /**可领取天数 */
                    this.receive = 3;
                    this.hintType = (_a = {},
                        _a[1 /* Type1 */] = ["27" /* Activity */, "49" /* FirstCharge */, "01" /* TabBtnType01 */],
                        _a[2 /* Type2 */] = ["27" /* Activity */, "49" /* FirstCharge */, "02" /* TabBtnType02 */],
                        _a[3 /* Type3 */] = ["27" /* Activity */, "49" /* FirstCharge */, "03" /* TabBtnType03 */],
                        _a[4 /* Type4 */] = ["27" /* Activity */, "49" /* FirstCharge */, "04" /* TabBtnType04 */],
                        _a);
                    this.cache_times = false;
                }
                return FirstModel;
            }());
            activity.FirstModel = FirstModel;
            __reflect(FirstModel.prototype, "game.mod.activity.FirstModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_super_first_charge_info = msg.s2c_super_first_charge_info;
            var s2c_super_first_charge_advertise = msg.s2c_super_first_charge_advertise;
            var c2s_super_first_charge_reward = msg.c2s_super_first_charge_reward;
            var facade = base.facade;
            var s2c_first_charge = msg.s2c_first_charge;
            var TimeMgr = base.TimeMgr;
            var FirstProxy = /** @class */ (function (_super) {
                __extends(FirstProxy, _super);
                function FirstProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(FirstProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                FirstProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.FirstModel();
                    this.onProto(s2c_super_first_charge_info, this.s2c_super_first_charge_info, this);
                    this.onProto(s2c_super_first_charge_advertise, this.s2c_super_first_charge_advertise, this);
                    this.onProto(s2c_first_charge, this.s2c_first_charge, this);
                };
                /**--------------------协议start-------------------- */
                FirstProxy.prototype.s2c_super_first_charge_info = function (n) {
                    var msg = n.body;
                    if (msg) {
                        this._model.charged = msg.charged || 0;
                        this._model.infos = msg.infos || [];
                        // this._model.open_day = msg.open_day || 1;
                    }
                    this.onUpdatHint();
                    this.checkOpen();
                    this.sendNt("on_update_first_recharge_info" /* ON_UPDATE_FIRST_RECHARGE_INFO */);
                };
                FirstProxy.prototype.s2c_first_charge = function (n) {
                    var msg = n.body;
                    if (msg) {
                        this._model.one_first = msg.one_first;
                    }
                };
                /**后端通知打开弹窗 */
                FirstProxy.prototype.s2c_super_first_charge_advertise = function () {
                    if (mod.ViewMgr.getIns().checkModOpen("45" /* Shenling */)) {
                        this._model.cache_times = true;
                        return;
                    }
                    facade.showView("27" /* Activity */, "49" /* FirstCharge */);
                };
                /**
                 * 领取奖励
                 * @param index 福利大厅编号
                 * @param day_no 领取第几天的奖励
                 * */
                FirstProxy.prototype.c2s_super_first_charge_reward = function (index, day_no) {
                    var msg = new c2s_super_first_charge_reward();
                    msg.index = index;
                    msg.day_no = day_no;
                    this.sendProto(msg);
                };
                /**--------------------协议end-------------------- */
                FirstProxy.prototype.getIndex = function (type) {
                    if (type) {
                        var day = this.getDayByType(type);
                        if (day < this._model.receive) {
                            return type - 1;
                        }
                    }
                    var cfgArr = game.getConfigListByName("shouchong.json" /* Shouchong */);
                    for (var _i = 0, cfgArr_6 = cfgArr; _i < cfgArr_6.length; _i++) {
                        var cfg = cfgArr_6[_i];
                        var type_1 = cfg.index % 100;
                        var day = this.getDayByType(type_1);
                        var index = type_1 - 1;
                        if (day < this._model.receive && index >= 0) {
                            return index;
                        }
                    }
                    return 0;
                };
                /**根据类型获取配置 */
                FirstProxy.prototype.getCfgByType = function (type) {
                    var cfgArr = game.getConfigListByName("shouchong.json" /* Shouchong */);
                    for (var _i = 0, cfgArr_7 = cfgArr; _i < cfgArr_7.length; _i++) {
                        var cfg = cfgArr_7[_i];
                        if (cfg.index % 100 == type) {
                            return cfg;
                        }
                    }
                    return null;
                };
                /**获取已领取天数 */
                FirstProxy.prototype.getDayByType = function (type) {
                    if (!this._model.infos) {
                        return 0;
                    }
                    for (var _i = 0, _a = this._model.infos; _i < _a.length; _i++) {
                        var info = _a[_i];
                        if (info.index % 100 == type) {
                            return info.day;
                        }
                    }
                    return 0;
                };
                FirstProxy.prototype.onUpdatHint = function () {
                    var cfgArr = game.getConfigListByName("shouchong.json" /* Shouchong */);
                    var setHint = false;
                    for (var _i = 0, cfgArr_8 = cfgArr; _i < cfgArr_8.length; _i++) {
                        var cfg = cfgArr_8[_i];
                        var type = cfg.index % 100;
                        var day = this.getDayByType(type);
                        var bool = this._model.charged >= cfg.cost;
                        //总领取天数 > 已领取天数 && 达标开始时间到当前时间的天数 > 已领取天数
                        var bool_day = this._model.receive > day && this.getRewardDay(cfg.index) > day;
                        var hint = bool && bool_day;
                        if (hint && !setHint) {
                            this.type = type;
                            setHint = true;
                        }
                        mod.HintMgr.setHint(hint, this.getHintType(type));
                    }
                };
                /**获取红点类型 */
                FirstProxy.prototype.getHintType = function (type) {
                    return this._model.hintType[type];
                };
                Object.defineProperty(FirstProxy.prototype, "one_first", {
                    get: function () {
                        return this._model.one_first;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FirstProxy.prototype, "type", {
                    get: function () {
                        return this._model.type;
                    },
                    set: function (val) {
                        this._model.type = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FirstProxy.prototype, "cache_times", {
                    get: function () {
                        return this._model.cache_times;
                    },
                    set: function (val) {
                        this._model.cache_times = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                FirstProxy.prototype.getRewardDay = function (index) {
                    if (!this._model.infos) {
                        return 0;
                    }
                    for (var _i = 0, _a = this._model.infos; _i < _a.length; _i++) {
                        var info = _a[_i];
                        if (info.index == index) {
                            var second = TimeMgr.time.serverTimeSecond - info.time;
                            var second_tomorro = game.TimeUtil.getSecondByTomorrow(info.time);
                            if (second > second_tomorro) {
                                return Math.ceil((second - second_tomorro) / game.Second.Day) + 1;
                            }
                            else {
                                return 1;
                            }
                        }
                    }
                    return 0;
                };
                Object.defineProperty(FirstProxy.prototype, "isOpen", {
                    get: function () {
                        var cfgArr = game.getConfigListByName("shouchong.json" /* Shouchong */);
                        for (var _i = 0, cfgArr_9 = cfgArr; _i < cfgArr_9.length; _i++) {
                            var cfg = cfgArr_9[_i];
                            if (this.getDayByType(cfg.index % 100) < this._model.receive) {
                                return true;
                            }
                        }
                        return false;
                    },
                    enumerable: true,
                    configurable: true
                });
                FirstProxy.prototype.checkOpen = function () {
                    mod.BtnIconMgr.insLeft().updateOpen(1041670143 /* FirstCharge */, this.isOpen);
                };
                return FirstProxy;
            }(game.ProxyBase));
            activity.FirstProxy = FirstProxy;
            __reflect(FirstProxy.prototype, "game.mod.activity.FirstProxy", ["game.mod.IFirstProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var FirstItem = /** @class */ (function (_super) {
                __extends(FirstItem, _super);
                function FirstItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._listData = new ArrayCollection();
                    return _this;
                }
                FirstItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(209 /* First */);
                    this.list.itemRenderer = mod.IconReward;
                    this.list.dataProvider = this._listData;
                };
                FirstItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_day.source = "first_" + data.day;
                    var isGot = this._proxy.getDayByType(this._proxy.type) >= data.day;
                    var list = [];
                    for (var _i = 0, _a = data.rewards; _i < _a.length; _i++) {
                        var reward = _a[_i];
                        list.push({ prop: reward, isGot: isGot });
                    }
                    this._listData.source = list;
                };
                return FirstItem;
            }(mod.BaseRenderer));
            activity.FirstItem = FirstItem;
            __reflect(FirstItem.prototype, "game.mod.activity.FirstItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FirstView = /** @class */ (function (_super) {
                __extends(FirstView, _super);
                function FirstView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FirstSkin";
                    _this.touchEnabled = false;
                    return _this;
                }
                return FirstView;
            }(eui.Component));
            activity.FirstView = FirstView;
            __reflect(FirstView.prototype, "game.mod.activity.FirstView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var ItemTapEvent = eui.ItemTapEvent;
            var FirstMdr = /** @class */ (function (_super) {
                __extends(FirstMdr, _super);
                function FirstMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.FirstView);
                    _this._listData = new ArrayCollection();
                    _this._tabData = new ArrayCollection();
                    /**当前页签是否达到充值额度 */
                    _this._bool = false;
                    /**达标时间到当天时间达到可领取天数 */
                    _this._ontime = false;
                    _this.isEasyHide = true;
                    return _this;
                }
                FirstMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(209 /* First */);
                    //改为统一按钮了。
                    //this._view.btn.img_bg.source = "first_chongzhi";
                    this._view.list.itemRenderer = activity.FirstItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_type.itemRenderer = mod.BtnTabItem;
                    this._view.list_type.dataProvider = this._tabData;
                };
                FirstMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onClickTab, this);
                    addEventListener(this._view.btn_close, TouchEvent.TOUCH_TAP, this.hide, this);
                    this.onNt("on_update_first_recharge_info" /* ON_UPDATE_FIRST_RECHARGE_INFO */, this.onUpdateTab, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                };
                FirstMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (this._proxy.cache_times) {
                        this._proxy.cache_times = false;
                    }
                    this.onInitTabSelect();
                    this.sendNt("on_activity_icon_tips_hide" /* ON_ACTIVITY_ICON_TIPS_HIDE */);
                    this.addEftByParentScale(this._view.btn.group_eft);
                };
                //更新模型
                FirstMdr.prototype.updateAnimate = function (index) {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "shouchong_show_model");
                    this._view.grp_eff.removeChildren();
                    this.addAnimate(cfg.value[index] || cfg.value[0], this._view.grp_eff);
                    this._view.grp_eff.scaleX = this._view.grp_eff.scaleY = 1.2;
                };
                FirstMdr.prototype.onInitTabSelect = function () {
                    var list = [
                        {
                            name: "任意金额",
                            showHint: mod.HintMgr.getHint(this._proxy.getHintType(1 /* Type1 */)),
                        },
                        {
                            name: "30元累充",
                            showHint: mod.HintMgr.getHint(this._proxy.getHintType(2 /* Type2 */))
                        },
                        {
                            name: "98元累充",
                            showHint: mod.HintMgr.getHint(this._proxy.getHintType(3 /* Type3 */))
                        },
                        {
                            name: "198元累充",
                            showHint: mod.HintMgr.getHint(this._proxy.getHintType(4 /* Type4 */))
                        }
                    ];
                    this._tabData.source = list;
                    this.onUpdateTab();
                };
                FirstMdr.prototype.onUpdateTab = function () {
                    var index = this._proxy.getIndex(this._proxy.type || 0);
                    this._view.list_type.selectedIndex = index;
                    this._proxy.type = this._view.list_type.selectedIndex + 1;
                    this.updateAnimate(index);
                    this._view.img_bg.source = game.ResUtil.getUiPng("first_bg" + (index + 1));
                    this.onUpdateView();
                };
                FirstMdr.prototype.onUpdateView = function () {
                    this._cfg = this._proxy.getCfgByType(this._proxy.type);
                    if (!this._cfg) {
                        console.error("缺少配置");
                        return;
                    }
                    var str = game.TextUtil.addColor(this._proxy.model.charged + "/" + this._cfg.cost, 2330156 /* GREEN */);
                    this._view.lab_price.textFlow = game.TextUtil.parseHtml("\u5F53\u524D\u7D2F\u8BA1\u5145\u503C" + str + "\u5143");
                    this._bool = this._proxy.model.charged >= this._cfg.cost;
                    /**已领取天数 领取需要+1 */
                    var day = this._proxy.getDayByType(this._proxy.type);
                    this._ontime = this._proxy.getRewardDay(this._cfg.index) > day;
                    var list = [];
                    for (var day_1 = 1; day_1 <= 3; day_1++) {
                        var rewards = this._cfg["day" + day_1];
                        list.push({ rewards: rewards, day: day_1 });
                    }
                    this._listData.source = list;
                    if (this._bool && day >= 3) {
                        this._view.img_got.visible = true;
                        this._view.btn.visible = false;
                    }
                    else {
                        this._view.btn.visible = true;
                        this._view.img_got.visible = false;
                        this._view.btn.setImage(!this._bool ? "common_recharge" : "common_get");
                    }
                    this._view.btn.setHint(this._bool && this._ontime);
                };
                FirstMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    var list = this._tabData.source;
                    var len = list ? list.length : 0;
                    for (var i = 0; i < len; i++) {
                        var btnData = list[i];
                        var hintType = this._proxy.getHintType(i + 1);
                        var type = mod.HintMgr.getType(hintType);
                        if (type != data.node) {
                            continue;
                        }
                        if (!!btnData.showHint != data.value) { //过滤undefined!=false
                            btnData.showHint = data.value;
                            this._tabData.itemUpdated(btnData);
                        }
                        break;
                    }
                };
                FirstMdr.prototype.onClickTab = function (e) {
                    this._view.list_type.selectedIndex = e.itemIndex;
                    this._proxy.type = this._view.list_type.selectedIndex + 1;
                    this.updateAnimate(this._view.list_type.selectedIndex);
                    this._view.img_bg.source = game.ResUtil.getUiPng("first_bg" + (this._view.list_type.selectedIndex + 1));
                    this.onUpdateView();
                };
                FirstMdr.prototype.onClickBtn = function () {
                    if (this._bool && !this._ontime) {
                        game.PromptBox.getIns().show("请明日再来领取");
                        return;
                    }
                    if (this._bool && this._ontime) {
                        /**已领取天数 领取需要+1 */
                        var day = this._proxy.getDayByType(this._proxy.type);
                        this._proxy.c2s_super_first_charge_reward(this._cfg.index, day + 1);
                        return;
                    }
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "45" /* RoleRingMain */, "02" /* TabBtnType02 */);
                    this.hide();
                };
                FirstMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return FirstMdr;
            }(game.EffectMdrBase));
            activity.FirstMdr = FirstMdr;
            __reflect(FirstMdr.prototype, "game.mod.activity.FirstMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FlyRankModel = /** @class */ (function () {
                function FlyRankModel() {
                    this.rankList = {};
                    this.myData = {};
                    this.rewardStatus = {}; //1未领取   2已领取
                    this.lastRankList = {};
                    this.lastMyData = {};
                    /**************飞升礼包***************/
                    this.giftList = {};
                    /**************飞升返利***************/
                    this.scoreList = {};
                    this.indexList = {};
                    this.loopNumList = {};
                    /**************飞升令***************/
                    this.warIndex1 = {}; ////战令普通奖励已领取最高索引（飞升战令）
                    this.warIndex2 = {}; ////战令充值奖励已领取的最高索引（飞升战令）
                    this.warIsBuy = {}; //0未购买   1已购买
                }
                FlyRankModel.prototype.clear = function () {
                    this.rankList = {};
                    this.myData = {};
                    this.rewardStatus = {};
                    this.lastRankList = {};
                    this.lastMyData = {};
                    this.giftList = {};
                    this.scoreList = {};
                    this.indexList = {};
                    this.loopNumList = {};
                    this.warIndex1 = {};
                    this.warIndex2 = {};
                    this.warIsBuy = {};
                };
                return FlyRankModel;
            }());
            activity.FlyRankModel = FlyRankModel;
            __reflect(FlyRankModel.prototype, "game.mod.activity.FlyRankModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_activity_feishen_send_rank_info = msg.s2c_activity_feishen_send_rank_info;
            var c2s_activity_feishen_gift_info = msg.c2s_activity_feishen_gift_info;
            var s2c_activity_feishen_gift_info = msg.s2c_activity_feishen_gift_info;
            var c2s_activity_feishen_score_get_rewards = msg.c2s_activity_feishen_score_get_rewards;
            var s2c_activity_feishen_score_rewards_info = msg.s2c_activity_feishen_score_rewards_info;
            var c2s_activity_feishen_gameorder_get_rewards = msg.c2s_activity_feishen_gameorder_get_rewards;
            var s2c_activity_feishen_gameorder_info = msg.s2c_activity_feishen_gameorder_info;
            var facade = base.facade;
            var Handler = base.Handler;
            var FlyRankProxy = /** @class */ (function (_super) {
                __extends(FlyRankProxy, _super);
                function FlyRankProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FlyRankProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.FlyRankModel();
                    this.onProto(s2c_activity_feishen_send_rank_info, this.s2c_activity_feishen_send_rank_info, this);
                    this.onProto(s2c_activity_feishen_gift_info, this.s2c_activity_feishen_gift_info, this);
                    this.onProto(s2c_activity_feishen_score_rewards_info, this.s2c_activity_feishen_score_rewards_info, this);
                    this.onProto(s2c_activity_feishen_gameorder_info, this.s2c_activity_feishen_gameorder_info, this);
                };
                FlyRankProxy.prototype.onStartReconnect = function () {
                    _super.prototype.onStartReconnect.call(this);
                    this._model.clear();
                };
                FlyRankProxy.prototype.s2c_activity_feishen_send_rank_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    if (msg.type == 2 /* LastRank */) {
                        if (msg.rank_list) {
                            this._model.lastRankList[msg.act_id] = msg.rank_list; //上一期排行
                        }
                        if (msg.my_data) {
                            this._model.lastMyData[msg.act_id] = msg.my_data;
                        }
                        this.sendNt("on_fly_rank_update_last_rank" /* ON_FLY_RANK_UPDATE_LAST_RANK */);
                        return;
                    }
                    if (msg.rank_list && msg.type == 1 /* Rank */) {
                        this._model.rankList[msg.act_id] = msg.rank_list; //当前排行
                    }
                    if (msg.my_data) {
                        this._model.myData[msg.act_id] = msg.my_data;
                    }
                    if (msg.reward_status) {
                        this._model.rewardStatus[msg.act_id] = msg.reward_status;
                        this.updateRankHint();
                    }
                    this.sendNt("on_fly_rank_update" /* ON_FLY_RANK_UPDATE */);
                };
                FlyRankProxy.prototype.getRankProp = function (actInfo) {
                    return actInfo && actInfo.param ? actInfo.param[1] : 0; //进阶丹
                };
                //获取巅峰奖励所需积分
                //条件1：奖励类型，条件2：名次，条件3：巅峰积分
                FlyRankProxy.prototype.getTopScore = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_5 = rewardList; _i < rewardList_5.length; _i++) {
                        var reward = rewardList_5[_i];
                        if (!this.isReward(reward, 2 /* Top */)) {
                            continue;
                        }
                        var score = reward.cond_3 && reward.cond_3[0];
                        if (score) {
                            return score;
                        }
                    }
                    return 0;
                };
                //根据排名获取巅峰奖励
                FlyRankProxy.prototype.getTopRewards = function (actInfo, curRank, maxRank) {
                    var rewardList = actInfo.reward_list;
                    var topMaxRank = 0; //巅峰奖励配置的最大名次
                    var topMaxReward = []; //巅峰奖励配置的最大名次奖励
                    for (var i = 0; i < rewardList.length; ++i) {
                        var reward = rewardList[i];
                        if (!this.isReward(reward, 2 /* Top */)) {
                            continue;
                        }
                        var rank = this.getRank(reward);
                        if (curRank == rank) {
                            return reward.rewards; //取当前奖励
                        }
                        else if (curRank < rank) {
                            return rewardList[i - 1].rewards; //取上一个奖励
                        }
                        if (rank > topMaxRank) {
                            topMaxRank = rank;
                            topMaxReward = reward.rewards;
                        }
                    }
                    if (curRank > maxRank && topMaxRank >= curRank) {
                        return topMaxReward; //取最大奖励
                    }
                    return [];
                };
                //配置51的话，取50，显示成50+
                FlyRankProxy.prototype.getMaxRank = function (actInfo) {
                    var maxRank = 0;
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_6 = rewardList; _i < rewardList_6.length; _i++) {
                        var reward = rewardList_6[_i];
                        if (!this.isReward(reward)) {
                            continue;
                        }
                        var rank = this.getRank(reward);
                        if (rank > maxRank) {
                            maxRank = rank;
                        }
                    }
                    return maxRank - 1;
                };
                //传4进来,配置了4、11的话，返回10
                FlyRankProxy.prototype.getNextRank = function (actInfo, curRank) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_7 = rewardList; _i < rewardList_7.length; _i++) {
                        var reward = rewardList_7[_i];
                        if (!this.isReward(reward)) {
                            continue;
                        }
                        var rank = this.getRank(reward);
                        if (rank > curRank) {
                            return rank - 1;
                        }
                    }
                    return curRank;
                };
                //排名奖励列表
                FlyRankProxy.prototype.getRewardList = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    var rewards = [];
                    for (var _i = 0, rewardList_8 = rewardList; _i < rewardList_8.length; _i++) {
                        var reward = rewardList_8[_i];
                        if (!this.isReward(reward)) {
                            continue;
                        }
                        rewards.push(reward);
                    }
                    return rewards;
                };
                //是否对应类型的奖励，条件1：奖励类型
                FlyRankProxy.prototype.isReward = function (reward, type) {
                    if (type === void 0) { type = 1 /* Rank */; }
                    return reward.cond_1 && reward.cond_1[0] == type;
                };
                //条件2：名次
                FlyRankProxy.prototype.getRank = function (reward) {
                    return reward.cond_2 && reward.cond_2[0];
                };
                FlyRankProxy.prototype.getMyData = function (actId) {
                    return this._model.myData[actId] || null;
                };
                FlyRankProxy.prototype.getLastMyData = function (actId) {
                    return this._model.lastMyData[actId] || null;
                };
                FlyRankProxy.prototype.getRankList = function (actId) {
                    return this._model.rankList[actId] || [];
                };
                FlyRankProxy.prototype.getLastRankList = function (actId) {
                    return this._model.lastRankList[actId] || [];
                };
                FlyRankProxy.prototype.canDraw = function (actId) {
                    var rewardStatus = this._model.rewardStatus[actId];
                    return rewardStatus == 1 /* Finish */;
                };
                FlyRankProxy.prototype.getRankInfo = function (actId, rank) {
                    var rankList = this._model.rankList[actId];
                    if (!rankList) {
                        return null;
                    }
                    for (var _i = 0, rankList_3 = rankList; _i < rankList_3.length; _i++) {
                        var info = rankList_3[_i];
                        if (info.rank_num == rank) {
                            return info;
                        }
                    }
                    return null;
                };
                //榜一名字
                FlyRankProxy.prototype.getFirstRankName = function (actInfo) {
                    var topInfo = this.getRankInfo(actInfo.act_id, 1);
                    return topInfo && topInfo.name ? topInfo.name : game.getLanById("tishi_2" /* tishi_2 */);
                };
                //更新排行榜红点，todo：需要注意的
                FlyRankProxy.prototype.updateRankHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(8 /* FlyRank */, Handler.alloc(this, this.getRankHint));
                };
                FlyRankProxy.prototype.getRankHint = function (actInfo) {
                    return this.canDraw(actInfo.act_id);
                };
                /********************************飞升礼包****************************************/
                FlyRankProxy.prototype.c2s_activity_feishen_gift_info = function (actId, index) {
                    var msg = new c2s_activity_feishen_gift_info();
                    msg.act_id = actId;
                    msg.index = index;
                    this.sendProto(msg);
                };
                FlyRankProxy.prototype.s2c_activity_feishen_gift_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    this._model.giftList[msg.act_id] = msg.list || []; //直接做数据覆盖，服务端跨天会清数据
                    // if(!this._model.giftList[msg.act_id]){
                    //     this._model.giftList[msg.act_id] = msg.list;
                    // }
                    // else {
                    //     for(let info of msg.list){
                    //         let pos = this.getInfoPos(msg.act_id, info.index);
                    //         if(pos >= 0){
                    //             this._model.giftList[msg.act_id][pos] = info;
                    //         }
                    //         else {
                    //             this._model.giftList[msg.act_id].push(info);
                    //         }
                    //     }
                    // }
                    this.updateGiftHint();
                    this.sendNt("on_fly_rank_update_gift" /* ON_FLY_RANK_UPDATE_GIFT */);
                };
                FlyRankProxy.prototype.getInfoPos = function (actId, index) {
                    if (!this._model.giftList[actId]) {
                        return -1;
                    }
                    var len = this._model.giftList[actId].length;
                    for (var i = 0; i < len; ++i) {
                        var oldInfo = this._model.giftList[actId][i];
                        if (index == oldInfo.index) {
                            return i;
                        }
                    }
                    return -1;
                };
                FlyRankProxy.prototype.getGiftBuyCnt = function (actId, index) {
                    var pos = this.getInfoPos(actId, index);
                    if (pos < 0) {
                        return 0;
                    }
                    return this._model.giftList[actId][pos].num;
                };
                FlyRankProxy.prototype.hasGiftBuy = function (actId, reward) {
                    var buyCnt = this.getGiftBuyCnt(actId, reward.index);
                    var limitCnt = reward.cond_3 && reward.cond_3[0] || 0;
                    return buyCnt >= limitCnt;
                };
                //条件1购买类型
                FlyRankProxy.prototype.getGiftType = function (reward) {
                    return reward && reward.cond_1 && reward.cond_1[0] || 0;
                };
                //条件2购买所需仙玉或者商品ID
                FlyRankProxy.prototype.getGiftCost = function (reward) {
                    return reward && reward.cond_2 && reward.cond_2[0] || 0;
                };
                //更新排行榜红点
                FlyRankProxy.prototype.updateGiftHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(9 /* FlyGift */, Handler.alloc(this, this.getGiftHint));
                };
                FlyRankProxy.prototype.getGiftHint = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_9 = rewardList; _i < rewardList_9.length; _i++) {
                        var reward = rewardList_9[_i];
                        var hasBuy = this.hasGiftBuy(actInfo.act_id, reward);
                        if (hasBuy) {
                            continue;
                        }
                        var buyType = this.getGiftType(reward);
                        if (buyType == 2 /* Rmb */) {
                            continue;
                        }
                        var cnt = this.getGiftCost(reward);
                        if (mod.BagUtil.checkPropCnt(1450000002 /* Xianyu */, cnt)) {
                            return true;
                        }
                    }
                    return false;
                };
                /********************************飞升返利****************************************/
                FlyRankProxy.prototype.c2s_activity_feishen_score_get_rewards = function (actId, index) {
                    var msg = new c2s_activity_feishen_score_get_rewards();
                    msg.act_id = actId;
                    msg.index = index;
                    this.sendProto(msg);
                };
                FlyRankProxy.prototype.s2c_activity_feishen_score_rewards_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    if (msg.score != undefined) {
                        this._model.scoreList[msg.act_id] = msg.score;
                    }
                    this._model.indexList[msg.act_id] = msg.indexs || [];
                    if (msg.loop_num != undefined) {
                        this._model.loopNumList[msg.act_id] = msg.loop_num;
                    }
                    this.updateRebateHint();
                    this.sendNt("on_fly_rank_update_rebate" /* ON_FLY_RANK_UPDATE_REBATE */);
                };
                FlyRankProxy.prototype.getScore = function (actId) {
                    if (!this._model.scoreList[actId]) {
                        return 0;
                    }
                    return this._model.scoreList[actId].toNumber();
                };
                FlyRankProxy.prototype.getLoopNum = function (actId) {
                    if (!this._model.loopNumList[actId]) {
                        return 0;
                    }
                    return this._model.loopNumList[actId];
                };
                FlyRankProxy.prototype.hasRebateDraw = function (actId, reward) {
                    if (!this._model.indexList[actId]) {
                        return false;
                    }
                    var indexList = this._model.indexList[actId];
                    return indexList.indexOf(reward.index) > -1;
                };
                FlyRankProxy.prototype.canRebateDraw = function (actId, reward) {
                    if (this.hasRebateDraw(actId, reward)) {
                        return false;
                    }
                    var score = this.getScore(actId);
                    //条件1：积分
                    var limitScore = reward.cond_1 && reward.cond_1[0] || 0;
                    return score >= limitScore;
                };
                //更新返利红点
                FlyRankProxy.prototype.updateRebateHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(10 /* FlyRebate */, Handler.alloc(this, this.getRebateHint));
                };
                FlyRankProxy.prototype.getRebateHint = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_10 = rewardList; _i < rewardList_10.length; _i++) {
                        var reward = rewardList_10[_i];
                        if (this.canRebateDraw(actInfo.act_id, reward)) {
                            return true;
                        }
                    }
                    return false;
                };
                /********************************飞升特惠****************************************/
                FlyRankProxy.prototype.c2s_activity_feishen_gameorder_get_rewards = function (actId) {
                    var msg = new c2s_activity_feishen_gameorder_get_rewards();
                    msg.act_id = actId;
                    this.sendProto(msg);
                };
                FlyRankProxy.prototype.s2c_activity_feishen_gameorder_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    if (msg.index1 != undefined) {
                        this._model.warIndex1[msg.act_id] = msg.index1;
                    }
                    if (msg.index2 != undefined) {
                        this._model.warIndex2[msg.act_id] = msg.index2;
                    }
                    if (msg.is_buy != undefined) {
                        this._model.warIsBuy[msg.act_id] = msg.is_buy;
                    }
                    this.updateWarHint();
                    this.sendNt("on_fly_rank_update_war" /* ON_FLY_RANK_UPDATE_WAR */);
                };
                FlyRankProxy.prototype.hasWarBuy = function (actId) {
                    if (!this._model.warIsBuy[actId]) {
                        return false;
                    }
                    return this._model.warIsBuy[actId] == 1; //1已购买
                };
                FlyRankProxy.prototype.getWarIndex1 = function (actId) {
                    if (!this._model.warIndex1[actId]) {
                        return 0;
                    }
                    return this._model.warIndex1[actId];
                };
                FlyRankProxy.prototype.hasWarDraw1 = function (actId, index) {
                    if (!this._model.warIndex1[actId]) {
                        return false;
                    }
                    return this._model.warIndex1[actId] >= index;
                };
                FlyRankProxy.prototype.hasWarDraw2 = function (actId, index) {
                    if (!this._model.warIndex2[actId]) {
                        return false;
                    }
                    return this._model.warIndex2[actId] >= index;
                };
                FlyRankProxy.prototype.canWarDraw1 = function (actId, reward) {
                    if (this.hasWarDraw1(actId, reward.index)) {
                        return false;
                    }
                    //条件1：奖励类型，条件2：所需经验
                    return this.checkExpEnough(reward);
                };
                FlyRankProxy.prototype.canWarDraw2 = function (actId, reward) {
                    if (!this.hasWarBuy(actId)) {
                        return false;
                    }
                    if (this.hasWarDraw2(actId, reward.index)) {
                        return false;
                    }
                    return this.checkExpEnough(reward);
                };
                FlyRankProxy.prototype.checkExpEnough = function (reward) {
                    var limitExp = this.getLimitExp(reward);
                    var curExp = mod.BagUtil.getPropCntByIdx(1450000032 /* Feishengjingyanzhi */);
                    return curExp >= limitExp;
                };
                //普通奖励列表
                FlyRankProxy.prototype.getNormalRewardList = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    var rewards = [];
                    for (var _i = 0, rewardList_11 = rewardList; _i < rewardList_11.length; _i++) {
                        var reward = rewardList_11[_i];
                        if (!this.isNormalReward(reward)) {
                            continue;
                        }
                        rewards.push(reward);
                    }
                    return rewards;
                };
                //战令奖励列表
                FlyRankProxy.prototype.getWarRewardList = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    var rewards = [];
                    for (var _i = 0, rewardList_12 = rewardList; _i < rewardList_12.length; _i++) {
                        var reward = rewardList_12[_i];
                        if (this.isNormalReward(reward)) {
                            continue;
                        }
                        rewards.push(reward);
                    }
                    return rewards;
                };
                FlyRankProxy.prototype.getNormalReward = function (actInfo, index) {
                    var rewardList = this.getNormalRewardList(actInfo);
                    for (var _i = 0, rewardList_13 = rewardList; _i < rewardList_13.length; _i++) {
                        var reward = rewardList_13[_i];
                        if (reward.index == index) {
                            return reward;
                        }
                    }
                    return null;
                };
                FlyRankProxy.prototype.getWarRewardByNormalIndex = function (actInfo, index) {
                    //index是普通奖励的index
                    var normalReward = this.getNormalReward(actInfo, index);
                    var normalExp = this.getLimitExp(normalReward);
                    var rewardList = this.getWarRewardList(actInfo);
                    for (var _i = 0, rewardList_14 = rewardList; _i < rewardList_14.length; _i++) {
                        var reward = rewardList_14[_i];
                        var warExp = this.getLimitExp(reward);
                        if (normalExp == warExp) {
                            return reward;
                        }
                    }
                    return null;
                };
                //是否对应类型的奖励，条件1：奖励类型
                FlyRankProxy.prototype.isNormalReward = function (reward) {
                    return reward.cond_1 && reward.cond_1[0] == 1 /* Normal */;
                };
                //条件2：所需经验
                FlyRankProxy.prototype.getLimitExp = function (reward) {
                    return reward && reward.cond_2 && reward.cond_2[0] || 0;
                };
                //条件3：奖励展示节点
                FlyRankProxy.prototype.isWarShow = function (reward) {
                    return reward && reward.cond_3 && reward.cond_3.length && !!reward.cond_3[0];
                };
                //更新飞升特惠红点
                FlyRankProxy.prototype.updateWarHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(11 /* FlyWar */, Handler.alloc(this, this.getWarHint));
                };
                FlyRankProxy.prototype.getWarHint = function (actInfo) {
                    if (this.getWarRewardHint(actInfo)) {
                        return true;
                    }
                    return mod.TaskUtil.getTaskHint(43 /* Fly */);
                };
                FlyRankProxy.prototype.getWarRewardHint = function (actInfo) {
                    var rewardList = this.getNormalRewardList(actInfo);
                    for (var _i = 0, rewardList_15 = rewardList; _i < rewardList_15.length; _i++) {
                        var reward = rewardList_15[_i];
                        if (this.canWarDraw1(actInfo.act_id, reward)) {
                            return true;
                        }
                        var rewardInfo = this.getWarRewardByNormalIndex(actInfo, reward.index); //进阶奖励
                        if (this.canWarDraw2(actInfo.act_id, rewardInfo)) {
                            return true;
                        }
                    }
                    return false;
                };
                FlyRankProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("diamond" /* diamond */) >= 0) {
                        /**写死仙玉变更时候刷新，需要其他道具时再做支持*/
                        this.updateGiftHint();
                    }
                    if (keys.indexOf("feisheng_exp" /* feisheng_exp */) >= 0) {
                        this.updateWarHint();
                    }
                };
                FlyRankProxy.prototype.onTaskHint = function (n) {
                    var types = n.body;
                    var type = 43 /* Fly */;
                    if (types.indexOf(type) < 0) {
                        return;
                    }
                    this.updateWarHint();
                };
                return FlyRankProxy;
            }(game.ProxyBase));
            activity.FlyRankProxy = FlyRankProxy;
            __reflect(FlyRankProxy.prototype, "game.mod.activity.FlyRankProxy", ["game.mod.IFlyRankProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var FlyGiftRender = /** @class */ (function (_super) {
                __extends(FlyGiftRender, _super);
                function FlyGiftRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FlyGiftRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._flyRankProxy = facade.retMod("27" /* Activity */).retProxy(245 /* FlyRank */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_buy, this.onClick, this);
                };
                FlyGiftRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.index;
                    this.img_type.source = "chaozhi_lab" + index;
                    var descStr = data.desc || "";
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    this._rewardList.source = data.rewards.slice(0, 3);
                    var actInfo = this._proxy.curOpenAct;
                    var buyCnt = this._flyRankProxy.getGiftBuyCnt(actInfo.act_id, index);
                    //条件1：购买类型1仙玉2人民币，条件2：仙玉数量或商品ID，条件3：每日限购次数
                    var limitCnt = data.cond_3 && data.cond_3[0] || 0;
                    var hasBuy = this._flyRankProxy.hasGiftBuy(actInfo.act_id, data);
                    this.img_bought.visible = hasBuy;
                    this.btn_buy.visible = !hasBuy;
                    var limitStr = "";
                    if (!hasBuy) {
                        var leftCnt = limitCnt - buyCnt;
                        limitStr = game.getLanById("store5" /* store5 */) + game.TextUtil.addColor(leftCnt + "/" + limitCnt, 2330156 /* GREEN */);
                    }
                    this.lab_limit.textFlow = game.TextUtil.parseHtml(limitStr);
                    if (this.btn_buy.visible) {
                        var buyType = this._flyRankProxy.getGiftType(data);
                        var cnt = this._flyRankProxy.getGiftCost(data);
                        this._cnt = cnt;
                        this._isRmb = buyType == 2 /* Rmb */;
                        if (this._isRmb) {
                            //人民币购买
                            var rmbStr = mod.PayUtil.getRmbValue(cnt) + mod.PayUtil.getRmbUnit();
                            this.btn_buy.labelDisplay.text = rmbStr;
                            this.btn_buy.redPoint.visible = false;
                            this.btn_buy.resetCost();
                        }
                        else {
                            //仙玉购买
                            this.btn_buy.setCost([1450000002 /* Xianyu */, cnt]);
                            this.btn_buy.redPoint.visible = mod.BagUtil.checkPropCnt(1450000002 /* Xianyu */, cnt);
                            this.btn_buy.labelDisplay.text = "";
                        }
                    }
                };
                FlyGiftRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (this._isRmb) {
                        //人民币购买
                        mod.PayUtil.pay(this._cnt);
                    }
                    else {
                        //仙玉购买
                        if (!mod.BagUtil.checkPropCntUp(1450000002 /* Xianyu */, this._cnt)) {
                            return;
                        }
                        var index = data.index;
                        var actInfo = this._proxy.curOpenAct;
                        this._flyRankProxy.c2s_activity_feishen_gift_info(actInfo.act_id, index);
                    }
                };
                return FlyGiftRender;
            }(mod.BaseListenerRenderer));
            activity.FlyGiftRender = FlyGiftRender;
            __reflect(FlyGiftRender.prototype, "game.mod.activity.FlyGiftRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FlyGiftView = /** @class */ (function (_super) {
                __extends(FlyGiftView, _super);
                function FlyGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FlyGiftSkin";
                    return _this;
                }
                return FlyGiftView;
            }(eui.Component));
            activity.FlyGiftView = FlyGiftView;
            __reflect(FlyGiftView.prototype, "game.mod.activity.FlyGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TextEvent = egret.TextEvent;
            var FlyRankRender = /** @class */ (function (_super) {
                __extends(FlyRankRender, _super);
                function FlyRankRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FlyRankRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._rewardList2 = new ArrayCollection();
                    this.list_reward2.itemRenderer = mod.Icon;
                    this.list_reward2.dataProvider = this._rewardList2;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._flyRankProxy = facade.retMod("27" /* Activity */).retProxy(245 /* FlyRank */);
                    this.lab_look.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */), 3496307 /* DEFAULT */, ""));
                    this.addEventListenerEx(TextEvent.LINK, this.lab_look, this.onClick, this);
                };
                FlyRankRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    //条件1：奖励类型，条件2：名次，条件3：巅峰积分
                    var rankNo = data.cond_2 && data.cond_2[0];
                    this.currentState = rankNo == 1 ? "first" : "default";
                    this.lab_look.visible = false;
                    var nameStr = "";
                    var actInfo = this._proxy.curOpenAct;
                    var maxRank = this._flyRankProxy.getMaxRank(actInfo);
                    if (rankNo <= 3) {
                        //前三名显示图标
                        this.img_rank.visible = true;
                        this.img_rank.source = 'rank' + rankNo;
                        this.lab_rank.text = "";
                        //玩家信息
                        var rankInfo = this._flyRankProxy.getRankInfo(actInfo.act_id, rankNo);
                        if (rankInfo && rankInfo.role_id) {
                            nameStr = rankInfo.name + "\n" + game.getLanById("zmFight_tips3" /* zmFight_tips3 */) + ":" + rankInfo.value;
                        }
                        else {
                            nameStr = game.getLanById("tishi_2" /* tishi_2 */); //虚位以待
                        }
                    }
                    else {
                        this.img_rank.visible = false;
                        if (rankNo > maxRank) {
                            this.lab_rank.text = maxRank + "+"; //50+
                        }
                        else {
                            var nextRank = this._flyRankProxy.getNextRank(actInfo, rankNo);
                            this.lab_rank.text = rankNo + "-" + nextRank; ////4-10
                            this.lab_look.visible = true;
                            this._start = rankNo;
                            this._end = nextRank;
                        }
                    }
                    this.lab_name.text = nameStr;
                    this._rewardList.source = data.rewards.slice(0, 2);
                    var topRewards = this._flyRankProxy.getTopRewards(actInfo, rankNo, maxRank);
                    this._rewardList2.source = topRewards.slice(0, 1);
                };
                FlyRankRender.prototype.onClick = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "90" /* FlyRankSection */, { start: this._start, end: this._end });
                };
                return FlyRankRender;
            }(mod.BaseListenerRenderer));
            activity.FlyRankRender = FlyRankRender;
            __reflect(FlyRankRender.prototype, "game.mod.activity.FlyRankRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FlyRankView = /** @class */ (function (_super) {
                __extends(FlyRankView, _super);
                function FlyRankView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FlyRankSkin";
                    return _this;
                }
                return FlyRankView;
            }(eui.Component));
            activity.FlyRankView = FlyRankView;
            __reflect(FlyRankView.prototype, "game.mod.activity.FlyRankView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var FlyRebateRender = /** @class */ (function (_super) {
                __extends(FlyRebateRender, _super);
                function FlyRebateRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FlyRebateRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._flyRankProxy = facade.retMod("27" /* Activity */).retProxy(245 /* FlyRank */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_draw, this.onClickDraw, this);
                };
                FlyRebateRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    //条件1：积分
                    var limitScore = data.cond_1 && data.cond_1[0] || 0;
                    var score = this._flyRankProxy.getScore(actInfo.act_id);
                    var descStr = game.StringUtil.substitute(game.getLanById("fly_rank_tips5" /* fly_rank_tips5 */), [limitScore])
                        + game.TextUtil.addColor("(" + score + "/" + limitScore + ")", score >= limitScore ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    this._rewardList.source = data.rewards.slice(0, 3);
                    var hasDraw = this._flyRankProxy.hasRebateDraw(actInfo.act_id, data);
                    this.btn_draw.visible = !hasDraw;
                    this.img_draw.visible = hasDraw;
                    if (this.btn_draw.visible) {
                        var canDraw = this._flyRankProxy.canRebateDraw(actInfo.act_id, data);
                        this._canDraw = canDraw;
                        this.btn_draw.redPoint.visible = canDraw;
                        if (canDraw) {
                            this.btn_draw.labelDisplay.text = game.getLanById("tishi_29" /* tishi_29 */);
                            this.btn_draw.setYellow();
                        }
                        else {
                            this.btn_draw.labelDisplay.text = game.getLanById("goto" /* goto */);
                            this.btn_draw.setBlue();
                        }
                    }
                };
                FlyRebateRender.prototype.onClickDraw = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    if (this._canDraw) {
                        var index = data.index;
                        this._flyRankProxy.c2s_activity_feishen_score_get_rewards(actInfo.act_id, index);
                        return;
                    }
                    var rankAct = this._proxy.getOperActByType(8 /* FlyRank */, actInfo.entrance);
                    if (!rankAct) {
                        return;
                    }
                    var propIndex = this._flyRankProxy.getRankProp(rankAct);
                    var jumpIdx = game.FlyPropToJumpIdx[propIndex];
                    if (!jumpIdx) {
                        return;
                    }
                    mod.ViewMgr.getIns().showViewByID(jumpIdx);
                    //facade.sendNt(ActivityEvent.ON_ACTIVITY_SEL_TAB, ActivityType.FlyRank);
                };
                return FlyRebateRender;
            }(mod.BaseListenerRenderer));
            activity.FlyRebateRender = FlyRebateRender;
            __reflect(FlyRebateRender.prototype, "game.mod.activity.FlyRebateRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FlyRebateView = /** @class */ (function (_super) {
                __extends(FlyRebateView, _super);
                function FlyRebateView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FlyRebateSkin";
                    return _this;
                }
                return FlyRebateView;
            }(eui.Component));
            activity.FlyRebateView = FlyRebateView;
            __reflect(FlyRebateView.prototype, "game.mod.activity.FlyRebateView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FlyTaskView = /** @class */ (function (_super) {
                __extends(FlyTaskView, _super);
                function FlyTaskView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FlyTaskSkin";
                    return _this;
                }
                return FlyTaskView;
            }(eui.Component));
            activity.FlyTaskView = FlyTaskView;
            __reflect(FlyTaskView.prototype, "game.mod.activity.FlyTaskView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var ItemTapEvent = eui.ItemTapEvent;
            var TouchEvent = egret.TouchEvent;
            var FlyWarRender = /** @class */ (function (_super) {
                __extends(FlyWarRender, _super);
                function FlyWarRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FlyWarRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list.itemRenderer = mod.IconGot;
                    this.list.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._flyRankProxy = facade.retMod("27" /* Activity */).retProxy(245 /* FlyRank */);
                    this.grp_bar.visible = true;
                    this.lab_tips.visible = false;
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.icon, this.onClick, this);
                    this.addEventListenerEx(ItemTapEvent.ITEM_TAP, this.list, this.onClickItem, this);
                };
                FlyWarRender.prototype.dataChanged = function () {
                    var data = this.data; //普通奖励配置
                    if (!data) {
                        return;
                    }
                    var index = data.index; //普通奖励的index
                    var actInfo = this._proxy.curOpenAct;
                    var hasBuy = this._flyRankProxy.hasWarBuy(actInfo.act_id);
                    this.img_gray.visible = !hasBuy;
                    var isGot1 = this._flyRankProxy.hasWarDraw1(actInfo.act_id, index);
                    var canDraw1 = this._flyRankProxy.canWarDraw1(actInfo.act_id, data);
                    var reward = data.rewards[0];
                    var rewardData = {
                        prop: game.PropData.create(reward.idx, reward.cnt),
                        isGot: isGot1,
                        showTips: false,
                        showHint: canDraw1,
                    };
                    this.icon.setData(rewardData);
                    var rewardInfo = this._flyRankProxy.getWarRewardByNormalIndex(actInfo, index); //进阶奖励
                    var index2 = rewardInfo.index;
                    var isGot2 = this._flyRankProxy.hasWarDraw2(actInfo.act_id, index2);
                    var canDraw2 = this._flyRankProxy.canWarDraw2(actInfo.act_id, rewardInfo);
                    var rewardList = rewardInfo.rewards;
                    var list = [];
                    for (var i = 0; i < rewardList.length && i < 2; ++i) {
                        var reward_1 = rewardList[i];
                        list.push({
                            prop: game.PropData.create(reward_1.idx, reward_1.cnt),
                            isGot: isGot2,
                            showTips: false,
                            showHint: canDraw2,
                            isLock: !hasBuy
                        });
                    }
                    this._rewardList.source = list;
                    //条件1：奖励类型，条件2：所需经验
                    var limitExp = this._flyRankProxy.getLimitExp(data);
                    if (this.grp_bar.visible) {
                        this.lab_val.text = limitExp + "";
                        var beforeRewardInfo = this._flyRankProxy.getWarRewardByNormalIndex(actInfo, index - 1);
                        var beforeVal = this._flyRankProxy.getLimitExp(beforeRewardInfo);
                        var start = beforeVal ? Math.round((limitExp - beforeVal) / 2 + beforeVal) : 0;
                        var val = mod.BagUtil.getPropCntByIdx(1450000032 /* Feishengjingyanzhi */);
                        var nextRewardInfo = this._flyRankProxy.getWarRewardByNormalIndex(actInfo, index + 1);
                        var nextVal = this._flyRankProxy.getLimitExp(nextRewardInfo);
                        var next = nextVal ? Math.round((nextVal - limitExp) / 2 + limitExp) : 0;
                        this.bar.setData({ start: start, val: val, target: limitExp, next: next });
                    }
                    if (this.lab_tips.visible) {
                        this.lab_tips.text = limitExp + "经验获得";
                    }
                };
                FlyWarRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rewardData = this.icon.data;
                    this.clickIcon(rewardData);
                };
                FlyWarRender.prototype.onClickItem = function (e) {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rewardData = e.item;
                    this.clickIcon(rewardData);
                };
                FlyWarRender.prototype.clickIcon = function (rewardData) {
                    if (!rewardData.showHint) {
                        var propData = rewardData.prop;
                        mod.ViewMgr.getIns().showPropTips(propData);
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    this._flyRankProxy.c2s_activity_feishen_gameorder_get_rewards(actInfo.act_id);
                };
                FlyWarRender.prototype.setShowReward = function (data) {
                    this.grp_bar.visible = false;
                    this.lab_tips.visible = true;
                    this.data = data;
                };
                return FlyWarRender;
            }(mod.BaseListenerRenderer));
            activity.FlyWarRender = FlyWarRender;
            __reflect(FlyWarRender.prototype, "game.mod.activity.FlyWarRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FlyWarView = /** @class */ (function (_super) {
                __extends(FlyWarView, _super);
                function FlyWarView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FlyWarSkin";
                    return _this;
                }
                return FlyWarView;
            }(eui.Component));
            activity.FlyWarView = FlyWarView;
            __reflect(FlyWarView.prototype, "game.mod.activity.FlyWarView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalModel = /** @class */ (function () {
                function CarnivalModel() {
                    this.mibaoList = {}; //秘宝已领取的奖励
                    this.giftList = {};
                    this.scoreList = {};
                    this.indexList = {};
                    this.loopNumList = {};
                    this.zhaohuanScoreList = {};
                    this.zhaohuanIndexList = {};
                    this.rankList = {};
                    this.myData = {};
                    this.rewardStatus = {}; //1未领取   2已领取
                    this.lastRankList = {};
                    this.lastMyData = {};
                }
                CarnivalModel.prototype.clear = function () {
                    this.mibaoList = {};
                    this.giftList = {};
                    this.scoreList = {};
                    this.indexList = {};
                    this.loopNumList = {};
                    this.zhaohuanScoreList = {};
                    this.zhaohuanIndexList = {};
                    this.rankList = {};
                    this.myData = {};
                    this.rewardStatus = {};
                    this.lastRankList = {};
                    this.lastMyData = {};
                };
                return CarnivalModel;
            }());
            activity.CarnivalModel = CarnivalModel;
            __reflect(CarnivalModel.prototype, "game.mod.activity.CarnivalModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_activity_kuanghuan_mibao_get_reward = msg.c2s_activity_kuanghuan_mibao_get_reward;
            var s2c_activity_kuanghuan_mibao_info = msg.s2c_activity_kuanghuan_mibao_info;
            var c2s_activity_kuanghuan_gift_buy = msg.c2s_activity_kuanghuan_gift_buy;
            var s2c_activity_kuanghuan_gift_info = msg.s2c_activity_kuanghuan_gift_info;
            var facade = base.facade;
            var Handler = base.Handler;
            var c2s_activity_kuanghuan_geren_zhaohuan_get_reward = msg.c2s_activity_kuanghuan_geren_zhaohuan_get_reward;
            var s2c_activity_kuanghuan_zhaohuan_status = msg.s2c_activity_kuanghuan_zhaohuan_status;
            var c2s_activity_kuanghuan_zongmen_zhaohuan_get_reward = msg.c2s_activity_kuanghuan_zongmen_zhaohuan_get_reward;
            var s2c_activity_kuanghuan_zhaohuan_state = msg.s2c_activity_kuanghuan_zhaohuan_state;
            var s2c_activity_kuanghuan_geren_rank_info = msg.s2c_activity_kuanghuan_geren_rank_info;
            var s2c_activity_kuanghuan_zongmen_rank_info = msg.s2c_activity_kuanghuan_zongmen_rank_info;
            var CarnivalProxy = /** @class */ (function (_super) {
                __extends(CarnivalProxy, _super);
                function CarnivalProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._zhaohuanlibaoIsFirst = true;
                    return _this;
                }
                CarnivalProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.CarnivalModel();
                    this.onProto(s2c_activity_kuanghuan_mibao_info, this.s2c_activity_kuanghuan_mibao_info, this);
                    this.onProto(s2c_activity_kuanghuan_gift_info, this.s2c_activity_kuanghuan_gift_info, this);
                    this.onProto(s2c_activity_kuanghuan_zhaohuan_status, this.s2c_activity_kuanghuan_zhaohuan_status, this);
                    this.onProto(s2c_activity_kuanghuan_zhaohuan_state, this.s2c_activity_kuanghuan_zhaohuan_state, this);
                    this.onProto(s2c_activity_kuanghuan_geren_rank_info, this.s2c_activity_kuanghuan_geren_rank_info, this);
                    this.onProto(s2c_activity_kuanghuan_zongmen_rank_info, this.s2c_activity_kuanghuan_zongmen_rank_info, this);
                };
                CarnivalProxy.prototype.onStartReconnect = function () {
                    _super.prototype.onStartReconnect.call(this);
                    this._model.clear();
                };
                CarnivalProxy.prototype.s2c_activity_kuanghuan_mibao_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    this._model.mibaoList[msg.act_id] = msg.list || [];
                    this.updateMibaoHint();
                    this.sendNt("on_carnival_mibao_update" /* ON_CARNIVAL_MIBAO_UPDATE */);
                };
                CarnivalProxy.prototype.c2s_activity_kuanghuan_mibao_get_reward = function (actId, index) {
                    var msg = new c2s_activity_kuanghuan_mibao_get_reward();
                    msg.act_id = actId;
                    msg.index = index;
                    this.sendProto(msg);
                };
                //备用2：星石
                CarnivalProxy.prototype.getMibaoProp = function (actInfo) {
                    return actInfo && actInfo.param && actInfo.param[1] || 0;
                };
                //条件1：兑换所需数量
                CarnivalProxy.prototype.getMibaoLimit = function (reward) {
                    return reward.cond_1 && reward.cond_1[0] || 0;
                };
                CarnivalProxy.prototype.hasMibaoDraw = function (actId, index) {
                    if (!this._model.mibaoList[actId]) {
                        return false;
                    }
                    var mibaoList = this._model.mibaoList[actId];
                    return mibaoList.indexOf(index) > -1;
                };
                //上一个奖励领取后才可以领取当前奖励
                CarnivalProxy.prototype.hasLastMibaoDraw = function (actId, index) {
                    var lastIndex = index - 1;
                    return !lastIndex || this.hasMibaoDraw(actId, lastIndex);
                };
                CarnivalProxy.prototype.canMibaoDraw = function (actId, reward) {
                    var index = reward.index;
                    if (this.hasMibaoDraw(actId, index)) {
                        return false;
                    }
                    if (!this.hasLastMibaoDraw(actId, index)) {
                        return false;
                    }
                    var cnt = mod.BagUtil.getPropCntByIdx(1450000036 /* Xingshi */);
                    var limit = this.getMibaoLimit(reward);
                    return cnt >= limit;
                };
                //更新红点
                CarnivalProxy.prototype.updateMibaoHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(18 /* CarnivalMibao */, Handler.alloc(this, this.getMibaoHint));
                };
                CarnivalProxy.prototype.getMibaoHint = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_16 = rewardList; _i < rewardList_16.length; _i++) {
                        var reward = rewardList_16[_i];
                        var canDraw = this.canMibaoDraw(actInfo.act_id, reward);
                        if (canDraw) {
                            return true;
                        }
                    }
                    return false;
                };
                /****************************************召唤礼包*********************************************/
                CarnivalProxy.prototype.c2s_activity_kuanghuan_gift_buy = function (actId, index) {
                    var msg = new c2s_activity_kuanghuan_gift_buy();
                    msg.act_id = actId;
                    msg.index = index;
                    this.sendProto(msg);
                };
                CarnivalProxy.prototype.s2c_activity_kuanghuan_gift_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    this._model.giftList[msg.act_id] = msg.list || []; //直接做数据覆盖，服务端跨天会清数据
                    this.updateGiftHint();
                    this.sendNt("on_carnival_gift_update" /* ON_CARNIVAL_GIFT_UPDATE */);
                };
                CarnivalProxy.prototype.getInfoPos = function (actId, index) {
                    if (!this._model.giftList[actId]) {
                        return -1;
                    }
                    var len = this._model.giftList[actId].length;
                    for (var i = 0; i < len; ++i) {
                        var oldInfo = this._model.giftList[actId][i];
                        if (index == oldInfo.index) {
                            return i;
                        }
                    }
                    return -1;
                };
                CarnivalProxy.prototype.getGiftBuyCnt = function (actId, index) {
                    var pos = this.getInfoPos(actId, index);
                    if (pos < 0) {
                        return 0;
                    }
                    return this._model.giftList[actId][pos].num;
                };
                CarnivalProxy.prototype.hasGiftBuy = function (actId, reward) {
                    var buyCnt = this.getGiftBuyCnt(actId, reward.index);
                    var limitCnt = reward.cond_3 && reward.cond_3[0] || 0;
                    return buyCnt >= limitCnt;
                };
                //条件1购买类型
                CarnivalProxy.prototype.getGiftType = function (reward) {
                    return reward && reward.cond_1 && reward.cond_1[0] || 0;
                };
                //条件2购买所需仙玉或者商品ID
                CarnivalProxy.prototype.getGiftCost = function (reward) {
                    return reward && reward.cond_2 && reward.cond_2[0] || 0;
                };
                //更新排行榜红点
                CarnivalProxy.prototype.updateGiftHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(17 /* CarnivalGift */, Handler.alloc(this, this.getGiftHint));
                };
                //设置召唤礼包非第一次登陆了。
                CarnivalProxy.prototype.setZhaohuanlibaoIsFirst = function (ret) {
                    this._zhaohuanlibaoIsFirst = ret;
                    this.updateGiftHint();
                };
                CarnivalProxy.prototype.getGiftHint = function (actInfo) {
                    if (this._zhaohuanlibaoIsFirst) {
                        return true;
                    }
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_17 = rewardList; _i < rewardList_17.length; _i++) {
                        var reward = rewardList_17[_i];
                        var hasBuy = this.hasGiftBuy(actInfo.act_id, reward);
                        if (hasBuy) {
                            continue;
                        }
                        var buyType = this.getGiftType(reward);
                        if (buyType == 2 /* Rmb */) {
                            continue;
                        }
                        var cnt = this.getGiftCost(reward);
                        if (mod.BagUtil.checkPropCnt(1450000002 /* Xianyu */, cnt)) {
                            return true;
                        }
                    }
                    return false;
                };
                /********************************狂欢节****************************************/
                CarnivalProxy.prototype.c2s_activity_kuanghuan_geren_zhaohuan_get_reward = function (actId) {
                    var msg = new c2s_activity_kuanghuan_geren_zhaohuan_get_reward();
                    msg.act_id = actId;
                    this.sendProto(msg);
                };
                CarnivalProxy.prototype.s2c_activity_kuanghuan_zhaohuan_status = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    if (msg.count != undefined) {
                        this._model.scoreList[msg.act_id] = msg.count;
                    }
                    this._model.indexList[msg.act_id] = msg.list || [];
                    if (msg.reward_number != undefined) {
                        this._model.loopNumList[msg.act_id] = msg.reward_number;
                    }
                    this.updateCarnivalHint();
                    this.sendNt("on_carnival_update" /* ON_CARNIVAL_UPDATE */);
                };
                CarnivalProxy.prototype.getScore = function (actId) {
                    if (!this._model.scoreList[actId]) {
                        return 0;
                    }
                    return this._model.scoreList[actId];
                };
                CarnivalProxy.prototype.getLoopNum = function (actId) {
                    if (!this._model.loopNumList[actId]) {
                        return 0;
                    }
                    return this._model.loopNumList[actId];
                };
                CarnivalProxy.prototype.hasCarnivalDraw = function (actId, reward) {
                    if (!this._model.indexList[actId]) {
                        return false;
                    }
                    var indexList = this._model.indexList[actId];
                    return indexList.indexOf(reward.index) > -1;
                };
                CarnivalProxy.prototype.canCarnivalDraw = function (actId, reward) {
                    if (this.hasCarnivalDraw(actId, reward)) {
                        return false;
                    }
                    var score = this.getScore(actId);
                    //条件1：召唤次数
                    var limitScore = reward.cond_1 && reward.cond_1[0] || 0;
                    return score >= limitScore;
                };
                //更新红点
                CarnivalProxy.prototype.updateCarnivalHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(19 /* Carnival */, Handler.alloc(this, this.getCarnivalHint));
                };
                CarnivalProxy.prototype.getCarnivalHint = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_18 = rewardList; _i < rewardList_18.length; _i++) {
                        var reward = rewardList_18[_i];
                        if (this.canCarnivalDraw(actInfo.act_id, reward)) {
                            return true;
                        }
                    }
                    return false;
                };
                /********************************宗门召唤****************************************/
                CarnivalProxy.prototype.c2s_activity_kuanghuan_zongmen_zhaohuan_get_reward = function (actId) {
                    var msg = new c2s_activity_kuanghuan_zongmen_zhaohuan_get_reward();
                    msg.act_id = actId;
                    this.sendProto(msg);
                };
                CarnivalProxy.prototype.s2c_activity_kuanghuan_zhaohuan_state = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    if (msg.count != undefined) {
                        this._model.zhaohuanScoreList[msg.act_id] = msg.count;
                    }
                    this._model.zhaohuanIndexList[msg.act_id] = msg.list || [];
                    this.updateCarnivalZhaohuanHint();
                    this.sendNt("on_carnival_zhaohuan_update" /* ON_CARNIVAL_ZHAOHUAN_UPDATE */);
                };
                CarnivalProxy.prototype.getZhaohuanScore = function (actId) {
                    if (!this._model.zhaohuanScoreList[actId]) {
                        return 0;
                    }
                    return this._model.zhaohuanScoreList[actId];
                };
                CarnivalProxy.prototype.hasCarnivalZhaohuanDraw = function (actId, reward) {
                    if (!this._model.zhaohuanIndexList[actId]) {
                        return false;
                    }
                    var indexList = this._model.zhaohuanIndexList[actId];
                    return indexList.indexOf(reward.index) > -1;
                };
                CarnivalProxy.prototype.canCarnivalZhaohuanDraw = function (actId, reward) {
                    if (this.hasCarnivalZhaohuanDraw(actId, reward)) {
                        return false;
                    }
                    var score = this.getZhaohuanScore(actId);
                    //条件1：召唤次数
                    var limitScore = reward.cond_1 && reward.cond_1[0] || 0;
                    return score >= limitScore;
                };
                //更新红点
                CarnivalProxy.prototype.updateCarnivalZhaohuanHint = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(20 /* CarnivalZhaohuan */, Handler.alloc(this, this.getCarnivalZhaohuanHint));
                };
                CarnivalProxy.prototype.getCarnivalZhaohuanHint = function (actInfo) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_19 = rewardList; _i < rewardList_19.length; _i++) {
                        var reward = rewardList_19[_i];
                        if (this.canCarnivalZhaohuanDraw(actInfo.act_id, reward)) {
                            return true;
                        }
                    }
                    return false;
                };
                //跨服排行榜
                CarnivalProxy.prototype.s2c_activity_kuanghuan_geren_rank_info = function (n) {
                    var msg = n.body;
                    this.updateRankInfo(msg);
                };
                //宗门排行榜
                CarnivalProxy.prototype.s2c_activity_kuanghuan_zongmen_rank_info = function (n) {
                    var msg = n.body;
                    this.updateRankInfo(msg);
                };
                CarnivalProxy.prototype.updateRankInfo = function (msg) {
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    if (msg.type == 2 /* LastRank */) {
                        if (msg.rank_list) {
                            this._model.lastRankList[msg.act_id] = msg.rank_list; //上一期排行
                        }
                        if (msg.my_data) {
                            this._model.lastMyData[msg.act_id] = msg.my_data;
                        }
                        this.sendNt("on_carnival_rank_update_last_rank" /* ON_CARNIVAL_RANK_UPDATE_LAST_RANK */);
                        return;
                    }
                    if (msg.rank_list && msg.type == 1 /* Rank */) {
                        this._model.rankList[msg.act_id] = msg.rank_list; //当前排行
                    }
                    if (msg.my_data) {
                        this._model.myData[msg.act_id] = msg.my_data;
                    }
                    if (msg.reward_status) {
                        this._model.rewardStatus[msg.act_id] = msg.reward_status;
                        var isCross = msg instanceof s2c_activity_kuanghuan_geren_rank_info;
                        var actType = isCross ? 21 /* CarnivalCrossRank */ : 22 /* CarnivalRank */;
                        this.updateRankHint(actType);
                    }
                    this.sendNt("on_carnival_rank_update" /* ON_CARNIVAL_RANK_UPDATE */);
                };
                CarnivalProxy.prototype.getMyData = function (actId) {
                    return this._model.myData[actId] || null;
                };
                CarnivalProxy.prototype.getLastMyData = function (actId) {
                    return this._model.lastMyData[actId] || null;
                };
                CarnivalProxy.prototype.getRankList = function (actId) {
                    return this._model.rankList[actId] || [];
                };
                CarnivalProxy.prototype.getLastRankList = function (actId) {
                    return this._model.lastRankList[actId] || [];
                };
                CarnivalProxy.prototype.canDraw = function (actId) {
                    var rewardStatus = this._model.rewardStatus[actId];
                    return rewardStatus == 1 /* Finish */;
                };
                CarnivalProxy.prototype.getRankInfo = function (actId, rank) {
                    var rankList = this._model.rankList[actId];
                    if (!rankList) {
                        return null;
                    }
                    for (var _i = 0, rankList_4 = rankList; _i < rankList_4.length; _i++) {
                        var info = rankList_4[_i];
                        if (info.rank_num == rank) {
                            return info;
                        }
                    }
                    return null;
                };
                CarnivalProxy.prototype.updateRankHint = function (actType) {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    _proxy.setActHint(actType, Handler.alloc(this, this.getRankHint));
                };
                CarnivalProxy.prototype.getRankHint = function (actInfo) {
                    return this.canDraw(actInfo.act_id);
                };
                CarnivalProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    // if (keys.indexOf(RolePropertyKey.diamond) >= 0) {
                    //     /**写死仙玉变更时候刷新，需要其他道具时再做支持*/
                    //     this.updateGiftHint();
                    // }
                    if (keys.indexOf("xingshi" /* xingshi */) >= 0) {
                        this.updateMibaoHint();
                    }
                };
                return CarnivalProxy;
            }(game.ProxyBase));
            activity.CarnivalProxy = CarnivalProxy;
            __reflect(CarnivalProxy.prototype, "game.mod.activity.CarnivalProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var FlyRankSectionMdr = /** @class */ (function (_super) {
                __extends(FlyRankSectionMdr, _super);
                function FlyRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FlyRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                };
                FlyRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_fly_rank_update" /* ON_FLY_RANK_UPDATE */, this.onInfoUpdate, this);
                    this.onNt("on_fly_rank_update_last_rank" /* ON_FLY_RANK_UPDATE_LAST_RANK */, this.onInfoUpdateLastRank, this);
                };
                FlyRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this._view.img_type2.source = "jifen";
                    this._lastRank = !this._showArgs || !this._showArgs.start;
                    this._start = this._showArgs && this._showArgs.start;
                    this._end = this._showArgs && this._showArgs.end;
                    this._actInfo = this._proxy.curOpenAct;
                    if (!this._lastRank) {
                        //当前排行榜
                        this._view.lab_time.visible = true;
                        this.updateTime();
                        this.updateRank();
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    else {
                        //上一期排行榜
                        this._view.lab_time.visible = false;
                        var lastRankList = this._flyRankProxy.getLastRankList(this._actInfo.act_id);
                        if (!lastRankList || !lastRankList.length) {
                            this._proxy.c2s_oper_act_get_info(this._actInfo.act_id, 2 /* LastRank */); //请求上期排名
                        }
                        this.updateLastRank();
                    }
                };
                FlyRankSectionMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                FlyRankSectionMdr.prototype.onInfoUpdate = function () {
                    if (this._lastRank) {
                        return;
                    }
                    this.updateRank();
                };
                FlyRankSectionMdr.prototype.onInfoUpdateLastRank = function () {
                    if (!this._lastRank) {
                        return;
                    }
                    this.updateLastRank();
                };
                FlyRankSectionMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                FlyRankSectionMdr.prototype.updateTime = function () {
                    var endTime = this._actInfo.c_end_time;
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    var timeStr = game.TimeUtil.formatSecond(leftTime, 'd天H时', true) + "后发放奖励";
                    this._view.lab_time.text = timeStr;
                    if (leftTime <= 0) {
                        this.hide();
                    }
                };
                //当前排名
                FlyRankSectionMdr.prototype.updateRank = function () {
                    var myData = this._flyRankProxy.getMyData(this._actInfo.act_id);
                    var rankList = this._flyRankProxy.getRankList(this._actInfo.act_id);
                    var maxRank = this._end - this._start + 1;
                    var tmpRankList = [];
                    for (var _i = 0, rankList_5 = rankList; _i < rankList_5.length; _i++) {
                        var rankInfo = rankList_5[_i];
                        if (rankInfo.rank_num >= this._start && rankInfo.rank_num <= this._end) {
                            tmpRankList.push(rankInfo);
                        }
                    }
                    this.updateRankList(myData, tmpRankList, maxRank, this._start);
                };
                //上期排名
                FlyRankSectionMdr.prototype.updateLastRank = function () {
                    var lastMyData = this._flyRankProxy.getLastMyData(this._actInfo.act_id);
                    var lastRankList = this._flyRankProxy.getLastRankList(this._actInfo.act_id);
                    var maxRank = this._flyRankProxy.getMaxRank(this._actInfo);
                    this.updateRankList(lastMyData, lastRankList, maxRank);
                };
                FlyRankSectionMdr.prototype.updateRankList = function (myData, rankList, maxRank, start) {
                    var rankStr = game.getLanById("tishi_12" /* tishi_12 */) + "："; //我的排行：
                    if (myData && myData.rank_num) {
                        rankStr += myData.rank_num <= maxRank ? myData.rank_num : maxRank + "+"; //50+
                    }
                    else {
                        rankStr += game.getLanById("tishi_13" /* tishi_13 */); //未上榜
                    }
                    this._view.lab_rank.text = rankStr;
                    var score = myData && myData.value && myData.value.toNumber() || 0;
                    this._view.lab_score.text = game.getLanById("battle_cue46" /* battle_cue46 */) + "：" + score; //我的积分：0
                    var list = [];
                    for (var i = 0; i < maxRank; ++i) {
                        var rankInfo = rankList.length > i ? rankList[i] : null;
                        var rankNo = start ? i + start : i + 1;
                        var rankData = {
                            rank: rankNo,
                            name: rankInfo ? rankInfo.name : game.getLanById("tishi_2" /* tishi_2 */),
                            value: rankInfo && rankInfo.value ? rankInfo.value.toString() : ""
                        };
                        list.push(rankData);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(list);
                    }
                    else {
                        this._itemList.source = list;
                    }
                };
                return FlyRankSectionMdr;
            }(game.EffectMdrBase));
            activity.FlyRankSectionMdr = FlyRankSectionMdr;
            __reflect(FlyRankSectionMdr.prototype, "game.mod.activity.FlyRankSectionMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var CarnivalGiftRender = /** @class */ (function (_super) {
                __extends(CarnivalGiftRender, _super);
                function CarnivalGiftRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CarnivalGiftRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._carnivalProxy = facade.retMod("27" /* Activity */).retProxy(252 /* Carnival */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_buy, this.onClick, this);
                };
                CarnivalGiftRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._rewardList.source = data.rewards.slice(0, 3);
                    var index = data.index;
                    var actInfo = this._proxy.curOpenAct;
                    var buyCnt = this._carnivalProxy.getGiftBuyCnt(actInfo.act_id, index);
                    //条件1：购买类型1仙玉2人民币，条件2：仙玉数量或商品ID，条件3：每日限购次数
                    var limitCnt = data.cond_3 && data.cond_3[0] || 0;
                    var hasBuy = this._carnivalProxy.hasGiftBuy(actInfo.act_id, data);
                    this.img_bought.visible = hasBuy;
                    this.btn_buy.visible = !hasBuy;
                    var limitStr = "";
                    if (!hasBuy) {
                        var leftCnt = limitCnt - buyCnt;
                        limitStr = game.getLanById("store5" /* store5 */) + game.TextUtil.addColor(leftCnt + "/" + limitCnt, 2330156 /* GREEN */);
                    }
                    this.lb_limit.textFlow = game.TextUtil.parseHtml(limitStr);
                    if (this.btn_buy.visible) {
                        var buyType = this._carnivalProxy.getGiftType(data);
                        var cnt = this._carnivalProxy.getGiftCost(data);
                        this._cnt = cnt;
                        this._isRmb = buyType == 2 /* Rmb */;
                        if (this._isRmb) {
                            //人民币购买
                            var rmbStr = mod.PayUtil.getRmbValue(cnt) + mod.PayUtil.getRmbUnit();
                            this.btn_buy.labelDisplay.text = rmbStr;
                            this.btn_buy.redPoint.visible = false;
                            this.btn_buy.resetCost();
                        }
                        else {
                            //仙玉购买
                            this.btn_buy.setCost([1450000002 /* Xianyu */, cnt]);
                            this.btn_buy.redPoint.visible = mod.BagUtil.checkPropCnt(1450000002 /* Xianyu */, cnt);
                            this.btn_buy.labelDisplay.text = "";
                        }
                    }
                };
                CarnivalGiftRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (this._isRmb) {
                        //人民币购买
                        mod.PayUtil.pay(this._cnt);
                    }
                    else {
                        //仙玉购买
                        if (!mod.BagUtil.checkPropCntUp(1450000002 /* Xianyu */, this._cnt)) {
                            return;
                        }
                        var index = data.index;
                        var actInfo = this._proxy.curOpenAct;
                        this._carnivalProxy.c2s_activity_kuanghuan_gift_buy(actInfo.act_id, index);
                    }
                };
                return CarnivalGiftRender;
            }(mod.BaseListenerRenderer));
            activity.CarnivalGiftRender = CarnivalGiftRender;
            __reflect(CarnivalGiftRender.prototype, "game.mod.activity.CarnivalGiftRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var FlyTaskMdr = /** @class */ (function (_super) {
                __extends(FlyTaskMdr, _super);
                function FlyTaskMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.FlyTaskView);
                    return _this;
                }
                FlyTaskMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = mod.TaskRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                FlyTaskMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                };
                FlyTaskMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var actInfo = this._proxy.curOpenAct;
                    this._taskType = actInfo && actInfo.param ? actInfo.param[1] : 43 /* Fly */; //任务类型
                    this.updateTaskList();
                };
                FlyTaskMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FlyTaskMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(this._taskType) > -1) {
                        this.updateTaskList();
                    }
                };
                FlyTaskMdr.prototype.updateTaskList = function () {
                    var tasks = mod.TaskUtil.getTaskList(this._taskType, true, true);
                    if (this._itemList.source.length > 0) {
                        this._itemList.replaceAll(tasks);
                    }
                    else {
                        this._itemList.source = tasks;
                    }
                };
                return FlyTaskMdr;
            }(game.EffectMdrBase));
            activity.FlyTaskMdr = FlyTaskMdr;
            __reflect(FlyTaskMdr.prototype, "game.mod.activity.FlyTaskMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalGiftView = /** @class */ (function (_super) {
                __extends(CarnivalGiftView, _super);
                function CarnivalGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.CarnivalGiftSkin";
                    return _this;
                }
                return CarnivalGiftView;
            }(eui.Component));
            activity.CarnivalGiftView = CarnivalGiftView;
            __reflect(CarnivalGiftView.prototype, "game.mod.activity.CarnivalGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var Tween = base.Tween;
            var FlyWarMdr = /** @class */ (function (_super) {
                __extends(FlyWarMdr, _super);
                function FlyWarMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.FlyWarView);
                    return _this;
                }
                FlyWarMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.FlyWarRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                FlyWarMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_unlock, TouchEvent.TOUCH_TAP, this.onClickUnlock);
                    this.onNt("on_fly_rank_update_war" /* ON_FLY_RANK_UPDATE_WAR */, this.onInfoUpdate, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this); //属性刷新，有货币
                };
                FlyWarMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateExp();
                    this.updateBuy();
                    this.updateItemList();
                    this.updatePos();
                };
                FlyWarMdr.prototype.onHide = function () {
                    Tween.remove(this._view.scroller.viewport);
                    _super.prototype.onHide.call(this);
                };
                FlyWarMdr.prototype.onClickUnlock = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "91" /* FlyWarUnlock */);
                };
                FlyWarMdr.prototype.onInfoUpdate = function () {
                    this.updateBuy();
                    this.updateItemList();
                };
                FlyWarMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("feisheng_exp" /* feisheng_exp */) > -1) {
                        this.updateExp();
                        this.updateItemList();
                    }
                };
                FlyWarMdr.prototype.initShow = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var warRewardList = this._flyRankProxy.getWarRewardList(actInfo);
                    var reward = warRewardList[warRewardList.length - 1].rewards[0];
                    this._view.icon.setData(reward);
                    this._view.lab_name.textFlow = this._view.icon.getPropName();
                };
                FlyWarMdr.prototype.updateExp = function () {
                    var index = 1450000032 /* Feishengjingyanzhi */;
                    var cfg = game.GameConfig.getPropConfigById(index);
                    var cnt = mod.BagUtil.getPropCntByIdx(index);
                    this._exp = cnt;
                    var str = "当前" + cfg.name + "：" + game.TextUtil.addColor(cnt + "", 8585074 /* GREEN */);
                    this._view.lab_cur.textFlow = game.TextUtil.parseHtml(str);
                };
                FlyWarMdr.prototype.updateBuy = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var hasBuy = this._flyRankProxy.hasWarBuy(actInfo.act_id);
                    this._view.btn_unlock.visible = !hasBuy;
                    this._view.btn_unlock.setImage("jiesuofeisheng");
                };
                FlyWarMdr.prototype.updateItemList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    var rewardList = this._flyRankProxy.getNormalRewardList(actInfo);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(rewardList);
                    }
                    else {
                        this._itemList.source = rewardList;
                    }
                    var showReward;
                    var maxShowReward;
                    for (var _i = 0, rewardList_20 = rewardList; _i < rewardList_20.length; _i++) {
                        var reward = rewardList_20[_i];
                        if (!this._flyRankProxy.isWarShow(reward)) {
                            continue;
                        }
                        var limitExp = this._flyRankProxy.getLimitExp(reward);
                        if (limitExp > this._exp) {
                            showReward = reward;
                            break;
                        }
                        maxShowReward = reward;
                    }
                    if (!showReward) {
                        showReward = maxShowReward;
                    }
                    this._view.item.setShowReward(showReward);
                };
                FlyWarMdr.prototype.updatePos = function () {
                    var _this = this;
                    var actInfo = this._proxy.curOpenAct;
                    var index1 = this._flyRankProxy.getWarIndex1(actInfo.act_id);
                    if (index1 >= 4) {
                        var pos_1 = index1 - 1;
                        egret.callLater(function () {
                            mod.ScrollUtil.moveVToAssign(_this._view.scroller, pos_1, 138, 10);
                        }, this);
                    }
                };
                return FlyWarMdr;
            }(game.EffectMdrBase));
            activity.FlyWarMdr = FlyWarMdr;
            __reflect(FlyWarMdr.prototype, "game.mod.activity.FlyWarMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var FlyWarUnlockMdr = /** @class */ (function (_super) {
                __extends(FlyWarUnlockMdr, _super);
                function FlyWarUnlockMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.GameOrderUnlockView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FlyWarUnlockMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._itemList;
                    this._itemList2 = new ArrayCollection();
                    this._view.list_item.itemRenderer = mod.Icon;
                    this._view.list_item.dataProvider = this._itemList2;
                    this._proxy = this.retProxy(50 /* Activity */);
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                };
                FlyWarUnlockMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClick);
                };
                FlyWarUnlockMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr("解锁进阶战令");
                    this._view.lab_title.text = "购买后累计活跃值可领取";
                    this.addEftByParentScale(this._view.btn.group_eft);
                    this.updateList();
                };
                FlyWarUnlockMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FlyWarUnlockMdr.prototype.onClick = function () {
                    mod.PayUtil.pay(this._productId);
                    this.hide();
                };
                FlyWarUnlockMdr.prototype.updateList = function () {
                    var actInfo = this._proxy.curOpenAct;
                    this._productId = actInfo && actInfo.param ? actInfo.param[2] : 0; //商品ID
                    var rmb = mod.PayUtil.getRmbValue(this._productId);
                    var fakeRmb = mod.PayUtil.getFakeRmbValue(this._productId);
                    if (fakeRmb) {
                        this._view.btn.setTwoPrice(rmb, fakeRmb);
                    }
                    else {
                        this._view.btn.labelDisplay.text = rmb + "元";
                    }
                    var warRewardList = this._flyRankProxy.getWarRewardList(actInfo);
                    var index = 1450000032 /* Feishengjingyanzhi */;
                    var exp = mod.BagUtil.getPropCntByIdx(index);
                    var infos1 = [];
                    var infos2 = [];
                    for (var _i = 0, warRewardList_1 = warRewardList; _i < warRewardList_1.length; _i++) {
                        var reward = warRewardList_1[_i];
                        infos1 = infos1.concat(reward.rewards);
                        var limitExp = this._flyRankProxy.getLimitExp(reward);
                        if (exp >= limitExp) {
                            infos2 = infos2.concat(reward.rewards);
                        }
                    }
                    this._itemList.source = infos1;
                    this._itemList2.source = infos2;
                };
                return FlyWarUnlockMdr;
            }(game.EffectMdrBase));
            activity.FlyWarUnlockMdr = FlyWarUnlockMdr;
            __reflect(FlyWarUnlockMdr.prototype, "game.mod.activity.FlyWarUnlockMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GameOrderModel = /** @class */ (function () {
                function GameOrderModel() {
                    var _a, _b, _c;
                    this.list = {};
                    /**战令系统，统一展示的战令类型数组 todo*/
                    this.showType = [1 /* Chuangguanling */, 2 /* Huoyueling */, 4 /* XiuXian */, 5 /* Tansuo */, 6 /* Huanjing */];
                    /**战令banner资源，默认 giving_banner */
                    this.bannerType = (_a = {},
                        _a[4 /* XiuXian */] = 'giving_banner2',
                        _a[5 /* Tansuo */] = 'giving_banner5',
                        _a[7 /* Chaojilicai */] = 'giving_banner7',
                        _a[8 /* Zhizunlicai */] = 'giving_banner8',
                        _a);
                    /**不显示tips文本图片的类型*/
                    this.notTipsType = [4 /* XiuXian */, 5 /* Tansuo */, 7 /* Chaojilicai */, 8 /* Zhizunlicai */];
                    this.btnTypeByType = (_b = {},
                        _b[1 /* Chuangguanling */] = "01" /* TabBtnType01 */,
                        _b[2 /* Huoyueling */] = "02" /* TabBtnType02 */,
                        _b[4 /* XiuXian */] = "04" /* TabBtnType04 */,
                        _b[5 /* Tansuo */] = "05" /* TabBtnType05 */,
                        _b[6 /* Huanjing */] = "06" /* TabBtnType06 */,
                        _b);
                    /**战令类型红点*/
                    this.hintPath = (_c = {},
                        _c[1 /* Chuangguanling */] = ["27" /* Activity */, "38" /* Giving */, "01" /* TabBtnType01 */],
                        _c[2 /* Huoyueling */] = ["27" /* Activity */, "38" /* Giving */, "02" /* TabBtnType02 */],
                        _c[4 /* XiuXian */] = ["27" /* Activity */, "38" /* Giving */, "04" /* TabBtnType04 */],
                        _c[5 /* Tansuo */] = ["27" /* Activity */, "38" /* Giving */, "05" /* TabBtnType05 */],
                        _c[6 /* Huanjing */] = ["27" /* Activity */, "38" /* Giving */, "06" /* TabBtnType06 */],
                        _c);
                }
                return GameOrderModel;
            }());
            activity.GameOrderModel = GameOrderModel;
            __reflect(GameOrderModel.prototype, "game.mod.activity.GameOrderModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_game_order_info = msg.s2c_game_order_info;
            var c2s_game_order_get_rewards = msg.c2s_game_order_get_rewards;
            var TimeMgr = base.TimeMgr;
            /**战令系统（赠送100召唤卷）*/
            var GameOrderProxy = /** @class */ (function (_super) {
                __extends(GameOrderProxy, _super);
                function GameOrderProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(GameOrderProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                GameOrderProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.GameOrderModel();
                    this.onProto(s2c_game_order_info, this.s2c_game_order_info, this);
                };
                /**--------------------协议start-------------------- */
                /**战令信息 */
                GameOrderProxy.prototype.s2c_game_order_info = function (n) {
                    var msg = n.body;
                    if (msg.oper == 1) {
                        // 1全部更新
                        if (msg.act_list && msg.act_list.length) {
                            this.updateInfo(msg.act_list);
                        }
                        else {
                            // todo 清空数据，红点处理
                            this._model.list = {};
                            for (var _i = 0, _a = this._model.showType; _i < _a.length; _i++) {
                                var type = _a[_i];
                                this.onUpdateHint(type);
                            }
                            this.sendNt("on_update_giving_list" /* ON_UPDATE_GIVING_LIST */, this._model.showType);
                        }
                    }
                    else {
                        // 2单个更新
                        if (msg.act_list && msg.act_list.length) {
                            this.updateInfo(msg.act_list);
                        }
                    }
                };
                GameOrderProxy.prototype.updateInfo = function (act_list) {
                    var types = []; //战令类型
                    if (act_list && act_list.length) {
                        for (var _i = 0, act_list_1 = act_list; _i < act_list_1.length; _i++) {
                            var act = act_list_1[_i];
                            types.push(act.type);
                            this._model.list[act.type] = act;
                            this.onUpdateHint(act.type);
                            if (!this.getIsBought(act.type) && this.selType) {
                                mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "40" /* GameOrderUnlock */, [this.selType, this.getReward(this.selType), this.getRewardCanGet(this.selType)]);
                                this.selType = 0;
                            }
                        }
                    }
                    this.sendNt("on_update_giving_list" /* ON_UPDATE_GIVING_LIST */, types);
                };
                Object.defineProperty(GameOrderProxy.prototype, "selType", {
                    get: function () {
                        return this._model.selType;
                    },
                    //当前请求类型
                    set: function (type) {
                        this._model.selType = type;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**请求领取战令奖励 */
                GameOrderProxy.prototype.c2s_game_order_get_rewards = function (type) {
                    var msg = new c2s_game_order_get_rewards();
                    msg.type = this.selType = type;
                    this.sendProto(msg);
                };
                /**--------------------协议end-------------------- */
                /**送100召唤卷显示的战令类型*/
                GameOrderProxy.prototype.getTypeListForMdr = function () {
                    var showType = this._model.showType;
                    var list = [];
                    for (var _i = 0, showType_1 = showType; _i < showType_1.length; _i++) {
                        var type = showType_1[_i];
                        var item = this._model.list[type];
                        if (item && !this.isOver(item.type)) {
                            list.push(type);
                        }
                    }
                    return list;
                };
                /**类型数据，结束的返回null*/
                GameOrderProxy.prototype.getInfoByType = function (type) {
                    var item = this._model.list[type];
                    if (!item || this.isOver(type)) {
                        return null;
                    }
                    return item;
                };
                /**列表类型 */
                GameOrderProxy.prototype.getTypeList = function () {
                    var list = [];
                    for (var key in this._model.list) {
                        var item = this._model.list[key];
                        if (!this.isOver(item.type)) {
                            list.push(item.type);
                        }
                    }
                    return list;
                };
                /**
                 * 1前往挑战
                 * 2全部领取
                 * 3解锁战令
                 * */
                GameOrderProxy.prototype.getBtnStatus = function (type) {
                    var item = this._model.list[type];
                    if (!item || !item.list) { //没有解锁奖励
                        return 1;
                    }
                    for (var _i = 0, _a = item.list; _i < _a.length; _i++) { //可领取奖励
                        var data = _a[_i];
                        if (data.status == 1 || data.status2 == 1) {
                            return 2;
                        }
                    }
                    var cfgArr = this.getCfgArrByType(type);
                    var len = 0;
                    for (var key in cfgArr) {
                        var cfg = cfgArr[key];
                        len++;
                        var status = this.getStatusByTypeIndex(type, cfg.index);
                        if (!status) {
                            return 1;
                        }
                    }
                    var isAll = len == item.list.length;
                    if (!item.is_buy && isAll) {
                        return 3;
                    }
                    return 0;
                };
                /**是否结束活动(全部已领取或者时间结束) */
                GameOrderProxy.prototype.isOver = function (type) {
                    var cfgArr = this.getCfgArrByType(type);
                    var item = this._model.list[type];
                    var bool = item.endtime && item.endtime.toNumber() != 0 && TimeMgr.time.serverTime > item.endtime.toNumber() * 1000;
                    if (bool) {
                        return bool;
                    }
                    for (var _i = 0, cfgArr_10 = cfgArr; _i < cfgArr_10.length; _i++) {
                        var cfg = cfgArr_10[_i];
                        for (var _a = 0, _b = item.list; _a < _b.length; _a++) {
                            var data = _b[_a];
                            if (cfg.index == data.index.toNumber()) {
                                bool = data.status == 2 && data.status2 == 2;
                                break;
                            }
                        }
                        if (bool) {
                            return bool;
                        }
                    }
                    return bool;
                };
                //奖励全部领取完成（免费和付费）
                GameOrderProxy.prototype.isRewardAllDraw = function (type) {
                    var cfgObj = this.getCfgArrByType(type);
                    var info = this._model.list[type];
                    var map = {}; //已全领取的配置
                    if (info && info.list) {
                        for (var _i = 0, _a = info.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            if (item.status == 2 /* Draw */ && item.status2 == 2 /* Draw */) {
                                map[item.index.toNumber()] = true; //已全领取了
                            }
                        }
                    }
                    var isAllDraw = true;
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (!cfg) {
                            continue;
                        }
                        if (!map[cfg.index]) {
                            isAllDraw = false;
                            break;
                        }
                    }
                    return isAllDraw;
                };
                /**获取列表数据 */
                GameOrderProxy.prototype.getListByType = function (type) {
                    var cfgArr = this.getCfgArrByType(type);
                    var act_list = this._model.list[type];
                    var list = [];
                    for (var key in cfgArr) {
                        var isBought = this.getIsBought(type);
                        var val = this.getValueByType(type);
                        var cfg = cfgArr[key];
                        var status = this.getStatusByTypeIndex(type, cfg.index);
                        var freeStatus = status && status.status != undefined ? status.status : 0 /* NotFinish */; //免费奖励
                        var payStatus = status && status.status2 != undefined ? status.status2 : 0 /* NotFinish */; //付费奖励
                        var cfgBefore = cfgArr[+key - 1];
                        var cfgNext = cfgArr[+key + 1];
                        var before = void 0;
                        var next = void 0;
                        if (type == 4 /* XiuXian */) {
                            var target = mod.RoleUtil.getRebirthLv(cfg.target);
                            var targetBefore = cfgBefore && mod.RoleUtil.getRebirthLv(cfgBefore.target) || 0;
                            var targetNext = cfgNext && mod.RoleUtil.getRebirthLv(cfgNext.target) || 0;
                            before = Math.floor((target - targetBefore) / 2) + targetBefore || 0;
                            next = Math.floor((targetNext - target) / 2) + target || 0;
                        }
                        else {
                            before = cfgBefore && Math.floor((cfg.target - cfgBefore.target) / 2) + cfgBefore.target || 0;
                            next = cfgNext && Math.floor((cfgNext.target - cfg.target) / 2) + cfg.target || 0;
                        }
                        // let before = cfgBefore && Math.floor((cfg.target - cfgBefore.target) / 2) + cfgBefore.target || 0;
                        // let next = cfgNext && Math.floor((cfgNext.target - cfg.target) / 2) + cfg.target || 0;
                        if (act_list.list) {
                            list.push({ cfg: cfg, before: before, next: next, type: type, isBought: isBought, val: val, freeStatus: freeStatus, payStatus: payStatus });
                        }
                        else {
                            list.push({ cfg: cfg, before: before, next: next, type: type, isBought: isBought, val: val, freeStatus: freeStatus, payStatus: payStatus });
                        }
                    }
                    return list;
                };
                /**根据类型和索引获取状态 */
                GameOrderProxy.prototype.getStatusByTypeIndex = function (type, index) {
                    var act_list = this._model.list[type];
                    if (!act_list || !act_list.list) {
                        return null;
                    }
                    for (var _i = 0, _a = act_list.list; _i < _a.length; _i++) {
                        var act = _a[_i];
                        if (act.index.toNumber() == index) {
                            return act;
                        }
                    }
                    return null;
                };
                /**获取当前战令的值 */
                GameOrderProxy.prototype.getValueByType = function (type) {
                    var data = this._model.list[type];
                    return data && data.value ? data.value.toNumber() : 0;
                };
                /**是否购买战令 */
                GameOrderProxy.prototype.getIsBought = function (type) {
                    var data = this._model.list[type];
                    return data && data.is_buy == 1;
                };
                /**获取结束时间 */
                GameOrderProxy.prototype.getEndTime = function (type) {
                    return +this._model.list[type].endtime || 0;
                };
                /**根据类型获取配置数据 */
                GameOrderProxy.prototype.getCfgArrByType = function (type) {
                    var cfgArr = game.getConfigByNameId("game_order.json" /* GameOrder */, type);
                    return cfgArr;
                };
                /**获取解锁战令不可领取奖励 */
                GameOrderProxy.prototype.getReward = function (type) {
                    var list = [];
                    var map = {};
                    var cfgArr = this.getCfgArrByType(type);
                    for (var key in cfgArr) {
                        var cfg = cfgArr[key];
                        if (cfg && cfg.rewad_1) {
                            for (var _i = 0, _a = cfg.rewad_1; _i < _a.length; _i++) {
                                var reward = _a[_i];
                                map[reward[0]] = reward[1] + (map[reward[0]] || 0);
                            }
                        }
                    }
                    for (var key in map) {
                        list.push(game.PropData.create(+key, map[key]));
                    }
                    return list;
                };
                /**获取可领取奖励 */
                GameOrderProxy.prototype.getRewardCanGet = function (type) {
                    var list = [];
                    var map = {};
                    var cfgArr = this.getCfgArrByType(type);
                    for (var key in cfgArr) {
                        var cfg = cfgArr[key];
                        var status = this.getStatusByTypeIndex(type, cfg.index);
                        if (status && status.status2 < 2) {
                            for (var _i = 0, _a = cfg.rewad_1; _i < _a.length; _i++) {
                                var reward = _a[_i];
                                map[reward[0]] = reward[1] + (map[reward[0]] || 0);
                            }
                        }
                    }
                    for (var key in map) {
                        list.push(game.PropData.create(+key, map[key]));
                    }
                    return list;
                };
                GameOrderProxy.prototype.getPosByType = function (type) {
                    var info = this._model.list[type];
                    if (!info) {
                        return 0;
                    }
                    var list = info.list;
                    if (!list) {
                        return 0;
                    }
                    list.sort(function (a, b) {
                        return a.index.toNumber() - b.index.toNumber();
                    });
                    for (var i = 0; i < list.length; i++) {
                        if (list[i].status == 1 || list[i].status2 == 1) {
                            return i;
                        }
                    }
                    return 0;
                };
                /**
                 * 获取战令红点
                 * @param type
                 */
                GameOrderProxy.prototype.getHintByType = function (type) {
                    return this.getBtnStatus(type) == 2;
                };
                GameOrderProxy.prototype.onUpdateHint = function (type) {
                    var hintPath = this._model.hintPath[type];
                    if (!hintPath || !hintPath.length) {
                        return;
                    }
                    mod.HintMgr.setHint(this.getBtnStatus(type) == 2, hintPath);
                };
                Object.defineProperty(GameOrderProxy.prototype, "mdrType", {
                    /**战令类型*/
                    get: function () {
                        return this._model.mdrType;
                    },
                    set: function (val) {
                        this._model.mdrType = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                return GameOrderProxy;
            }(game.ProxyBase));
            activity.GameOrderProxy = GameOrderProxy;
            __reflect(GameOrderProxy.prototype, "game.mod.activity.GameOrderProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalMibaoRender = /** @class */ (function (_super) {
                __extends(CarnivalMibaoRender, _super);
                function CarnivalMibaoRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CarnivalMibaoRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var reward = data.reward;
                    var hasDraw = data.hasDraw;
                    var canDraw = data.canDraw;
                    var hasLastDraw = data.hasLastDarw;
                    var isBig = data.isBig;
                    var prop = reward && reward.rewards && reward.rewards[0];
                    this.icon.setData(prop);
                    this.grp_draw.visible = hasDraw;
                    this.btn_draw.redPoint.visible = canDraw;
                    this.img_di.source = hasLastDraw ? "dizuo_huangse" : "dizuo_lanse";
                    this.currentState = isBig ? "big" : "small";
                };
                CarnivalMibaoRender.prototype.setData = function (data) {
                    this.data = data;
                };
                return CarnivalMibaoRender;
            }(eui.ItemRenderer));
            activity.CarnivalMibaoRender = CarnivalMibaoRender;
            __reflect(CarnivalMibaoRender.prototype, "game.mod.activity.CarnivalMibaoRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GameOrderUnlockView = /** @class */ (function (_super) {
                __extends(GameOrderUnlockView, _super);
                function GameOrderUnlockView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.GivingUnlockSkin";
                    return _this;
                }
                return GameOrderUnlockView;
            }(eui.Component));
            activity.GameOrderUnlockView = GameOrderUnlockView;
            __reflect(GameOrderUnlockView.prototype, "game.mod.activity.GameOrderUnlockView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GameOrderView = /** @class */ (function (_super) {
                __extends(GameOrderView, _super);
                function GameOrderView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.GivingSkin";
                    return _this;
                }
                return GameOrderView;
            }(eui.Component));
            activity.GameOrderView = GameOrderView;
            __reflect(GameOrderView.prototype, "game.mod.activity.GameOrderView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GivingItem = /** @class */ (function (_super) {
                __extends(GivingItem, _super);
                function GivingItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GivingItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list.itemRenderer = mod.IconGot;
                    this.list.dataProvider = this._listData;
                };
                GivingItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data.cfg;
                    this.grp_gray.visible = !data.isBought;
                    var list = [];
                    var payStatus = data.payStatus || 0 /* NotFinish */;
                    var isGot = payStatus == 2 /* Draw */;
                    for (var _i = 0, _a = cfg.rewad_1; _i < _a.length; _i++) {
                        var prop = _a[_i];
                        list.push({ prop: prop, isGot: isGot, showTips: true });
                    }
                    this._listData.source = list;
                    var freeStatus = data.freeStatus || 0 /* NotFinish */;
                    this.icon.setData({
                        prop: cfg.reward,
                        isGot: freeStatus == 2 /* Draw */,
                        showHint: freeStatus == 1 /* Finish */,
                        showTips: true
                    });
                    if (data.type == 4 /* XiuXian */) {
                        this.lab_val.text = mod.RoleUtil.getRebirthLv(data.cfg.target) + "\u8F6C";
                        var target = mod.RoleUtil.getRebirthLv(cfg.target);
                        var val = mod.RoleUtil.getRebirthLv(data.val) || 0;
                        var next = data.next;
                        var start = data.before;
                        this.bar.setData({ start: start, val: val, target: target, next: next });
                    }
                    else {
                        this.lab_val.text = "" + cfg.target;
                        var val = data.val;
                        this.bar.setData({ start: data.before, val: val, target: cfg.target, next: data.next });
                    }
                };
                return GivingItem;
            }(activity.GameOrderItem));
            activity.GivingItem = GivingItem;
            __reflect(GivingItem.prototype, "game.mod.activity.GivingItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalMibaoRewardView = /** @class */ (function (_super) {
                __extends(CarnivalMibaoRewardView, _super);
                function CarnivalMibaoRewardView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.CarnivalMibaoRewardSkin";
                    return _this;
                }
                return CarnivalMibaoRewardView;
            }(eui.Component));
            activity.CarnivalMibaoRewardView = CarnivalMibaoRewardView;
            __reflect(CarnivalMibaoRewardView.prototype, "game.mod.activity.CarnivalMibaoRewardView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var GameOrderUnlockMdr = /** @class */ (function (_super) {
                __extends(GameOrderUnlockMdr, _super);
                function GameOrderUnlockMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.GameOrderUnlockView);
                    _this._listData = new ArrayCollection();
                    _this._listItemData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                GameOrderUnlockMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(207 /* GameOrder */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_item.itemRenderer = mod.Icon;
                    this._view.list_item.dataProvider = this._listItemData;
                };
                GameOrderUnlockMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClick);
                };
                GameOrderUnlockMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._gameOrderType = this._showArgs[0];
                    this.onUpdateView();
                    this.addEftByParentScale(this._view.btn.group_eft);
                };
                GameOrderUnlockMdr.prototype.onUpdateView = function () {
                    var type = this._gameOrderType;
                    var str = game.GameOrderUnlockTitle[type];
                    this._view.secondPop.updateTitleStr("\u89E3\u9501" + str);
                    this._view.lab_title.text = "\u8D2D\u4E70\u540E\u7D2F\u8BA1\u53EF\u9886\u53D6";
                    this._listData.source = this._showArgs[1] || []; //购买后累计可领取
                    this._listItemData.source = this._showArgs[2] || []; //现在购买立即领取
                    var cfg = game.getConfigByNameId("game_order_type.json" /* GameOrderType */, type);
                    var rmb = mod.PayUtil.getRmbValue(cfg.recharge_id);
                    var fakeRmb = mod.PayUtil.getFakeRmbValue(cfg.recharge_id);
                    this._view.btn.setTwoPrice(rmb, fakeRmb);
                };
                GameOrderUnlockMdr.prototype.onClick = function () {
                    var cfg = game.getConfigByNameId("game_order_type.json" /* GameOrderType */, this._gameOrderType);
                    mod.PayUtil.pay(cfg.recharge_id);
                    this.hide();
                };
                GameOrderUnlockMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return GameOrderUnlockMdr;
            }(game.EffectMdrBase));
            activity.GameOrderUnlockMdr = GameOrderUnlockMdr;
            __reflect(GameOrderUnlockMdr.prototype, "game.mod.activity.GameOrderUnlockMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GivingMainMdr = /** @class */ (function (_super) {
                __extends(GivingMainMdr, _super);
                function GivingMainMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GivingMainMdr.prototype.onInit = function () {
                    this._proxy = this.retProxy(207 /* GameOrder */);
                    _super.prototype.onInit.call(this);
                };
                GivingMainMdr.prototype.onShow = function () {
                    this._btnData = [];
                    var types = this._proxy.getTypeListForMdr();
                    if (types.length > 0) {
                        for (var _i = 0, types_3 = types; _i < types_3.length; _i++) {
                            var type = types_3[_i];
                            var cfg = game.getConfigByNameId("game_order_type.json" /* GameOrderType */, type);
                            this._btnData.push({
                                btnType: this._proxy.model.btnTypeByType[type],
                                icon: "tab_" + type + "_giving",
                                mdr: activity.GivingMdr,
                                title: cfg.name,
                                hintTypes: this._proxy.model.hintPath[type],
                            });
                        }
                    }
                    _super.prototype.onShow.call(this);
                };
                GivingMainMdr.prototype.onTabCheck = function (index) {
                    var data = this._btnList.source[index];
                    this._proxy.mdrType = +data.btnType;
                    if (this._proxy.mdrType == 1 /* Chuangguanling */) {
                        mod.BtnTipsMgr.getIns().hideTips(1041670142 /* Giving */);
                    }
                    return _super.prototype.onTabCheck.call(this, index);
                };
                GivingMainMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._proxy.mdrType = 1;
                };
                return GivingMainMdr;
            }(mod.WndBaseMdr));
            activity.GivingMainMdr = GivingMainMdr;
            __reflect(GivingMainMdr.prototype, "game.mod.activity.GivingMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GivingMdr = /** @class */ (function (_super) {
                __extends(GivingMdr, _super);
                function GivingMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GivingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                };
                GivingMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                GivingMdr.prototype.onShow = function () {
                    this._gameOrderType = this._proxy.mdrType;
                    _super.prototype.onShow.call(this);
                };
                GivingMdr.prototype.updateView = function () {
                    _super.prototype.updateView.call(this);
                };
                return GivingMdr;
            }(activity.GameOrderMdr));
            activity.GivingMdr = GivingMdr;
            __reflect(GivingMdr.prototype, "game.mod.activity.GivingMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GivingShenLingModel = /** @class */ (function () {
                function GivingShenLingModel() {
                    /**在线时间 */
                    this.online_time = 0;
                    /**登录时间 */
                    this.login_time = 0;
                    /**领取状态`1可领取 2已领取 */
                    this.receive = 0;
                    this.isClick = false;
                }
                return GivingShenLingModel;
            }());
            activity.GivingShenLingModel = GivingShenLingModel;
            __reflect(GivingShenLingModel.prototype, "game.mod.activity.GivingShenLingModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_yaoji_get_reward = msg.c2s_yaoji_get_reward;
            var s2c_yaoji_online_info = msg.s2c_yaoji_online_info;
            /**送瑶姬(在线领奖励活动) */
            var GivingShenLingProxy = /** @class */ (function (_super) {
                __extends(GivingShenLingProxy, _super);
                function GivingShenLingProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(GivingShenLingProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                GivingShenLingProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.GivingShenLingModel();
                    this.onProto(s2c_yaoji_online_info, this.s2c_yaoji_online_info, this);
                };
                /**--------------------协议start-------------------- */
                GivingShenLingProxy.prototype.c2s_yaoji_get_reward = function () {
                    var msg = new c2s_yaoji_get_reward();
                    this.sendProto(msg);
                    this._model.isClick = true;
                };
                GivingShenLingProxy.prototype.s2c_yaoji_online_info = function (n) {
                    var msg = n.body;
                    if (msg.login_time) {
                        this._model.login_time = msg.login_time;
                    }
                    if (msg.receive) {
                        this._model.receive = msg.receive;
                        if (this._model.isClick) {
                            //瑶姬降世跳转判断，需判断是否在开启中
                            var yjjsProxy = game.getProxy("27" /* Activity */, 214 /* Yjjs */);
                            if (yjjsProxy.isOpen()) {
                                mod.ViewMgr.getIns().showView("27" /* Activity */, "51" /* YjjsFirstMain */);
                            }
                        }
                    }
                    if (msg.online_time) {
                        this._model.online_time = msg.online_time;
                    }
                    this.onUpdateHint();
                    this.checkOpen();
                    this.sendNt("on_update_givingshenling_info" /* ON_UPDATE_GIVING_SHENLING_INFO */);
                };
                Object.defineProperty(GivingShenLingProxy.prototype, "cfgTime", {
                    /**--------------------协议end-------------------- */
                    /**获得奖励需要的时间 */
                    get: function () {
                        var cfg = game.getConfigByNameId("param.json" /* Param */, "give_shenling_time");
                        var time = cfg.value * game.Second.Minute;
                        return time;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**结束时间 */
                GivingShenLingProxy.prototype.getEndTime = function () {
                    var time = this.cfgTime - this._model.online_time;
                    return this._model.login_time + (time < 0 ? 0 : time);
                };
                /** */
                GivingShenLingProxy.prototype.onUpdateHint = function () {
                    if (this.getEndTime() >= 0) {
                        mod.HintMgr.addTimeEvent(5 /* GivingShenLing */, this.getEndTime(), this, this.updateHint);
                    }
                    this.updateHint();
                };
                GivingShenLingProxy.prototype.updateHint = function () {
                    var bool = this._model.online_time >= this.cfgTime && this._model.receive == 1;
                    mod.HintMgr.setHint(bool, ["27" /* Activity */, "56" /* GivingShenLing */]);
                };
                Object.defineProperty(GivingShenLingProxy.prototype, "isOpen", {
                    get: function () {
                        return this._model.receive != 2;
                    },
                    enumerable: true,
                    configurable: true
                });
                GivingShenLingProxy.prototype.checkOpen = function () {
                    mod.BtnIconMgr.insLeft().updateOpen(1041670151 /* GivingShenLing */, this.isOpen);
                };
                return GivingShenLingProxy;
            }(game.ProxyBase));
            activity.GivingShenLingProxy = GivingShenLingProxy;
            __reflect(GivingShenLingProxy.prototype, "game.mod.activity.GivingShenLingProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GivingShenLingView = /** @class */ (function (_super) {
                __extends(GivingShenLingView, _super);
                function GivingShenLingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.GivingShenLingSkin";
                    _this.touchEnabled = false;
                    return _this;
                }
                return GivingShenLingView;
            }(eui.Component));
            activity.GivingShenLingView = GivingShenLingView;
            __reflect(GivingShenLingView.prototype, "game.mod.activity.GivingShenLingView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var GivingShenLingMainMdr = /** @class */ (function (_super) {
                __extends(GivingShenLingMainMdr, _super);
                function GivingShenLingMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "songyaojixianzitubiao",
                            mdr: activity.GivingShenLingMdr,
                            title: "give_shenling_tips" /* give_shenling_tips */,
                            bg: "yaojixianzi_bg",
                            hintTypes: ["27" /* Activity */, "56" /* GivingShenLing */],
                        }
                    ];
                    return _this;
                }
                return GivingShenLingMainMdr;
            }(mod.WndBaseMdr));
            activity.GivingShenLingMainMdr = GivingShenLingMainMdr;
            __reflect(GivingShenLingMainMdr.prototype, "game.mod.activity.GivingShenLingMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var Handler = base.Handler;
            var GivingShenLingMdr = /** @class */ (function (_super) {
                __extends(GivingShenLingMdr, _super);
                function GivingShenLingMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.GivingShenLingView);
                    return _this;
                }
                GivingShenLingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(216 /* GivingShenLing */);
                };
                GivingShenLingMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onUpdateHint, this);
                    this.onNt("on_update_givingshenling_info" /* ON_UPDATE_GIVING_SHENLING_INFO */, this.onUpdateView, this);
                };
                GivingShenLingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    mod.GuideMgr.getIns().recordSpecialGuideMap(42 /* GivingShenLing */);
                    this._endTime = this._proxy.getEndTime();
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "give_yaoji");
                    this.addAnimate(cfg.value, this._view.gr_eff);
                    this.onUpdateView();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.onUpdateTime();
                };
                GivingShenLingMdr.prototype.onUpdateView = function () {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "give_shenling");
                    this._view.icon.setData(cfg.value);
                    this._view.img_got.visible = this._proxy.model.receive == 2;
                    this._view.btn.visible = !this._view.img_got.visible;
                    var bool = mod.HintMgr.getHint(["27" /* Activity */, "56" /* GivingShenLing */]);
                    this._view.btn.redPoint.visible = bool;
                };
                GivingShenLingMdr.prototype.onUpdateHint = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "56" /* GivingShenLing */])) {
                        this._view.btn.redPoint.visible = data.value;
                    }
                };
                GivingShenLingMdr.prototype.update = function (time) {
                    this.onUpdateTime();
                };
                GivingShenLingMdr.prototype.onUpdateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime < 0) {
                        TimeMgr.removeUpdateItem(this);
                    }
                    var timeStr = leftTime < 0 ? game.getLanById("battle_cue45" /* battle_cue45 */) : game.TimeUtil.formatSecond(leftTime, "d天H时", true);
                    this._view.lab_time.text = timeStr + "\n\n后可领取";
                    //判断显示
                    if (leftTime > 0) {
                        this._view.gr_time.visible = true;
                        this._view.btn.visible = false;
                        mod.GuideMgr.getIns().recordSpecialGuideMap(43 /* GivingShenLingRewardBtn */);
                    }
                    else {
                        this._view.btn.visible = true;
                        this._view.gr_time.visible = false;
                        mod.GuideMgr.getIns().show(43 /* GivingShenLingRewardBtn */, this._view.btn, Handler.alloc(this, this.onGivingShenLingRewardBtn)); //任务指引
                    }
                };
                GivingShenLingMdr.prototype.onGivingShenLingRewardBtn = function () {
                    mod.GuideMgr.getIns().recordSpecialGuideMap(43 /* GivingShenLingRewardBtn */);
                    mod.GuideMgr.getIns().clear(43 /* GivingShenLingRewardBtn */); //清除任务指引
                    this.onClick();
                };
                GivingShenLingMdr.prototype.onClick = function () {
                    if (this._endTime - TimeMgr.time.serverTimeSecond > 0) {
                        game.PromptBox.getIns().showLanTips("reward_tips" /* reward_tips */);
                        return;
                    }
                    this._proxy.c2s_yaoji_get_reward();
                };
                GivingShenLingMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                return GivingShenLingMdr;
            }(game.EffectMdrBase));
            activity.GivingShenLingMdr = GivingShenLingMdr;
            __reflect(GivingShenLingMdr.prototype, "game.mod.activity.GivingShenLingMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var KillBossModel = /** @class */ (function () {
                function KillBossModel() {
                    /**tab的index 调用getTypeByIndex拿到类型 */
                    this.tabIdx = 0;
                    /**选中的bossindex */
                    this.bossIndex = 0;
                    /**活动数据列表 */
                    this.list = [];
                    /**是否已经初始化配置 */
                    this.initMap = false;
                    /**根据类型保存boss表 */
                    this.cfgBossMap = {};
                    /**根据类型保存boss开启条件 */
                    this.openMap = {};
                    /**保存类型列表 */
                    this.typeList = [];
                }
                return KillBossModel;
            }());
            activity.KillBossModel = KillBossModel;
            __reflect(KillBossModel.prototype, "game.mod.activity.KillBossModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_demon_reward_data = msg.s2c_demon_reward_data;
            var s2c_receive_demon_reward_ret = msg.s2c_receive_demon_reward_ret;
            var c2s_receive_demon_reward = msg.c2s_receive_demon_reward;
            var c2s_open_demon_reward = msg.c2s_open_demon_reward;
            /**斩妖福利（挑战多人boss获得奖励） */
            var KillBossProxy = /** @class */ (function (_super) {
                __extends(KillBossProxy, _super);
                function KillBossProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(KillBossProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                KillBossProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.KillBossModel();
                    this.onProto(s2c_demon_reward_data, this.s2c_demon_reward_data, this);
                    this.onProto(s2c_receive_demon_reward_ret, this.s2c_receive_demon_reward_ret, this);
                };
                /**--------------------协议start-------------------- */
                KillBossProxy.prototype.s2c_demon_reward_data = function (n) {
                    var msg = n.body;
                    if (msg && msg.list) {
                        this._model.list = msg.list;
                    }
                    this.onUpdateHint();
                    this.sendNt("on_update_killboss_info" /* ON_UPDATE_KILLBOSS_INFO */);
                };
                /**领取奖励结果 */
                KillBossProxy.prototype.s2c_receive_demon_reward_ret = function (n) {
                    var msg = n.body;
                    if (msg.info) {
                        this.onUpdateList(msg.info);
                    }
                    this.onUpdateHint();
                    this.onUpdateWndTab();
                };
                /**领取奖励 */
                KillBossProxy.prototype.c2s_receive_demon_reward = function (index, type) {
                    var msg = new c2s_receive_demon_reward();
                    msg.index = index;
                    msg.type = type;
                    this.sendProto(msg);
                };
                KillBossProxy.prototype.c2s_open_demon_reward = function () {
                    var msg = new c2s_open_demon_reward();
                    this.sendProto(msg);
                };
                /**--------------------协议end-------------------- */
                KillBossProxy.prototype.onUpdateList = function (status) {
                    if (!this._model.list) {
                        this._model.list = [status];
                        return;
                    }
                    else {
                        for (var i = 0; i < this._model.list.length; i++) {
                            var item = this._model.list[i];
                            if (item.index == status.index) {
                                this._model.list[i] = status;
                                return;
                            }
                        }
                    }
                    this._model.list.push(status);
                };
                /**重新归类配置 */
                KillBossProxy.prototype.setCfgMap = function () {
                    this._model.initMap = true;
                    var cfgArr = game.getConfigListByName("demon_reward.json" /* DemonReward */);
                    var global = -1;
                    for (var _i = 0, cfgArr_11 = cfgArr; _i < cfgArr_11.length; _i++) {
                        var cfg = cfgArr_11[_i];
                        var type = this.getTypeConverByIndex(cfg.index);
                        if (!this._model.cfgBossMap[type]) {
                            this._model.cfgBossMap[type] = [];
                        }
                        this._model.cfgBossMap[type].push(cfg);
                        /**改变类型添加开启条件 */
                        if (global != type) {
                            global = type;
                            var cfgBoss = game.getConfigByNameId("new_multiple_boss.json" /* NewMultipleBoss */, cfg.index);
                            if (cfgBoss) {
                                this._model.openMap[type] = cfgBoss.open;
                            }
                        }
                    }
                };
                /**获取类型 */
                KillBossProxy.prototype.getCfgListByType = function (type) {
                    if (!this._model.initMap) {
                        this.setCfgMap();
                    }
                    return this._model.cfgBossMap[type];
                };
                /**根据类型获取开启条件 */
                KillBossProxy.prototype.getOpenByType = function (type) {
                    if (!this._model.initMap) {
                        this.setCfgMap();
                    }
                    return this._model.openMap[type];
                };
                /**获取类型 可用作tab列表 */
                KillBossProxy.prototype.getMapKeyList = function () {
                    if (!this._model.initMap) {
                        this.setCfgMap();
                    }
                    if (!this._model.typeList || !this._model.typeList.length) {
                        for (var key in this._model.cfgBossMap) {
                            this._model.typeList.push(+key);
                        }
                    }
                    return this._model.typeList;
                };
                /**根据index获取类型 */
                KillBossProxy.prototype.getTypeByIndex = function (index) {
                    if (index === void 0) { index = this.tabIdx; }
                    return this.getMapKeyList()[index];
                };
                /**
                 * 获取奖励列表配置和状态
                 * @param index 配置index
                 *  */
                KillBossProxy.prototype.getRewardList = function (type, index) {
                    var cfgArr = this.getCfgListByType(type);
                    for (var _i = 0, cfgArr_12 = cfgArr; _i < cfgArr_12.length; _i++) {
                        var cfg = cfgArr_12[_i];
                        if (cfg.index == index) {
                            var status = this.getInfoByIndex(index);
                            return { cfg: cfg, status: status };
                        }
                    }
                    console.error("检查配置或类型");
                    return null;
                };
                /**根据index获取状态数据 */
                KillBossProxy.prototype.getInfoByIndex = function (index) {
                    if (this._model.list && this._model.list.length > 0) {
                        for (var _i = 0, _a = this._model.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            if (item.index == index) {
                                return item;
                            }
                        }
                    }
                    return null;
                };
                Object.defineProperty(KillBossProxy.prototype, "tabIdx", {
                    /**Wnd下的tab 选中的index */
                    get: function () {
                        return this._model.tabIdx;
                    },
                    set: function (val) {
                        this._model.tabIdx = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(KillBossProxy.prototype, "bossIndex", {
                    get: function () {
                        return this._model.bossIndex;
                    },
                    set: function (val) {
                        this._model.bossIndex = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**index转换type type=几转 */
                KillBossProxy.prototype.getTypeConverByIndex = function (index) {
                    /**boss配置index前缀 */
                    var prefix = 401010000;
                    //todo 暂定余数除以100为类型（一转、二转之类）
                    return Math.floor(index % prefix / 100);
                };
                KillBossProxy.prototype.onUpdateWndTab = function () {
                    this._model.list.sort(function (a, b) {
                        return a.index - b.index;
                    });
                    for (var _i = 0, _a = this._model.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        var type = this.getTypeConverByIndex(item.index);
                        var btnType = "0" + type;
                        var bool = mod.HintMgr.getHint(["27" /* Activity */, "50" /* KillBoss */, btnType]);
                        if (bool) {
                            if (+btnType == this.getTypeByIndex()) {
                                break;
                            }
                            this.sendNt("update_wnd_base_mdr_sel_tab" /* UPDATE_WND_BASE_MDR_SEL_TAB */, btnType);
                            // console.error("跳转tab了", btnType);
                            return;
                        }
                    }
                    var cfgArr = this.getCfgListByType(this.getTypeByIndex());
                    for (var i = 0; i < cfgArr.length; i++) {
                        var info = this.getInfoByIndex(cfgArr[i].index);
                        if (info) {
                            if (info.first_reward == 1 || info.personal_reward == 1 || info.kill_reward == 1) {
                                this.sendNt("on_update_killboss_select_index" /* ON_UPDATE_KILLBOSS_SELECT_INDEX */, i);
                                // console.error("跳转index了", i);
                                return;
                            }
                        }
                    }
                    this.sendNt("on_update_killboss_info" /* ON_UPDATE_KILLBOSS_INFO */);
                    // console.error("没有跳转 直接刷新");
                };
                /**获取Wnd的tab页签 */
                KillBossProxy.prototype.getInitTab = function () {
                    this._model.list.sort(function (a, b) {
                        return a.index - b.index;
                    });
                    for (var _i = 0, _a = this._model.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        var type = this.getTypeConverByIndex(item.index);
                        var btnType = "0" + type;
                        var bool = mod.HintMgr.getHint(["27" /* Activity */, "50" /* KillBoss */, btnType]);
                        if (bool) {
                            return btnType;
                        }
                    }
                    return "01" /* TabBtnType01 */;
                };
                /** */
                KillBossProxy.prototype.getInitIndex = function (type) {
                    if (type === void 0) { type = this.getTypeByIndex(); }
                    var cfgArr = this.getCfgListByType(type);
                    for (var i = 0; i < cfgArr.length; i++) {
                        var info = this.getInfoByIndex(cfgArr[i].index);
                        if (info) {
                            if (info.first_reward == 1 || info.personal_reward == 1 || info.kill_reward == 1) {
                                return i;
                            }
                        }
                    }
                    return 0;
                };
                KillBossProxy.prototype.onUpdateHint = function () {
                    for (var _i = 0, _a = this._model.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        this.onSetHint(item);
                    }
                };
                KillBossProxy.prototype.onSetHint = function (info) {
                    var type = this.getTypeConverByIndex(info.index);
                    var root = ["27" /* Activity */, "50" /* KillBoss */, "0" + type, "" + info.index];
                    var open = this.checkBossOpen(type);
                    if (!open) {
                        mod.HintMgr.setHint(open, root);
                        return;
                    }
                    var hint = mod.HintMgr.getHint(root);
                    var bool = info.first_reward == 1 || info.personal_reward == 1 || info.kill_reward == 1;
                    if (hint != bool) {
                        mod.HintMgr.setHint(bool, root);
                    }
                };
                /**
                 * 根据bossindex获取红点
                 * @param index bossindex
                 * */
                KillBossProxy.prototype.getBossItemHint = function (index) {
                    var type = this.getTypeConverByIndex(index);
                    var open = this.checkBossOpen(type);
                    if (!open) {
                        return false;
                    }
                    var info = this.getInfoByIndex(index);
                    if (!info) {
                        return false;
                    }
                    return info.first_reward == 1 || info.personal_reward == 1 || info.kill_reward == 1;
                };
                /**先获取开启条件再判断 */
                KillBossProxy.prototype.checkBossOpen = function (type) {
                    var open = this.getOpenByType(type);
                    if (!open) {
                        return false;
                    }
                    return mod.ViewMgr.getIns().checkBossOpen(open[0], open[1]);
                };
                return KillBossProxy;
            }(game.ProxyBase));
            activity.KillBossProxy = KillBossProxy;
            __reflect(KillBossProxy.prototype, "game.mod.activity.KillBossProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var KillBossTabItem = /** @class */ (function (_super) {
                __extends(KillBossTabItem, _super);
                function KillBossTabItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                KillBossTabItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(213 /* KillBoss */);
                };
                KillBossTabItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var monsterIndex = data.monster_index[0];
                    var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, monsterIndex);
                    this.img_icon.source = monsterCfg.res_id;
                    this.lab_name.text = monsterCfg.name;
                    // let status = this._proxy.getInfoByIndex(data.index);
                    // if (status) {
                    //     this.redPoint.visible = status.first_reward == 1 || status.personal_reward == 1 || status.kill_reward == 1;
                    // } else {
                    //     this.redPoint.visible = false;
                    // }
                    this.redPoint.visible = this._proxy.getBossItemHint(data.index);
                };
                return KillBossTabItem;
            }(mod.BaseRenderer));
            activity.KillBossTabItem = KillBossTabItem;
            __reflect(KillBossTabItem.prototype, "game.mod.activity.KillBossTabItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var KillBossView = /** @class */ (function (_super) {
                __extends(KillBossView, _super);
                function KillBossView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.KillBossSkin";
                    return _this;
                }
                return KillBossView;
            }(eui.Component));
            activity.KillBossView = KillBossView;
            __reflect(KillBossView.prototype, "game.mod.activity.KillBossView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var KillBossMainMdr = /** @class */ (function (_super) {
                __extends(KillBossMainMdr, _super);
                function KillBossMainMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                KillBossMainMdr.prototype.onInit = function () {
                    this._proxy = this.retProxy(213 /* KillBoss */);
                    _super.prototype.onInit.call(this);
                };
                KillBossMainMdr.prototype.onShow = function () {
                    this._proxy.c2s_open_demon_reward();
                    var types = this._proxy.getMapKeyList();
                    if (types && types.length == 0) {
                        console.error("检查配置列表");
                        return;
                    }
                    this._btnData = [];
                    for (var _i = 0, types_4 = types; _i < types_4.length; _i++) {
                        var type = types_4[_i];
                        this._btnData.push({
                            btnType: "0" + type,
                            icon: type + "zhuan",
                            mdr: activity.KillBossMdr,
                            title: "killboss_tips2" /* killboss_tips2 */,
                            bg: "killboss_bg",
                            hintTypes: ["27" /* Activity */, "50" /* KillBoss */, "0" + type],
                        });
                    }
                    _super.prototype.onShow.call(this);
                    this.sendNt("update_wnd_base_mdr_sel_tab" /* UPDATE_WND_BASE_MDR_SEL_TAB */, this._proxy.getInitTab());
                };
                KillBossMainMdr.prototype.onTabCheck = function (index) {
                    // let type: number = this._proxy.getTypeByIndex(index);
                    // let open: number[] = this._proxy.getOpenByType(type);
                    // return ViewMgr.getIns().checkBossOpen(open[0], open[1], true);
                    this._proxy.tabIdx = index;
                    return true;
                };
                KillBossMainMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return KillBossMainMdr;
            }(mod.WndBaseMdr));
            activity.KillBossMainMdr = KillBossMainMdr;
            __reflect(KillBossMainMdr.prototype, "game.mod.activity.KillBossMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var ItemTapEvent = eui.ItemTapEvent;
            var TouchEvent = egret.TouchEvent;
            var KillBossMdr = /** @class */ (function (_super) {
                __extends(KillBossMdr, _super);
                function KillBossMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.KillBossView);
                    _this._listData = new ArrayCollection();
                    _this._listBoss = new ArrayCollection();
                    _this._listServer = new ArrayCollection();
                    _this._listPerson = new ArrayCollection();
                    _this._listLast = new ArrayCollection();
                    return _this;
                }
                KillBossMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(213 /* KillBoss */);
                    // this._view.img_bg.source = ResUtil.getUiJpg("killboss_bg");
                    this._view.list_boss.itemRenderer = activity.KillBossTabItem;
                    this._view.list_boss.dataProvider = this._listBoss;
                    this._view.list_server.itemRenderer = mod.Icon;
                    this._view.list_server.dataProvider = this._listServer;
                    this._view.list_person.itemRenderer = mod.Icon;
                    this._view.list_person.dataProvider = this._listPerson;
                    this._view.list_last.itemRenderer = mod.Icon;
                    this._view.list_last.dataProvider = this._listLast;
                    // this._view.list.itemRenderer = KillBossItem;
                    // this._view.list.dataProvider = this._listData;
                };
                KillBossMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_boss, ItemTapEvent.ITEM_TAP, this.onClickTab, this);
                    addEventListener(this._view.btn1, TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.btn2, TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.btn3, TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    this.onNt("on_update_killboss_info" /* ON_UPDATE_KILLBOSS_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_killboss_select_index" /* ON_UPDATE_KILLBOSS_SELECT_INDEX */, this.onSelectIndex, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                };
                KillBossMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onInitTab();
                };
                KillBossMdr.prototype.onInitTab = function () {
                    this._listBoss.source = this._proxy.getCfgListByType(this._proxy.getTypeByIndex());
                    this.onUpdateIndex(this._proxy.getInitIndex());
                };
                KillBossMdr.prototype.onUpdateView = function () {
                    this._info = this._proxy.getRewardList(this._proxy.getTypeByIndex(), this._proxy.bossIndex);
                    var info = this._info;
                    this._listServer.source = info.cfg.first_skill_reward;
                    this._listPerson.source = info.cfg.personal_kill_reward;
                    this._listLast.source = info.cfg.end_skill_reward;
                    var status = info.status;
                    if (status && status.first_name) {
                        var str = game.StringUtil.substitute(game.getLanById("killboss_tips" /* killboss_tips */), [game.TextUtil.addColor("" + status.first_name, 2330156 /* GREEN */)]);
                        this._view.lab.textFlow = game.TextUtil.parseHtml(str);
                        this._view.img_kill.visible = true;
                    }
                    else {
                        this._view.lab.text = "";
                        this._view.img_kill.visible = false;
                    }
                    var first_reward = status && status.first_reward || 0;
                    this._view.img_get1.visible = first_reward == 2;
                    this._view.btn1.visible = !this._view.img_get1.visible;
                    var personal_reward = status && status.personal_reward || 0;
                    this._view.img_get2.visible = personal_reward == 2;
                    this._view.btn2.visible = !this._view.img_get2.visible;
                    var kill_reward = status && status.kill_reward || 0;
                    this._view.img_get3.visible = kill_reward == 2;
                    this._view.btn3.visible = !this._view.img_get3.visible;
                    var open = this._proxy.checkBossOpen(this._proxy.getTypeByIndex());
                    if (!open) {
                        this._view.btn1.label = this._view.btn2.label = this._view.btn3.label = this._proxy.getTypeByIndex() + "\u8F6C\u5F00\u542F";
                        this._view.btn1.setLabelColor(13895688 /* RED */);
                        this._view.btn2.setLabelColor(13895688 /* RED */);
                        this._view.btn3.setLabelColor(13895688 /* RED */);
                        return;
                    }
                    var b1 = first_reward == 1;
                    this._view.btn1.setHint(b1);
                    this._view.btn1.label = b1 ? "领取" : "前往挑战";
                    this._view.btn1.setLabelColor(0x8A5226);
                    var b2 = personal_reward == 1;
                    this._view.btn2.setHint(b2);
                    this._view.btn2.label = b2 ? "领取" : "前往挑战";
                    this._view.btn2.setLabelColor(0x8A5226);
                    var b3 = kill_reward == 1;
                    this._view.btn3.setHint(b3);
                    this._view.btn3.label = b3 ? "领取" : "前往挑战";
                    this._view.btn3.setLabelColor(0x8A5226);
                };
                KillBossMdr.prototype.onClickTab = function (e) {
                    this.onUpdateIndex(e.itemIndex);
                };
                KillBossMdr.prototype.onClickBtn = function (e) {
                    var open = this._proxy.getOpenByType(this._proxy.getTypeByIndex());
                    if (!mod.ViewMgr.getIns().checkBossOpen(open[0], open[1], true)) {
                        return;
                    }
                    var rewardType = 0;
                    var bool = false;
                    switch (e.target) {
                        case this._view.btn1:
                            rewardType = 1;
                            bool = !this._info.status || !this._info.status.first_reward;
                            break;
                        case this._view.btn2:
                            rewardType = 2;
                            bool = !this._info.status || !this._info.status.personal_reward;
                            break;
                        case this._view.btn3:
                            rewardType = 3;
                            bool = !this._info.status || !this._info.status.kill_reward;
                            break;
                    }
                    if (bool) {
                        mod.ViewMgr.getIns().showView("22" /* Boss */, "01" /* BossMain */, ["01" /* Many */, this._proxy.getTypeByIndex(), this._view.list_boss.selectedIndex]);
                    }
                    else {
                        this._proxy.c2s_receive_demon_reward(this._proxy.bossIndex, rewardType);
                    }
                };
                KillBossMdr.prototype.onSelectIndex = function (n) {
                    var index = n.body;
                    this.onUpdateIndex(index);
                };
                KillBossMdr.prototype.onUpdateIndex = function (index) {
                    this._view.list_boss.selectedIndex = index;
                    var info = this._listBoss.source[this._view.list_boss.selectedIndex];
                    this._proxy.bossIndex = info.index;
                    this.onUpdateView();
                };
                /** 通用红点事件监听 */
                KillBossMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    if (data.node.indexOf(mod.HintMgr.getType(["27" /* Activity */, "50" /* KillBoss */, "0" + this._proxy.getTypeByIndex()])) > -1) {
                        for (var _i = 0, _a = this._listBoss.source; _i < _a.length; _i++) {
                            var data_1 = _a[_i];
                            this._listBoss.itemUpdated(data_1);
                        }
                        this._view.btn1.redPoint.visible = this._info.status.first_reward == 1;
                        this._view.btn2.redPoint.visible = this._info.status.personal_reward == 1;
                        this._view.btn3.redPoint.visible = this._info.status.kill_reward == 1;
                    }
                };
                KillBossMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return KillBossMdr;
            }(game.MdrBase));
            activity.KillBossMdr = KillBossMdr;
            __reflect(KillBossMdr.prototype, "game.mod.activity.KillBossMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var LotteryModel = /** @class */ (function () {
                function LotteryModel() {
                    this.count = 0;
                    this.id_list = [];
                }
                return LotteryModel;
            }());
            activity.LotteryModel = LotteryModel;
            __reflect(LotteryModel.prototype, "game.mod.activity.LotteryModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_power_dia_draw = msg.c2s_power_dia_draw;
            var s2c_power_dia_draw_ret = msg.s2c_power_dia_draw_ret;
            var s2c_power_dia_info = msg.s2c_power_dia_info;
            var LotteryProxy = /** @class */ (function (_super) {
                __extends(LotteryProxy, _super);
                function LotteryProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(LotteryProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                LotteryProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.LotteryModel();
                    this.onProto(s2c_power_dia_draw_ret, this.s2c_power_dia_draw_ret, this);
                    this.onProto(s2c_power_dia_info, this.s2c_power_dia_info, this);
                };
                /**--------------------转盘协议start-------------------- */
                /**抽奖 */
                LotteryProxy.prototype.c2s_power_dia_draw = function () {
                    var msg = new c2s_power_dia_draw;
                    this.sendProto(msg);
                };
                /**抽奖返回结果 */
                LotteryProxy.prototype.s2c_power_dia_draw_ret = function (n) {
                    var msg = n.body;
                    if (msg) {
                        this._model.count = msg.info.count || 0;
                        this._model.id_list = msg.info.id_list || [];
                        this.sendNt("on_open_lottery_tween" /* ON_OPEN_LOTTERY_TWEEN */, msg.index);
                    }
                    this.onUpdateHint();
                };
                /**活动详情（实时更新） */
                LotteryProxy.prototype.s2c_power_dia_info = function (n) {
                    var msg = n.body;
                    if (msg) {
                        this._model.count = msg.info.count || 0;
                        this._model.id_list = msg.info.id_list || [];
                    }
                    this.onUpdateHint();
                    this.sendNt("on_open_lottery_tween" /* ON_OPEN_LOTTERY_TWEEN */);
                    this.sendNt("on_update_lottery_info" /* ON_UPDATE_LOTTERY_INFO */);
                };
                /**--------------------转盘协议end-------------------- */
                LotteryProxy.prototype.onUpdateHint = function () {
                    mod.HintMgr.setHint(this._model.count > 0, ["27" /* Activity */, "30" /* Lottery */]);
                };
                Object.defineProperty(LotteryProxy.prototype, "targetPower", {
                    /**获取目标战力 */
                    get: function () {
                        var cfgArr = game.getConfigListByName("power_dia_target.json" /* PowerDiaTarget */);
                        for (var _i = 0, cfgArr_13 = cfgArr; _i < cfgArr_13.length; _i++) {
                            var cfg = cfgArr_13[_i];
                            if (game.RoleVo.ins.showpower.toNumber() < cfg.power_target) {
                                return cfg.power_target;
                            }
                        }
                        return cfgArr[cfgArr.length - 1].power_target;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(LotteryProxy.prototype, "isOver", {
                    /**是否全部奖励领取 */
                    get: function () {
                        var cfgArr = game.getConfigListByName("power_dia_target.json" /* PowerDiaTarget */);
                        return this.id_list.length >= cfgArr.length;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(LotteryProxy.prototype, "cfgReward", {
                    /**根据文档显示第4个奖励为大奖 */
                    get: function () {
                        return game.getConfigByNameId("power_dia_reward.json" /* PowerDiaReward */, 4);
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(LotteryProxy.prototype, "id_list", {
                    get: function () {
                        return this._model.id_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                LotteryProxy.prototype.getRewardGot = function (index) {
                    return this.id_list.indexOf(index) > -1;
                };
                LotteryProxy.prototype.isOpen = function () {
                    return !this.isOver;
                };
                return LotteryProxy;
            }(game.ProxyBase));
            activity.LotteryProxy = LotteryProxy;
            __reflect(LotteryProxy.prototype, "game.mod.activity.LotteryProxy", ["game.mod.ILotteryProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var LotteryView = /** @class */ (function (_super) {
                __extends(LotteryView, _super);
                function LotteryView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.LotterySkin";
                    return _this;
                }
                return LotteryView;
            }(eui.Component));
            activity.LotteryView = LotteryView;
            __reflect(LotteryView.prototype, "game.mod.activity.LotteryView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var LottertMainMdr = /** @class */ (function (_super) {
                __extends(LottertMainMdr, _super);
                function LottertMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Main */,
                            icon: "icon_lottery",
                            mdr: activity.LotteryMdr,
                            title: "zhanlizhuanpan" /* zhanlizhuanpan */,
                            hintTypes: ["27" /* Activity */, "30" /* Lottery */],
                        }
                    ];
                    return _this;
                }
                return LottertMainMdr;
            }(mod.WndBaseMdr));
            activity.LottertMainMdr = LottertMainMdr;
            __reflect(LottertMainMdr.prototype, "game.mod.activity.LottertMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var Point = egret.Point;
            var Handler = base.Handler;
            var delayCall = base.delayCall;
            var clearDelay = base.clearDelay;
            var LotteryMdr = /** @class */ (function (_super) {
                __extends(LotteryMdr, _super);
                function LotteryMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.LotteryView);
                    /**icon坐标和id */
                    _this.posArr = [];
                    /**动画圈数 */
                    _this.round = 2;
                    /**中心点 */
                    _this.center = 47;
                    /**动画当前位置索引 */
                    _this.cur = 0;
                    _this._ingLay = 100;
                    _this._default = 1500;
                    /**正在抽奖 */
                    _this.isTween = false;
                    return _this;
                }
                LotteryMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(203 /* Lottery */);
                    this._view.img_bg.source = game.ResUtil.getUiJpg("lottery_bg");
                    this._view.img_banner.source = game.ResUtil.getUiJpg("lottery_banner");
                    game.TextUtil.addLinkHtmlTxt2(this._view.lab_tips, "概率公示", "0x4DFB28");
                };
                LotteryMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_lottery, TouchEvent.TOUCH_TAP, this.onClickLottry);
                    addEventListener(this._view.lab_tips, TouchEvent.TOUCH_TAP, this.onClickTips);
                    addEventListener(this._view.btn_recharge, TouchEvent.TOUCH_TAP, this.onRecharge);
                    this.onNt("on_open_lottery_tween" /* ON_OPEN_LOTTERY_TWEEN */, this.onOpenTween, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                };
                LotteryMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.isTween = false;
                    this.onUpdateView();
                    this.onInitView();
                    this.onUpdateIcon();
                };
                LotteryMdr.prototype.onUpdateView = function () {
                    var over = this._proxy.isOver;
                    this._view.currentState = over ? "over" : "defaut";
                    if (over) {
                        return;
                    }
                    var count = this._proxy.model.count;
                    var bool = count > 0;
                    this._view.btn_recharge.visible = !bool;
                    if (this._view.btn_recharge.visible) {
                        this._view.btn_recharge.setEffect("chongzhi" /* ShouChongQianWang */);
                    }
                    this._view.btn_lottery.visible = bool;
                    if (this._view.btn_lottery.visible) {
                        this._view.btn_lottery.label = "\u62BD\u5956(" + count + ")";
                        this._view.btn_lottery.setEffect("chongzhi" /* ShouChongQianWang */);
                        this._view.btn_lottery.setHint(mod.HintMgr.getHint(["27" /* Activity */, "30" /* Lottery */]));
                    }
                };
                LotteryMdr.prototype.onInitView = function () {
                    var cfg = this._proxy.cfgReward;
                    this._view.icon.setData(cfg.award[0]);
                    //是否是否全部抽完
                    if (this._proxy.isOver) {
                        return;
                    }
                    this._view.lab_cur.text = "\u5F53\u524D\u6218\u529B\uFF1A" + game.RoleVo.ins.showpower.toNumber();
                    this._view.lab_tar.text = "\u76EE\u6807\u6218\u529B\uFF1A" + this._proxy.targetPower;
                };
                LotteryMdr.prototype.onUpdateIcon = function () {
                    this.isTween = false;
                    this.posArr.length = 0;
                    var cfgArr = game.getConfigListByName("power_dia_reward.json" /* PowerDiaReward */);
                    for (var i = 1; i <= cfgArr.length; i++) {
                        var icon = this._view["icon_" + i];
                        var cfg = cfgArr[i - 1];
                        var prop = game.PropData.create(cfg.award[0], cfg.award[1]);
                        var isGot = this._proxy.getRewardGot(cfg.index);
                        var isReward = !!cfg.luxury;
                        icon.setData({ prop: prop, isGot: isGot, isReward: isReward });
                        if (!isGot) {
                            this.posArr.push({ pos: Point.create(icon.x, icon.y), id: cfg.index });
                        }
                    }
                    this.onTween();
                };
                LotteryMdr.prototype.onOpenTween = function (n) {
                    this.idx = n.body;
                    this.onUpdateView();
                    this.cur = 0;
                    this.onTween();
                };
                LotteryMdr.prototype.onTween = function () {
                    var posData = this.selectData;
                    if (!posData) {
                        this.onClear();
                        return;
                    }
                    this._view.grp_eff.x = posData.pos.x + this.center;
                    this._view.grp_eff.y = posData.pos.y + this.center;
                    this.eff_idx && this.removeEffect(this.eff_idx);
                    this.eff_idx = this.addEftByParent("daojushanguang" /* PropEffect */, this._view.grp_eff, 0, 0, 1, null, 1);
                    this.cur++;
                    var round = this.cur / this.posArr.length;
                    if (this.isTween && posData.id == this.idx && round >= this.round) {
                        this.onOver();
                        return;
                    }
                    var delay = this.isTween ? this._ingLay : this._default;
                    this.delay_idx && clearDelay(this.delay_idx);
                    this.delay_idx = delayCall(Handler.alloc(this, this.onTween), delay);
                };
                LotteryMdr.prototype.onOver = function () {
                    this.onClear();
                    var cfg = game.getConfigByNameId("power_dia_reward.json" /* PowerDiaReward */, this.idx);
                    mod.PropTipsMgr.getIns().showBestPropArray([cfg.award]);
                    this.onUpdateIcon();
                };
                LotteryMdr.prototype.onClickLottry = function () {
                    if (this.isTween) {
                        game.PromptBox.getIns().show(game.getLanById("zhengzaichoujiang" /* zhengzaichoujiang */));
                        return;
                    }
                    this.isTween = true;
                    this._proxy.c2s_power_dia_draw();
                };
                /**提示说明 */
                LotteryMdr.prototype.onClickTips = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("zhanlizhuanpantips3" /* zhanlizhuanpantips3 */));
                };
                LotteryMdr.prototype.onRecharge = function () {
                    mod.ViewMgr.getIns().openCommonRechargeView();
                };
                /** 通用红点事件监听 */
                LotteryMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "30" /* Lottery */])) {
                        this._view.btn_lottery.redPoint.visible = data.value;
                    }
                };
                Object.defineProperty(LotteryMdr.prototype, "selectData", {
                    get: function () {
                        if (!this.posArr.length) {
                            return this.posArr[0];
                        }
                        var idx = this.cur % this.posArr.length;
                        return this.posArr[idx];
                    },
                    enumerable: true,
                    configurable: true
                });
                LotteryMdr.prototype.onHide = function () {
                    this.isTween = false;
                    this.onClear();
                    _super.prototype.onHide.call(this);
                };
                LotteryMdr.prototype.onClear = function () {
                    this.delay_idx && clearDelay(this.delay_idx);
                    this.delay_idx = 0;
                    this.eff_idx && this.removeEffect(this.eff_idx);
                    this.eff_idx = 0;
                };
                return LotteryMdr;
            }(game.EffectMdrBase));
            activity.LotteryMdr = LotteryMdr;
            __reflect(LotteryMdr.prototype, "game.mod.activity.LotteryMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ActivityData = /** @class */ (function () {
                function ActivityData() {
                }
                ActivityData.prototype.updateData = function (msg) {
                    var keys = Object.keys(msg);
                    if (keys && keys.length) {
                        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                            var key = keys_1[_i];
                            if (msg[key] != undefined) {
                                this[key] = msg[key];
                            }
                        }
                    }
                };
                return ActivityData;
            }());
            activity.ActivityData = ActivityData;
            __reflect(ActivityData.prototype, "game.mod.activity.ActivityData");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ActivityModel = /** @class */ (function () {
                function ActivityModel() {
                    //{活动id:活动数据}
                    this.activityList = {};
                    //{活动类型：活动idList}
                    this.actTypeList = {};
                    this.entranceBtnMap = {}; //入口编号对应的活动列表，总的活动数据，不用做移除处理
                }
                return ActivityModel;
            }());
            activity.ActivityModel = ActivityModel;
            __reflect(ActivityModel.prototype, "game.mod.activity.ActivityModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_oper_act_info = msg.s2c_oper_act_info;
            var s2c_oper_act_update = msg.s2c_oper_act_update;
            var s2c_oper_act_close = msg.s2c_oper_act_close;
            var TimeMgr = base.TimeMgr;
            var facade = base.facade;
            var c2s_oper_act_get_info = msg.c2s_oper_act_get_info;
            /***
             * 活动数据（新活动请自行创建新的Proxy和Model）
             */
            var ActivityProxy = /** @class */ (function (_super) {
                __extends(ActivityProxy, _super);
                function ActivityProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ActivityProxy.prototype.getModel = function () {
                    return this._model;
                };
                ActivityProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.ActivityModel();
                    this.onProto(s2c_oper_act_info, this.s2c_oper_act_info, this);
                    this.onProto(s2c_oper_act_update, this.s2c_oper_act_update, this);
                    this.onProto(s2c_oper_act_close, this.s2c_oper_act_close, this);
                };
                ActivityProxy.prototype.onStartReconnect = function () {
                    _super.prototype.onStartReconnect.call(this);
                    this._model.activityList = {};
                    this._model.actTypeList = {};
                    this._model.entranceBtnMap = {};
                };
                //初始化活动数据，登录时候下发，服务端会过滤未达到开启时间的活动
                ActivityProxy.prototype.s2c_oper_act_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_list) {
                        return;
                    }
                    var actList = msg.act_list;
                    for (var i = 0, l = actList.length; i < l; i++) {
                        var actInfo = actList[i];
                        this._model.activityList[actInfo.act_id] = actInfo;
                        this.setActData(actInfo);
                        var typeAry = this._model.actTypeList[actInfo.type];
                        if (!typeAry) {
                            this._model.actTypeList[actInfo.type] = typeAry = [];
                        }
                        if (typeAry.indexOf(actInfo.act_id) < 0) {
                            typeAry.push(actInfo.act_id);
                        }
                        this.setEntranceBtnMap(actInfo); //设置入口数据
                    }
                    this.sendNt("on_activity_init" /* ON_ACTIVITY_INIT */);
                };
                //更新中控活动，开启活动以及更新活动会下发，开启活动指的是达到活动开启时间
                ActivityProxy.prototype.s2c_oper_act_update = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_list) {
                        return;
                    }
                    var actList = msg.act_list;
                    var actIdList = []; //活动ID列表
                    var typeList = []; //ActivityType列表
                    var posTypeList = []; //ActivityPosType列表
                    for (var i = 0, l = actList.length; i < l; i++) {
                        var actInfo = actList[i];
                        this.setActData(actInfo);
                        actIdList.push(actInfo.act_id);
                        var typeAry = this._model.actTypeList[actInfo.type];
                        if (!typeAry) {
                            this._model.actTypeList[actInfo.type] = typeAry = [];
                            typeList.push(actInfo.type);
                        }
                        if (typeAry.indexOf(actInfo.act_id) < 0) {
                            typeAry.push(actInfo.act_id);
                        }
                        var posTypes = this.setEntranceBtnMap(actInfo, true); //设置入口数据
                        if (posTypes.length) {
                            for (var _i = 0, posTypes_1 = posTypes; _i < posTypes_1.length; _i++) {
                                var posType = posTypes_1[_i];
                                if (posTypeList.indexOf(posType) < 0) {
                                    posTypeList.push(posType);
                                }
                            }
                        }
                    }
                    this.sendNt("on_activity_update" /* ON_ACTIVITY_UPDATE */, actIdList);
                    this.sendNt("on_activity_update_by_type" /* ON_ACTIVITY_UPDATE_BY_TYPE */, typeList);
                    if (posTypeList.length) {
                        //新增入口的时候，刷新对应类型的入口
                        this.sendNt("on_activity_entrance_update" /* ON_ACTIVITY_ENTRANCE_UPDATE */, posTypeList);
                    }
                };
                //删除活动，活动结束后服务端会下发
                ActivityProxy.prototype.s2c_oper_act_close = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.act_id) {
                        return;
                    }
                    var actId = msg.act_id;
                    var actInfo = this._model.activityList[actId];
                    if (!actInfo) {
                        return;
                    }
                    //删除活动时候，关闭对应的活动入口
                    this.checkDeleteEntrance(actInfo);
                    var type = actInfo.type;
                    var pos = this.getActPos(actId, type);
                    if (pos >= 0) {
                        this._model.actTypeList[type].splice(pos, 1);
                    }
                    if (!this._model.actTypeList[type].length) {
                        delete this._model.actTypeList[type];
                    }
                    delete this._model.activityList[actId];
                    this.sendNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, actId);
                    this.sendNt("on_activity_update_by_type" /* ON_ACTIVITY_UPDATE_BY_TYPE */, [type]);
                };
                //设置活动编号相关的入口数据*/
                ActivityProxy.prototype.setEntranceBtnMap = function (actInfo, isUpdate) {
                    var posTypeList = []; //更新的活动入口类型
                    var posType = this.updateEntranceBtnMap(actInfo.entrance, actInfo, isUpdate); //更新更新活动入口数据
                    if (posType) {
                        posTypeList.push(posType);
                    }
                    if (this.isSingleIcon(actInfo)) {
                        //独立图标入口也存储数据
                        posType = this.updateEntranceBtnMap(actInfo.icon, actInfo, isUpdate);
                        if (posType && posTypeList.indexOf(posType) < 0) {
                            posTypeList.push(posType);
                        }
                    }
                    return posTypeList;
                };
                //更新活动编号相关的入口数据
                ActivityProxy.prototype.updateEntranceBtnMap = function (entrance, actInfo, isUpdate) {
                    var posType = 0;
                    if (!entrance) {
                        //没有配置入口的不注册
                        return posType;
                    }
                    var list = this._model.entranceBtnMap[entrance];
                    if (!list) {
                        //活动入口不存在时
                        list = this._model.entranceBtnMap[entrance] = [];
                        if (isUpdate) {
                            //中控活动更新时候，需要判断对应的活动入口类型刷新
                            if (this.isLeftBtn(entrance)) {
                                posType = 2 /* Left */;
                            }
                            else if (this.isBigBtn(entrance)) {
                                posType = 3 /* Big */;
                            }
                            else {
                                posType = 1 /* Top */;
                            }
                        }
                    }
                    var pos = this.getEntranceBtnPos(entrance, actInfo);
                    if (pos >= 0) {
                        //活动已存在，则更新
                        list[pos] = actInfo;
                    }
                    else {
                        list.push(actInfo);
                    }
                    return posType;
                };
                ActivityProxy.prototype.getEntranceBtnPos = function (entrance, actInfo) {
                    var list = this._model.entranceBtnMap[entrance];
                    if (!list || !list.length) {
                        return -1;
                    }
                    for (var i = 0; i < list.length; ++i) {
                        var info = list[i];
                        if (info.act_id == actInfo.act_id) {
                            return i; //活动ID已存在
                        }
                    }
                    return -1;
                };
                //检测删除对应的入口
                ActivityProxy.prototype.checkDeleteEntrance = function (actInfo) {
                    var entrance = actInfo.entrance;
                    if (entrance) {
                        //存在入口编号时,判断对应的入口编号是否还存在其他活动
                        var showActList = this.getActListByEntrance(entrance, true); //当前入口编号开启的活动
                        if (!showActList.length) {
                            //对应入口编号没有活动时，则删除
                            var actList = this._model.entranceBtnMap[entrance] || []; //总的入口活动
                            for (var _i = 0, actList_1 = actList; _i < actList_1.length; _i++) {
                                var act = actList_1[_i];
                                if (this.deleteEntrance(entrance, act.act_id)) {
                                    break;
                                }
                            }
                        }
                    }
                    if (this.isSingleIcon(actInfo)) {
                        //独立图标时
                        this.deleteEntrance(actInfo.icon, actInfo.act_id);
                    }
                };
                //删除对应的入口
                ActivityProxy.prototype.deleteEntrance = function (entrance, actId) {
                    var isDelete = false;
                    if (this.isLeftBtn(entrance)) {
                        isDelete = mod.BtnIconMgr.insLeft().updateOpen(actId, false, true);
                    }
                    else if (this.isBigBtn(entrance)) {
                        isDelete = mod.BtnIconMgr.insBig().updateOpen(actId, false, true);
                    }
                    else {
                        isDelete = mod.BtnIconMgr.insTop().updateOpen(actId, false, true);
                    }
                    if (isDelete) {
                        delete this._model.entranceBtnMap[entrance]; //删除对应的入口数据
                    }
                    return isDelete;
                };
                //是否是独立入口
                ActivityProxy.prototype.isSingleIcon = function (actInfo) {
                    return actInfo.is_single_icon && !!actInfo.icon;
                };
                //独立图标或者入口编号
                ActivityProxy.prototype.getActIcon = function (actInfo) {
                    return this.isSingleIcon(actInfo) ? actInfo.icon : actInfo.entrance;
                };
                ActivityProxy.prototype.getActPos = function (actId, type) {
                    for (var i = 0; i < this._model.actTypeList[type].length; ++i) {
                        var id = this._model.actTypeList[type][i];
                        if (id == actId) {
                            return i;
                        }
                    }
                    return -1;
                };
                ActivityProxy.prototype.getEntranceBtnList = function (type) {
                    var list = [];
                    for (var k in this._model.entranceBtnMap) {
                        var entrance = k; //独立图标或者入口编号
                        if ((type == 2 /* Left */ && this.isLeftBtn(entrance))
                            || (type == 3 /* Big */ && this.isBigBtn(entrance))
                            || (type == 1 /* Top */ && this.isTopBtn(entrance))) {
                            var actList = this._model.entranceBtnMap[entrance]; //总的入口活动
                            actList.sort(this.sortOperActList); //排序
                            var btnData = this.getBtnData(actList, entrance); //活动转换成IBtnIconData
                            list.push(btnData);
                        }
                    }
                    return list;
                };
                //是否左侧按钮
                ActivityProxy.prototype.isLeftBtn = function (entrance) {
                    return entrance.indexOf("l_") == 0;
                };
                //是否大按钮
                ActivityProxy.prototype.isBigBtn = function (entrance) {
                    return entrance.indexOf("b_") == 0;
                };
                //是否顶部按钮
                ActivityProxy.prototype.isTopBtn = function (entrance) {
                    return !this.isLeftBtn(entrance) && !this.isBigBtn(entrance);
                };
                //排序活动
                ActivityProxy.prototype.sortOperActList = function (a, b) {
                    if (a.sort_num != b.sort_num) {
                        return a.sort_num - b.sort_num;
                    }
                    return a.act_id - b.act_id;
                };
                //活动是否开启
                ActivityProxy.prototype.isActShow = function (actInfo) {
                    var openIdx = this.getOpenIdx(actInfo);
                    if (openIdx && !mod.ViewMgr.getIns().checkViewOpen(openIdx)) {
                        return false; //功能未开启
                    }
                    //判断活动时间是否已开启
                    var curTime = TimeMgr.time.serverTimeSecond;
                    return actInfo.c_begin_time <= curTime && curTime < actInfo.c_end_time;
                };
                //获取顶部中控活动入口按钮
                ActivityProxy.prototype.getTopEntranceBtnList = function () {
                    return this.getEntranceBtnList(1 /* Top */);
                };
                //获取左侧中控活动入口按钮
                ActivityProxy.prototype.getLeftEntranceBtnList = function () {
                    return this.getEntranceBtnList(2 /* Left */);
                };
                //获取大按钮中控活动入口按钮
                ActivityProxy.prototype.getBigEntranceBtnList = function () {
                    return this.getEntranceBtnList(3 /* Big */);
                };
                /**通过活动入口获取已开启的活动数据，notEntrance：默认会额外计算未配置入口编号的其他活动*/
                ActivityProxy.prototype.getActListByEntrance = function (entrance, notEntrance) {
                    var actList = this._model.entranceBtnMap[entrance]; //总的入口活动
                    if (!actList || !actList.length) {
                        return [];
                    }
                    if (!notEntrance && this.isBigBtn(entrance)) {
                        //飞升榜飞升特惠不需要配置入口，存在活动时候，客户端显示出来
                        var act = this.getOperActByType(11 /* FlyWar */);
                        if (act) {
                            actList = actList.concat([act]);
                            //actList.sort(this.sortOperActList);//塞入活动后需要重新排序下，统一由下面排序
                        }
                    }
                    //排序，proxy刷红点所需
                    actList.sort(this.sortOperActList);
                    var list = []; //已开启的活动
                    for (var _i = 0, actList_2 = actList; _i < actList_2.length; _i++) {
                        var actInfo = actList_2[_i];
                        if (!this.getActData(actInfo.act_id)) {
                            //活动已关闭
                            continue;
                        }
                        if (this.isActShow(actInfo)) {
                            list.push(actInfo); //活动已开启
                        }
                    }
                    //return list.sort(this.sortOperActList);
                    return list; //总的入口编号那里已经排序过了
                };
                /**根据活动id获取活动数据*/
                ActivityProxy.prototype.getActData = function (actId) {
                    return this._model.activityList[actId];
                };
                /** 根据活动类型获取单个活动数据*/
                ActivityProxy.prototype.getOperActByType = function (actType, entrance) {
                    var typeIds = this._model.actTypeList[actType];
                    if (typeIds && typeIds.length) {
                        if (!entrance) {
                            return this.getActData(typeIds[0]); //不传入口编号，默认取第一个
                        }
                        for (var _i = 0, typeIds_1 = typeIds; _i < typeIds_1.length; _i++) {
                            var actId = typeIds_1[_i];
                            var actInfo = this.getActData(actId);
                            if (actInfo.entrance == entrance) {
                                return actInfo;
                            }
                        }
                    }
                    return null;
                };
                /** 根据活动类型获取已开启的活动列表数据*/
                ActivityProxy.prototype.getOperActList = function (actType) {
                    var typeIds = this._model.actTypeList[actType];
                    if (typeIds && typeIds.length) {
                        var actList = [];
                        for (var _i = 0, typeIds_2 = typeIds; _i < typeIds_2.length; _i++) {
                            var actId = typeIds_2[_i];
                            var actInfo = this.getActData(actId);
                            if (!this.isActShow(actInfo)) {
                                continue;
                            }
                            actList.push(actInfo);
                        }
                        return actList;
                    }
                    return [];
                };
                /**功能开启ID，固定通用活动参数1*/
                //todo：需要注意的
                ActivityProxy.prototype.getOpenIdx = function (actInfo) {
                    return actInfo.param && actInfo.param.length > 0 ? actInfo.param[0] : 0;
                };
                Object.defineProperty(ActivityProxy.prototype, "curOpenAct", {
                    /**界面选中分页时候保存的活动*/
                    get: function () {
                        return this._model.curOpenAct;
                    },
                    set: function (v) {
                        this._model.curOpenAct = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**获取活动入口编号，部分活动未配置时可用*/
                ActivityProxy.prototype.getEntrance = function (actInfo) {
                    if (actInfo.entrance) {
                        return actInfo.entrance;
                    }
                    if (actInfo.type == 11 /* FlyWar */) {
                        //飞升榜飞升特惠不需要配置入口，存在活动时候，客户端显示出来
                        var act = this.getOperActByType(8 /* FlyRank */);
                        if (act) {
                            return act.entrance;
                        }
                    }
                    return "";
                };
                /**获取红点类型*/
                ActivityProxy.prototype.getHintTypes = function (actInfo) {
                    var hintTypes = [];
                    //入口编号需要设置红点
                    var entrance = this.getEntrance(actInfo);
                    var btnType = this.getBtnType(actInfo, entrance);
                    hintTypes.push(["27" /* Activity */, "80" /* ActMain */, entrance, btnType]); //中控活动红点组合
                    var icon = this.getActIcon(actInfo);
                    if (icon != entrance) {
                        //独立图片也要设置红点
                        hintTypes.push(["27" /* Activity */, "80" /* ActMain */, icon]);
                    }
                    return hintTypes;
                };
                /**根据活动类型获取红点类型*/
                ActivityProxy.prototype.getEntranceHintByActType = function (actType) {
                    var actInfo = this.getOperActByType(actType);
                    var entrance = this.getEntrance(actInfo);
                    var hintType = ["27" /* Activity */, "80" /* ActMain */, entrance];
                    return mod.HintMgr.getHint(hintType);
                };
                //计算所在BtnType
                ActivityProxy.prototype.getBtnType = function (actInfo, entrance) {
                    var actList = this.getActListByEntrance(entrance);
                    for (var i = 0; i < actList.length; ++i) {
                        var act = actList[i];
                        if (act.act_id != actInfo.act_id) {
                            continue;
                        }
                        var mdr = activity.ActTypeToMdr[actInfo.type];
                        if (!mdr) {
                            continue;
                        }
                        return (i + parseInt("01" /* TabBtnType01 */)).toString();
                    }
                    return "";
                };
                /**设置中控活动红点*/
                ActivityProxy.prototype.setActHint = function (type, handler) {
                    var actList = this.getOperActList(type);
                    for (var _i = 0, actList_3 = actList; _i < actList_3.length; _i++) {
                        var actInfo = actList_3[_i];
                        var hint = handler.exec(actInfo);
                        var hintTypes = this.getHintTypes(actInfo); //获取红点类型列表
                        for (var _a = 0, hintTypes_1 = hintTypes; _a < hintTypes_1.length; _a++) {
                            var type_2 = hintTypes_1[_a];
                            mod.HintMgr.setHint(hint, type_2);
                        }
                    }
                };
                /**收到中控活动时，保存数据*/
                ActivityProxy.prototype.setActData = function (actInfo) {
                    this._model.activityList[actInfo.act_id] = actInfo;
                    //未开启的活动不请求数据
                    if (!this.isActShow(actInfo)) {
                        return;
                    }
                    switch (actInfo.type) {
                        case 8 /* FlyRank */:
                        case 22 /* CarnivalRank */:
                        case 21 /* CarnivalCrossRank */:
                            this.c2s_oper_act_get_info(actInfo.act_id, 1 /* Rank */); //特殊参数，自己请求
                            return;
                        case 11 /* FlyWar */:
                            //备用2是任务类型
                            var taskType = actInfo && actInfo.param ? actInfo.param[1] : 43 /* Fly */; //任务类型
                            var taskProxy = facade.retMod("13" /* Task */).retProxy(10 /* Task */);
                            taskProxy.all_task_info_c2s([taskType]);
                            break;
                    }
                    //公共请求数据
                    this.c2s_oper_act_get_info(actInfo.act_id);
                };
                /**通用中控活动数据请求*/
                ActivityProxy.prototype.c2s_oper_act_get_info = function (actId, param1) {
                    var msg = new c2s_oper_act_get_info();
                    msg.act_id = actId;
                    msg.params_1 = param1;
                    this.sendProto(msg);
                };
                /**通用排行榜，配置51的话，取50，显示成50+*/
                ActivityProxy.prototype.getMaxRank = function (actInfo) {
                    var maxRank = 0;
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_21 = rewardList; _i < rewardList_21.length; _i++) {
                        var reward = rewardList_21[_i];
                        var rank = this.getRank(reward);
                        if (rank > maxRank) {
                            maxRank = rank;
                        }
                    }
                    return maxRank - 1;
                };
                /**传4进来,配置了4、11的话，返回10*/
                ActivityProxy.prototype.getNextRank = function (actInfo, curRank) {
                    var rewardList = actInfo.reward_list;
                    for (var _i = 0, rewardList_22 = rewardList; _i < rewardList_22.length; _i++) {
                        var reward = rewardList_22[_i];
                        var rank = this.getRank(reward);
                        if (rank > curRank) {
                            return rank - 1;
                        }
                    }
                    return curRank;
                };
                /**条件1：名次*/
                ActivityProxy.prototype.getRank = function (reward) {
                    return reward.cond_1 && reward.cond_1[0];
                };
                /**活动最后一天提示*/
                ActivityProxy.prototype.checkActTips = function (type) {
                    var actInfo = this.curOpenAct;
                    var endTime = actInfo.c_end_time;
                    mod.ViewMgr.getIns().showActTips(endTime, type);
                };
                /**获取活动入口数据，entrance可以是入口编号或者独立图标*/
                ActivityProxy.prototype.getBtnData = function (actList, entrance) {
                    var actInfo = actList[0]; //默认取排序后第一个活动
                    var openIdx = this.getOpenIdx(actInfo);
                    var btnData; //活动入口转换成IBtnIconData
                    var isSingleIcon = false;
                    if (this.isSingleIcon(actInfo)) {
                        var icon = this.getActIcon(actInfo); //独立图标或者入口编号
                        isSingleIcon = icon == entrance; //当前入口是独立图标
                    }
                    var isShowTime = !!game.NeedShowTimeAct[actInfo.type];
                    var endTime = isShowTime ? actInfo.c_end_time : 0;
                    //let effType = this.isBigBtn(entrance) ? BtnIconEffType.Forever : BtnIconEffType.Once;//冲榜按钮常驻特效，特效资源不一样
                    var param = { actInfo: actInfo, isSingleIcon: isSingleIcon }; //中控数据
                    switch (actInfo.type) {
                        //todo：需要注意的
                        //todo，二级界面的自己特殊处理下
                        default:
                            btnData = {
                                id: actInfo.act_id,
                                m: "27" /* Activity */,
                                v: "80" /* ActMain */,
                                showBack: true,
                                openIdx: openIdx,
                                param: param,
                                showTime: isShowTime,
                                endTime: endTime,
                                //effType: effType,
                                icon: entrance,
                                hintMsg: ["27" /* Activity */, "80" /* ActMain */, entrance] //红点不由m,v决定
                            };
                            break;
                    }
                    return btnData;
                };
                return ActivityProxy;
            }(game.ProxyBase));
            activity.ActivityProxy = ActivityProxy;
            __reflect(ActivityProxy.prototype, "game.mod.activity.ActivityProxy", ["game.mod.IActivityProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            /** 左边活动数据（直购、非直购）*/
            var MainLeftActBtnData = /** @class */ (function () {
                function MainLeftActBtnData() {
                }
                MainLeftActBtnData.prototype.dispose = function () {
                };
                MainLeftActBtnData.prototype.onAlloc = function () {
                };
                MainLeftActBtnData.prototype.onRelease = function () {
                    var self = this;
                    self.icon = null;
                    self.showHint = null;
                    self.isLimit = null;
                    self.isShowEff = null;
                    self.index = 0;
                };
                return MainLeftActBtnData;
            }());
            activity.MainLeftActBtnData = MainLeftActBtnData;
            __reflect(MainLeftActBtnData.prototype, "game.mod.activity.MainLeftActBtnData", ["base.PoolObject", "base.DisposeObject"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var MainActivityBtn = /** @class */ (function (_super) {
                __extends(MainActivityBtn, _super);
                function MainActivityBtn() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MainActivityBtn.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.gr_eff.touchEnabled = false;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    // this.lab_time.textColor = WhiteColor.GREEN;
                };
                MainActivityBtn.prototype.onRemoveFromStage = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onRemoveFromStage.call(this);
                };
                MainActivityBtn.prototype.dataChanged = function () {
                    var self = this;
                    var icon = self.data;
                    self.gr_time.visible = false;
                    self.btn_act.visible = true;
                    self.lab_time.text = "";
                    if (!icon || icon.trim() == "") {
                        this.btn_act.visible = false;
                        return;
                    }
                    var showHint = false;
                    self.btn_act.icon = icon;
                    self.redPoint.visible = showHint;
                    if (self.effId) {
                        self.removeEffect(self.effId);
                        self.effId = null;
                    }
                    if (showHint && icon) {
                        //self.effId = this.addEftByParent(UIEftSrc.ActBtnEffect, 42, 42, self.gr_eff, -1, null, 0);
                    }
                };
                MainActivityBtn.prototype.setTime = function (_time) {
                    if (_time) {
                        this.endTime = _time;
                        this.gr_time.visible = true;
                        if (!TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.addUpdateItem(this, 1000);
                            this.updateTime();
                        }
                    }
                };
                MainActivityBtn.prototype.update = function (time) {
                    this.updateTime();
                };
                MainActivityBtn.prototype.updateTime = function () {
                    var left_time = this.endTime - TimeMgr.time.serverTimeSecond;
                    if (left_time < 0) {
                        this.gr_time.visible = false;
                        TimeMgr.removeUpdateItem(this);
                    }
                    else if (left_time > 3600 * 24) {
                        this.lab_time.text = game.TimeUtil.formatSecond(left_time, "dd天HH时");
                    }
                    else {
                        this.lab_time.text = game.TimeUtil.formatSecond(left_time, "HH时mm分");
                    }
                };
                return MainActivityBtn;
            }(mod.BaseRenderer));
            activity.MainActivityBtn = MainActivityBtn;
            __reflect(MainActivityBtn.prototype, "game.mod.activity.MainActivityBtn", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var TextEvent = egret.TextEvent;
            var MainChatRender = /** @class */ (function (_super) {
                __extends(MainChatRender, _super);
                function MainChatRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MainChatRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("25" /* Chat */).retProxy(35 /* Chat */);
                    this.addEventListenerEx(TextEvent.LINK, this.lab_txt, this.onTapLink, this);
                };
                MainChatRender.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var data = this.data;
                    var info = data.senderInfo;
                    var chatChannel = data.chatChannel;
                    this.img_type.source = "chat_type" + chatChannel;
                    var startStr = "";
                    var vipWidth = 0;
                    var vipLv = info.vip ? mod.VipUtil.getShowVipLv(info.vip) : 0;
                    if (vipLv) {
                        //存在VIP时
                        var vipStr = mod.VipUtil.getVipFont(info.vip);
                        this.addBmpFont(vipStr, game.BmpTextCfg[220 /* VipChatFont */], this.grp_vip);
                        vipWidth = vipStr.length * 20; //文本宽度20+间隔10
                        var num = Math.ceil(vipWidth / 6); //6是空格宽度，不同平台可能不一样
                        while (num) {
                            startStr += " ";
                            num--;
                        }
                    }
                    else {
                        this.clearFont(this.grp_vip);
                    }
                    var txtStr = "";
                    if (info && info.name) {
                        txtStr += info.name + "：";
                    }
                    txtStr += data.type == 1 /* Face */ && data.imgSource ? "/表情" : (data.content || "");
                    var finalStr = startStr + txtStr;
                    this.lab_txt.textFlow = game.TextUtil.parseHtml(finalStr);
                    if (!this._proxy.openChat && this.lab_txt.numLines > 1) {
                        var endPos = vipWidth ? 28 - Math.floor(vipWidth / this.lab_txt.size) : 28; //文本剪切到28
                        var str = txtStr.slice(0, endPos);
                        txtStr = str + "...";
                        finalStr = startStr + txtStr;
                        this.lab_txt.textFlow = game.TextUtil.parseHtml(finalStr);
                    }
                };
                MainChatRender.prototype.onTapLink = function (e) {
                    if (!this.data) {
                        return;
                    }
                    this._proxy.onClickChatLink(this.data, e.text);
                };
                return MainChatRender;
            }(mod.BaseRenderer));
            activity.MainChatRender = MainChatRender;
            __reflect(MainChatRender.prototype, "game.mod.activity.MainChatRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MainLeftActBtn = /** @class */ (function (_super) {
                __extends(MainLeftActBtn, _super);
                function MainLeftActBtn() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MainLeftActBtn.prototype.onAddToStage = function () {
                };
                MainLeftActBtn.prototype.onRemoveFromStage = function () {
                };
                MainLeftActBtn.prototype.dataChanged = function () {
                    var self = this;
                    self.btn_act.icon = self.data.icon;
                    self.redPoint.visible = self.data.showHint;
                    if (self.data.isShowEff && !this._eftIdx) {
                        this.addBtnEft();
                    }
                    else if (!self.data.isShowEff && this._eftIdx) {
                        this.clearBtnEft();
                    }
                };
                MainLeftActBtn.prototype.addBtnEft = function () {
                    this.clearBtnEft();
                    this._eftIdx = this.addEftByParent("limit_buy_effect", this.group_eff);
                };
                MainLeftActBtn.prototype.clearBtnEft = function () {
                    if (this._eftIdx) {
                        this.removeEffect(this._eftIdx);
                    }
                    this._eftIdx = null;
                };
                return MainLeftActBtn;
            }(mod.BaseRenderer));
            activity.MainLeftActBtn = MainLeftActBtn;
            __reflect(MainLeftActBtn.prototype, "game.mod.activity.MainLeftActBtn");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MainLeftActMidView = /** @class */ (function (_super) {
                __extends(MainLeftActMidView, _super);
                function MainLeftActMidView() {
                    var _this = _super.call(this) || this;
                    _this.name = "MainLeftActMidView";
                    _this.skinName = "skins.activity.MainLeftActMidSkin";
                    return _this;
                }
                return MainLeftActMidView;
            }(eui.Component));
            activity.MainLeftActMidView = MainLeftActMidView;
            __reflect(MainLeftActMidView.prototype, "game.mod.activity.MainLeftActMidView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MainLeftActTopView = /** @class */ (function (_super) {
                __extends(MainLeftActTopView, _super);
                function MainLeftActTopView() {
                    var _this = _super.call(this) || this;
                    _this.name = "MainLeftActTopView";
                    _this.skinName = "skins.activity.MainLeftActTopSkin";
                    return _this;
                }
                return MainLeftActTopView;
            }(eui.Component));
            activity.MainLeftActTopView = MainLeftActTopView;
            __reflect(MainLeftActTopView.prototype, "game.mod.activity.MainLeftActTopView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var MainPunshListBtn = /** @class */ (function (_super) {
                __extends(MainPunshListBtn, _super);
                function MainPunshListBtn() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                return MainPunshListBtn;
            }(mod.Btn));
            activity.MainPunshListBtn = MainPunshListBtn;
            __reflect(MainPunshListBtn.prototype, "game.mod.activity.MainPunshListBtn");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var Tween = base.Tween;
            var Back = base.Back;
            var Handler = base.Handler;
            var TimeMgr = base.TimeMgr;
            var facade = base.facade;
            var delayCall = base.delayCall;
            var MainLeftActMidMdr = /** @class */ (function (_super) {
                __extends(MainLeftActMidMdr, _super);
                function MainLeftActMidMdr() {
                    var _this = _super.call(this, game.Layer.main) || this;
                    _this._view = _this.mark("_view", activity.MainLeftActMidView);
                    //原始位置
                    _this._listXOri = 0;
                    _this._initFuben = false;
                    return _this;
                }
                MainLeftActMidMdr.prototype.initBtnData = function () {
                    /**入口手动赋值就行了，其他的不用管*/
                    //todo，特殊显示规则，例如：关闭充值时不显示，未首充时不显示，领完奖励后不显示，个别渠道不显示等等
                    //todo，注意，如果以Main为入口的，Main也要做红点，如[ModName.Store, StoreViewType.StoreMain, StoreMainBtnType.Btn1]
                    //todo，缺少移除
                    this._btnData = [
                        {
                            id: 1041670145 /* ZeroBuy */,
                            m: "27" /* Activity */,
                            v: "48" /* ZeroBuy */
                        },
                        {
                            id: 1041670143 /* FirstCharge */,
                            m: "27" /* Activity */,
                            v: "49" /* FirstCharge */,
                            isInit: false,
                            initHandler: Handler.alloc(this, this.onInitFirstTips)
                        },
                        {
                            id: 1041670151 /* GivingShenLing */,
                            m: "27" /* Activity */,
                            v: "56" /* GivingShenLing */,
                            showTime: true,
                            //effType: BtnIconEffType.Common,
                            isInit: false,
                            initHandler: Handler.alloc(this, this.onUpdateGivingShenlingTips),
                            showTips: true
                        },
                        {
                            id: 1041670155 /* PrerogativeWrit */, m: "27" /* Activity */, v: "45" /* RoleRingMain */,
                            param: "02" /* TabBtnType02 */, showBack: true,
                            hintMsg: ["27" /* Activity */, "45" /* RoleRingMain */, "02" /* TabBtnType02 */]
                        },
                        {
                            id: 1041670153 /* Yjjs */,
                            m: "27" /* Activity */,
                            v: "51" /* YjjsFirstMain */
                        },
                        {
                            id: 1041670142 /* Giving */,
                            m: "27" /* Activity */,
                            v: "38" /* Giving */,
                            showBack: true,
                            isInit: false,
                            initHandler: Handler.alloc(this, this.onUpdatePassTips),
                            showTips: true
                        },
                        //todo:不要写handlerMsg事件
                        {
                            id: 1041670196 /* ChaozhiLibao */,
                            m: null, v: null,
                            hintMsg: ["27" /* Activity */, "70" /* ChaozhiLibao */],
                            clickHandler: Handler.alloc(this, this.onClickChaozhiLibao)
                        },
                        {
                            id: 1041670199 /* Tongtiange */,
                            m: "27" /* Activity */, v: "73" /* TongtiangeMain */,
                            showBack: true,
                            isHide: true
                        }
                    ];
                    //注册中控活动
                    var list = this._proxy.getLeftEntranceBtnList();
                    this._btnData = this._btnData.concat(list);
                };
                MainLeftActMidMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    var self = this;
                    this._view.top = 120;
                    self._view.left = 0;
                    self._view.touchEnabled = false;
                    self._proxy = this.retProxy(50 /* Activity */);
                    self._model = self._proxy.getModel();
                    this._ins = new mod.BtnIconMgr(this._view.group_top1);
                    mod.BtnIconMgr._insLeft = this._ins;
                    if (DEBUG && window) {
                        window['BtnIconMgrMid'] = this._ins;
                    }
                };
                // ==================================活动图标收缩==================================
                MainLeftActMidMdr.prototype.hideActivity = function () {
                    this.setIsShow(!this._isShow);
                };
                MainLeftActMidMdr.prototype.setIsShow = function (isShow) {
                    this._isShow = isShow;
                    this.btnTween();
                };
                MainLeftActMidMdr.prototype.btnTween = function () {
                    var _this = this;
                    var _isShow = this._isShow;
                    this._view.btn_hide.scaleX = _isShow ? -1 : 1;
                    if (this._listXOri == 0) {
                        this._listXOri = -this._view.group_top1.width - 100;
                    }
                    if (this._view.group_top1.x > 0) {
                        return;
                    }
                    var _posX1 = this._listXOri;
                    var _posX2 = 0;
                    Tween.remove(this._view.group_top1);
                    Tween.get(this._view.group_top1)
                        .to({ x: _posX1 }, 500, null, Back.easeIn)
                        .exec(Handler.alloc(this, function () {
                        //收缩后刷新活动显示
                        _this.dealBtnIconList();
                        _this.showGivingShenlingGuide();
                    }))
                        .to({ x: _posX2 }, 500, null, Back.easeOut);
                    Tween.remove(this._view.group_tips);
                    Tween.get(this._view.group_tips)
                        .to({ x: _posX1 }, 500, null, Back.easeIn)
                        .to({ x: _posX2 }, 500, null, Back.easeOut);
                    if (this._view.icon_tips.visible) {
                        Tween.remove(this._view.icon_tips);
                        Tween.get(this._view.icon_tips)
                            .to({ scaleX: 0, scaleY: 0 }, 500, null, Back.easeIn)
                            .delay(600)
                            .to({ scaleX: 1, scaleY: 1 }, 500, null, Back.easeOut);
                    }
                };
                // ==================================活动图标收缩 end==================================
                MainLeftActMidMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_hide, TouchEvent.TOUCH_TAP, this.hideActivity);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this); //红点更新
                    this.onNt("on_open_func_update" /* ON_OPEN_FUNC_UPDATE */, this.onOpenFuncUpdate, this); //功能开启
                    this.onNt("on_open_func_delete" /* ON_OPEN_FUNC_DELETE */, this.onOpenFuncDelete, this); //功能关闭
                    this.onNt("scene_change" /* SCENE_CHANGE */, this.onSceneChange, this); //场景切换
                    this.onNt("challenge_hangup_boss" /* CHALLENGE_HANGUP_BOSS */, this.updateShow, this); //挑战boss
                    // this.onNt(TaskEvent.ON_TASK_UPDATE, this.onUpdateTask, this);//任务更新
                    this.onNt("on_activity_icon_tips_hide" /* ON_ACTIVITY_ICON_TIPS_HIDE */, this.onHideIconTips, this); //隐藏图标弹窗
                    this.onNt("on_activity_init" /* ON_ACTIVITY_INIT */, this.onActivityInit, this); //中控活动初始化
                    this.onNt("on_activity_entrance_update" /* ON_ACTIVITY_ENTRANCE_UPDATE */, this.onActivityEntranceUpdate, this); //中控活动入口更新
                    this.onNt("main_pass_guanqia_update" /* MAIN_PASS_GUANQIA_UPDATE */, this.onUpdatePassTips, this);
                    this.onNt("on_update_givingshenling_info" /* ON_UPDATE_GIVING_SHENLING_INFO */, this.onUpdateGivingShenlingTips, this);
                };
                MainLeftActMidMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initBtnData();
                    this.updateShow();
                    this.setIsShow(true); //默认显示按钮
                };
                /** 切换场景 */
                MainLeftActMidMdr.prototype.onSceneChange = function () {
                    this.updateShow();
                    // this.onUpdateScene();
                };
                MainLeftActMidMdr.prototype.updateShow = function () {
                    var cfg = mod.SceneUtil.getCurSceneCfg();
                    var showAct = !!cfg.show_left;
                    this._view.visible = showAct;
                    if (showAct) {
                        var isShow = mod.SceneUtil.isShowMain();
                        this.setIsShow(isShow); //挂机场景，默认不收缩，其他的则收缩
                    }
                    this.onUpdateScene();
                };
                //处理按钮列表
                MainLeftActMidMdr.prototype.dealBtnIconList = function () {
                    this._ins.dealBtnIconList(this._btnData, this._isShow);
                    //开启监听按钮额外判断
                    var btnNtMap = this._ins._btnNtMap;
                    for (var key in btnNtMap) {
                        this.onNt(key, this.dealSingleBtnIconByNt, this);
                    }
                    //开启按钮定时器
                    if (Object.keys(this._ins._btnTimeMap).length) {
                        if (!TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.addUpdateItem(this, 1000);
                            this.update(TimeMgr.time);
                        }
                    }
                    else {
                        if (TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.removeUpdateItem(this);
                        }
                    }
                };
                //处理单个按钮
                MainLeftActMidMdr.prototype.dealSingleBtnIcon = function (id, ins) {
                    if (ins === void 0) { ins = this._ins; }
                    var isAdd = ins.dealSingleBtnIcon(id, this._isShow);
                    //开启按钮定时器
                    var timeMap = ins._btnTimeMap;
                    var mapSize = Object.keys(timeMap).length;
                    if (TimeMgr.hasUpdateItem(this) && !mapSize) {
                        TimeMgr.removeUpdateItem(this);
                    }
                    else if (!TimeMgr.hasUpdateItem(this) && mapSize) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                //按钮设置 showTime=true 的倒计时文本，强制改写 showTime=false
                //此按钮不一定移除，只是出现其他的展示效果，此操作为了从定时器中移除此按钮
                //例如：送瑶姬仙子
                MainLeftActMidMdr.prototype.removeBtnIconTime = function (id) {
                    var btnData = this._ins._btnDataMap[id];
                    if (btnData) {
                        btnData.showTime = false;
                    }
                    this.dealSingleBtnIcon(id);
                };
                //监听回调处理单个按钮
                MainLeftActMidMdr.prototype.dealSingleBtnIconByNt = function (n) {
                    var notify = n.type;
                    var idList = this._ins._btnNtMap[notify];
                    if (idList && idList.length) {
                        for (var _i = 0, idList_1 = idList; _i < idList_1.length; _i++) {
                            var id = idList_1[_i];
                            this.dealSingleBtnIcon(id);
                        }
                    }
                };
                MainLeftActMidMdr.prototype.onHide = function () {
                    Tween.remove(this._view.group_top1);
                    Tween.remove(this._view.group_tips);
                    Tween.remove(this._view.icon_tips);
                    _super.prototype.onHide.call(this);
                    this._view.group_top1.removeChildren();
                    TimeMgr.removeUpdateItem(this);
                    this._btnData = [];
                    this._ins.clear();
                    mod.BtnTipsMgr.getIns().hideAllTips();
                };
                /** 通用红点事件监听 */
                MainLeftActMidMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    var hint = data.value;
                    var showBtnMap = this._ins._showBtnMap;
                    for (var k in showBtnMap) {
                        var btnIcon = showBtnMap[k];
                        var btnData = btnIcon ? btnIcon.data : null;
                        if (!btnData || !btnData.hintMsg || btnData.hintType == mod.BtnIconHintType.None || btnData.hintType == mod.BtnIconHintType.Once) {
                            continue;
                        }
                        var type = mod.HintMgr.getType(btnData.hintMsg);
                        if (type != data.node) {
                            continue;
                        }
                        if (!hint && btnData.hintType == mod.BtnIconHintType.FirstCommon) {
                            hint = mod.BtnIconBase._hintCache[btnData.id] == undefined;
                        }
                        btnIcon.setHint(hint);
                        break;
                    }
                };
                /**功能开启刷新按钮*/
                MainLeftActMidMdr.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    for (var _i = 0, addIdx_1 = addIdx; _i < addIdx_1.length; _i++) {
                        var openIdx = addIdx_1[_i];
                        if (this._ins._btnDataMap[openIdx]) {
                            this.dealSingleBtnIcon(openIdx);
                            continue;
                        }
                        //中控活动存的是活动ID
                        var idList = this._ins._btnOpenIdxMap[openIdx];
                        if (idList && idList.length) {
                            for (var _a = 0, idList_2 = idList; _a < idList_2.length; _a++) {
                                var idx = idList_2[_a];
                                this.dealSingleBtnIcon(idx);
                            }
                        }
                    }
                };
                /**功能关闭移除按钮*/
                MainLeftActMidMdr.prototype.onOpenFuncDelete = function (n) {
                    var delIdx = n.body;
                    for (var _i = 0, delIdx_1 = delIdx; _i < delIdx_1.length; _i++) {
                        var openIdx = delIdx_1[_i];
                        if (this._ins._showBtnMap[openIdx]) {
                            this.dealSingleBtnIcon(openIdx); //调用统一的接口，做一些处理
                            continue;
                        }
                        //中控活动存的是活动ID
                        var idList = this._ins._btnOpenIdxMap[openIdx];
                        if (idList && idList.length) {
                            for (var _a = 0, idList_3 = idList; _a < idList_3.length; _a++) {
                                var idx = idList_3[_a];
                                this.dealSingleBtnIcon(idx);
                            }
                        }
                    }
                };
                MainLeftActMidMdr.prototype.update = function (time) {
                    var timeMap = this._ins._btnTimeMap;
                    var keys = Object.keys(timeMap);
                    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
                        var key = keys_2[_i];
                        var btnIcon = timeMap[key];
                        if (!btnIcon || !this._ins._showBtnMap[key]) {
                            continue;
                        }
                        if (btnIcon.id == 1041670151 /* GivingShenLing */) {
                            var timeStr = this.getGivingShenlingTimeStr(btnIcon.id);
                            btnIcon.updateTime(timeStr);
                            continue;
                        }
                        if (!this._ins.checkBtnTime(btnIcon.data)) {
                            this.dealSingleBtnIcon(btnIcon.id);
                            continue;
                        }
                        btnIcon.updateTime(); //todo
                    }
                };
                // todo ID1010865 策划修改需求
                // private onUpdateTask(): void {
                //     if (this._view.icon_tips.visible || !this._ins._showBtnMap[BtnIconId.FirstCharge]) {
                //         return;
                //     }
                //     let cfg: ParamConfig = getConfigByNameId(ConfigName.Param, "shouchong_task");
                //     for (let id of cfg.value) {
                //         let taskData = TaskUtil.getTask(id);
                //         if (taskData && taskData.status == 1) {
                //             this.onSetFirstTips();
                //             break;
                //         }
                //     }
                // }
                MainLeftActMidMdr.prototype.onUpdateScene = function () {
                    if (mod.SceneUtil.isSceneType(108 /* Fuben */)) {
                        if (!this._initFuben) {
                            this._initFuben = mod.SceneUtil.getCurSceneIdx() == 160540001 /* JingYan */;
                        }
                        this.onSetFirstTips();
                    }
                    else {
                        this.onHideIconTips();
                    }
                };
                MainLeftActMidMdr.prototype.onInitFirstTips = function () {
                    this.onSetFirstTips();
                };
                MainLeftActMidMdr.prototype.onSetFirstTips = function (delay) {
                    if (delay === void 0) { delay = 1000; }
                    if (mod.PayUtil.checkFirstCharge()) {
                        this.onHideIconTips();
                        return;
                    }
                    var proxy = facade.retMod("49" /* Shilian */).retProxy(194 /* Shilian */);
                    var info = proxy.getFubenInfo(1 /* Type1 */);
                    var maxLv = info && info.history_lv || 0;
                    if (!this._initFuben && !maxLv) {
                        this.onHideIconTips();
                        return;
                    }
                    var id = 1041670143 /* FirstCharge */;
                    var btn = this._ins._showBtnMap[id];
                    if (!btn) {
                        return;
                    }
                    this._view.icon_tips.source = "first_icon_tips";
                    if (delay) {
                        delayCall(Handler.alloc(this, this.onShowFirstTips, [btn]), delay);
                    }
                    else {
                        this.onShowFirstTips(btn);
                    }
                };
                MainLeftActMidMdr.prototype.onShowFirstTips = function (btn) {
                    var point = btn.localToGlobal();
                    this._view.icon_tips.x = point.x + btn.width;
                    this._view.icon_tips.y = point.y - btn.height;
                    this._view.icon_tips.scaleX = this._view.icon_tips.scaleY = 1;
                    this._view.icon_tips.scaleX = this._view.icon_tips.scaleY = 0.1;
                    this._view.icon_tips.visible = true;
                    Tween.get(this._view.icon_tips).to({
                        scaleX: 1,
                        scaleY: 1
                    }, 500).delay(100).exec(Handler.alloc(this, this.onLoopTips));
                    this._view.icon_tips.addEventListener(TouchEvent.TOUCH_TAP, this.onClickFirst, this);
                };
                MainLeftActMidMdr.prototype.onLoopTips = function () {
                    Tween.remove(this._view.icon_tips);
                    var scale = 0.96;
                    Tween.get(this._view.icon_tips, { loop: true }).from({ scaleX: scale, scaleY: scale }, 1000).to({
                        scaleX: scale,
                        scaleY: scale
                    }, 1000);
                };
                MainLeftActMidMdr.prototype.onHideIconTips = function () {
                    this._view.icon_tips.visible = false;
                    this._view.icon_tips.removeEventListener(TouchEvent.TOUCH_TAP, this.onClickFirst, this);
                };
                MainLeftActMidMdr.prototype.onClickFirst = function () {
                    // ViewMgr.getIns().showView()
                    var btn = this._ins._showBtnMap[1041670143 /* FirstCharge */];
                    var btnData = btn.data;
                    var showBack = !!btnData.showBack;
                    // ViewMgr.getIns().showView(btnData.m, btnData.v, btnData.param, showBack);
                    mod.ViewMgr.getIns().showSecondPop(btnData.m, btnData.v, btnData.param);
                };
                /** 送瑶姬仙子 */
                MainLeftActMidMdr.prototype.onClickGiving = function () {
                    mod.GuideMgr.getIns().clear(42 /* GivingShenLing */); //清除任务指引
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "56" /* GivingShenLing */);
                };
                //显示送瑶姬仙子引导
                MainLeftActMidMdr.prototype.showGivingShenlingGuide = function () {
                    var btnId = 1041670151 /* GivingShenLing */;
                    var btnIcon = this._ins._showBtnMap[btnId];
                    if (btnIcon) {
                        mod.GuideMgr.getIns().show(42 /* GivingShenLing */, btnIcon, Handler.alloc(this, this.onClickGiving)); //
                    }
                };
                MainLeftActMidMdr.prototype.onUpdateGivingShenlingTips = function () {
                    var btnId = 1041670151 /* GivingShenLing */;
                    var givingshenlingProxy = game.getProxy("27" /* Activity */, 216 /* GivingShenLing */);
                    var receive = givingshenlingProxy.model.receive;
                    var btnIcon = this._ins._showBtnMap[btnId];
                    this.showGivingShenlingGuide();
                    if (receive != 1 || !btnIcon) {
                        mod.BtnTipsMgr.getIns().hideTips(btnId);
                        return;
                    }
                    var btnData = btnIcon.data;
                    var handler = Handler.alloc(this, function () {
                        mod.ViewMgr.getIns().showView(btnData.m, btnData.v, btnData.param);
                    });
                    //let local = PointUtil.switchLocalPos(btnIcon.localToGlobal(), this._view.group_tips);
                    var x = btnIcon.x + btnIcon.width + 20;
                    var y = btnIcon.y + btnIcon.height - 20;
                    mod.BtnTipsMgr.getIns().showTips({
                        idx: btnId,
                        tips: game.getLanById("give_shenling_tips1" /* give_shenling_tips1 */),
                        handler: handler,
                        x: x,
                        y: y,
                        tween: true
                    }, this._view.group_tips);
                };
                MainLeftActMidMdr.prototype.getGivingShenlingTimeStr = function (btnId) {
                    var proxy = game.getProxy("27" /* Activity */, 216 /* GivingShenLing */);
                    var endTime = proxy.getEndTime();
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        //展示tips
                        var btnIcon = this._ins._showBtnMap[btnId];
                        if (btnIcon) {
                            //判断显示可领取
                            btnIcon.gr_time.visible = true;
                            btnIcon.lb_time.text = "可领取";
                        }
                        //this.removeBtnIconTime(btnId);
                        return btnIcon.lb_time.text;
                    }
                    //倒计时未结束
                    return game.TimeUtil.formatSecond(leftTime, 'mm分ss秒');
                };
                MainLeftActMidMdr.prototype.onUpdatePassTips = function () {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhanling_bubble");
                    var tips = cfg.value;
                    var btnId = 1041670142 /* Giving */;
                    var passProxy = game.getProxy("42" /* Pass */, 9 /* Pass */);
                    var curIndex = passProxy.curIndex;
                    for (var _i = 0, tips_1 = tips; _i < tips_1.length; _i++) {
                        var info = tips_1[_i];
                        if (info[0] <= curIndex && curIndex < info[1]) {
                            var str = game.StringUtil.substitute(game.getLanById("zhanling_tips1" /* zhanling_tips1 */), [(info[1] - curIndex), info[2]]);
                            this.onShowGivingTips(btnId, str);
                            return;
                        }
                        if (curIndex == info[1]) {
                            var str = game.StringUtil.substitute(game.getLanById("zhanling_tips2" /* zhanling_tips2 */), [info[2]]);
                            var proxy = game.getProxy("27" /* Activity */, 207 /* GameOrder */);
                            var status = proxy.getBtnStatus(1 /* Chuangguanling */);
                            if (status == 2) {
                                this.onShowGivingTips(btnId, str);
                                return;
                            }
                        }
                        this.onShowGivingTips(btnId);
                    }
                };
                MainLeftActMidMdr.prototype.onShowGivingTips = function (btnId, tips) {
                    var btnIcon = this._ins._showBtnMap[btnId];
                    if (btnIcon) {
                        var btnData_1 = btnIcon.data;
                        if (tips) {
                            mod.BtnTipsMgr.getIns().hideTips(btnId);
                            var handler = Handler.alloc(this, function () {
                                mod.ViewMgr.getIns().showView(btnData_1.m, btnData_1.v, btnData_1.param);
                            });
                            //let localPoint = PointUtil.switchLocalPos(btnIcon.localToGlobal(), this._view.group_tips);
                            var x = btnIcon.x + btnIcon.width + 20;
                            var y = btnIcon.y + btnIcon.height - 20;
                            mod.BtnTipsMgr.getIns().showTips({ idx: btnId, tips: tips, handler: handler, x: x, y: y, tween: true }, this._view.group_tips);
                        }
                        else {
                            mod.BtnTipsMgr.getIns().hideTips(btnId);
                        }
                    }
                };
                //点击超值礼包 ChaozhiLibaoMdr
                MainLeftActMidMdr.prototype.onClickChaozhiLibao = function () {
                    var isShow = !activity.ChaozhiLibaoMdr.isShow;
                    if (isShow) {
                        facade.showView("27" /* Activity */, "70" /* ChaozhiLibao */);
                    }
                    else {
                        facade.hideView("27" /* Activity */, "70" /* ChaozhiLibao */);
                    }
                };
                //-------------------------------------中控活动------------------------------------------------
                MainLeftActMidMdr.prototype.onActivityInit = function () {
                    this.updateLeftActivity();
                };
                MainLeftActMidMdr.prototype.onActivityEntranceUpdate = function (n) {
                    var typeList = n.body;
                    if (typeList.indexOf(2 /* Left */) > -1) {
                        //刷新入口
                        this.updateLeftActivity();
                    }
                };
                MainLeftActMidMdr.prototype.updateLeftActivity = function () {
                    this.initBtnData();
                    this.dealBtnIconList();
                    this.showGivingShenlingGuide();
                };
                return MainLeftActMidMdr;
            }(game.MdrBase));
            activity.MainLeftActMidMdr = MainLeftActMidMdr;
            __reflect(MainLeftActMidMdr.prototype, "game.mod.activity.MainLeftActMidMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var Tween = base.Tween;
            var Back = base.Back;
            var Handler = base.Handler;
            var TimeMgr = base.TimeMgr;
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var MainLeftActTopMdr = /** @class */ (function (_super) {
                __extends(MainLeftActTopMdr, _super);
                function MainLeftActTopMdr() {
                    var _this = _super.call(this, game.Layer.main) || this;
                    _this._view = _this.mark("_view", activity.MainLeftActTopView);
                    //原始位置
                    _this._listYOri = 0;
                    _this._listYOri_big = 0;
                    _this._isOnTween = false; //是否正在缓动按钮群
                    /**新服冲榜计时 一分钟请求一次排行榜 */
                    _this._time = 0;
                    _this._isNoticeShowing = false; //是否正在公吿
                    _this.NOTICE_TIME = 10; //公告滚动速度
                    _this.NOTICE_SHOW = 2000; //公告暂停时间
                    return _this;
                }
                /**入口手动赋值就行了，其他的不用管*/
                MainLeftActTopMdr.prototype.initBtnData = function () {
                    //todo，特殊显示规则，例如：关闭充值时不显示，未首充时不显示，领完奖励后不显示，个别渠道不显示等等
                    //todo，注意，如果以Main为入口的，Main也要做红点，如[ModName.Store, StoreViewType.StoreMain, StoreMainBtnType.Btn1]
                    //todo，缺少移除
                    this._btnData = [
                        { id: 1041670148 /* Store */, m: "29" /* Store */, v: "01" /* StoreMain */, showBack: true },
                        { id: 1041670141 /* SignGift */, m: "27" /* Activity */, v: "39" /* SignGift */ },
                        {
                            id: 1041670137 /* Summon */,
                            m: "27" /* Activity */,
                            v: "31" /* SummonMain */,
                            showBack: true,
                            guideKey: 6 /* Summon */
                        },
                        {
                            id: 1041670136 /* PowerTurntable */,
                            m: "27" /* Activity */,
                            v: "30" /* Lottery */,
                            handlerMsg: "on_update_lottery_info" /* ON_UPDATE_LOTTERY_INFO */,
                            handler: Handler.alloc(this, this.checkLottery)
                        },
                        {
                            id: 1041670146 /* RoleRing */,
                            m: "27" /* Activity */,
                            v: "45" /* RoleRingMain */,
                            hintMsg: ["27" /* Activity */, "45" /* RoleRingMain */, "01" /* TabBtnType01 */],
                            hintType: mod.BtnIconHintType.FirstCommon,
                            // effType: BtnIconEffType.FirstCommon,
                            showBack: true
                        },
                        { id: 1041670144 /* Zcx */, m: "27" /* Activity */, v: "42" /* ZcxMain */, showBack: true },
                        { id: 1041670147 /* KillBoss */, m: "27" /* Activity */, v: "50" /* KillBoss */, showBack: true },
                        {
                            id: 1041670152 /* ExchangeShop */,
                            m: "27" /* Activity */,
                            v: "54" /* ExchangeShop */,
                            hintType: mod.BtnIconHintType.None,
                            showBack: true
                        },
                        {
                            id: 1041670218 /* WonderfulAct */,
                            m: "27" /* Activity */,
                            v: "57" /* WonderfulAct */,
                            showBack: true,
                            showTime: true,
                            handler: Handler.alloc(this, this.checkWonderful)
                        },
                        {
                            id: 1041670160 /* Yhcs */,
                            m: "27" /* Activity */,
                            v: "59" /* Yhcs */,
                            showBack: true,
                            handlerMsg: "on_update_yhcs_info" /* ON_UPDATE_YHCS_INFO */,
                            handler: Handler.alloc(this, this.checkYhcs)
                        },
                        // {
                        //     id: BtnIconId.XianlvGift,
                        //     m: ModName.Activity,
                        //     v: MainActivityViewType.XianlvGift
                        // },
                        {
                            id: 1041670192 /* Chengshen */,
                            m: "27" /* Activity */,
                            v: "65" /* ChengshenMain */,
                            showBack: true
                            // handlerMsg: ActivityEvent.ON_UPDATE_CHENGSHEN_REWARD,
                            // handler: Handler.alloc(this, this.checkChengshen)
                        },
                        {
                            id: 1041670200 /* Tiandilu */,
                            m: "60" /* God */,
                            v: "01" /* GodMain */,
                            showBack: true,
                            isHide: true
                        },
                        {
                            id: 1041670240 /* XiuxianNvpu */,
                            m: "06" /* Role */,
                            v: "23" /* XiuxianNvpuBuy */,
                            hintType: mod.BtnIconHintType.Once
                        },
                        {
                            id: 1041670242 /* Xiandi */,
                            // m: ModName.More,
                            // v: MoreViewType.Xiandi,
                            m: null,
                            v: null,
                            showBack: true,
                            isHide: true,
                            clickHandler: Handler.alloc(this, this.onClickXiandi),
                            hintMsg: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */]
                        }
                        //todo:不要写handlerMsg事件
                    ];
                    //注册中控活动
                    var list = this._proxy.getTopEntranceBtnList();
                    this._btnData = this._btnData.concat(list);
                };
                MainLeftActTopMdr.prototype.initBigBtnData = function () {
                    //注册冲榜活动
                    this._btnData_big = this._proxy.getBigEntranceBtnList();
                };
                MainLeftActTopMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    var self = this;
                    self._view.left = 0;
                    self._view.touchEnabled = false;
                    self._proxy = this.retProxy(50 /* Activity */);
                    self._model = self._proxy.getModel();
                    this._flyRankProxy = this.retProxy(245 /* FlyRank */);
                    this._chatProxy = facade.retMod("25" /* Chat */).retProxy(35 /* Chat */);
                    this._ins = new mod.BtnIconMgr(this._view.group_top1);
                    mod.BtnIconMgr._insTop = this._ins;
                    if (DEBUG && window) {
                        window['BtnIconMgrTop'] = this._ins;
                    }
                    this._ins_big = new mod.BtnIconMgr(this._view.group_big);
                    mod.BtnIconMgr._insBig = this._ins_big;
                    this._itemList = new ArrayCollection();
                    this._view.list_chat.itemRenderer = activity.MainChatRender;
                    this._view.list_chat.dataProvider = this._itemList;
                };
                // ==================================活动图标收缩==================================
                MainLeftActTopMdr.prototype.hideActivity = function () {
                    if (this._isOnTween) {
                        return;
                    }
                    this._isOnTween = true;
                    this.setIsShow(!this._isShow);
                };
                MainLeftActTopMdr.prototype.setIsShow = function (isShow) {
                    this._isShow = isShow;
                    this.btnTween();
                };
                MainLeftActTopMdr.prototype.btnTween = function () {
                    var _this = this;
                    var _isShow = this._isShow;
                    this._view.btn_hide.scaleX = _isShow ? -1 : 1;
                    if (this._listYOri == 0) {
                        this._listYOri = -this._view.group_top1.height - 120;
                    }
                    var _posY1 = this._listYOri;
                    var _posY2 = 60; //默认位置
                    Tween.remove(this._view.group_top1);
                    Tween.get(this._view.group_top1)
                        .to({ y: _posY1 }, 500, null, Back.easeIn)
                        .exec(Handler.alloc(this, function () {
                        //收缩后刷新活动显示
                        _this.dealBtnIconList();
                    }))
                        .to({ y: _posY2 }, 500, null, Back.easeOut);
                    if (this._listYOri_big == 0) {
                        this._listYOri_big = -this._view.group_big.height - 120;
                    }
                    var _posY1_big = this._listYOri_big;
                    var _posY2_big = this.getGroupBigY(); //默认位置
                    Tween.remove(this._view.group_big);
                    Tween.get(this._view.group_big)
                        .to({ y: _posY1_big }, 500, null, Back.easeIn)
                        .exec(Handler.alloc(this, function () {
                        //收缩后刷新活动显示
                        _this.dealBigBtnIconList();
                    }))
                        .to({ y: _posY2_big }, 500, null, Back.easeOut);
                    var _posY1_btn = -256;
                    var _posY2_btn = 78; //默认位置
                    Tween.remove(this._view.btn);
                    Tween.get(this._view.btn)
                        .to({ y: _posY1_btn }, 500, null, Back.easeIn)
                        .exec(Handler.alloc(this, function () {
                        // this._view.btn.visible = _isShow
                        _this.onCheckPunshListBtn();
                    }))
                        .to({ y: _posY2_btn }, 500, null, Back.easeOut)
                        .exec(Handler.alloc(this, function () {
                        _this._isOnTween = false;
                    }));
                };
                // ==================================活动图标收缩 end==================================
                MainLeftActTopMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_hide, TouchEvent.TOUCH_TAP, this.hideActivity);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickPunshList);
                    addEventListener(this._view.btn_chat, TouchEvent.TOUCH_TAP, this.onClickChatBtn);
                    addEventListener(this._view.img_chat, TouchEvent.TOUCH_TAP, this.onClickChat);
                    addEventListener(this._view.list_chat, TouchEvent.TOUCH_TAP, this.onClickChat);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this); //红点更新
                    this.onNt("on_open_func_update" /* ON_OPEN_FUNC_UPDATE */, this.onOpenFuncUpdate, this); //功能开启
                    this.onNt("on_open_func_delete" /* ON_OPEN_FUNC_DELETE */, this.onOpenFuncDelete, this); //功能关闭
                    this.onNt("scene_change" /* SCENE_CHANGE */, this.onSceneChange, this); //场景切换
                    this.onNt("challenge_hangup_boss" /* CHALLENGE_HANGUP_BOSS */, this.updateShow, this); //挑战boss
                    this.onNt("on_guide_update" /* ON_GUIDE_UPDATE */, this.showGuide, this); //指引
                    this.onNt("on_activity_init" /* ON_ACTIVITY_INIT */, this.onActivityInit, this); //中控活动初始化
                    this.onNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, this.onActivityInit, this); //中控活动结束
                    this.onNt("on_activity_entrance_update" /* ON_ACTIVITY_ENTRANCE_UPDATE */, this.onActivityEntranceUpdate, this); //中控活动入口更新
                    this.onNt("on_new_rank_info_update" /* ON_NEW_RANK_INFO_UPDATE */, this.onRankUpdate, this);
                    this.onNt("on_rank_base_info_update" /* ON_RANK_BASE_INFO_UPDATE */, this.onRankUpdate, this);
                    this.onNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */, this.onUpdatePunshList, this);
                    this.onNt("on_chat_update" /* ON_CHAT_UPDATE */, this.updateNotice, this); //聊天信息变更时刷新
                    this.onNt("on_chat_private_update" /* ON_CHAT_PRIVATE_UPDATE */, this.updateChatList, this); //私聊信息变更时刷新
                };
                MainLeftActTopMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initBtnData();
                    this.initBigBtnData();
                    this.updateShow();
                    this.setIsShow(true); //默认显示按钮
                    this.onUpdatePunshList();
                    this.onUpdateTimeOpen();
                    this.showGuide();
                    this.updateNotice();
                };
                /** 切换场景 */
                MainLeftActTopMdr.prototype.onSceneChange = function () {
                    this.updateShow();
                };
                MainLeftActTopMdr.prototype.updateShow = function () {
                    var isShow = mod.SceneUtil.isShowMain();
                    this._view.top = isShow ? 120 : 0;
                    this.setIsShow(isShow); //挂机场景，默认不收缩，其他的则收缩
                };
                //处理按钮列表
                MainLeftActTopMdr.prototype.dealBtnIconList = function () {
                    this._ins.dealBtnIconList(this._btnData, this._isShow);
                    //开启监听按钮额外判断
                    var btnNtMap = this._ins._btnNtMap;
                    for (var key in btnNtMap) {
                        this.onNt(key, this.dealSingleBtnIconByNt, this);
                    }
                    //开启按钮定时器
                    if (Object.keys(this._ins._btnTimeMap).length) {
                        // if (!TimeMgr.hasUpdateItem(this)) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                        // }
                    }
                    else {
                        // if (TimeMgr.hasUpdateItem(this)) {
                        //     TimeMgr.removeUpdateItem(this);
                        // }
                    }
                };
                //处理冲榜按钮列表
                MainLeftActTopMdr.prototype.dealBigBtnIconList = function () {
                    this._ins_big.dealBtnIconList(this._btnData_big, this._isShow, true);
                    //开启按钮定时器
                    if (Object.keys(this._ins_big._btnTimeMap).length) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                //处理单个按钮
                MainLeftActTopMdr.prototype.dealSingleBtnIcon = function (id) {
                    var isAdd = this._ins.dealSingleBtnIcon(id, this._isShow);
                    //开启按钮定时器
                    var timeMap = this._ins._btnTimeMap;
                    if (isAdd && Object.keys(timeMap).length) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    // if (!isAdd && TimeMgr.hasUpdateItem(this)) {
                    //     if (!Object.keys(timeMap).length) {
                    //         TimeMgr.removeUpdateItem(this);
                    //     }
                    // }
                };
                //处理单个冲榜按钮
                MainLeftActTopMdr.prototype.dealSingleBigBtnIcon = function (id) {
                    var isAdd = this._ins_big.dealSingleBtnIcon(id, this._isShow, true);
                    //开启按钮定时器
                    var timeMap = this._ins_big._btnTimeMap;
                    if (isAdd && Object.keys(timeMap).length) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                //监听回调处理单个按钮
                MainLeftActTopMdr.prototype.dealSingleBtnIconByNt = function (n) {
                    var notify = n.type;
                    var idList = this._ins._btnNtMap[notify];
                    if (idList && idList.length) {
                        for (var _i = 0, idList_4 = idList; _i < idList_4.length; _i++) {
                            var id = idList_4[_i];
                            this.dealSingleBtnIcon(id);
                        }
                    }
                };
                MainLeftActTopMdr.prototype.onHide = function () {
                    Tween.remove(this._view.group_top1);
                    Tween.remove(this._view.group_big);
                    Tween.remove(this._view.lab_notice);
                    Tween.remove(this._view.group_chat);
                    this._view.group_top1.removeChildren();
                    this._view.group_big.removeChildren();
                    TimeMgr.removeUpdateItem(this);
                    this._btnData = [];
                    this._btnData_big = [];
                    this._ins.clear();
                    this._ins_big.clear();
                    _super.prototype.onHide.call(this);
                };
                /** 通用红点事件监听 */
                MainLeftActTopMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    var hint = data.value;
                    this.updateBtnHint(this._ins._showBtnMap, data);
                    this.updateBtnHint(this._ins_big._showBtnMap, data);
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "78" /* PunshList */])) {
                        this._view.btn.setHint(hint);
                    }
                };
                MainLeftActTopMdr.prototype.updateBtnHint = function (showBtnMap, data) {
                    var hint = data.value;
                    for (var k in showBtnMap) {
                        var btnIcon = showBtnMap[k];
                        var btnData = btnIcon ? btnIcon.data : null;
                        if (!btnData || !btnData.hintMsg || btnData.hintType == mod.BtnIconHintType.None || btnData.hintType == mod.BtnIconHintType.Once) {
                            continue;
                        }
                        var type = mod.HintMgr.getType(btnData.hintMsg);
                        if (type != data.node) {
                            continue;
                        }
                        if (!hint && btnData.hintType == mod.BtnIconHintType.FirstCommon) {
                            hint = mod.BtnIconBase._hintCache[btnData.id] == undefined;
                        }
                        btnIcon.setHint(hint);
                        break;
                    }
                };
                /**功能开启刷新按钮*/
                MainLeftActTopMdr.prototype.onOpenFuncUpdate = function (n) {
                    var isOpen = false;
                    var addIdx = n.body;
                    for (var _i = 0, addIdx_2 = addIdx; _i < addIdx_2.length; _i++) {
                        var openIdx = addIdx_2[_i];
                        if (openIdx == 1041670203 /* PunshList */) {
                            this.onUpdatePunshList();
                            continue;
                        }
                        else if (openIdx == 1041670150 /* Chat */) {
                            this.updateChat();
                            continue;
                        }
                        else if (openIdx == 1041670227 /* ChatSystem */) {
                            this.updateNotice();
                            continue;
                        }
                        if (this._ins._btnDataMap[openIdx]) {
                            this.dealSingleBtnIcon(openIdx);
                            isOpen = true;
                            continue;
                        }
                        //中控活动存的是活动ID
                        var idList = this._ins._btnOpenIdxMap[openIdx];
                        if (idList && idList.length) {
                            for (var _a = 0, idList_5 = idList; _a < idList_5.length; _a++) {
                                var idx = idList_5[_a];
                                this.dealSingleBtnIcon(idx);
                                isOpen = true;
                            }
                        }
                        //中控活动存的是活动ID
                        var idList_big = this._ins_big._btnOpenIdxMap[openIdx];
                        if (idList_big && idList_big.length) {
                            for (var _b = 0, idList_big_1 = idList_big; _b < idList_big_1.length; _b++) {
                                var idx = idList_big_1[_b];
                                this.dealSingleBigBtnIcon(idx);
                                isOpen = true;
                            }
                        }
                    }
                    if (isOpen) {
                        this.showGuide(); //功能开启时候，执行下指引，防止任务指引执行的时候功能还未开启
                    }
                };
                /**功能关闭移除按钮*/
                MainLeftActTopMdr.prototype.onOpenFuncDelete = function (n) {
                    var delIdx = n.body;
                    for (var _i = 0, delIdx_2 = delIdx; _i < delIdx_2.length; _i++) {
                        var openIdx = delIdx_2[_i];
                        if (this._ins._showBtnMap[openIdx]) {
                            this.dealSingleBtnIcon(openIdx); //调用统一的接口，做一些处理
                            continue;
                        }
                        //中控活动存的是活动ID
                        var idList = this._ins._btnOpenIdxMap[openIdx];
                        if (idList && idList.length) {
                            for (var _a = 0, idList_6 = idList; _a < idList_6.length; _a++) {
                                var idx = idList_6[_a];
                                this.dealSingleBtnIcon(idx);
                            }
                        }
                        //中控活动存的是活动ID
                        var idList_big = this._ins_big._btnOpenIdxMap[openIdx];
                        if (idList_big && idList_big.length) {
                            for (var _b = 0, idList_big_2 = idList_big; _b < idList_big_2.length; _b++) {
                                var idx = idList_big_2[_b];
                                this.dealSingleBigBtnIcon(idx);
                            }
                        }
                    }
                };
                //精彩活动的倒计时文本
                MainLeftActTopMdr.prototype.getWonderfulActTimeStr = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670158 /* WonderfulAct */)) {
                        return "";
                    }
                    var proxy = game.getProxy("27" /* Activity */, 219 /* WonderfulAct */);
                    var canGet = proxy.canGetXiannvReward();
                    if (canGet) {
                        return game.getLanById("battle_cue45" /* battle_cue45 */);
                    }
                    return proxy.getXiannvNextTimeSec();
                };
                MainLeftActTopMdr.prototype.update = function (time) {
                    var timeMap = this._ins._btnTimeMap;
                    var keys = Object.keys(timeMap);
                    for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
                        var key = keys_3[_i];
                        var btnIcon = timeMap[key];
                        if (!btnIcon || !this._ins._showBtnMap[key]) {
                            continue;
                        }
                        if (btnIcon.id == 1041670218 /* WonderfulAct */) {
                            var timeStr = this.getWonderfulActTimeStr();
                            if (timeStr && typeof timeStr == 'string') {
                                btnIcon.updateTime(timeStr);
                            }
                            else if (timeStr && typeof timeStr == 'number') {
                                var leftTime = timeStr - TimeMgr.time.serverTimeSecond;
                                var timeTxt = game.TimeUtil.formatSecond(leftTime, leftTime >= game.Second.Hour ? 'HH时mm分' : 'mm分ss秒');
                                btnIcon.updateTime(timeTxt);
                            }
                        }
                        else {
                            if (!this._ins.checkBtnTime(btnIcon.data)) {
                                this.dealSingleBtnIcon(btnIcon.id);
                                continue;
                            }
                            btnIcon.updateTime(); //todo,刷新榜一
                        }
                    }
                    //冲榜排行
                    var timeMap_big = this._ins_big._btnTimeMap;
                    var keys_big = Object.keys(timeMap_big);
                    for (var _a = 0, keys_big_1 = keys_big; _a < keys_big_1.length; _a++) {
                        var key = keys_big_1[_a];
                        var btnIcon = timeMap_big[key];
                        if (!btnIcon || !this._ins_big._showBtnMap[key]) {
                            continue;
                        }
                        btnIcon.updateTime();
                        var paramInfo = btnIcon.data.param;
                        var actInfo = paramInfo.actInfo;
                        var nameStr = this._flyRankProxy.getFirstRankName(actInfo);
                        btnIcon.labelDisplay.text = nameStr;
                    }
                    if (this._view.btn.visible && this._endTime) {
                        var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                        if (leftTime <= 0) {
                            this._view.btn.lab_time.text = game.getLanById("battle_cue29" /* battle_cue29 */);
                            return;
                        }
                        var timeStr = game.TimeUtil.formatSecond(leftTime, 'd天H时', true);
                        this._view.btn.lab_time.text = timeStr;
                        if (!this._time || time.time - this._time > game.Second.Minute * 1000) {
                            this._time = time.time;
                            mod.RankUtil.c2s_rank_req_rank(game.ActivityUtil.getType());
                        }
                    }
                };
                MainLeftActTopMdr.prototype.onRankUpdate = function () {
                    if (this._view.btn.visible && this._endTime) {
                        this.onUpdateFirst();
                    }
                };
                /**浴火重生 */
                MainLeftActTopMdr.prototype.checkYhcs = function () {
                    var proxy = game.getProxy("27" /* Activity */, 224 /* Yhcs */);
                    return proxy && proxy.isOpen();
                };
                /**战力转盘 */
                MainLeftActTopMdr.prototype.checkLottery = function () {
                    var proxy = game.getProxy("27" /* Activity */, 203 /* Lottery */);
                    return proxy && proxy.isOpen();
                };
                /**精彩活动特殊开启判断 */
                MainLeftActTopMdr.prototype.checkWonderful = function () {
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670217 /* Leijicharge */)) {
                        //累计充值开启的时候，判断活动是否有数据
                        var proxy = game.getProxy("27" /* Activity */, 219 /* WonderfulAct */);
                        if (proxy.canOpen(3 /* Leijicharge */)) {
                            return true;
                        }
                    }
                    return mod.ViewMgr.getIns().checkViewOpen(1041670158 /* WonderfulAct */); //精彩活动-仙女送礼
                };
                /** */
                MainLeftActTopMdr.prototype.onUpdateTimeOpen = function () {
                    var _xiandi = game.getProxy("61" /* More */, 260 /* Xiandi */);
                    if (!_xiandi.checkOpen()) {
                        // return;
                        var time = game.TimeUtil.getNextWeekTime() - game.Second.Day;
                        mod.HintMgr.addTimeEvent(16 /* XiandiOpen */, time, this, function () {
                            if (!_xiandi.checkOpen()) {
                                return;
                            }
                            _xiandi.c2s_xiandi_zhengba_oper(2, 1 /* Person */);
                        });
                    }
                };
                //-----------------------新服冲榜--------------------------
                MainLeftActTopMdr.prototype.onCheckPunshListBtn = function () {
                    var isShow = this.getPunshListBtnShow();
                    this._view.btn.visible = isShow;
                    this.removeEft();
                    if (this._view.btn.visible) {
                        this.addEftByParent("feishengbang" /* FeiShengBang */, this._view.btn.gr_eff);
                    }
                };
                MainLeftActTopMdr.prototype.getPunshListBtnShow = function () {
                    var type = game.ActivityUtil.getType();
                    var isShow = this._isShow && !!type && mod.ViewMgr.getIns().checkViewOpen(1041670203 /* PunshList */);
                    return isShow;
                };
                MainLeftActTopMdr.prototype.onUpdatePunshList = function () {
                    var proxy = game.getProxy("27" /* Activity */, 242 /* PunshList */);
                    var type = game.ActivityUtil.getType();
                    this.onCheckPunshListBtn();
                    this.updateGroupBigY();
                    // if (this._view.btn.visible) {
                    this._view.btn.setHint(mod.HintMgr.getHint(["27" /* Activity */, "78" /* PunshList */]));
                    if (type) {
                        this._view.btn.icon = "xinbangchongfu_img_" + type;
                    }
                    // }
                    this._endTime = proxy.getEndTime();
                    if (this._endTime && this._endTime > TimeMgr.time.serverTimeSecond) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                MainLeftActTopMdr.prototype.onClickPunshList = function () {
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "78" /* PunshList */);
                };
                MainLeftActTopMdr.prototype.onUpdateFirst = function () {
                    var info = game.ActivityUtil.getRankFirst();
                    this._view.btn.lab_name.text = info && info.base_info && info.base_info.name || "虚位以待";
                };
                MainLeftActTopMdr.prototype.onClickXiandi = function () {
                    var proxy = game.getProxy("61" /* More */, 260 /* Xiandi */);
                    if (proxy.checkOpen()) {
                        mod.ViewMgr.getIns().showView("61" /* More */, "120" /* Xiandi */);
                    }
                    else {
                        mod.ViewMgr.getIns().showView("61" /* More */, "121" /* XiandiShow */);
                    }
                };
                //-------------------------------------指引相关------------------------------------------------
                MainLeftActTopMdr.prototype.showGuide = function () {
                    this._ins.showGuide(); //管理器处理指引
                };
                //-------------------------------------中控活动------------------------------------------------
                MainLeftActTopMdr.prototype.onActivityInit = function () {
                    this.updateTopActivity();
                    this.updateBigActivity();
                };
                MainLeftActTopMdr.prototype.onActivityEntranceUpdate = function (n) {
                    var typeList = n.body;
                    if (typeList.indexOf(1 /* Top */) > -1) {
                        //刷新入口
                        this.updateTopActivity();
                    }
                    else if (typeList.indexOf(3 /* Big */) > -1) {
                        //刷新冲榜入口
                        this.updateBigActivity();
                    }
                };
                MainLeftActTopMdr.prototype.updateTopActivity = function () {
                    this.initBtnData();
                    this.dealBtnIconList();
                };
                MainLeftActTopMdr.prototype.updateBigActivity = function () {
                    this.initBigBtnData();
                    this.dealBigBtnIconList();
                };
                //刷新长按钮位置
                MainLeftActTopMdr.prototype.updateGroupBigY = function () {
                    var y = this.getGroupBigY();
                    this._view.group_big.y = y;
                };
                //获取长按钮的初始y坐标
                MainLeftActTopMdr.prototype.getGroupBigY = function () {
                    var isShow = this.getPunshListBtnShow();
                    return isShow ? 220 : 78;
                };
                /**************************系统公吿***************************/
                MainLeftActTopMdr.prototype.updateNotice = function () {
                    var isShow = mod.ViewMgr.getIns().checkBtnShow(1041670227 /* ChatSystem */);
                    if (isShow) {
                        var chatList = this._chatProxy.systemList;
                        if (!this._isNoticeShowing && chatList.length) {
                            //不在公告表现，且存在公告信息时
                            this.showNotice(chatList.shift());
                        }
                        isShow = this._isNoticeShowing; //正在表现的时候才显示公告
                    }
                    this.updateNoticeVisible(isShow);
                };
                MainLeftActTopMdr.prototype.updateNoticeVisible = function (isShow) {
                    this._view.group_notice.visible = isShow;
                    this.updateChat();
                };
                MainLeftActTopMdr.prototype.showNotice = function (txt) {
                    var _this = this;
                    this._isNoticeShowing = true;
                    this._view.lab_notice.textFlow = game.TextUtil.parseHtml(txt);
                    var startPos = this._view.scr_notice.width; //设置起始位置
                    var endPos = -this._view.lab_notice.textWidth; //结束的位置
                    this._view.lab_notice.x = startPos;
                    var startTime = this.NOTICE_TIME * startPos; //X坐标移动到0所花的时间
                    var endTime = this.NOTICE_TIME * Math.abs(endPos);
                    Tween.remove(this._view.lab_notice);
                    Tween.get(this._view.lab_notice)
                        .to({ x: 0 }, startTime)
                        .delay(this.NOTICE_SHOW) //显示2秒钟
                        .to({ x: endPos }, endTime)
                        .exec(Handler.alloc(this, function () {
                        _this._view.lab_notice.x = startPos; //重复播放两次
                    }))
                        .to({ x: 0 }, startTime)
                        .delay(this.NOTICE_SHOW) //显示2秒钟
                        .to({ x: endPos }, endTime)
                        .exec(Handler.alloc(this, this.checkNextNotice));
                };
                MainLeftActTopMdr.prototype.checkNextNotice = function () {
                    var chatList = this._chatProxy.systemList;
                    if (!chatList.length) {
                        this._isNoticeShowing = false;
                        this.updateNoticeVisible(false);
                        return;
                    }
                    this.showNotice(chatList.shift());
                };
                /**************************聊天***************************/
                MainLeftActTopMdr.prototype.onClickChatBtn = function () {
                    var openChat = this._chatProxy.openChat;
                    this._chatProxy.openChat = !openChat;
                    this.updateChatList();
                };
                MainLeftActTopMdr.prototype.onClickChat = function () {
                    //打开聊天界面
                    mod.ViewMgr.getIns().showViewByID(34 /* Chat */);
                };
                MainLeftActTopMdr.prototype.updateChat = function () {
                    var _this = this;
                    //显示系统公告时候，不显示聊天
                    var isShow = mod.ViewMgr.getIns().checkBtnShow(1041670150 /* Chat */) && !this._view.group_notice.visible;
                    var chatList = this._chatProxy.mainChatList.concat();
                    var haveChatInfo = chatList && chatList.length > 0;
                    Tween.remove(this._view.group_chat);
                    //【ID1011444】主界面聊天栏当无聊天消息记录时需要暂时隐藏，有聊天记录是重新显示。显示过程最好能做一个渐变效果，从无到有的透明度逐渐变化
                    if (isShow && haveChatInfo) {
                        if (!this._view.group_chat.visible) {
                            this._view.group_chat.visible = true;
                            this._view.group_chat.alpha = 0;
                            Tween.get(this._view.group_chat).to({ alpha: 1 }, 1500)
                                .exec(Handler.alloc(this, function () {
                                _this._view.group_chat.visible = true;
                                _this.updateChatList();
                            }));
                        }
                        else {
                            this._view.group_chat.visible = true;
                            this.updateChatList();
                        }
                    }
                    else {
                        this._view.group_chat.visible = false;
                    }
                };
                MainLeftActTopMdr.prototype.updateChatList = function () {
                    if (!this._view.group_chat.visible) {
                        return;
                    }
                    var openChat = this._chatProxy.openChat;
                    this._view.btn_chat.scaleY = openChat ? -1 : 1;
                    var chatList = this._chatProxy.mainChatList.concat();
                    var infos = openChat || !chatList.length ? chatList : chatList.slice(chatList.length - 1, chatList.length);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                };
                return MainLeftActTopMdr;
            }(game.EffectMdrBase));
            activity.MainLeftActTopMdr = MainLeftActTopMdr;
            __reflect(MainLeftActTopMdr.prototype, "game.mod.activity.MainLeftActTopMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PunshListModel = /** @class */ (function () {
                function PunshListModel() {
                    var _a, _b, _c, _d, _e, _f;
                    this.gifts = {};
                    this.datas = {};
                    this.score = 0;
                    this.openIdxs = [1041670123 /* Weapon */, 1041670124 /* Wing */, 1041670106 /* Tianshen */, 1041670104 /* Horse */, 1041670102 /* Shenling */];
                    this.surfaceType = [2005 /* Zuoqi */, 2010 /* Yuanling */];
                    this.roleType = [2007 /* Yuyi */, 2008 /* Shenbing */];
                    this.openIdxToRankType = (_a = {},
                        _a[1041670123 /* Weapon */] = 2008 /* Shenbing */,
                        _a[1041670124 /* Wing */] = 2007 /* Yuyi */,
                        _a[1041670106 /* Tianshen */] = 2010 /* Yuanling */,
                        _a[1041670104 /* Horse */] = 2005 /* Zuoqi */,
                        _a[1041670102 /* Shenling */] = 2002 /* Shenling */,
                        _a);
                    this.getOpenIdxByRankType = (_b = {},
                        _b[2008 /* Shenbing */] = 1041670123 /* Weapon */,
                        _b[2007 /* Yuyi */] = 1041670124 /* Wing */,
                        _b[2010 /* Yuanling */] = 1041670106 /* Tianshen */,
                        _b[2005 /* Zuoqi */] = 1041670104 /* Horse */,
                        _b[2002 /* Shenling */] = 1041670102 /* Shenling */,
                        _b);
                    this.hintsByType = (_c = {},
                        _c[2010 /* Yuanling */] = ["46" /* Surface */, "08" /* TianshenMain */, "01" /* Tianshen */, "124" /* PunshList */],
                        _c[2005 /* Zuoqi */] = ["46" /* Surface */, "02" /* HorseMain */, "01" /* Horse */, "124" /* PunshList */],
                        _c[2007 /* Yuyi */] = ["06" /* Role */, "01" /* RoleMain */, "16" /* Wing */, "01" /* Wing */, "124" /* PunshList */],
                        _c[2008 /* Shenbing */] = ["06" /* Role */, "01" /* RoleMain */, "17" /* Weapon */, "01" /* Weapon */, "124" /* PunshList */],
                        _c[2002 /* Shenling */] = ["45" /* Shenling */, "01" /* ShenLingMain */ + "01" /* Main */, "124" /* PunshList */],
                        _c);
                    this.getJumpIdxByType = (_d = {},
                        _d[2010 /* Yuanling */] = 37 /* Tianshen */,
                        _d[2005 /* Zuoqi */] = 16 /* Horse */,
                        _d[2007 /* Yuyi */] = 18 /* Wing */,
                        _d[2008 /* Shenbing */] = 68 /* Weapon */,
                        _d[2002 /* Shenling */] = 7 /* Shenling */,
                        _d);
                    this.getRankPowerByType = (_e = {},
                        _e[2002 /* Shenling */] = "shenling_showpower",
                        _e[2005 /* Zuoqi */] = "ride_showpower",
                        _e[2010 /* Yuanling */] = "yuanling_showpower",
                        _e[2008 /* Shenbing */] = "weapon_showpower",
                        _e[2007 /* Yuyi */] = "wings_showpower",
                        _e);
                    this.getRankTitleByType = (_f = {},
                        /**神灵冲榜*/
                        _f[2002 /* Shenling */] = "xinfuchongbang_tip3" /* xinfuchongbang_tip3 */,
                        /**神兵冲榜*/
                        _f[2008 /* Shenbing */] = "xinfuchongbang_tip4" /* xinfuchongbang_tip4 */,
                        /**元灵冲榜*/
                        _f[2010 /* Yuanling */] = "xinfuchongbang_tip5" /* xinfuchongbang_tip5 */,
                        /**羽翼冲榜*/
                        _f[2007 /* Yuyi */] = "xinfuchongbang_tip6" /* xinfuchongbang_tip6 */,
                        /**坐骑冲榜*/
                        _f[2005 /* Zuoqi */] = "xinfuchongbang_tip7" /* xinfuchongbang_tip7 */,
                        _f);
                }
                return PunshListModel;
            }());
            activity.PunshListModel = PunshListModel;
            __reflect(PunshListModel.prototype, "game.mod.activity.PunshListModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_chonglist_item_buy_gift = msg.c2s_chonglist_item_buy_gift;
            var s2c_chonglist_base_info = msg.s2c_chonglist_base_info;
            var c2s_chonglist_receive_reward = msg.c2s_chonglist_receive_reward;
            var s2c_chonglist_receive_reward = msg.s2c_chonglist_receive_reward;
            var s2c_update_chonglist_revelry_data = msg.s2c_update_chonglist_revelry_data;
            var TimeMgr = base.TimeMgr;
            var s2c_chonglist_item_buy_gift = msg.s2c_chonglist_item_buy_gift;
            var Handler = base.Handler;
            var PunshListProxy = /** @class */ (function (_super) {
                __extends(PunshListProxy, _super);
                function PunshListProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(PunshListProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                PunshListProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.PunshListModel();
                    this.onProto(s2c_chonglist_base_info, this.s2c_chonglist_base_info, this);
                    this.onProto(s2c_chonglist_receive_reward, this.s2c_chonglist_receive_reward, this);
                    this.onProto(s2c_update_chonglist_revelry_data, this.s2c_update_chonglist_revelry_data, this);
                    this.onProto(s2c_chonglist_item_buy_gift, this.s2c_chonglist_item_buy_gift, this);
                    // facade.onNt(TaskEvent.ON_TASK_UPDATE, this.onUpdateHint, this);
                };
                PunshListProxy.prototype.s2c_chonglist_item_buy_gift = function (n) {
                    var msg = n.body;
                    if (msg.data) {
                        var gifts = this.getGifts(msg.type);
                        var bool = false;
                        if (gifts) {
                            for (var i = 0; i < gifts.length; i++) {
                                if (gifts[i].index == msg.data.index) {
                                    gifts[i] = msg.data;
                                    bool = true;
                                    break;
                                }
                            }
                            if (!bool) {
                                gifts.push(msg.data);
                            }
                        }
                        else {
                            this._model.gifts[msg.type] = [msg.data];
                        }
                    }
                    this.sendNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */);
                };
                PunshListProxy.prototype.s2c_chonglist_base_info = function (n) {
                    var msg = n.body;
                    if (msg.gift_list) {
                        this._model.gifts[msg.type] = msg.gift_list;
                    }
                    if (msg.revelry_list) {
                        this._model.datas[msg.type] = msg.revelry_list;
                    }
                    this._model.score = msg.score || 0;
                    if (msg.type != this._model.type) {
                        this._model.type = msg.type;
                        this.sendNt("on_update_punshlist_type" /* ON_UPDATE_PUNSHLIST_TYPE */);
                    }
                    this.onUpdateHint();
                    this.sendNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */);
                };
                PunshListProxy.prototype.s2c_chonglist_receive_reward = function (n) {
                    var msg = n.body;
                    if (msg.data) {
                        var datas = this.getDatas(msg.type);
                        if (datas) {
                            var bool = false;
                            for (var i = 0; i < datas.length; i++) {
                                if (datas[i].index == msg.data.index) {
                                    datas[i] = msg.data;
                                    bool = true;
                                    break;
                                }
                            }
                            if (!bool) {
                                datas.push(msg.data);
                            }
                        }
                        else {
                            this._model.datas[msg.type] = [msg.data];
                        }
                    }
                    this.onUpdateHint();
                    this.sendNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */);
                };
                PunshListProxy.prototype.s2c_update_chonglist_revelry_data = function (n) {
                    var msg = n.body;
                    if (msg.data) {
                        var datas = this.getDatas(msg.type);
                        if (datas) {
                            var bool = false;
                            for (var i = 0; i < datas.length; i++) {
                                if (datas[i].index == msg.data.index) {
                                    datas[i] = msg.data;
                                    bool = true;
                                    break;
                                }
                            }
                            if (!bool) {
                                datas.push(msg.data);
                            }
                        }
                        else {
                            this._model.datas[msg.type] = [msg.data];
                        }
                    }
                    this._model.score = msg.score || 0;
                    this.onUpdateHint();
                    this.sendNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */);
                };
                PunshListProxy.prototype.c2s_chonglist_item_buy_gift = function (type, index) {
                    var msg = new c2s_chonglist_item_buy_gift();
                    msg.type = type;
                    msg.index = index;
                    this.sendProto(msg);
                };
                PunshListProxy.prototype.c2s_chonglist_receive_reward = function (type, index) {
                    var msg = new c2s_chonglist_receive_reward();
                    msg.type = type;
                    msg.index = index;
                    this.sendProto(msg);
                };
                PunshListProxy.prototype.getGifts = function (type) {
                    return this._model.gifts[type];
                };
                PunshListProxy.prototype.getGift = function (type, index) {
                    var datas = this.getGifts(type);
                    if (!datas) {
                        return null;
                    }
                    for (var _i = 0, datas_1 = datas; _i < datas_1.length; _i++) {
                        var data = datas_1[_i];
                        if (data.index == index) {
                            return data;
                        }
                    }
                    return null;
                };
                Object.defineProperty(PunshListProxy.prototype, "type", {
                    get: function () {
                        return this._model.type;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(PunshListProxy.prototype, "surfaceType", {
                    get: function () {
                        return this._model.surfaceType;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(PunshListProxy.prototype, "roleType", {
                    get: function () {
                        return this._model.roleType;
                    },
                    enumerable: true,
                    configurable: true
                });
                PunshListProxy.prototype.getDatas = function (type) {
                    return this._model.datas[type];
                };
                PunshListProxy.prototype.getData = function (type, index) {
                    var datas = this.getDatas(type);
                    if (datas) {
                        for (var _i = 0, datas_2 = datas; _i < datas_2.length; _i++) {
                            var data = datas_2[_i];
                            if (data.index == index) {
                                return data;
                            }
                        }
                    }
                    return null;
                };
                PunshListProxy.prototype.getRankTypeByOpenIdx = function (openIdx) {
                    return this._model.openIdxToRankType[openIdx] || 0;
                };
                Object.defineProperty(PunshListProxy.prototype, "openIdxs", {
                    get: function () {
                        return this._model.openIdxs;
                    },
                    enumerable: true,
                    configurable: true
                });
                PunshListProxy.prototype.getEndTime = function () {
                    var cfg = game.GameConfig.getParamConfigById("chonglist_open");
                    for (var _i = 0, _a = cfg.value; _i < _a.length; _i++) {
                        var open = _a[_i];
                        if (open[0] == this.type) {
                            var day = open[2] - mod.RoleUtil.getServerDay();
                            var next = day + 1;
                            return game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, next);
                        }
                    }
                    return 0;
                };
                /**活动最后一天提示*/
                PunshListProxy.prototype.checkActTips = function (type) {
                    var endTime = this.getEndTime();
                    mod.ViewMgr.getIns().showActTips(endTime, type);
                };
                PunshListProxy.prototype.getBigReward = function (cfg) {
                    if (cfg.buy_type == 1) {
                        var shop = game.getConfigByNameId("shop.json" /* Store */, cfg.shop_index);
                        return shop.prop[0];
                    }
                    else {
                        var gift = game.getConfigByNameId("gift_bag.json" /* GiftBag */, cfg.shop_index);
                        return gift.awards[0];
                    }
                };
                PunshListProxy.prototype.getRankStr = function (type) {
                    var info = mod.RankUtil.getNewRankInfo(type);
                    var cfgs = game.getConfigByNameId("chonglist_rank.json" /* ChonglistRank */, type);
                    var maxRank = game.MAX_RANK_NUM;
                    for (var k in cfgs) {
                        var cfg = cfgs[k];
                        maxRank = cfg.rank_no;
                    }
                    var myRankNum = maxRank + "+";
                    if (info && info.my_rank_num <= maxRank) {
                        myRankNum = "" + info.my_rank_num;
                    }
                    return game.StringUtil.substitute(game.getLanById("compete_mars_4" /* compete_mars_4 */), [game.TextUtil.addColor(myRankNum, 2330156 /* GREEN */)]);
                };
                PunshListProxy.prototype.getRankScore = function (type) {
                    return mod.RankUtil.getMyRankTypeDesc(type, true);
                };
                /**获取区间排行榜列表 参数为排名 需要-1转换索引 */
                PunshListProxy.prototype.getListBySection = function (rank) {
                    var strArr = rank.split("-");
                    var info = mod.RankUtil.getNewRankInfo(this.type);
                    var info_list = info && info.info_list ? info.info_list : [];
                    var arr = info_list.slice(+strArr[0] - 1, +strArr[1] - 1);
                    var list = [];
                    var rank_no = +strArr[0];
                    if (arr && arr.length > 0) {
                        for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
                            var item = arr_2[_i];
                            var teammate = item && item.base_info;
                            var power = item && item[this._model.getRankPowerByType[this.type]];
                            var str = game.StringUtil.getHurtNumStr(power && power.toNumber() || 0);
                            list.push({
                                rank: rank_no++,
                                name: teammate.name,
                                value: str
                            });
                        }
                    }
                    /**开始的排名 */
                    var start = +strArr[0] + arr.length;
                    if (start <= +strArr[1]) {
                        var nobody = this.getNobodyListBySection(start, +strArr[1]);
                        for (var _a = 0, nobody_2 = nobody; _a < nobody_2.length; _a++) {
                            var item = nobody_2[_a];
                            list.push(item);
                        }
                    }
                    return list;
                };
                /**无人上榜的空数组 参数为排名 */
                PunshListProxy.prototype.getNobodyListBySection = function (start, end) {
                    var list = [];
                    for (var i = start; i <= end; i++) {
                        list.push({
                            rank: i,
                            name: "虚位以待",
                            value: 0
                        });
                    }
                    return list;
                };
                PunshListProxy.prototype.getRankFirst = function () {
                    var info = mod.RankUtil.getNewRankInfo(this.type);
                    var info_list = info && info.info_list ? info.info_list : [];
                    if (info_list && info_list.length) {
                        return info_list[0];
                    }
                    return null;
                };
                PunshListProxy.prototype.getRankList = function (type) {
                    var _this = this;
                    if (type === void 0) { type = this.type; }
                    var info = mod.RankUtil.getNewRankInfo(this.type);
                    var info_list = info && info.info_list ? info.info_list : [];
                    var cfgs = game.getConfigByNameId("chonglist_rank.json" /* ChonglistRank */, type);
                    var list = [];
                    var last_rank = 0;
                    var _loop_2 = function (k) {
                        var cfg = cfgs[k];
                        if (cfg.rank_no == last_rank + 1) {
                            var item = info_list[cfg.rank_no - 1];
                            var teammate = item && item.base_info;
                            var power = item && item[this_2._model.getRankPowerByType[type]];
                            var str = game.StringUtil.getHurtNumStr(power && power.toNumber() || 0);
                            list.push({
                                rank: cfg.rank_no,
                                name: teammate && teammate.name || "虚位以待",
                                hurtStr: str,
                                reward: cfg.reward.slice()
                            });
                            last_rank = cfg.rank_no;
                        }
                        else {
                            var rank_2 = last_rank + 1 + "-" + cfg.rank_no;
                            var lookHandler = null;
                            if (cfg.rank_no >= 999) {
                                rank_2 = last_rank + "+";
                            }
                            else {
                                lookHandler = Handler.alloc(this_2, function () {
                                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "79" /* PunshListRankSection */, {
                                        rank: rank_2,
                                        list: _this.getListBySection(rank_2),
                                        strRank: _this.getRankStr(type),
                                        strScore: _this.getRankScore(type)
                                    });
                                });
                            }
                            // let str: string = TextUtil.addLinkHtmlTxt(getLanById(LanDef.tongtiange_tips12), WhiteColor.DEFAULT, "");
                            // let name: string = cfg.rank_no >= 999 ? "" : str;
                            var name = '';
                            list.push({
                                rank: rank_2,
                                name: name,
                                reward: cfg.reward.slice(),
                                lookHandler: lookHandler
                            });
                            last_rank = cfg.rank_no;
                        }
                    };
                    var this_2 = this;
                    for (var k in cfgs) {
                        _loop_2(k);
                    }
                    return list;
                };
                PunshListProxy.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(41 /* PunshList */) > -1) {
                        this.onUpdateHint();
                    }
                };
                PunshListProxy.prototype.onUpdateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670203 /* PunshList */)) {
                        mod.HintMgr.setHint(false, ["27" /* Activity */, "78" /* PunshList */]);
                        return;
                    }
                    var root = ["27" /* Activity */, "78" /* PunshList */, "01" /* TabBtnType01 */];
                    var datas = this.getDatas(this.type);
                    if (datas) {
                        for (var _i = 0, datas_3 = datas; _i < datas_3.length; _i++) {
                            var data = datas_3[_i];
                            if (data.status == 1) {
                                mod.HintMgr.setHint(true, root);
                                this.setSurfaceHint(this.type, true);
                                return;
                            }
                        }
                    }
                    // let tasks: task_data[] = TaskUtil.getTaskList(TaskType.PunshList, true, false);
                    // for (let task of tasks) {
                    //     if (task.status == TaskStatus.Finish) {
                    //         HintMgr.setHint(true, root);
                    //         this.setSurfaceHint(this.type, true);
                    //         return;
                    //     }
                    // }
                    var tasks_hint = mod.TaskUtil.getTaskHint(41 /* PunshList */);
                    if (tasks_hint) {
                        mod.HintMgr.setHint(tasks_hint, root);
                        this.setSurfaceHint(this.type, tasks_hint);
                        return;
                    }
                    mod.HintMgr.setHint(false, root);
                    this.setSurfaceHint(this.type, false);
                };
                PunshListProxy.prototype.setSurfaceHint = function (type, bool) {
                    for (var k in this._model.hintsByType) {
                        var root = this._model.hintsByType[k];
                        var openIdx = this._model.getOpenIdxByRankType[k];
                        if (!openIdx || !mod.ViewMgr.getIns().checkViewOpen(openIdx)) {
                            mod.HintMgr.setHint(false, root);
                            continue;
                        }
                        if (type == +k) {
                            mod.HintMgr.setHint(bool, root);
                        }
                        else {
                            mod.HintMgr.setHint(false, root);
                        }
                    }
                };
                PunshListProxy.prototype.getSurfaceHintNodes = function (type) {
                    return this._model.hintsByType[type] || [];
                };
                PunshListProxy.prototype.getJumpIdxByType = function (type) {
                    return this._model.getJumpIdxByType[type];
                };
                PunshListProxy.prototype.getRankTitleByType = function (type) {
                    return this._model.getRankTitleByType[type];
                };
                PunshListProxy.prototype.getOpenIdx = function (type) {
                    return this._model.getOpenIdxByRankType[type];
                };
                return PunshListProxy;
            }(game.ProxyBase));
            activity.PunshListProxy = PunshListProxy;
            __reflect(PunshListProxy.prototype, "game.mod.activity.PunshListProxy", ["game.mod.IPunshListProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var Handler = base.Handler;
            var PunshListGiftItem = /** @class */ (function (_super) {
                __extends(PunshListGiftItem, _super);
                function PunshListGiftItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                PunshListGiftItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(242 /* PunshList */);
                };
                PunshListGiftItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                PunshListGiftItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    //%超值资源显示
                    this.img_lab.source = "chaozhi_" + (this.itemIndex + 1);
                    var data = this._proxy.getGift(this._proxy.type, this.data.index);
                    var count = data && data.count || 0;
                    var lmt = 0;
                    var datas = [];
                    // let title: string = "";
                    if (this.data.buy_type == 1) {
                        var cfg = game.getConfigByNameId("shop.json" /* Store */, this.data.shop_index);
                        lmt = cfg.lmt_cnt;
                        datas = cfg.prop;
                        // title = cfg.des;
                        this.btn_buy.setCost([cfg.coin_type, cfg.price]);
                    }
                    else {
                        var cfg = game.getConfigByNameId("gift_bag.json" /* GiftBag */, this.data.shop_index);
                        var lmtCfgs = game.getConfigByNameId("direct_shop.json" /* DirectShop */, 11);
                        for (var k in lmtCfgs) {
                            var lmtCfg = lmtCfgs[k];
                            if (lmtCfg.product_id == this.data.shop_index) {
                                lmt = lmtCfg.param1;
                            }
                        }
                        datas = cfg.awards;
                        // title = cfg.name;
                        var product = game.getConfigByNameId("product_id.json" /* ProductId */, this.data.shop_index);
                        this.btn_buy.resetCost();
                        this.btn_buy.label = product.rmb + "\u5143";
                    }
                    if (count < lmt) {
                        this.lab_limit.textFlow = game.TextUtil.parseHtml("限购:" + game.TextUtil.addColor(lmt - count + "/" + lmt, 2330156 /* GREEN */));
                        this.grp_buy.visible = true;
                        this.img_bought.visible = false;
                    }
                    else {
                        this.grp_buy.visible = false;
                        this.img_bought.visible = true;
                    }
                    if (this.data.vip_cond > mod.VipUtil.getShowVipLv()) {
                        this.lab_limit.text = "VIP" + this.data.vip_cond + "\u53EF\u8D2D\u4E70";
                    }
                    this._listData.replaceAll(datas);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(this.data.desc);
                };
                /**点击购买*/
                PunshListGiftItem.prototype.onClick = function () {
                    var _this = this;
                    if (this.data.vip_cond > 0 && mod.VipUtil.getShowVipLv() < this.data.vip_cond) {
                        var str = "VIP" + this.data.vip_cond + "\u53EF\u8D2D\u4E70\uFF0C\u662F\u5426\u524D\u5F80?";
                        mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, function () {
                            mod.ViewMgr.getIns().openCommonRechargeView();
                        }));
                        return;
                    }
                    if (this.data.buy_type == 1) {
                        var cfg = game.getConfigByNameId("shop.json" /* Store */, this.data.shop_index);
                        if (!mod.BagUtil.checkPropCnt(cfg.coin_type, cfg.price)) {
                            mod.ViewMgr.getIns().openCommonRechargeView();
                            return;
                        }
                        var prop = game.PropData.create(cfg.coin_type);
                        var str = "\u662F\u5426\u82B1\u8D39" + game.TextUtil.addColor("" + cfg.price, 2330156 /* GREEN */) + prop.cfg.name + "\u8D2D\u4E70";
                        mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, function () {
                            _this._proxy.c2s_chonglist_item_buy_gift(_this._proxy.type, _this.data.index);
                        }));
                        // this._proxy.c2s_chonglist_item_buy_gift(this._proxy.type, this.data.index);
                    }
                    else {
                        mod.PayUtil.pay(this.data.shop_index);
                    }
                };
                return PunshListGiftItem;
            }(mod.BaseGiftItemRender));
            activity.PunshListGiftItem = PunshListGiftItem;
            __reflect(PunshListGiftItem.prototype, "game.mod.activity.PunshListGiftItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PunshListGiftView = /** @class */ (function (_super) {
                __extends(PunshListGiftView, _super);
                function PunshListGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.PunshListGiftViewSkin";
                    return _this;
                }
                return PunshListGiftView;
            }(eui.Component));
            activity.PunshListGiftView = PunshListGiftView;
            __reflect(PunshListGiftView.prototype, "game.mod.activity.PunshListGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var PunshListItem = /** @class */ (function (_super) {
                __extends(PunshListItem, _super);
                function PunshListItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                PunshListItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(242 /* PunshList */);
                };
                PunshListItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                PunshListItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this._listData.replaceAll(this.data.reward);
                    var data = this._proxy.getData(this._proxy.type, this.data.index);
                    this.grp.visible = data && data.status == 2;
                };
                return PunshListItem;
            }(mod.BaseRenderer));
            activity.PunshListItem = PunshListItem;
            __reflect(PunshListItem.prototype, "game.mod.activity.PunshListItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PunshListRankView = /** @class */ (function (_super) {
                __extends(PunshListRankView, _super);
                function PunshListRankView() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                return PunshListRankView;
            }(mod.RankView));
            activity.PunshListRankView = PunshListRankView;
            __reflect(PunshListRankView.prototype, "game.mod.activity.PunshListRankView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var PunshListTaskItem = /** @class */ (function (_super) {
                __extends(PunshListTaskItem, _super);
                function PunshListTaskItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                PunshListTaskItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_go, this.onClickGo, this);
                };
                PunshListTaskItem.prototype.onClickGo = function () {
                    mod.TaskUtil.clickTask(this.data, this.btn_go);
                };
                PunshListTaskItem.prototype.dataChanged = function () {
                    var cfg = mod.TaskUtil.getCfg(this.data.task_id);
                    var param = game.GameConfig.getParamConfigById("chonglist_jifen");
                    this.lab_num.text = "" + param.value;
                    this.lab_desc.text = cfg.desc;
                    var hasDraw = mod.TaskUtil.hasRewardDraw(this.data);
                    if (hasDraw) {
                        this.progressComp.show(this.data.schedule, this.data.target || this.data.schedule, false);
                    }
                    else {
                        this.progressComp.show(this.data.schedule, this.data.target, false);
                    }
                    this.btn_go.labelDisplay.text = this.data.status == 1 /* Finish */ ? "领取" : "前往";
                    this.btn_go.visible = this.data.status != 2 /* Draw */;
                    this.btn_go.redPoint.visible = this.data.status == 1 /* Finish */;
                    this.img_finished.visible = hasDraw;
                };
                return PunshListTaskItem;
            }(mod.BaseListenerRenderer));
            activity.PunshListTaskItem = PunshListTaskItem;
            __reflect(PunshListTaskItem.prototype, "game.mod.activity.PunshListTaskItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PunshListView = /** @class */ (function (_super) {
                __extends(PunshListView, _super);
                function PunshListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.PunshListSkin";
                    return _this;
                }
                return PunshListView;
            }(eui.Component));
            activity.PunshListView = PunshListView;
            __reflect(PunshListView.prototype, "game.mod.activity.PunshListView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var PunshListGiftMdr = /** @class */ (function (_super) {
                __extends(PunshListGiftMdr, _super);
                function PunshListGiftMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.PunshListGiftView);
                    return _this;
                }
                PunshListGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(242 /* PunshList */);
                    this._view.list.itemRenderer = activity.PunshListGiftItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    //todo
                    // this._view.img_banner.source = ResUtil.getUiJpg(`tongtiange_banner6`);
                };
                PunshListGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */, this.updateView, this);
                };
                PunshListGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this.updateView();
                };
                PunshListGiftMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                PunshListGiftMdr.prototype.updateView = function () {
                    var cfgs = game.getConfigByNameId("chonglist_gift.json" /* ChonglistGift */, this._proxy.type);
                    var list = [];
                    for (var k in cfgs) {
                        var cfg_1 = cfgs[k];
                        list.push(cfg_1);
                    }
                    this._listData.replaceAll(list);
                    var cfg = list[list.length - 1];
                    var bigReward = this._proxy.getBigReward(cfg);
                    this._view.big_reward.setData(bigReward);
                };
                PunshListGiftMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return PunshListGiftMdr;
            }(game.MdrBase));
            activity.PunshListGiftMdr = PunshListGiftMdr;
            __reflect(PunshListGiftMdr.prototype, "game.mod.activity.PunshListGiftMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var PunshListMainMdr = /** @class */ (function (_super) {
                __extends(PunshListMainMdr, _super);
                function PunshListMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xinfuchongbang",
                            mdr: activity.PunshListMdr,
                            title: "xinfuchongbang_tip1" /* xinfuchongbang_tip1 */,
                            bg: 'xinfuzhongbang_bg',
                            hintTypes: ["27" /* Activity */, "78" /* PunshList */, "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "chongbangtehui",
                            mdr: activity.PunshListGiftMdr,
                            title: "xinfuchongbang_tip2" /* xinfuchongbang_tip2 */,
                            bg: '',
                            hintTypes: ["27" /* Activity */, "78" /* PunshList */, "02" /* TabBtnType02 */]
                        },
                        {
                            btnType: "03" /* TabBtnType03 */,
                            icon: "shenlingchongbang",
                            mdr: activity.PunshListRankMdr,
                            title: "xinfuchongbang_tip3" /* xinfuchongbang_tip3 */,
                            bg: 'pass_rank_bg',
                            hintTypes: ["27" /* Activity */, "78" /* PunshList */, "03" /* TabBtnType03 */]
                        }
                    ];
                    return _this;
                }
                PunshListMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(242 /* PunshList */);
                    var proxy = facade.retMod("27" /* Activity */).retProxy(215 /* ExchangeShop */);
                    var btnType = "0" + 5 /* Type4 */;
                    var title = proxy.getTitleByType(5 /* Type4 */);
                    var coinIndex0 = proxy.getCoinIdByType(5 /* Type4 */);
                    var openIdx = proxy.getOpenIdxByType(5 /* Type4 */);
                    this._btnData.push({
                        btnType: btnType,
                        title: title,
                        coinIndex0: coinIndex0,
                        bg: "beijingtu_duihuan",
                        icon: "shop_type" + 5 /* Type4 */,
                        mdr: activity.PunshListShopMdr,
                        hintTypes: ["27" /* Activity */, "54" /* ExchangeShop */, btnType],
                        openIdx: openIdx
                    });
                };
                PunshListMainMdr.prototype.onShow = function () {
                    for (var k in this._btnData) {
                        var data = this._btnData[k];
                        if (data.btnType == "03" /* TabBtnType03 */) {
                            data.icon = this._proxy.type + "chongbang";
                            data.title = this._proxy.getRankTitleByType(this._proxy.type);
                        }
                    }
                    _super.prototype.onShow.call(this);
                };
                PunshListMainMdr.prototype.onTabCheck = function (index) {
                    var data = this._btnList.source[index];
                    if (data.btnType == "03" /* TabBtnType03 */) {
                        var cfg = game.GameConfig.getParamConfigById("chonglist_mark");
                        var score = this._proxy.model.score;
                        if (score < cfg.value) {
                            game.PromptBox.getIns().show("\u9700\u65B0\u670D\u51B2\u699C" + cfg.value + "\u79EF\u5206");
                            return false;
                            // return true;
                        }
                    }
                    return _super.prototype.onTabCheck.call(this, index);
                };
                return PunshListMainMdr;
            }(mod.WndBaseMdr));
            activity.PunshListMainMdr = PunshListMainMdr;
            __reflect(PunshListMainMdr.prototype, "game.mod.activity.PunshListMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var PunshListMdr = /** @class */ (function (_super) {
                __extends(PunshListMdr, _super);
                function PunshListMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.PunshListView);
                    return _this;
                }
                PunshListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(242 /* PunshList */);
                    this._view.list_task.itemRenderer = activity.PunshListTaskItem;
                    this._view.list_task.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.list.itemRenderer = activity.PunshListItem;
                    this._view.list.dataProvider = this._scoreData = new eui.ArrayCollection();
                };
                PunshListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_1, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.btn_2, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.btn_3, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.btn_4, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    this.onNt("on_update_punshlist_info" /* ON_UPDATE_PUNSHLIST_INFO */, this.updateView, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                };
                PunshListMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this.updateView();
                    this._proxy.checkActTips(5 /* PunshList */);
                };
                PunshListMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                PunshListMdr.prototype.updateView = function () {
                    var cfgs = game.getConfigByNameId("chonglist_target.json" /* ChonglistTarget */, this._proxy.type);
                    var list = [];
                    var nums = [];
                    for (var k in cfgs) {
                        var cfg = cfgs[k];
                        list.unshift(cfg);
                        nums.push(cfg.cnt);
                        var btn = this._view["btn_" + cfg.index];
                        btn.label = "" + cfg.cnt;
                        var data = this._proxy.getData(this._proxy.type, cfg.index);
                        btn.setHint(data && data.status == 1);
                    }
                    this._scoreData.replaceAll(list);
                    var score = this._proxy.model.score;
                    this._view.lab_score.text = "" + score;
                    // this._view.btn.label = '积分';
                    this.onUpdateProgress(nums);
                    this.onUpdateTask();
                };
                PunshListMdr.prototype.onUpdateProgress = function (nums) {
                    var score = this._proxy.model.score;
                    if (!score) {
                        this._view.progress.percentHeight = 0;
                        return;
                    }
                    if (score >= nums[nums.length - 1]) {
                        this._view.progress.percentHeight = 100;
                        return;
                    }
                    var part = 25;
                    for (var i = 0; i < nums.length; i++) {
                        var num = nums[i];
                        if (num > score) {
                            break;
                        }
                    }
                    if (!i) {
                        var p = score / nums[i];
                        this._view.progress.percentHeight = (i + p) * part;
                    }
                    else {
                        var p = (score - nums[i - 1]) / (nums[i] - nums[i - 1]);
                        this._view.progress.percentHeight = (i + p) * part;
                    }
                };
                PunshListMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(41 /* PunshList */) > -1) {
                        this.onUpdateTask();
                    }
                };
                PunshListMdr.prototype.onUpdateTask = function () {
                    var tasks = mod.TaskUtil.getTaskList(41 /* PunshList */);
                    this._listData.replaceAll(tasks);
                };
                PunshListMdr.prototype.onClickBtn = function (e) {
                    var index = 0;
                    switch (e.currentTarget) {
                        case this._view.btn_1:
                            index = 1;
                            break;
                        case this._view.btn_2:
                            index = 2;
                            break;
                        case this._view.btn_3:
                            index = 3;
                            break;
                        case this._view.btn_4:
                            index = 4;
                            break;
                    }
                    if (!index) {
                        return;
                    }
                    var data = this._proxy.getData(this._proxy.type, index);
                    if (data) {
                        if (data.status == 1) {
                            this._proxy.c2s_chonglist_receive_reward(this._proxy.type, index);
                        }
                        else {
                            game.PromptBox.getIns().show(game.getLanById("shoulie_point" /* shoulie_point */));
                        }
                    }
                    else {
                        game.PromptBox.getIns().show(game.getLanById("general3" /* general3 */));
                    }
                };
                PunshListMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return PunshListMdr;
            }(game.MdrBase));
            activity.PunshListMdr = PunshListMdr;
            __reflect(PunshListMdr.prototype, "game.mod.activity.PunshListMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var PunshListRankMdr = /** @class */ (function (_super) {
                __extends(PunshListRankMdr, _super);
                function PunshListRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.PunshListRankView);
                    return _this;
                }
                PunshListRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(242 /* PunshList */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._itemList;
                    this._view.img_type3.source = "paimingjiangli";
                    this._view.grp_num.right = 200;
                    this._view.btn_go.visible = true;
                };
                PunshListRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_go, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    this.onNt("on_new_rank_info_update" /* ON_NEW_RANK_INFO_UPDATE */, this.onRankUpdate, this);
                    this.onNt("on_rank_base_info_update" /* ON_RANK_BASE_INFO_UPDATE */, this.onRankUpdate, this);
                };
                PunshListRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.onRankUpdate(); //不确定服务端会不会返回数据
                    this.reqRankInfo();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                PunshListRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                PunshListRankMdr.prototype.onRankUpdate = function () {
                    this.initShow();
                    this.updateShow();
                    this.updateTime();
                };
                PunshListRankMdr.prototype.initShow = function () {
                    this._view.timeItem.visible = true;
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._proxy.type));
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(this._proxy.getRankScore(this._proxy.type));
                };
                PunshListRankMdr.prototype.updateShow = function () {
                    var info = mod.RankUtil.getNewRankInfo(this._proxy.type);
                    var info_list = info && info.info_list ? info.info_list : [];
                    var topInfo = info_list[0] && info_list[0].base_info;
                    if (topInfo) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    var infos = this._proxy.getRankList();
                    this._itemList.replaceAll(infos);
                    // this._itemList.replaceAll(info_list);
                    this._view.img_type2.source = "chongbang_power_" + this._proxy.type;
                };
                PunshListRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                PunshListRankMdr.prototype.updateTime = function () {
                    var endTime = this._proxy.getEndTime();
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime == 0) {
                        this.reqRankInfo();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                PunshListRankMdr.prototype.reqRankInfo = function () {
                    mod.RankUtil.c2s_rank_req_rank(this._proxy.type);
                };
                PunshListRankMdr.prototype.onClickBtn = function () {
                    var jumoIdx = this._proxy.getJumpIdxByType(this._proxy.type);
                    if (!jumoIdx) {
                        console.error("找不到跳转id", this._proxy.type, jumoIdx);
                        return;
                    }
                    mod.ViewMgr.getIns().showViewByID(jumoIdx);
                };
                return PunshListRankMdr;
            }(game.EffectMdrBase));
            activity.PunshListRankMdr = PunshListRankMdr;
            __reflect(PunshListRankMdr.prototype, "game.mod.activity.PunshListRankMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var PunshListRankSectionMdr = /** @class */ (function (_super) {
                __extends(PunshListRankSectionMdr, _super);
                function PunshListRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                PunshListRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                };
                PunshListRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_update_rank" /* ON_UPDATE_RANK */, this.onRankUpdate, this);
                };
                PunshListRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.scroller.viewport.scrollV = 0;
                    this._section = this._showArgs.rank;
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this.onRankUpdate();
                };
                PunshListRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                PunshListRankSectionMdr.prototype.onRankUpdate = function () {
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._showArgs.strRank);
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(this._showArgs.strScore);
                    this._itemList.replaceAll(this._showArgs.list);
                    var proxy = facade.retMod("27" /* Activity */).retProxy(242 /* PunshList */);
                    this._view.img_type2.source = "chongbang_power_" + proxy.type;
                    // todo
                    // this._view.img_type2
                };
                return PunshListRankSectionMdr;
            }(game.EffectMdrBase));
            activity.PunshListRankSectionMdr = PunshListRankSectionMdr;
            __reflect(PunshListRankSectionMdr.prototype, "game.mod.activity.PunshListRankSectionMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PunshListShopMdr = /** @class */ (function (_super) {
                __extends(PunshListShopMdr, _super);
                function PunshListShopMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                PunshListShopMdr.prototype.setType = function () {
                    this._type = 5 /* Type4 */;
                };
                return PunshListShopMdr;
            }(activity.ExchangeShopMdr));
            activity.PunshListShopMdr = PunshListShopMdr;
            __reflect(PunshListShopMdr.prototype, "game.mod.activity.PunshListShopMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PrerogativeWritModel = /** @class */ (function () {
                function PrerogativeWritModel() {
                    /**特权令信息，存在代表已购买*/
                    this.info = {};
                    this.hintPath = ["27" /* Activity */, "45" /* RoleRingMain */, "02" /* TabBtnType02 */];
                }
                return PrerogativeWritModel;
            }());
            activity.PrerogativeWritModel = PrerogativeWritModel;
            __reflect(PrerogativeWritModel.prototype, "game.mod.activity.PrerogativeWritModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_prerogative_writ_get = msg.c2s_prerogative_writ_get;
            var s2c_prerogative_writ_info = msg.s2c_prerogative_writ_info;
            /**
             * @description 特权令系统
             */
            var PrerogativeWritProxy = /** @class */ (function (_super) {
                __extends(PrerogativeWritProxy, _super);
                function PrerogativeWritProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._productIdMap = {};
                    return _this;
                }
                Object.defineProperty(PrerogativeWritProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                PrerogativeWritProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.PrerogativeWritModel();
                    this.onProto(s2c_prerogative_writ_info, this.s2c_prerogative_writ_info, this);
                };
                //领取特权令奖励
                PrerogativeWritProxy.prototype.c2s_prerogative_writ_get = function (type) {
                    var msg = new c2s_prerogative_writ_get();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //返回特权令信息
                PrerogativeWritProxy.prototype.s2c_prerogative_writ_info = function (n) {
                    var msg = n.body;
                    if (msg.info != null) {
                        for (var _i = 0, _a = msg.info; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.info[item.type] = item;
                        }
                    }
                    this.updateHint();
                    this.sendNt("on_update_prerogative_writ_info" /* ON_UPDATE_PREROGATIVE_WRIT_INFO */);
                };
                /**================================= 协议end =================================*/
                //获取每日奖励
                PrerogativeWritProxy.prototype.getDailyReward = function (type) {
                    var ary = ['yuqing', 'shangqing', 'taiqing'];
                    var cfg = game.GameConfig.getParamConfigById(ary[type - 1]);
                    if (!cfg) {
                        return [];
                    }
                    return cfg.value;
                };
                //获取展示的奖励
                PrerogativeWritProxy.prototype.getRewardShow = function (type) {
                    if (!this.isPayBought(type)) {
                        var productId = this.getProductId(type);
                        return mod.PayUtil.getRewards(productId);
                    }
                    return this.getDailyReward(type);
                };
                //获取商品id
                PrerogativeWritProxy.prototype.getProductId = function (type) {
                    if (this._productIdMap[type]) {
                        return this._productIdMap[type];
                    }
                    this._productIdMap = {};
                    var cfgs = mod.StoreUtil.getDirectShopCfgListByType(6 /* PrerogativeWrit */);
                    for (var _i = 0, cfgs_5 = cfgs; _i < cfgs_5.length; _i++) {
                        var cfg = cfgs_5[_i];
                        if (cfg) {
                            this._productIdMap[cfg.param1] = cfg.product_id;
                        }
                    }
                    return this._productIdMap[type];
                };
                //特权令是否购买
                PrerogativeWritProxy.prototype.isPayBought = function (type) {
                    return !!this.getInfo(type);
                    // return PayUtil.hasBuy(this.getProductId(type));
                };
                //每天奖励是否领取
                PrerogativeWritProxy.prototype.isReceived = function (type) {
                    var info = this._model.info[type];
                    return info && info.status == 2;
                };
                //购买了才有
                PrerogativeWritProxy.prototype.getInfo = function (type) {
                    return this._model.info[type];
                };
                PrerogativeWritProxy.prototype.getReceivedDay = function (type) {
                    var info = this.getInfo(type);
                    return info && info.day || 0;
                };
                /**特权令是否全部购买了*/
                PrerogativeWritProxy.prototype.isAllBought = function () {
                    var ary = [1 /* Yuqing */, 2 /* Shangqing */, 3 /* Taiqing */];
                    for (var _i = 0, ary_1 = ary; _i < ary_1.length; _i++) {
                        var type = ary_1[_i];
                        if (!this.isPayBought(type)) {
                            return false;
                        }
                    }
                    return true;
                };
                /**================================= hint =================================*/
                PrerogativeWritProxy.prototype.getHint = function (type) {
                    var info = this.getInfo(type);
                    return info && info.status == 1;
                };
                PrerogativeWritProxy.prototype.updateHint = function () {
                    var hint = false;
                    for (var i = 1; i <= 3; i++) {
                        if (this.getHint(i)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath);
                };
                return PrerogativeWritProxy;
            }(game.ProxyBase));
            activity.PrerogativeWritProxy = PrerogativeWritProxy;
            __reflect(PrerogativeWritProxy.prototype, "game.mod.activity.PrerogativeWritProxy", ["game.mod.IPrerogativeWritProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var RoleRingModel = /** @class */ (function () {
                function RoleRingModel() {
                    this.hints = [
                        ["27" /* Activity */, "45" /* RoleRingMain */, "01" /* TabBtnType01 */, "105" /* RoleRingType1 */],
                        ["27" /* Activity */, "45" /* RoleRingMain */, "01" /* TabBtnType01 */, "106" /* RoleRingType2 */],
                        ["27" /* Activity */, "45" /* RoleRingMain */, "01" /* TabBtnType01 */, "107" /* RoleRingType3 */],
                    ]; //红点
                }
                return RoleRingModel;
            }());
            activity.RoleRingModel = RoleRingModel;
            __reflect(RoleRingModel.prototype, "game.mod.activity.RoleRingModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_role_ring_data = msg.s2c_role_ring_data;
            var s2c_role_ring_update = msg.s2c_role_ring_update;
            var c2s_role_ring_receive = msg.c2s_role_ring_receive;
            var c2s_role_ring_foster = msg.c2s_role_ring_foster;
            var facade = base.facade;
            var RoleRingProxy = /** @class */ (function (_super) {
                __extends(RoleRingProxy, _super);
                function RoleRingProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(RoleRingProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                RoleRingProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.RoleRingModel();
                    this.onProto(s2c_role_ring_data, this.s2c_role_ring_data, this);
                    this.onProto(s2c_role_ring_update, this.s2c_role_ring_update, this);
                    facade.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.updateHintOfType1, this);
                };
                /**
                 * 领取奖励
                 * */
                RoleRingProxy.prototype.c2s_role_ring_receive = function (type, act_event) {
                    var msg = new c2s_role_ring_receive();
                    msg.type = type;
                    msg.act_event = act_event;
                    this.sendProto(msg);
                };
                /**
                 * 培育操作
                 * */
                RoleRingProxy.prototype.c2s_role_ring_foster = function (type, act_event) {
                    var msg = new c2s_role_ring_foster();
                    msg.type = type;
                    msg.act_event = act_event;
                    this.sendProto(msg);
                };
                RoleRingProxy.prototype.s2c_role_ring_data = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    this._model.infos = msg.list;
                    this.updateHint();
                    this.checkGodOpen();
                    this.sendNt("on_role_ring_update" /* ON_ROLE_RING_UPDATE */);
                };
                RoleRingProxy.prototype.s2c_role_ring_update = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.info) {
                        return;
                    }
                    var info = msg.info;
                    var pos = this.getInfoPos(info.type);
                    if (pos >= 0) {
                        for (var k in info) {
                            this._model.infos[pos][k] = info[k];
                        }
                    }
                    else {
                        this._model.infos.push(info);
                    }
                    this.updateHint();
                    this.checkGodOpen();
                    this.sendNt("on_role_ring_update" /* ON_ROLE_RING_UPDATE */);
                };
                RoleRingProxy.prototype.getInfoPos = function (type) {
                    if (!this._model.infos || !this._model.infos.length) {
                        return -1;
                    }
                    var len = this._model.infos.length;
                    for (var i = 0; i < len; ++i) {
                        var info = this._model.infos[i];
                        if (info.type == type) {
                            return i;
                        }
                    }
                    return -1;
                };
                RoleRingProxy.prototype.getInfo = function (type) {
                    var pos = this.getInfoPos(type);
                    if (pos >= 0) {
                        return this._model.infos[pos];
                    }
                    return null;
                };
                RoleRingProxy.prototype.getStatus = function (type) {
                    var info = this.getInfo(type);
                    return info && info.ring_reward ? info.ring_reward : 0 /* NotFinish */;
                };
                /**主角光环是否激活*/
                RoleRingProxy.prototype.isRoleRingAct = function (type) {
                    if (!type) {
                        type = 1 /* Type1 */;
                    }
                    var status = this.getStatus(type);
                    return status != 0 /* NotFinish */;
                };
                RoleRingProxy.prototype.getKillReward = function (type) {
                    var killRewardCfgStr = "halo_kill_reward" + type;
                    var killRewardCfg = game.GameConfig.getParamConfigById(killRewardCfgStr);
                    var killReward = killRewardCfg && killRewardCfg.value;
                    return killReward;
                };
                RoleRingProxy.prototype.getValue = function (type) {
                    if (type == 1 /* Type1 */) {
                        var info = this.getInfo(type);
                        return info && info.ring_value || 0;
                    }
                    //取背包数量
                    var killReward = this.getKillReward(type);
                    var killRewardIdx = killReward[0];
                    return mod.BagUtil.getPropCntByIdx(killRewardIdx);
                };
                RoleRingProxy.prototype.getIndex = function (type) {
                    if (type == 1 /* Type1 */) {
                        return 1; //主角光环没有阶段，默认1
                    }
                    var info = this.getInfo(type);
                    return info && info.yaoqi_index ? info.yaoqi_index : 1;
                };
                RoleRingProxy.prototype.getYaoqiStatus = function (type) {
                    var info = this.getInfo(type);
                    return info && info.yaoqi_reward ? info.yaoqi_reward : 0 /* NotFinish */;
                };
                RoleRingProxy.prototype.getYaoqiValue = function (type) {
                    var info = this.getInfo(type);
                    return info && info.yaoqi_value ? info.yaoqi_value : 0;
                };
                RoleRingProxy.prototype.updateHintOfType1 = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(["60" /* God */])) {
                        var hint = this.getTypeHint(1 /* Type1 */) || data.value;
                        var hintType = this.getHintType(1 /* Type1 */ - 1);
                        mod.HintMgr.setHint(hint, hintType);
                    }
                };
                RoleRingProxy.prototype.getTypeHint = function (type) {
                    var status = this.getStatus(type);
                    var canDraw = status == 1 /* Finish */;
                    if (canDraw) {
                        return true;
                    }
                    if (!this.isRoleRingAct(type)) {
                        return false; //未激活不提示红点
                    }
                    if (type == 1 /* Type1 */) {
                        var curVal = this.getValue(type);
                        return curVal > 0;
                    }
                    return this.getEggHint(type);
                };
                RoleRingProxy.prototype.getEggHint = function (type) {
                    var status = this.getYaoqiStatus(type);
                    var canDraw = status == 1 /* Finish */;
                    if (canDraw) {
                        return true;
                    }
                    var hasDraw = status == 2 /* Draw */;
                    if (!hasDraw) {
                        var index = this.getIndex(type);
                        var cfgName = type == 2 /* Type2 */ ? "yaodi.json" /* Yaodi */ : "yaoshen.json" /* Yaoshen */;
                        var yaodiCfg = game.getConfigByNameId(cfgName, index);
                        var cost = yaodiCfg.cost_item;
                        return mod.BagUtil.checkPropCnt(cost[0], cost[1]);
                    }
                    return false;
                };
                RoleRingProxy.prototype.getHintType = function (pos) {
                    return this._model.hints[pos];
                };
                /**更新红点*/
                RoleRingProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670146 /* RoleRing */)) {
                        return;
                    }
                    for (var i = 1 /* Type1 */; i <= 3 /* Type3 */; ++i) {
                        var type = i;
                        var hint = this.getTypeHint(type);
                        var hintType = this.getHintType(type - 1);
                        mod.HintMgr.setHint(hint, hintType);
                    }
                };
                RoleRingProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(1450100117 /* Yaoshoulingsui */) >= 0 || indexs.indexOf(1450100118 /* Moshoulingsui */) >= 0) {
                        this.updateHint();
                    }
                };
                RoleRingProxy.prototype.checkGodOpen = function () {
                    var bool = this.isRoleRingAct(1 /* Type1 */);
                    mod.BtnIconMgr.insTop().updateOpen(1041670200 /* Tiandilu */, bool);
                };
                return RoleRingProxy;
            }(game.ProxyBase));
            activity.RoleRingProxy = RoleRingProxy;
            __reflect(RoleRingProxy.prototype, "game.mod.activity.RoleRingProxy", ["game.mod.IRoleRingProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var RoleRingExp = /** @class */ (function (_super) {
                __extends(RoleRingExp, _super);
                function RoleRingExp() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                RoleRingExp.prototype.onRemoveFromStage = function () {
                    this.clearAllEft();
                    _super.prototype.onRemoveFromStage.call(this);
                };
                RoleRingExp.prototype.clearAllEft = function () {
                    this.clearEft1();
                    this.clearEft2();
                };
                RoleRingExp.prototype.clearEft1 = function () {
                    if (this._eftIdx1) {
                        this.removeEffect(this._eftIdx1);
                        this._eftIdx1 = null;
                    }
                };
                RoleRingExp.prototype.clearEft2 = function () {
                    if (this._eftIdx2) {
                        this.removeEffect(this._eftIdx2);
                        this._eftIdx2 = null;
                    }
                };
                RoleRingExp.prototype.addEft1 = function () {
                    if (!this._eftIdx1) {
                        this._eftIdx1 = this.addEftByParent("zhujueguanghuan_qiu" /* RoleRingBall */, this.group_eft1);
                    }
                };
                RoleRingExp.prototype.addEft2 = function (scale) {
                    this.clearEft2();
                    this._eftIdx2 = this.addEftByParent("zhujueguanghuan_shui" /* RoleRingWater */, this.group_eft2, 0, 0, -1, null, 0, scale);
                };
                RoleRingExp.prototype.updateShow = function (val, max) {
                    var rate = max > 0 ? (val / max) : 0; //40/100
                    var imgHeight = 116; //mask最大高度
                    var markHeight = 0; //mask高度
                    if (rate <= 0) {
                        //没经验的时候不显示特效
                        this.clearAllEft();
                        markHeight = imgHeight;
                    }
                    else {
                        //有经验的时候显示球特效
                        this.addEft1();
                        if (rate >= 1) {
                            //清除水面特效
                            this.clearEft2();
                        }
                        else {
                            //显示水特效
                            var scale = 0.6 + (0.4 - Math.abs(rate - 0.5)) / 0.4 * 0.4; //rate等于0.5时，scale取最大值1，rate小于0.1时，scale取最小值0.5
                            this.addEft2(scale);
                            var minY = 2; //限制位置
                            var maxY = imgHeight - minY; //限制位置
                            var posY = Math.max(imgHeight - rate * imgHeight, minY); //限制在12
                            posY = Math.min(posY, maxY); //限制在90
                            this.group_eft2.y = posY;
                            markHeight = (1 - rate) * imgHeight;
                        }
                    }
                    this.img_mark.height = markHeight;
                };
                return RoleRingExp;
            }(mod.BaseRenderer));
            activity.RoleRingExp = RoleRingExp;
            __reflect(RoleRingExp.prototype, "game.mod.activity.RoleRingExp");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var RoleRingRewardItem = /** @class */ (function (_super) {
                __extends(RoleRingRewardItem, _super);
                function RoleRingRewardItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                RoleRingRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                };
                RoleRingRewardItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data;
                    var index = cfg.index;
                    this.img_type.source = "rolering_reward_type" + index;
                    var weight = cfg.weight;
                    if (index <= 1) {
                        weight = weight / 2; //显示假的概率
                    }
                    var weightStr = (weight / 100) + "%";
                    var descStr = "(" + game.getLanById("gailv_tips" /* gailv_tips */) + "：" + game.TextUtil.addColor(weightStr, 2330156 /* GREEN */) + ")";
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    var rewards = [];
                    for (var _i = 0, _a = cfg.award; _i < _a.length; _i++) {
                        var i = _a[_i];
                        var reward = i.slice(0, 2);
                        rewards.push(reward);
                    }
                    this._rewardList.source = rewards;
                };
                return RoleRingRewardItem;
            }(mod.BaseRenderer));
            activity.RoleRingRewardItem = RoleRingRewardItem;
            __reflect(RoleRingRewardItem.prototype, "game.mod.activity.RoleRingRewardItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var RoleRingUpView = /** @class */ (function (_super) {
                __extends(RoleRingUpView, _super);
                function RoleRingUpView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.RoleRingUpSkin";
                    return _this;
                }
                return RoleRingUpView;
            }(eui.Component));
            activity.RoleRingUpView = RoleRingUpView;
            __reflect(RoleRingUpView.prototype, "game.mod.activity.RoleRingUpView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var RoleRingView = /** @class */ (function (_super) {
                __extends(RoleRingView, _super);
                function RoleRingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.RoleRingSkin";
                    return _this;
                }
                return RoleRingView;
            }(eui.Component));
            activity.RoleRingView = RoleRingView;
            __reflect(RoleRingView.prototype, "game.mod.activity.RoleRingView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PrerogativeWritItem = /** @class */ (function (_super) {
                __extends(PrerogativeWritItem, _super);
                function PrerogativeWritItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.PrerogativeWritItemSkin";
                    return _this;
                }
                PrerogativeWritItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                PrerogativeWritItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                PrerogativeWritItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_icon.source = "lingkuang_" + data.type;
                    this.redPoint.visible = !!data.hint;
                };
                return PrerogativeWritItem;
            }(mod.BaseListenerRenderer));
            activity.PrerogativeWritItem = PrerogativeWritItem;
            __reflect(PrerogativeWritItem.prototype, "game.mod.activity.PrerogativeWritItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PrerogativeWritView = /** @class */ (function (_super) {
                __extends(PrerogativeWritView, _super);
                function PrerogativeWritView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.PrerogativeWritSkin";
                    return _this;
                }
                return PrerogativeWritView;
            }(eui.Component));
            activity.PrerogativeWritView = PrerogativeWritView;
            __reflect(PrerogativeWritView.prototype, "game.mod.activity.PrerogativeWritView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var RoleRingMainMdr = /** @class */ (function (_super) {
                __extends(RoleRingMainMdr, _super);
                function RoleRingMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "rolering_tab",
                            mdr: activity.RoleRingMdr,
                            title: "role_ring_title1" /* role_ring_title1 */,
                            bg: "rolering_bg",
                            hintTypes: ["27" /* Activity */, "45" /* RoleRingMain */, "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "tequanlingtubiao",
                            mdr: activity.PrerogativeWritMdr,
                            title: "tql_tips1" /* tql_tips1 */,
                            bg: "prerogativewrit_bg",
                            openIdx: 1041670155 /* PrerogativeWrit */,
                            hintTypes: ["27" /* Activity */, "45" /* RoleRingMain */, "02" /* TabBtnType02 */]
                        }
                    ];
                    return _this;
                }
                return RoleRingMainMdr;
            }(mod.WndBaseMdr));
            activity.RoleRingMainMdr = RoleRingMainMdr;
            __reflect(RoleRingMainMdr.prototype, "game.mod.activity.RoleRingMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var ItemTapEvent = eui.ItemTapEvent;
            var TouchEvent = egret.TouchEvent;
            var RoleRingMdr = /** @class */ (function (_super) {
                __extends(RoleRingMdr, _super);
                function RoleRingMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.RoleRingView);
                    return _this;
                }
                RoleRingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(212 /* RoleRing */);
                    this._btnList = new ArrayCollection();
                    this._view.list_type.itemRenderer = mod.TabSecondItem;
                    this._view.list_type.dataProvider = this._btnList;
                };
                RoleRingMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.grp_exp, TouchEvent.TOUCH_TAP, this.onClickExp);
                    addEventListener(this._view.grp_egg, TouchEvent.TOUCH_TAP, this.onClickEgg);
                    addEventListener(this._view.btn_god, TouchEvent.TOUCH_TAP, this.onClickGod);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onClickType);
                    this.onNt("on_role_ring_update" /* ON_ROLE_RING_UPDATE */, this.onInfoUpdate, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                };
                RoleRingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initTypeList();
                    this.updateViewState();
                };
                RoleRingMdr.prototype.onHide = function () {
                    //this.removeEggTween();
                    this._lastSelType = 0;
                    this._eftStrEgg = null;
                    _super.prototype.onHide.call(this);
                };
                RoleRingMdr.prototype.onClickExp = function () {
                    if (!this._isAct) {
                        //未激活
                        game.PromptBox.getIns().show(game.getLanById("role_ring_tips3" /* role_ring_tips3 */));
                        return;
                    }
                    if (!this._canDrawExp) {
                        return;
                    }
                    var type = this._selType;
                    this._proxy.c2s_role_ring_receive(type, 1 /* Type1 */);
                };
                RoleRingMdr.prototype.onClickEgg = function () {
                    var type = this._selType;
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "46" /* RoleRingUp */, type);
                };
                RoleRingMdr.prototype.onClickGod = function () {
                    mod.ViewMgr.getIns().showView("60" /* God */, "01" /* GodMain */);
                };
                RoleRingMdr.prototype.onClickReward = function () {
                    var type = this._selType;
                    if (this._canDraw) {
                        this._proxy.c2s_role_ring_receive(type, 2 /* Type2 */);
                        return;
                    }
                    mod.ViewMgr.getIns().openCommonRechargeView();
                };
                RoleRingMdr.prototype.onClickType = function (e) {
                    var type = e.itemIndex + 1;
                    if (type == this._selType) {
                        return;
                    }
                    this.setSelType(type);
                    this.typeUpdateInfo();
                };
                RoleRingMdr.prototype.onInfoUpdate = function () {
                    this.updateViewState();
                };
                RoleRingMdr.prototype.initTypeList = function () {
                    var datas = [];
                    for (var i = 1 /* Type1 */; i <= 3 /* Type3 */; ++i) {
                        var type_3 = i;
                        var icon = "rolering_" + type_3;
                        var nameIcon = "rolering_name_" + type_3;
                        var hintType = this._proxy.getHintType(i - 1);
                        var hint = mod.HintMgr.getHint(hintType);
                        datas.push({ icon: icon, nameIcon: nameIcon, showHint: hint });
                    }
                    this._btnList.source = datas;
                    var type = 1 /* Type1 */;
                    var selType = _super.prototype.decodeShowArgs.call(this, true);
                    if (selType != null) {
                        type = selType;
                    }
                    this.setSelType(type);
                    this._view.list_type.selectedIndex = this._selType - 1;
                };
                RoleRingMdr.prototype.setSelType = function (type) {
                    this._selType = type;
                    //this._proxy.selType = this._selType;
                    var titleStr = "role_ring_title" + type;
                    this.sendNt("update_wnd_base_mdr_title" /* UPDATE_WND_BASE_MDR_TITLE */, titleStr);
                    mod.ViewMgr.getIns().lastData = ["01" /* TabBtnType01 */, this._selType + ""];
                };
                RoleRingMdr.prototype.updateViewState = function () {
                    this._isAct = this._proxy.isRoleRingAct();
                    //未激活
                    this._view.currentState = !this._isAct ? "1" : "2";
                    this._view.list_type.visible = this._isAct;
                    this.typeUpdateInfo();
                };
                RoleRingMdr.prototype.typeUpdateInfo = function () {
                    this.updateTypeShow();
                    this.updateShow();
                    this.updateModel();
                    this.updateReward();
                };
                RoleRingMdr.prototype.updateTypeShow = function () {
                    var type = this._selType;
                    if (type == this._lastSelType) {
                        return;
                    }
                    this._lastSelType = type;
                    this._view.img_num.source = "rolering_num" + type;
                    this._view.scr.stopAnimation();
                    this._view.scr.viewport.scrollV = 0;
                    var txtStr = "rolering_txt" + type;
                    this._view.img_txt.source = game.ResUtil.getUiPng(txtStr);
                };
                RoleRingMdr.prototype.updateShow = function () {
                    var type = this._selType;
                    var killReward = this._proxy.getKillReward(type);
                    var killRewardIdx = killReward[0];
                    var killRewardCnt = killReward[1];
                    this._view.item.initIcon(killRewardIdx);
                    var curVal = this._proxy.getValue(type);
                    this._canDrawExp = curVal > 0;
                    var maxCfgStr = "halo_max_value" + type;
                    var maxCfg = game.GameConfig.getParamConfigById(maxCfgStr);
                    var maxVal = maxCfg && maxCfg.value;
                    this._view.item.lab_cost.text = game.StringUtil.getHurtNumStr(curVal) + "/" + game.StringUtil.getHurtNumStr(maxVal);
                    this._view.item.lab_cost.textColor = 3496307 /* DEFAULT */;
                    var showExp = type == 1 /* Type1 */;
                    this._view.grp_exp.visible = showExp;
                    this._view.grp_egg.visible = !showExp;
                    //this.removeEggTween();
                    if (showExp) {
                        var privilegeValue = mod.RoleUtil.getPrivilegeValue("main_add_maxexp" /* main_add_maxexp */); //万分比
                        maxVal = maxVal * (1 + privilegeValue / 10000);
                        this._view.bar.updateShow(curVal, maxVal);
                        var barVal = Math.round(curVal / maxVal * 100);
                        barVal = barVal == 0 && curVal > 0 ? 1 : barVal; //0%有进度时客户端特殊处理下：1%
                        this._view.bar.labelDisplay.text = barVal + "%";
                        //this._view.redPoint1.visible = this._canDrawExp;
                    }
                    else {
                        //this._view.img_egg.source = "rolering_egg" + type;
                        this._view.img_type.source = "rolering_type" + type;
                        // this._view.img_egg.y = 0;
                        // Tween.get(this._view.img_egg, {loop: true})
                        //     .to({y: 30}, 800)
                        //     .to({y: 0}, 800);
                        var uiEftSrc = type == 2 /* Type2 */ ? "zhujueguanghuan1" /* RoleRing1 */ : "zhujueguanghuan2" /* RoleRing2 */;
                        if (this._eftStrEgg != uiEftSrc) {
                            this._eftStrEgg = uiEftSrc;
                            this.removeEffectEgg();
                            this._eftIdEgg = this.addEftByParent(uiEftSrc, this._view.grp_eft);
                        }
                        this._view.redPoint2.visible = this._proxy.getEggHint(type);
                    }
                    var addStr = "role_ring_add_tips" + type;
                    this._view.lab_add.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById(addStr), [game.StringUtil.getHurtNumStr(killRewardCnt)]));
                };
                RoleRingMdr.prototype.updateModel = function () {
                    var type = this._selType;
                    var index = this._proxy.getIndex(type);
                    var bgStr = "rolering_bg" + type + "_" + index;
                    this._view.img_bg.source = game.ResUtil.getUiJpg(bgStr);
                    var surfaceCfgStr = "halo_model" + type;
                    var cfg = game.GameConfig.getParamConfigById(surfaceCfgStr);
                    var surfaceInfo = cfg && cfg.value;
                    var surfaceIndex = surfaceInfo[index - 1];
                    var surfaceStr = "rolering_surface" + type + "_" + index;
                    this._view.img_surface.source = surfaceStr;
                    var surfaceCfg = game.getConfigById(surfaceIndex);
                    var descStr = "role_ring_surface_tips" + type;
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById(descStr), [surfaceCfg.name]), true);
                };
                // private removeEggTween(): void {
                //     Tween.remove(this._view.img_egg);
                // }
                RoleRingMdr.prototype.removeEffectEgg = function () {
                    if (this._eftIdEgg) {
                        this.removeEffect(this._eftIdEgg);
                        this._eftIdEgg = null;
                    }
                };
                RoleRingMdr.prototype.updateReward = function () {
                    var type = this._selType;
                    var status = this._proxy.getStatus(type);
                    var canDraw = status == 1 /* Finish */;
                    this._canDraw = canDraw;
                    var hasDraw = status == 2 /* Draw */;
                    if (status == 0 /* NotFinish */) {
                        //未激活
                        this._view.btn_god.visible = false;
                        this._view.btn_reward.img.source = "qianwang";
                        var actCfgStr = "halo_money" + type;
                        var cfg = game.GameConfig.getParamConfigById(actCfgStr);
                        var maxVal = cfg && cfg.value;
                        var curVal = game.RoleVo.ins.charge_rmb;
                        var actStr = game.StringUtil.substitute(game.getLanById("role_ring_tips1" /* role_ring_tips1 */), [maxVal]);
                        actStr += game.TextUtil.addColor("(" + curVal + "/" + maxVal + ")", curVal >= maxVal ? 2330156 /* GREEN */ : 16719376 /* RED */);
                        this._view.lab_act.textFlow = game.TextUtil.parseHtml(actStr);
                        this._view.redPoint1.visible = false; //未激活不显示红点
                    }
                    else {
                        //已激活
                        this._view.btn_god.visible = type == 1 /* Type1 */;
                        this._view.lab_act.text = "";
                        if (canDraw) {
                            //可领取
                            this._view.btn_reward.img.source = "lingqujinrijiangli";
                        }
                        this._view.redPoint1.visible = this._canDrawExp; //激活后才显示红点
                    }
                    this._view.btn_reward.redPoint.visible = canDraw;
                    this._view.btn_reward.visible = !hasDraw;
                    this._view.img_get.visible = hasDraw;
                    if (this._view.btn_god.visible) {
                        this._view.btn_god.setHint(mod.HintMgr.getHint(["60" /* God */]));
                    }
                    else {
                        this._view.btn_god.setHint(false);
                    }
                };
                /** 通用红点事件监听 */
                RoleRingMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    var list = this._btnList.source;
                    var len = list ? list.length : 0;
                    for (var i = 0; i < len; i++) {
                        var btnData = list[i];
                        var hintType = this._proxy.getHintType(i);
                        var type = mod.HintMgr.getType(hintType); /**转化为红点类型*/
                        if (type != data.node) {
                            continue;
                        }
                        if (!!btnData.showHint != data.value) { //过滤undefined!=false
                            btnData.showHint = data.value;
                            this._btnList.itemUpdated(btnData);
                        }
                        break; /**找到对应红点后则break，减少循环*/
                    }
                };
                return RoleRingMdr;
            }(game.EffectMdrBase));
            activity.RoleRingMdr = RoleRingMdr;
            __reflect(RoleRingMdr.prototype, "game.mod.activity.RoleRingMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var RoleRingRewardMdr = /** @class */ (function (_super) {
                __extends(RoleRingRewardMdr, _super);
                function RoleRingRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.BasePreviewRewardView);
                    _this.isEasyHide = true;
                    return _this;
                }
                RoleRingRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.RoleRingRewardItem;
                    this._view.list_item.dataProvider = this._itemList;
                    this._proxy = this.retProxy(212 /* RoleRing */);
                };
                RoleRingRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                RoleRingRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateItemList();
                };
                RoleRingRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                RoleRingRewardMdr.prototype.updateItemList = function () {
                    var type = this._showArgs;
                    var cfgName = type == 2 /* Type2 */ ? "yaodi_random.json" /* YaodiRandom */ : "yaoshen_random.json" /* YaoshenRandom */;
                    var cfgList = game.getConfigListByName(cfgName);
                    var yaodiCfgName = type == 2 /* Type2 */ ? "yaodi.json" /* Yaodi */ : "yaoshen.json" /* Yaoshen */;
                    var yaodiCfgList = game.getConfigListByName(yaodiCfgName);
                    var award = [];
                    for (var _i = 0, yaodiCfgList_1 = yaodiCfgList; _i < yaodiCfgList_1.length; _i++) {
                        var i = yaodiCfgList_1[_i];
                        award.push(i.reward);
                    }
                    var cfg = {
                        index: 0,
                        weight: cfgList[0].weight,
                        award: award,
                        name: game.getLanById("role_ring_tips9" /* role_ring_tips9 */)
                    };
                    var items = [cfg].concat(cfgList);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(items);
                    }
                    else {
                        this._itemList.source = items;
                    }
                };
                return RoleRingRewardMdr;
            }(game.MdrBase));
            activity.RoleRingRewardMdr = RoleRingRewardMdr;
            __reflect(RoleRingRewardMdr.prototype, "game.mod.activity.RoleRingRewardMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var RoleRingUpMdr = /** @class */ (function (_super) {
                __extends(RoleRingUpMdr, _super);
                function RoleRingUpMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.RoleRingUpView);
                    _this.isEasyHide = true;
                    return _this;
                }
                RoleRingUpMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(212 /* RoleRing */);
                };
                RoleRingUpMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_up, TouchEvent.TOUCH_TAP, this.onClickUp);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    this.onNt("on_role_ring_update" /* ON_ROLE_RING_UPDATE */, this.onInfoUpdate, this);
                };
                RoleRingUpMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateShow();
                    this.updateModel();
                    this.updateInfo();
                };
                RoleRingUpMdr.prototype.onHide = function () {
                    this._effId = 0;
                    this._lastIndex = 0;
                    _super.prototype.onHide.call(this);
                };
                RoleRingUpMdr.prototype.onClickUp = function () {
                    var type = this._showArgs;
                    if (!this._proxy.isRoleRingAct(type)) {
                        game.PromptBox.getIns().show(game.getLanById("role_ring_tips10" /* role_ring_tips10 */));
                        return; //未激活不给培养
                    }
                    if (this._canDraw) {
                        this._proxy.c2s_role_ring_foster(type, 2 /* Type2 */);
                        return;
                    }
                    if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    this._proxy.c2s_role_ring_foster(type, 1 /* Type1 */);
                };
                RoleRingUpMdr.prototype.onClickReward = function () {
                    var type = this._showArgs;
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "47" /* RoleRingReward */, type);
                };
                RoleRingUpMdr.prototype.onInfoUpdate = function () {
                    this.updateModel();
                    this.updateInfo();
                };
                RoleRingUpMdr.prototype.updateShow = function () {
                    var type = this._showArgs;
                    var titleStr = type == 2 /* Type2 */ ? "role_ring_tips4" /* role_ring_tips4 */ : "role_ring_tips5" /* role_ring_tips5 */;
                    this._view.secondPop.updateTitleStr(game.getLanById(titleStr));
                    var chargeCfgStr = "halo_everyday_money" + type;
                    var chargeCfg = game.GameConfig.getParamConfigById(chargeCfgStr);
                    var chargeInfo = chargeCfg && chargeCfg.value;
                    var idx = chargeInfo[0];
                    var cnt = chargeInfo[1];
                    var maxVal = chargeInfo[2];
                    var actCfgStr = "halo_money" + type;
                    var cfg = game.GameConfig.getParamConfigById(actCfgStr);
                    var actVal = cfg && cfg.value;
                    var totalCharge = game.RoleVo.ins.charge_rmb;
                    var dayCharge = game.RoleVo.ins.day_charge_rmb;
                    var curVal = Math.max(Math.min(totalCharge - actVal, dayCharge), 0); //math.min（累充金额-激活金额，今日充值金额）
                    var moneyStr = game.TextUtil.addColor("(" + curVal + "/" + maxVal + ")", curVal >= maxVal ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    var chargeStr = game.StringUtil.substitute(game.getLanById("role_ring_tips7" /* role_ring_tips7 */), [moneyStr]);
                    var propCfg = game.GameConfig.getPropConfigById(idx);
                    var propName = game.TextUtil.addColor(propCfg.name, game.ColorUtil.getColorByQuality1(propCfg.quality));
                    chargeStr += "【" + propName + "】x" + cnt;
                    this._view.lab_charge.textFlow = game.TextUtil.parseHtml(chargeStr);
                };
                RoleRingUpMdr.prototype.updateModel = function () {
                    var type = this._showArgs;
                    var index = this._proxy.getIndex(type);
                    var surfaceCfgStr = "halo_model" + type;
                    var cfg = game.GameConfig.getParamConfigById(surfaceCfgStr);
                    var surfaceInfo = cfg && cfg.value;
                    var surfaceIndex = surfaceInfo[index - 1];
                    if (surfaceIndex == this._lastIndex) {
                        return;
                    }
                    this._lastIndex = surfaceIndex;
                    if (this._effId) {
                        this.removeEffect(this._effId);
                    }
                    this._effId = this.addAnimate(surfaceIndex, this._view.grp_eff);
                };
                RoleRingUpMdr.prototype.updateInfo = function () {
                    var type = this._showArgs;
                    var index = this._proxy.getIndex(type);
                    var cfgName = type == 2 /* Type2 */ ? "yaodi.json" /* Yaodi */ : "yaoshen.json" /* Yaoshen */;
                    var yaodiCfg = game.getConfigByNameId(cfgName, index);
                    var maxVal = yaodiCfg.up_exp;
                    var curVal = this._proxy.getYaoqiValue(type);
                    var addVal = yaodiCfg.value;
                    this._cost = yaodiCfg.cost_item;
                    var addStr = game.TextUtil.addColor("+" + addVal, 8585074 /* GREEN */);
                    var descStr = game.StringUtil.substitute(game.getLanById("role_ring_tips6" /* role_ring_tips6 */), [addStr]);
                    var surfaceCfg = game.getConfigById(this._lastIndex);
                    descStr += surfaceCfg.name;
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    this._view.bar.labelDisplay.visible = false;
                    this._view.bar.show(curVal, maxVal);
                    this._view.lab_val.text = game.getLanById("role_ring_tips8" /* role_ring_tips8 */) + "：" + curVal + "/" + maxVal;
                    var status = this._proxy.getYaoqiStatus(type);
                    var canDraw = status == 1 /* Finish */;
                    this._canDraw = canDraw;
                    var hasDraw = status == 2 /* Draw */;
                    this._view.currentState = hasDraw ? "2" : "1";
                    if (canDraw) {
                        this._view.btn_up.icon = "lingchi_lingqu";
                    }
                    else if (!hasDraw) {
                        this._view.btn_up.icon = "rolering_up";
                    }
                    this._view.btn_up.redPoint.visible = this._proxy.getEggHint(type);
                };
                return RoleRingUpMdr;
            }(game.EffectMdrBase));
            activity.RoleRingUpMdr = RoleRingUpMdr;
            __reflect(RoleRingUpMdr.prototype, "game.mod.activity.RoleRingUpMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var PrerogativeWritMdr = /** @class */ (function (_super) {
                __extends(PrerogativeWritMdr, _super);
                function PrerogativeWritMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.PrerogativeWritView);
                    _this._selIdx = 0;
                    _this._effIdx = 0;
                    return _this;
                }
                PrerogativeWritMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._view.gr_eff.touchEnabled = false;
                    this._proxy = this.retProxy(218 /* PrerogativeWrit */);
                    this._view.list_btn.itemRenderer = activity.PrerogativeWritItem;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listReward = new eui.ArrayCollection();
                };
                PrerogativeWritMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickListBtn, this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_prerogative_writ_info" /* ON_UPDATE_PREROGATIVE_WRIT_INFO */, this.onUpdateView, this);
                };
                PrerogativeWritMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var selIdx = 0;
                    var selType = _super.prototype.decodeShowArgs.call(this, true);
                    if (selType != null) {
                        selIdx = selType;
                    }
                    this._selIdx = selIdx;
                    this.updateBtnList();
                    this.updateView();
                    this._view.list_btn.selectedIndex = this._selIdx;
                    //添加特效
                    this.addEftByParentScale(this._view.btn_do.group_eft);
                };
                PrerogativeWritMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                };
                PrerogativeWritMdr.prototype.onUpdateView = function () {
                    this.updateBtnList(true);
                    this.updateView();
                };
                PrerogativeWritMdr.prototype.updateBtnList = function (autoSel) {
                    var list = [];
                    var selIdx;
                    for (var i = 1; i <= 3; i++) {
                        var hint = this._proxy.getHint(i);
                        if (hint && selIdx == undefined) {
                            selIdx = i - 1;
                        }
                        list.push({
                            type: i,
                            hint: hint
                        });
                    }
                    this._listBtn.replaceAll(list);
                    //领完之后，如果下一个令牌也可以领取奖励，则会自动跳到下一个令牌。
                    if (autoSel) {
                        if (selIdx == null) {
                            selIdx = this._selIdx;
                        }
                        this._view.list_btn.selectedIndex = this._selIdx = selIdx;
                    }
                };
                PrerogativeWritMdr.prototype.updateView = function () {
                    var type = this._selIdx + 1;
                    this._view.img_wenan.source = "wenan_" + type;
                    this._listReward.replaceAll(this._proxy.getRewardShow(type).concat());
                    var isBought = this._proxy.isPayBought(type);
                    this._view.img_desc.source = isBought ? 'meitiankelingqu' : 'goumaikehuode';
                    this._view.lb_day.text = isBought ? game.StringUtil.substitute(game.getLanById("tql_tips4" /* tql_tips4 */), [this._proxy.getReceivedDay(type)]) : game.getLanById("tql_tips5" /* tql_tips5 */);
                    var isReceived = this._proxy.isReceived(type);
                    this._view.img_received.visible = isReceived;
                    this._view.btn_do.visible = !isReceived;
                    this._view.btnTipsBase.visible = false;
                    if (!isReceived) {
                        if (!isBought) {
                            var rmb = mod.PayUtil.getRmbValue(this._proxy.getProductId(type));
                            this._view.btn_do.setFontPrice(rmb);
                            var nextVip = mod.VipUtil.getNextVipByPay(rmb);
                            var curVip = mod.VipUtil.getShowVipLv() || 0;
                            if (nextVip > curVip) {
                                this._view.btnTipsBase.updateShow(game.getLanById("zhishengvip" /* zhishengvip */) + nextVip);
                                this._view.btnTipsBase.visible = true;
                            }
                        }
                        else {
                            this._view.btn_do.clearFontPrice();
                            this._view.btn_do.setImage('common_get', true);
                        }
                        this._view.btn_do.setHint(this._proxy.getHint(type));
                    }
                    this.updateModel();
                };
                PrerogativeWritMdr.prototype.updateModel = function () {
                    var productId = this._proxy.getProductId(this._selIdx + 1);
                    var rewards = mod.PayUtil.getRewards(productId);
                    if (!rewards || !rewards.length) {
                        return;
                    }
                    var item = rewards[0];
                    var cfg = game.GameConfig.getPropConfigById(item[0]);
                    var surfaceId = cfg && cfg.param1 ? cfg.param1[0][0] : 0;
                    if (surfaceId) {
                        var surfaceCfg = game.getConfigById(surfaceId);
                        if (surfaceCfg) {
                            this._view.nameItem.updateShow(surfaceCfg.name, surfaceCfg.quality);
                        }
                    }
                    if (cfg.param1) {
                        this.removeEffect(this._effIdx);
                        this._effIdx = this.addAnimate(cfg.param1[0][0], this._view.gr_eff);
                    }
                };
                PrerogativeWritMdr.prototype.onClickListBtn = function (e) {
                    var itemIndex = e.itemIndex;
                    if (itemIndex == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIndex;
                    this.updateView();
                };
                PrerogativeWritMdr.prototype.onClick = function () {
                    var type = this._selIdx + 1;
                    var isBought = this._proxy.isPayBought(type);
                    var productId = this._proxy.getProductId(type);
                    if (!isBought) {
                        mod.PayUtil.pay(productId);
                        return;
                    }
                    var info = this._proxy.getInfo(type);
                    if (info && info.status == 1) {
                        this._proxy.c2s_prerogative_writ_get(type);
                    }
                };
                return PrerogativeWritMdr;
            }(game.EffectMdrBase));
            activity.PrerogativeWritMdr = PrerogativeWritMdr;
            __reflect(PrerogativeWritMdr.prototype, "game.mod.activity.PrerogativeWritMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SignGiftItem = /** @class */ (function (_super) {
                __extends(SignGiftItem, _super);
                function SignGiftItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.signgift.SignGiftItemSkin";
                    return _this;
                }
                SignGiftItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 208 /* SignGift */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                SignGiftItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                SignGiftItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data || !data.cfg) {
                        return;
                    }
                    var prop = game.PropData.create(data.cfg.reward[0]);
                    this.icon.setData(prop, 3 /* NotTips */);
                    this.lb_num.text = data.cfg.reward[1] + '';
                    this.gr_num.visible = data.cfg.reward[1] > 1;
                    var signed = data.state == 2;
                    this.img_done.visible = signed;
                    this.img_gray.visible = signed;
                    this.icon.setHint(data.state == 1);
                };
                SignGiftItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (data.state == 1) {
                        this._proxy.c2s_sign(data.cfg.index);
                    }
                    else {
                        mod.ViewMgr.getIns().showPropTips(data.cfg.reward[0]);
                    }
                };
                SignGiftItem.prototype.updateData = function (ary) {
                    if (!ary || !ary.length) {
                        return;
                    }
                    this.icon.data = ary[0];
                    this.img_gray.visible = this.img_done.visible = false;
                    this.gr_num.visible = ary[1] > 1;
                    this.lb_num.text = ary[1] + '';
                };
                return SignGiftItem;
            }(mod.BaseListenerRenderer));
            activity.SignGiftItem = SignGiftItem;
            __reflect(SignGiftItem.prototype, "game.mod.activity.SignGiftItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SignGiftMdr = /** @class */ (function (_super) {
                __extends(SignGiftMdr, _super);
                function SignGiftMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.SignGiftView);
                    _this.isEasyHide = true;
                    return _this;
                }
                SignGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(208 /* SignGift */);
                    this._view.list.itemRenderer = activity.SignGiftItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                SignGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    this.onNt("on_update_sign_gift_info" /* ON_UPDATE_SIGN_GIFT_INFO */, this.updateView, this);
                };
                SignGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                SignGiftMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                SignGiftMdr.prototype.updateView = function () {
                    var model = this._proxy.model;
                    this._view.lb_signDay.textFlow = game.TextUtil.parseHtml("\u5DF2\u7B7E\u5230 "
                        + game.TextUtil.addColor(model.count + '天', 0x00ff00)); //策划需求0x0f0
                    var cfgs = game.getConfigListByName("daily_sign.json" /* SignGift */);
                    var list = [];
                    for (var _i = 0, cfgs_6 = cfgs; _i < cfgs_6.length; _i++) {
                        var cfg = cfgs_6[_i];
                        var signed = this._proxy.isSigned(cfg.index); //已签到
                        var canSign = model.index > 0 && cfg.index == model.index; //可签到领奖
                        var state = signed ? 2 : (canSign ? 1 : 0);
                        list.push({
                            cfg: cfg,
                            state: state
                        });
                    }
                    this._listData.replaceAll(list);
                    this.updateBigReward();
                };
                SignGiftMdr.prototype.updateBigReward = function () {
                    var cnt = (this._proxy.model.count % 20) + 1;
                    var bigIdx = Math.ceil(cnt / 4) * 4; //一组4个，第4个为大奖
                    var cfg = game.getConfigByNameId("daily_sign.json" /* SignGift */, bigIdx);
                    if (cfg) {
                        this._view.icon_bigReward.updateData(cfg.reward);
                    }
                };
                return SignGiftMdr;
            }(game.MdrBase));
            activity.SignGiftMdr = SignGiftMdr;
            __reflect(SignGiftMdr.prototype, "game.mod.activity.SignGiftMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SignGiftModel = /** @class */ (function () {
                function SignGiftModel() {
                    /**签到的索引集合*/
                    this.list = [];
                    /**当前可签到的索引*/
                    this.index = 0;
                    /**已总共签到的天数*/
                    this.count = 0;
                }
                return SignGiftModel;
            }());
            activity.SignGiftModel = SignGiftModel;
            __reflect(SignGiftModel.prototype, "game.mod.activity.SignGiftModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_sign = msg.c2s_sign;
            var s2c_sign_info = msg.s2c_sign_info;
            /**
             * @description 签到有礼系统
             */
            var SignGiftProxy = /** @class */ (function (_super) {
                __extends(SignGiftProxy, _super);
                function SignGiftProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(SignGiftProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                SignGiftProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.SignGiftModel();
                    this.onProto(s2c_sign_info, this.s2c_sign_info, this);
                };
                /** 签到 */
                SignGiftProxy.prototype.c2s_sign = function (index) {
                    var msg = new c2s_sign();
                    msg.index = index;
                    this.sendProto(msg);
                };
                /** 签到信息 */
                SignGiftProxy.prototype.s2c_sign_info = function (n) {
                    var msg = n.body;
                    //签到完当前所有奖励，跨天后重置签到
                    if (msg.index == 1) {
                        this._model.list = [];
                    }
                    this._model.list = msg.list != null ? msg.list : [];
                    if (msg.index != null) {
                        this._model.index = msg.index;
                    }
                    if (msg.count != null) {
                        this._model.count = msg.count;
                    }
                    this.updateHint();
                    this.sendNt("on_update_sign_gift_info" /* ON_UPDATE_SIGN_GIFT_INFO */);
                };
                /**是否已签到*/
                SignGiftProxy.prototype.isSigned = function (index) {
                    return this._model.list.indexOf(index) > -1;
                };
                SignGiftProxy.prototype.getHint = function () {
                    return this._model.index > 0;
                };
                SignGiftProxy.prototype.updateHint = function () {
                    mod.HintMgr.setHint(this.getHint(), ["27" /* Activity */, "39" /* SignGift */]);
                };
                return SignGiftProxy;
            }(game.ProxyBase));
            activity.SignGiftProxy = SignGiftProxy;
            __reflect(SignGiftProxy.prototype, "game.mod.activity.SignGiftProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SignGiftView = /** @class */ (function (_super) {
                __extends(SignGiftView, _super);
                function SignGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.signgift.SignGiftSkin";
                    return _this;
                }
                return SignGiftView;
            }(eui.Component));
            activity.SignGiftView = SignGiftView;
            __reflect(SignGiftView.prototype, "game.mod.activity.SignGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuModel = /** @class */ (function () {
                function FuchenlinghuModel() {
                    var _a;
                    //稀有奖励池
                    this.extraProps = {};
                    //是否勾选百连召唤
                    this.isHundred = false;
                    //浮沉灵壶，幻境赠礼，幻境宝藏
                    this.hintPath = (_a = {},
                        _a["03" /* Fuchenlinghu */] = ["27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */],
                        _a["04" /* Huanjingzengli */] = ["27" /* Activity */, "31" /* SummonMain */, "04" /* Huanjingzengli */],
                        _a["05" /* Huanjingbaozang */] = ["27" /* Activity */, "31" /* SummonMain */, "05" /* Huanjingbaozang */],
                        _a);
                    //幻境累充
                    this.leichongHintPath = ["27" /* Activity */, "57" /* WonderfulAct */, "09" /* Btn9 */];
                    //幻境礼包
                    this.libaoHintPath = ["27" /* Activity */, "57" /* WonderfulAct */, "10" /* Btn10 */];
                }
                return FuchenlinghuModel;
            }());
            activity.FuchenlinghuModel = FuchenlinghuModel;
            __reflect(FuchenlinghuModel.prototype, "game.mod.activity.FuchenlinghuModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_linghu_oper = msg.c2s_linghu_oper;
            var s2c_linghu_info = msg.s2c_linghu_info;
            var Handler = base.Handler;
            /**
             * @description 浮尘灵壶系统
             */
            var FuchenlinghuProxy = /** @class */ (function (_super) {
                __extends(FuchenlinghuProxy, _super);
                function FuchenlinghuProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FuchenlinghuProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.FuchenlinghuModel();
                    this.onProto(s2c_linghu_info, this.s2c_linghu_info, this);
                };
                //召唤特效界面点击召唤
                FuchenlinghuProxy.prototype.getOperHandler = function (cnt) {
                    var countType = cnt == 1 /* Once */ ? 1 : 2;
                    return Handler.alloc(this, this.c2s_linghu_oper, [1 /* Oper1 */, countType]);
                };
                //召唤特效界面点击召唤
                FuchenlinghuProxy.prototype.getOperHandlerSpecial = function () {
                    return Handler.alloc(this, this.c2s_linghu_oper, [4 /* Oper4 */]);
                };
                /**
                 * @param oper 1召唤（1单抽 2十连 3百连） 2切换卡池（类型） 3许愿（索引） 4特殊卡池召唤 5赠礼奖励 6宝藏奖励 7累充奖励 8礼包
                 * @param param
                 * @param ex_param oper==6使用 1领取免费档 2领取付费
                 */
                FuchenlinghuProxy.prototype.c2s_linghu_oper = function (oper, param, ex_param) {
                    var msg = new c2s_linghu_oper();
                    msg.oper = oper;
                    if (param) {
                        msg.param = param;
                    }
                    if (ex_param) {
                        msg.ex_param = ex_param;
                    }
                    this.sendProto(msg);
                };
                FuchenlinghuProxy.prototype.s2c_linghu_info = function (n) {
                    var msg = n.body;
                    this._model.up = msg.up || 0;
                    this._model.type = msg.type || 1 /* Sea1 */;
                    this._model.count = msg.count || 0;
                    this._model.forever_count = msg.forever_count || 0;
                    this._model.total_count = msg.total_count || 0;
                    this._model.zengli_data = msg.zengli_data || [];
                    this._model.free_baozang_data = msg.free_baozang_data || [];
                    this._model.buy_baozang_data = msg.buy_baozang_data || [];
                    this._model.leichong_data = msg.leichong_data || [];
                    this._model.gift_data = msg.gift_data || [];
                    this.updateHint();
                    this.sendNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */);
                };
                Object.defineProperty(FuchenlinghuProxy.prototype, "isHundred", {
                    get: function () {
                        return this._model.isHundred;
                    },
                    /**============================= 协议end =============================*/
                    //百连召唤
                    set: function (isSel) {
                        this._model.isHundred = isSel;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FuchenlinghuProxy.prototype, "type", {
                    //默认类型1，或上一次选中类型
                    get: function () {
                        return this._model.type || 1 /* Sea1 */;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FuchenlinghuProxy.prototype, "up", {
                    //当前up的index，参数表第几个
                    get: function () {
                        return this._model.up || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FuchenlinghuProxy.prototype, "total_count", {
                    //周期累计召唤次数
                    get: function () {
                        return this._model.total_count || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                //界面展示道具
                FuchenlinghuProxy.prototype.getShowProps = function (type) {
                    var id = "linghu" + type + "_show";
                    var cfg = game.GameConfig.getParamConfigById(id);
                    return cfg ? cfg.value : [];
                };
                //up道具
                FuchenlinghuProxy.prototype.getUpProps = function (type) {
                    var id = "linghu" + type + "_up";
                    var cfg = game.GameConfig.getParamConfigById(id);
                    return cfg ? cfg.value : [];
                };
                //仙灵稀有奖励池道具
                FuchenlinghuProxy.prototype.getExtraProps = function (seaType) {
                    if (this._model.extraProps[seaType]) {
                        return this._model.extraProps[seaType];
                    }
                    var list = [];
                    var cfgObj = game.getConfigByNameId("linghu_extra_box.json" /* LinghuExtraBox */, seaType);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (cfg && cfg.items) {
                            list.push(cfg.items);
                        }
                    }
                    this._model.extraProps[seaType] = list;
                    return list;
                };
                //召唤消耗道具id列表
                FuchenlinghuProxy.prototype.getCostIds = function () {
                    var list = [];
                    var zhaohuanCost = this.getCost(1 /* Once */); //召唤消耗
                    var xianlingCost = this.getCostSpecial(); //仙灵消耗
                    if (zhaohuanCost && list.indexOf(zhaohuanCost[0]) < 0) {
                        list.push(zhaohuanCost[0]);
                    }
                    if (xianlingCost && list.indexOf(xianlingCost[0]) < 0) {
                        list.push(xianlingCost[0]);
                    }
                    return list;
                };
                //召唤消耗
                FuchenlinghuProxy.prototype.getCost = function (type) {
                    var cfg = game.GameConfig.getParamConfigById('linghu_cost');
                    if (!cfg) {
                        return [];
                    }
                    if (type == 1 /* Once */) {
                        return cfg.value[0];
                    }
                    else if (type == 2 /* Ten */) {
                        return cfg.value[1];
                    }
                    else {
                        var val = cfg.value[1].concat();
                        return [val[0], val[1] * 10];
                    }
                };
                //特殊召唤消耗
                FuchenlinghuProxy.prototype.getCostSpecial = function () {
                    var cfg = game.GameConfig.getParamConfigById('linghu_extra_cost');
                    return cfg ? cfg.value : [];
                };
                //开启百连召唤所需累计抽奖次数
                FuchenlinghuProxy.prototype.getShowHundredCost = function () {
                    var cfg = game.GameConfig.getParamConfigById('linghu_Hundred_Summons');
                    return cfg && cfg.value || 300;
                };
                //是否展示百连checkbox
                FuchenlinghuProxy.prototype.isShowHundredCheckBox = function (type) {
                    if (type != this.type) {
                        return false;
                    }
                    var cnt = this._model.forever_count || 0;
                    var hundredCost = this.getShowHundredCost();
                    return cnt >= hundredCost;
                };
                //召唤次数
                FuchenlinghuProxy.prototype.getZhaohuanCnt = function (type) {
                    if (type != this.type) {
                        return 0;
                    }
                    return this._model.count || 0;
                };
                //up道具id
                FuchenlinghuProxy.prototype.getUpIndex = function (type) {
                    if (type != this.type || !this.up) {
                        return 0;
                    }
                    var upProps = this.getUpProps(type);
                    return upProps[this.up - 1][0];
                };
                //浮尘灵壶保底次数
                FuchenlinghuProxy.prototype.getGuaranteeCnt = function () {
                    var cfg = game.GameConfig.getParamConfigById('linghu_guarantees_times');
                    return cfg && cfg.value || 350;
                };
                //是否开启
                FuchenlinghuProxy.prototype.isOpenSea = function (seaType, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670263 /* Fuchenlinghu */, isTips)) {
                        return false;
                    }
                    var seaProxy = game.getProxy("56" /* Yijie */, 262 /* Sea */);
                    var isEnter = seaProxy && seaProxy.isEnter(seaType);
                    if (!isEnter && isTips) {
                        var seaName = this.getSeaNameByType(seaType);
                        game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips17" /* fuchenlinghu_tips17 */), [seaName]));
                    }
                    return isEnter;
                };
                //能否召唤
                FuchenlinghuProxy.prototype.canZhaohuan = function (seaType, countType, isTips) {
                    if (countType === void 0) { countType = 1 /* Once */; }
                    if (isTips === void 0) { isTips = false; }
                    if (!this.isOpenSea(seaType, isTips)) {
                        return false;
                    }
                    var cost = this.getCost(countType);
                    return cost && mod.BagUtil.checkPropCnt(cost[0], cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //幻境之海区域名称
                FuchenlinghuProxy.prototype.getSeaNameByType = function (seaType) {
                    var cfg = game.getConfigByNameId("huanjingzhihai_index.json" /* HuanjingzhihaiIndex */, seaType);
                    return cfg && cfg.name || '';
                };
                //仙灵界面获取奖励
                FuchenlinghuProxy.prototype.canXianling = function (seaType, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (!this.isOpenSea(seaType, isTips)) {
                        return false;
                    }
                    var cost = this.getCostSpecial();
                    return cost && mod.BagUtil.checkPropCnt(cost[0], cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //仙灵总红点
                FuchenlinghuProxy.prototype.canXianlingAllType = function () {
                    for (var _i = 0, SeaTypeAry_1 = game.SeaTypeAry; _i < SeaTypeAry_1.length; _i++) {
                        var type = SeaTypeAry_1[_i];
                        if (this.canXianling(type)) {
                            return true;
                        }
                    }
                    return false;
                };
                //幻境赠礼状态
                FuchenlinghuProxy.prototype.getZengliStatus = function (index) {
                    var list = this._model.zengli_data || [];
                    if (list.indexOf(index) > -1) {
                        return 2 /* Draw */;
                    }
                    var cnt = this.total_count;
                    var cfg = game.getConfigByNameId("huanjing_zengli.json" /* HuanjingZengli */, index);
                    if (!cfg) {
                        return 0 /* NotFinish */;
                    }
                    return cnt >= cfg.times ? 1 /* Finish */ : 0 /* NotFinish */;
                };
                //幻境赠礼领取红点
                FuchenlinghuProxy.prototype.getZengliHint = function (index) {
                    if (!this.isOpenSea(1 /* Sea1 */)) {
                        return false;
                    }
                    var status = this.getZengliStatus(index);
                    return status == 1 /* Finish */;
                };
                //幻境宝藏奖励状态
                FuchenlinghuProxy.prototype.getBaozangStatus = function (index, isFree) {
                    if (isFree === void 0) { isFree = false; }
                    var list = (isFree ? this._model.free_baozang_data : this._model.buy_baozang_data) || [];
                    if (list.indexOf(index) > -1) {
                        return 2 /* Draw */;
                    }
                    var cfg = game.getConfigByNameId("huanjing_baozang.json" /* HuanjingBaozang */, index);
                    var cnt = this.total_count;
                    return cnt >= cfg.times ? 1 /* Finish */ : 0 /* NotFinish */;
                };
                //幻境宝藏领取红点
                FuchenlinghuProxy.prototype.getBaozangHint = function (index, isFree) {
                    if (isFree === void 0) { isFree = false; }
                    if (!this.isOpenSea(1 /* Sea1 */)) {
                        return false;
                    }
                    var status = this.getBaozangStatus(index, isFree);
                    if (status != 1 /* Finish */) {
                        return false;
                    }
                    if (isFree) {
                        return true;
                    }
                    var cfg = game.getConfigByNameId("huanjing_baozang.json" /* HuanjingBaozang */, index);
                    if (cfg && cfg.cost) {
                        return mod.BagUtil.checkPropCnt(cfg.cost[0][0], cfg.cost[0][1]);
                    }
                    return false;
                };
                //幻境累充状态
                FuchenlinghuProxy.prototype.getLeichongStatus = function (index) {
                    var list = this._model.leichong_data || [];
                    if (list.indexOf(index) > -1) {
                        return 2 /* Draw */;
                    }
                    var cfg = game.getConfigByNameId("huanjing_leichong.json" /* HuanjingLeichong */, index);
                    if (!cfg) {
                        return 0 /* NotFinish */;
                    }
                    if (cfg.value == 0) {
                        return 1 /* Finish */; //免费领取
                    }
                    var dayChargeRmb = game.RoleVo.ins.day_charge_rmb;
                    return dayChargeRmb >= cfg.value ? 1 /* Finish */ : 0 /* NotFinish */;
                };
                //幻境礼包信息
                FuchenlinghuProxy.prototype.getLibaoBoughtCnt = function (index) {
                    var list = this._model.gift_data || [];
                    for (var _i = 0, list_2 = list; _i < list_2.length; _i++) {
                        var item = list_2[_i];
                        if (item && item.index == index) {
                            return item.count;
                        }
                    }
                    return 0;
                };
                //幻境礼包状态
                FuchenlinghuProxy.prototype.getLibaoStatus = function (index) {
                    var boughtCnt = this.getLibaoBoughtCnt(index);
                    var cfg = game.getConfigByNameId("huanjing_gift.json" /* HuanjingGift */, index);
                    if (!cfg) {
                        return 0 /* NotFinish */;
                    }
                    var cnt = cfg.count || 0;
                    if (boughtCnt >= cnt) {
                        return 2 /* Draw */;
                    }
                    if (cfg.type == 1 && cfg.cost && mod.BagUtil.checkPropCnt(cfg.cost[0], cfg.cost[1])) {
                        return 1 /* Finish */;
                    }
                    if (cfg.type == 2 && cfg.product_id) {
                        var haveBuy = mod.PayUtil.hasBuy(cfg.product_id);
                        var rmb = mod.PayUtil.getRmbValue(cfg.product_id);
                        if (rmb == 0 && !haveBuy) {
                            return 1 /* Finish */;
                        }
                    }
                    return 0 /* NotFinish */;
                };
                /**============================= hint start =============================*/
                FuchenlinghuProxy.prototype.updateHint = function () {
                    this.updateFuchenlinghuHint();
                    this.updateZengliHint();
                    this.updateBaozangHint();
                    this.updateLeichongHint();
                    this.updateLibaoHint();
                };
                //浮尘灵壶
                FuchenlinghuProxy.prototype.updateFuchenlinghuHint = function () {
                    if (!this.isOpenSea(1 /* Sea1 */)) {
                        return;
                    }
                    var hint = false;
                    for (var _i = 0, SeaTypeAry_2 = game.SeaTypeAry; _i < SeaTypeAry_2.length; _i++) {
                        var type = SeaTypeAry_2[_i];
                        hint = this.canZhaohuan(type) || this.canXianling(type);
                        if (hint) {
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath["03" /* Fuchenlinghu */]);
                };
                //幻境赠礼
                FuchenlinghuProxy.prototype.updateZengliHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670264 /* Huanjingzengli */) || !this.isOpenSea(1 /* Sea1 */)) {
                        return;
                    }
                    var cfgList = game.getConfigListByName("huanjing_zengli.json" /* HuanjingZengli */);
                    var hint = false;
                    for (var _i = 0, cfgList_2 = cfgList; _i < cfgList_2.length; _i++) {
                        var cfg = cfgList_2[_i];
                        if (this.getZengliHint(cfg.index)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath["04" /* Huanjingzengli */]);
                };
                //幻境宝藏
                FuchenlinghuProxy.prototype.updateBaozangHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670265 /* Huanjingbaozang */) || !this.isOpenSea(1 /* Sea1 */)) {
                        return;
                    }
                    var cfgList = game.getConfigListByName("huanjing_baozang.json" /* HuanjingBaozang */);
                    var hint = false;
                    for (var _i = 0, cfgList_3 = cfgList; _i < cfgList_3.length; _i++) {
                        var cfg = cfgList_3[_i];
                        hint = this.getBaozangHint(cfg.index, true) || this.getBaozangHint(cfg.index);
                        if (hint) {
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath["05" /* Huanjingbaozang */]);
                };
                //幻境累充
                FuchenlinghuProxy.prototype.updateLeichongHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670266 /* Huanjingleichong */)) {
                        return;
                    }
                    var cfgList = game.getConfigListByName("huanjing_leichong.json" /* HuanjingLeichong */);
                    var hint = false;
                    for (var _i = 0, cfgList_4 = cfgList; _i < cfgList_4.length; _i++) {
                        var cfg = cfgList_4[_i];
                        if (this.getLeichongStatus(cfg.index) == 1 /* Finish */) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.leichongHintPath);
                };
                //幻境礼包
                FuchenlinghuProxy.prototype.updateLibaoHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670267 /* Huanjinglibao */)) {
                        return;
                    }
                    var cfgList = game.getConfigListByName("huanjing_gift.json" /* HuanjingGift */);
                    var hint = false;
                    for (var _i = 0, cfgList_5 = cfgList; _i < cfgList_5.length; _i++) {
                        var cfg = cfgList_5[_i];
                        if (this.getLibaoStatus(cfg.index) == 1 /* Finish */) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.libaoHintPath);
                };
                FuchenlinghuProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    if (!this.isOpenSea(1 /* Sea1 */)) {
                        return;
                    }
                    var indexs = n.body;
                    var zhaohuanCost = this.getCost(1 /* Once */); //召唤消耗
                    var xianlingCost = this.getCostSpecial(); //仙灵消耗
                    if ((zhaohuanCost && indexs.indexOf(zhaohuanCost[0]) > -1) || (xianlingCost && indexs.indexOf(xianlingCost[0]) > -1)) {
                        this.updateFuchenlinghuHint();
                    }
                };
                FuchenlinghuProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("diamond" /* diamond */) > -1) {
                        this.updateLibaoHint();
                        this.updateBaozangHint();
                    }
                    if (keys.indexOf("day_charge_rmb" /* day_charge_rmb */) > -1) {
                        this.updateLeichongHint();
                    }
                };
                FuchenlinghuProxy.prototype.onOpenFuncUpdate = function (n) {
                    var indexs = n.body;
                    var ary = [1041670263 /* Fuchenlinghu */, 1041670264 /* Huanjingzengli */, 1041670265 /* Huanjingbaozang */, 1041670266 /* Huanjingleichong */, 1041670267 /* Huanjinglibao */];
                    for (var _i = 0, ary_2 = ary; _i < ary_2.length; _i++) {
                        var idx = ary_2[_i];
                        if (indexs.indexOf(idx) > -1) {
                            this.updateHint();
                            break;
                        }
                    }
                };
                FuchenlinghuProxy.prototype.onSeaInfoUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(1 /* Sea1 */) > -1) {
                        this.updateFuchenlinghuHint();
                        this.updateZengliHint();
                        this.updateBaozangHint();
                    }
                };
                return FuchenlinghuProxy;
            }(game.ProxyBase));
            activity.FuchenlinghuProxy = FuchenlinghuProxy;
            __reflect(FuchenlinghuProxy.prototype, "game.mod.activity.FuchenlinghuProxy", ["game.mod.IFuchenlinghuProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonModel = /** @class */ (function () {
                function SummonModel() {
                    /**总抽取数 */
                    this.count = 0;
                    /**积分 */
                    this.score = 0;
                    /**非酋积分 */
                    this.unluck_score = 0;
                    /**最小幸运值 */
                    this.min_luck_score = 0;
                    /**最大幸运值 */
                    this.max_luck_score = 0;
                    /**命运豪礼各类型豪礼数据 */
                    this.gift_list = {};
                    /**排行榜数据 */
                    this.rank_list = [];
                    /**风云录数据 */
                    this.list = [];
                    /**礼券数据 */
                    this.item_list = [];
                }
                return SummonModel;
            }());
            activity.SummonModel = SummonModel;
            __reflect(SummonModel.prototype, "game.mod.activity.SummonModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalMibaoView = /** @class */ (function (_super) {
                __extends(CarnivalMibaoView, _super);
                function CarnivalMibaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.CarnivalMibaoSkin";
                    return _this;
                }
                return CarnivalMibaoView;
            }(eui.Component));
            activity.CarnivalMibaoView = CarnivalMibaoView;
            __reflect(CarnivalMibaoView.prototype, "game.mod.activity.CarnivalMibaoView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_baozangbox_onekey_open = msg.c2s_baozangbox_onekey_open;
            /**
             * @description 召唤-宝藏系统
             */
            var SummonTreasureProxy = /** @class */ (function (_super) {
                __extends(SummonTreasureProxy, _super);
                function SummonTreasureProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._hintPath = ["27" /* Activity */, "31" /* SummonMain */, "02" /* Treasure */];
                    return _this;
                }
                SummonTreasureProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                };
                // 一键开启
                SummonTreasureProxy.prototype.c2s_baozangbox_onekey_open = function (index) {
                    var msg = new c2s_baozangbox_onekey_open();
                    if (index) {
                        msg.box_index = index;
                    }
                    this.sendProto(msg);
                };
                SummonTreasureProxy.prototype.canOpenOneKey = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('treasurebox_batchopen');
                    var val = paramCfg.value;
                    var passProxy = game.getProxy("42" /* Pass */, 9 /* Pass */);
                    var curIndex = passProxy.curIndex;
                    return curIndex > val;
                };
                SummonTreasureProxy.prototype.getConfig = function (index) {
                    return game.getConfigByNameId("treasurebox.json" /* TreasureBox */, index);
                };
                SummonTreasureProxy.prototype.getCondStr = function () {
                    if (this.canOpenOneKey()) {
                        return '';
                    }
                    var paramCfg = game.GameConfig.getParamConfigById('treasurebox_batchopen');
                    var val = paramCfg.value;
                    var layer = val % 100;
                    return game.StringUtil.substitute(game.getLanById("summon_treasure_tips3" /* summon_treasure_tips3 */), [layer]);
                };
                SummonTreasureProxy.prototype.canOneKey = function (isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (!this.canOpenOneKey()) {
                        return false;
                    }
                    if (this.getAllHint()) {
                        return true;
                    }
                    if (isTips) {
                        game.PromptBox.getIns().show(game.getLanById("summon_treasure_tips4" /* summon_treasure_tips4 */));
                    }
                    return false;
                };
                SummonTreasureProxy.prototype.canOneKeyByIndex = function (index, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var cfg = this.getConfig(index);
                    if (!cfg) {
                        return false;
                    }
                    return mod.BagUtil.checkPropCnt(cfg.itemid, cfg.cost, isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                SummonTreasureProxy.prototype.getAllHint = function () {
                    var cfgList = game.getConfigListByName("treasurebox.json" /* TreasureBox */);
                    for (var _i = 0, cfgList_6 = cfgList; _i < cfgList_6.length; _i++) {
                        var cfg = cfgList_6[_i];
                        if (this.canOneKeyByIndex(cfg.index)) {
                            return true;
                        }
                    }
                    return false;
                };
                SummonTreasureProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670191 /* SummonTreasure */)) {
                        return;
                    }
                    var hint = this.getAllHint();
                    mod.HintMgr.setHint(hint, this._hintPath);
                };
                SummonTreasureProxy.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(7 /* BaozangSuipian */) > -1) {
                        this.updateHint();
                    }
                };
                return SummonTreasureProxy;
            }(game.ProxyBase));
            activity.SummonTreasureProxy = SummonTreasureProxy;
            __reflect(SummonTreasureProxy.prototype, "game.mod.activity.SummonTreasureProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Tween = base.Tween;
            var Handler = base.Handler;
            var facade = base.facade;
            var delayCall = base.delayCall;
            var clearDelay = base.clearDelay;
            var SummonCardItem = /** @class */ (function (_super) {
                __extends(SummonCardItem, _super);
                function SummonCardItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.isSkip = false;
                    _this.isSurface = false;
                    _this.bigsize = 1.5;
                    _this.default = 1;
                    return _this;
                }
                SummonCardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                SummonCardItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this.clearDelayIdx();
                };
                SummonCardItem.prototype.dataChanged = function () {
                };
                SummonCardItem.prototype.onInit = function () {
                    this.gr_pros.scaleX = 0;
                    this.card_cons.scaleX = 1;
                    this.img_title.source = "";
                    this.removeAllEffects();
                };
                SummonCardItem.prototype.setData = function (data) {
                    this.isSkip = false;
                    this.data = data;
                    this.onInit();
                    this.icon.setData(data);
                    var prop = game.PropData.create(this.data.idx);
                    this.isSurface = prop.propType == 11 /* Surface */;
                    this.card_cons.source = "backcard_" + data.quality;
                    this.card_pros.source = "card_" + data.quality;
                };
                SummonCardItem.prototype.setTween = function (isSkip) {
                    if (isSkip === void 0) { isSkip = false; }
                    if (this.isSkip) {
                        return;
                    }
                    this.isSkip = isSkip;
                    if (this.isSurface) {
                        Tween.get(this).to({
                            scaleX: this.bigsize,
                            scaleY: this.bigsize
                        }, 100).exec(Handler.alloc(this, this.onBeginTween));
                    }
                    else {
                        this.onBeginTween();
                    }
                };
                SummonCardItem.prototype.onBeginTween = function () {
                    Tween.get(this.card_cons)
                        .to({ scaleX: 0 }, 100)
                        .exec(Handler.alloc(this, this.callbackTween));
                };
                SummonCardItem.prototype.callbackTween = function () {
                    this.onShowShake();
                    Tween.get(this.gr_pros).to({
                        scaleX: this.default,
                        scaleY: this.default
                    }, 100).exec(Handler.alloc(this, this.onEndTween));
                };
                SummonCardItem.prototype.onEndTween = function () {
                    if (this.scaleX == this.bigsize && this.scaleY == this.bigsize) {
                        Tween.get(this).to({
                            scaleX: this.default,
                            scaleY: this.default
                        }, 100).exec(Handler.alloc(this, this.onSetEff));
                    }
                    else {
                        this.onSetEff();
                    }
                };
                SummonCardItem.prototype.onSetEff = function () {
                    if (this.data && this.data.param1) {
                        this.img_title.source = "summon_title_" + this.data.param1;
                    }
                    this.onShowEft1();
                    this.onTweenEnd();
                };
                SummonCardItem.prototype.onShowShake = function () {
                    var quality = this.data && this.data.quality || 0;
                    if (quality > 3) {
                        return;
                    }
                    facade.sendNt("on_update_summon_shake" /* ON_UPDATE_SUMMON_SHAKE */);
                };
                SummonCardItem.prototype.onTweenEnd = function () {
                    if (!this.data) {
                        return;
                    }
                    var prop = game.PropData.create(this.data.idx);
                    if (prop.propType == 11 /* Surface */) {
                        mod.PropTipsMgr.getIns().continueSurface(); //外显碎片时表现
                    }
                };
                SummonCardItem.prototype.onShowEft1 = function () {
                    if (!this.isSkip) {
                        this.delay_idx = delayCall(Handler.alloc(this, function () {
                            facade.sendNt("on_update_summon_tween_over" /* ON_UPDATE_SUMMON_TWEEN_OVER */);
                        }), 150);
                    }
                    //[UIEftSrc.Fanpai1,UIEftSrc.Fanpai2,UIEftSrc.Fanpai3]
                    var p2 = this.data && this.data.param2 || 0;
                    this.addEftByParent("fanpai" + p2, this.grp_eff, 0, 0, -1, Handler.alloc(this, this.onShowEft3), 1);
                };
                SummonCardItem.prototype.onShowEft3 = function () {
                    this.onSendOver();
                    var quality = this.data && this.data.quality || 0;
                    if (quality > 3) {
                        return;
                    }
                    this.removeEft();
                    this.addEftByParent("highquality" /* Highquality */, this.grp_eff);
                };
                SummonCardItem.prototype.onSendOver = function () {
                    facade.sendNt("on_update_summon_over" /* ON_UPDATE_SUMMON_OVER */);
                };
                SummonCardItem.prototype.setSkip = function () {
                    this.setTween(true);
                    this.clearDelayIdx();
                };
                SummonCardItem.prototype.clearDelayIdx = function () {
                    this.delay_idx && clearDelay(this.delay_idx);
                    this.delay_idx = 0;
                };
                return SummonCardItem;
            }(mod.BaseRenderer));
            activity.SummonCardItem = SummonCardItem;
            __reflect(SummonCardItem.prototype, "game.mod.activity.SummonCardItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonEffectView = /** @class */ (function (_super) {
                __extends(SummonEffectView, _super);
                function SummonEffectView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonEffectSkin";
                    return _this;
                }
                return SummonEffectView;
            }(eui.Component));
            activity.SummonEffectView = SummonEffectView;
            __reflect(SummonEffectView.prototype, "game.mod.activity.SummonEffectView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var SummonGiftItem = /** @class */ (function (_super) {
                __extends(SummonGiftItem, _super);
                function SummonGiftItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SummonGiftItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.source = data.cfg.items;
                    var target = data.cfg.condition[0];
                    var id = "zhanhuan_tip_" + this.data.type;
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(206 /* Summon */);
                    var finish_cnt = _proxy.getScoreByType(this.data.type, this.data.type == 3 ? data.cfg.condition[0] : null);
                    if (this.data.type == 3) {
                        target = data.cfg.condition[1];
                        id = id + ("_" + data.cfg.condition[0]);
                    }
                    var str = game.StringUtil.substitute(game.getLanById(id), [target]) +
                        game.TextUtil.addColor("(" + finish_cnt + "/" + target + ")", finish_cnt >= target ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    this.img_bought.visible = data.status && data.status.status == 1;
                    this.btn_buy.visible = !this.img_bought.visible;
                    if (this.btn_buy.visible) {
                        this.btn_buy.resetCost();
                        if (finish_cnt >= target) {
                            if (data.cfg.cost) {
                                this.btn_buy.label = "";
                                this.btn_buy.setCost(data.cfg.cost);
                            }
                            else {
                                this.btn_buy.label = "领取";
                            }
                        }
                        else {
                            this.btn_buy.label = "前往召唤";
                        }
                        this.btn_buy.setHint(data.status && data.status.status == 0 && finish_cnt >= target);
                    }
                };
                SummonGiftItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(206 /* Summon */);
                    var target = data.cfg.condition[0];
                    var finish_cnt = _proxy.getScoreByType(this.data.type, this.data.type == 3 ? data.cfg.condition[0] : null);
                    if (target > finish_cnt) {
                        facade.showView("27" /* Activity */, "31" /* SummonMain */);
                        return;
                    }
                    if (data.cfg && data.cfg.cost) {
                        if (!mod.BagUtil.checkPropCnt(data.cfg.cost[0], data.cfg.cost[1], 2 /* Text */)) {
                            return;
                        }
                    }
                    _proxy.c2s_draw_buy_luck_gift(_proxy.mdrType, data.cfg.index);
                };
                return SummonGiftItem;
            }(mod.BaseGiftItemRender));
            activity.SummonGiftItem = SummonGiftItem;
            __reflect(SummonGiftItem.prototype, "game.mod.activity.SummonGiftItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonGiftView = /** @class */ (function (_super) {
                __extends(SummonGiftView, _super);
                function SummonGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonGiftSkin";
                    return _this;
                }
                return SummonGiftView;
            }(eui.Component));
            activity.SummonGiftView = SummonGiftView;
            __reflect(SummonGiftView.prototype, "game.mod.activity.SummonGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var SummonIconShopItem = /** @class */ (function (_super) {
                __extends(SummonIconShopItem, _super);
                function SummonIconShopItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SummonIconShopItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.btn.addEventListener(TouchEvent.TOUCH_TAP, this.onClick, this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(206 /* Summon */);
                };
                SummonIconShopItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this.btn.removeEventListener(TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                SummonIconShopItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    this.icon.setData(cfg.items);
                    var prop = game.PropData.create(cfg.items[0], cfg.items[1]);
                    this.lab_name.textFlow = prop.getPropName();
                    this.img_bought.visible = !cfg.count;
                    this.btn.visible = !this.img_bought.visible;
                    this.btn.visible && this.btn.setCost(cfg.cost);
                    if (cfg.count) {
                        var count = this._proxy.getCountByIndex(cfg.index);
                        count = count > -1 ? count : cfg.count;
                        this.lab_limit.textFlow = game.TextUtil.parseHtml("\u6BCF\u5468:" + game.TextUtil.addColor(count + "/" + cfg.count, 1022764 /* GREEN */));
                    }
                    else {
                        this.lab_limit.text = "";
                    }
                };
                SummonIconShopItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (!mod.BagUtil.checkPropCnt(data.cost[0], data.cost[1], 1 /* Dialog */)) {
                        return;
                    }
                    this._proxy.c2s_draw_buy_gift(data.index);
                };
                return SummonIconShopItem;
            }(mod.BaseRenderer));
            activity.SummonIconShopItem = SummonIconShopItem;
            __reflect(SummonIconShopItem.prototype, "game.mod.activity.SummonIconShopItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var SummonRankGodRender = /** @class */ (function (_super) {
                __extends(SummonRankGodRender, _super);
                function SummonRankGodRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SummonRankGodRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_check, this.onClickCheck, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_get, this.onClickGet, this);
                    this._itemList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._itemList;
                };
                SummonRankGodRender.prototype.onClickCheck = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rankInfo = data.rankInfo;
                    mod.ViewMgr.getIns().showRoleTips(rankInfo.role_id, rankInfo.server_id);
                };
                SummonRankGodRender.prototype.onClickGet = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(206 /* Summon */);
                    _proxy.c2s_draw_get_fengyun_rewards(this.data.cfg.index);
                };
                SummonRankGodRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rankInfo = data.rankInfo;
                    this.currentState = rankInfo ? "2" : "1";
                    if (this.currentState == "2") {
                        //上榜玩家
                        this.head.updateHeadShow(rankInfo.head, rankInfo.head_frame, rankInfo.sex, rankInfo.role_id, rankInfo.server_id, rankInfo.is_robot);
                        this.lab_name.text = rankInfo.name;
                    }
                    var cfg = this.data.cfg;
                    this._itemList.source = cfg.rewards; //奖励
                    this.lab_title.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("zhaohuan_runk_cond"), [cfg.count]));
                    var status = this.data.status;
                    var canDraw = status == 1;
                    var hasDraw = status == 2;
                    this.img_get.visible = hasDraw;
                    this.btn_get.visible = !hasDraw;
                    this.btn_get.redPoint.visible = canDraw;
                    if (canDraw) {
                        this.btn_get.setYellow();
                    }
                    else {
                        this.btn_get.setDisabled();
                    }
                };
                return SummonRankGodRender;
            }(mod.BaseListenerRenderer));
            activity.SummonRankGodRender = SummonRankGodRender;
            __reflect(SummonRankGodRender.prototype, "game.mod.activity.SummonRankGodRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonView = /** @class */ (function (_super) {
                __extends(SummonView, _super);
                function SummonView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonSkin";
                    return _this;
                }
                return SummonView;
            }(eui.Component));
            activity.SummonView = SummonView;
            __reflect(SummonView.prototype, "game.mod.activity.SummonView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ActivityMod = /** @class */ (function (_super) {
                __extends(ActivityMod, _super);
                function ActivityMod() {
                    return _super.call(this, "27" /* Activity */) || this;
                }
                ActivityMod.prototype.initCmd = function () {
                    _super.prototype.initCmd.call(this);
                    var self = this;
                };
                ActivityMod.prototype.initModel = function () {
                    _super.prototype.initModel.call(this);
                    var self = this;
                    self.regProxy(50 /* Activity */, activity.ActivityProxy);
                    self.regProxy(203 /* Lottery */, activity.LotteryProxy);
                    self.regProxy(206 /* Summon */, activity.SummonProxy);
                    self.regProxy(208 /* SignGift */, activity.SignGiftProxy);
                    self.regProxy(207 /* GameOrder */, activity.GameOrderProxy);
                    self.regProxy(209 /* First */, activity.FirstProxy);
                    self.regProxy(210 /* ZeroBuy */, activity.ZeroBuyProxy);
                    self.regProxy(211 /* Zhaocaixian */, activity.ZcxProxy);
                    self.regProxy(212 /* RoleRing */, activity.RoleRingProxy);
                    self.regProxy(213 /* KillBoss */, activity.KillBossProxy);
                    self.regProxy(214 /* Yjjs */, activity.YjjsProxy);
                    self.regProxy(215 /* ExchangeShop */, activity.ExchangeShopProxy);
                    self.regProxy(216 /* GivingShenLing */, activity.GivingShenLingProxy);
                    self.regProxy(218 /* PrerogativeWrit */, activity.PrerogativeWritProxy);
                    self.regProxy(219 /* WonderfulAct */, activity.WonderfulActProxy);
                    self.regProxy(224 /* Yhcs */, activity.YhcsProxy);
                    self.regProxy(229 /* XianlvGift */, activity.XianlvGiftProxy);
                    self.regProxy(234 /* SummonTreasure */, activity.SummonTreasureProxy);
                    self.regProxy(235 /* Chengshen */, activity.ChengshenProxy);
                    self.regProxy(236 /* MeiriTehui */, activity.MeiriTehuiProxy);
                    self.regProxy(237 /* SupremeGit */, activity.SupremeGitProxy); //至尊礼包
                    self.regProxy(238 /* Tongtiange */, activity.TongtiangeProxy);
                    self.regProxy(242 /* PunshList */, activity.PunshListProxy);
                    self.regProxy(245 /* FlyRank */, activity.FlyRankProxy);
                    self.regProxy(248 /* TehuiLibao */, activity.TehuiLibaoProxy);
                    self.regProxy(246 /* ShenlingGift */, activity.ShenlingGiftProxy);
                    self.regProxy(247 /* Xianchi */, activity.XianchiProxy);
                    self.regProxy(249 /* FeishengLibao */, activity.FeishengLibaoProxy);
                    self.regProxy(250 /* Caiyunbang */, activity.CaiyunbangProxy);
                    self.regProxy(252 /* Carnival */, activity.CarnivalProxy);
                    self.regProxy(266 /* Fuchenlinghu */, activity.FuchenlinghuProxy);
                };
                ActivityMod.prototype.initView = function () {
                    _super.prototype.initView.call(this);
                    var self = this;
                    /**左上角活动列表*/
                    self.regMdr("01" /* MainActivityList */, activity.MainLeftActTopMdr);
                    /**左中活动列表*/
                    self.regMdr("02" /* MainLeftAct */, activity.MainLeftActMidMdr);
                    /**战力转盘 */
                    self.regMdr("30" /* Lottery */, activity.LottertMainMdr);
                    /**召唤系统 */
                    self.regMdr("31" /* SummonMain */, activity.SummonMainMdr); //主界面
                    self.regMdr("32" /* SummonGift */, activity.SummonGiftMdr); //命运豪礼界面
                    self.regMdr("33" /* SummonRank */, activity.SummonRankMainMdr); //排行榜界面
                    self.regMdr("34" /* SummonRankTips */, activity.SummonRankSectionMdr); //排行榜查看排名界面
                    self.regMdr("35" /* SummonRankGods */, activity.SummonRankGodMdr); //风云录界面
                    self.regMdr("36" /* SummonExchange */, activity.SummonExchangeMainMdr); //礼券兑换界面
                    self.regMdr("37" /* SummonEffect */, activity.SummonEffectMdr); //抽奖界面
                    self.regMdr("61" /* SummonTreasureBox */, activity.SummonTreasureBoxMdr); //宝藏
                    self.regMdr("62" /* SummonTreasureTips */, activity.SummonTreasureTipsMdr); //宝藏
                    /**签到有礼*/
                    self.regMdr("39" /* SignGift */, activity.SignGiftMdr);
                    /**送100召唤卷，战令 */
                    self.regMdr("38" /* Giving */, activity.GivingMainMdr); //送召唤卷主界面
                    self.regMdr("40" /* GameOrderUnlock */, activity.GameOrderUnlockMdr); //送召唤卷解锁界面（战令解锁界面）
                    /**招财仙*/
                    self.regMdr("42" /* ZcxMain */, activity.ZcxMainMdr);
                    self.regMdr("43" /* ZcxWinnerList */, activity.ZcxWinnerListMdr);
                    self.regMdr("44" /* ZcxBuyTips */, activity.ZcxBuyTipsMdr);
                    self.regMdr("108" /* ZcxFuli */, activity.ZcxFuliMdr);
                    self.regMdr("109" /* ZcxUnlock */, activity.ZcxUnlockMdr);
                    /**主角光环*/
                    self.regMdr("45" /* RoleRingMain */, activity.RoleRingMainMdr);
                    self.regMdr("46" /* RoleRingUp */, activity.RoleRingUpMdr);
                    self.regMdr("47" /* RoleRingReward */, activity.RoleRingRewardMdr);
                    /**0元购 */
                    self.regMdr("48" /* ZeroBuy */, activity.ZeroBuyMainMdr);
                    /**首充豪礼 */
                    self.regMdr("49" /* FirstCharge */, activity.FirstMdr);
                    /**斩妖福利 */
                    self.regMdr("50" /* KillBoss */, activity.KillBossMainMdr);
                    /**瑶姬降世*/
                    self.regMdr("51" /* YjjsFirstMain */, activity.YjjsFirstMainMdr);
                    self.regMdr("52" /* YjjsMain */, activity.YjjsMainMdr);
                    /**兑换商城 */
                    self.regMdr("54" /* ExchangeShop */, activity.ExchangeShopMainMdr);
                    self.regMdr("55" /* ExchangeShopTips */, activity.ExchangeShopBuyTipsMdr);
                    /**赠送瑶姬 */
                    self.regMdr("56" /* GivingShenLing */, activity.GivingShenLingMainMdr);
                    /**精彩活动*/
                    self.regMdr("57" /* WonderfulAct */, activity.WonderfulActMainMdr);
                    self.regMdr("58" /* WonderfulActReward */, activity.WonderfulActRewardMdr);
                    /**浴火重生 */
                    self.regMdr("59" /* Yhcs */, activity.YhcsMainMdr);
                    self.regMdr("60" /* XianlvGift */, activity.XianlvGiftMdr);
                    /**成神在即*/
                    self.regMdr("65" /* ChengshenMain */, activity.ChengshenMainMdr);
                    self.regMdr("66" /* ChengshenJiban */, activity.ChengshenJibanMdr);
                    self.regMdr("67" /* ChengshenTask */, activity.ChengshenTaskMdr);
                    self.regMdr("69" /* MeiriTehui */, activity.MeiriTehuiMdr);
                    /**至尊礼包*/
                    self.regMdr("71" /* SupremeGitMain */, activity.SupremeGitMainMdr);
                    /**通天阁*/
                    self.regMdr("73" /* TongtiangeMain */, activity.TongtiangeMainMdr);
                    self.regMdr("74" /* TongtiangeRank */, activity.TongtiangeRankMainMdr);
                    self.regMdr("75" /* TongtiangeRankSection */, activity.TongtiangeRankSectionMdr);
                    self.regMdr("76" /* TongtiangeLastRank */, activity.TongtiangeLastRankMdr);
                    /**通用奖励预览*/
                    self.regMdr("77" /* BasePreviewReward */, mod.BasePreviewRewardMdr);
                    /**新服冲榜 */
                    self.regMdr("78" /* PunshList */, activity.PunshListMainMdr);
                    self.regMdr("79" /* PunshListRankSection */, activity.PunshListRankSectionMdr);
                    /**通用中控活动主界面*/
                    self.regMdr("80" /* ActMain */, activity.ActMainMdr);
                    self.regMdr("90" /* FlyRankSection */, activity.FlyRankSectionMdr);
                    self.regMdr("91" /* FlyWarUnlock */, activity.FlyWarUnlockMdr);
                    /**神灵天赋礼包*/
                    self.regMdr("92" /* ShenlingGift */, activity.ShenlingGiftMdr);
                    /**特惠礼包 */
                    self.regMdr("93" /* TehuiLibao */, activity.TehuiLibaoMdr);
                    /**仙池大奖 */
                    self.regMdr("98" /* XianchiReward */, activity.XianchiRewardMdr);
                    /**超值礼包*/
                    self.regMdr("70" /* ChaozhiLibao */, activity.ChaozhiLibaoMdr);
                    /**飞升礼包*/
                    self.regMdr("100" /* FeishengLibao */, activity.FeishengLibaoMdr);
                    /**天女赐福奖励*/
                    self.regMdr("101" /* TiannvWelfareReward */, activity.TiannvWelfareRewardMdr);
                    /**财运榜*/
                    self.regMdr("102" /* CaiyunbangRankSection */, activity.CaiyunbangRankSectionMdr);
                    /**狂欢庆典*/
                    self.regMdr("106" /* CarnivalMibaoReward */, activity.CarnivalMibaoRewardMdr);
                    self.regMdr("107" /* CarnivalRankSection */, activity.CarnivalRankSectionMdr);
                    //浮尘灵壶
                    self.regMdr("110" /* FuchenlinghuRefresh */, activity.FuchenlinghuRefreshMdr);
                    self.regMdr("111" /* FuchenlinghuWish */, activity.FuchenlinghuWishMdr);
                    self.regMdr("112" /* FuchenlinghuXianling */, activity.FuchenlinghuXianlingMdr);
                };
                return ActivityMod;
            }(game.ModBase));
            activity.ActivityMod = ActivityMod;
            __reflect(ActivityMod.prototype, "game.mod.activity.ActivityMod");
            gso.modCls.push(ActivityMod);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuRefreshItem = /** @class */ (function (_super) {
                __extends(FuchenlinghuRefreshItem, _super);
                function FuchenlinghuRefreshItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FuchenlinghuRefreshItemSkin";
                    return _this;
                }
                FuchenlinghuRefreshItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                    this._seaProxy = game.getProxy("56" /* Yijie */, 262 /* Sea */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                FuchenlinghuRefreshItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var upProps = this._proxy.getUpProps(data);
                    this._listData.replaceAll(upProps.slice(0, 4));
                    this.img_type.source = "fuchenlinghu_seatype" + data;
                    var isOpen = this._proxy.isOpenSea(data);
                    this.gr_gray.visible = !isOpen;
                    if (!isOpen) {
                        this.img_type1.source = "fuchenlinghu_open_seatype" + data;
                    }
                };
                return FuchenlinghuRefreshItem;
            }(mod.BaseListenerRenderer));
            activity.FuchenlinghuRefreshItem = FuchenlinghuRefreshItem;
            __reflect(FuchenlinghuRefreshItem.prototype, "game.mod.activity.FuchenlinghuRefreshItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuRefreshView = /** @class */ (function (_super) {
                __extends(FuchenlinghuRefreshView, _super);
                function FuchenlinghuRefreshView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FuchenlinghuRefreshSkin";
                    return _this;
                }
                return FuchenlinghuRefreshView;
            }(eui.Component));
            activity.FuchenlinghuRefreshView = FuchenlinghuRefreshView;
            __reflect(FuchenlinghuRefreshView.prototype, "game.mod.activity.FuchenlinghuRefreshView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuView = /** @class */ (function (_super) {
                __extends(FuchenlinghuView, _super);
                function FuchenlinghuView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FuchenlinghuSkin";
                    return _this;
                }
                return FuchenlinghuView;
            }(eui.Component));
            activity.FuchenlinghuView = FuchenlinghuView;
            __reflect(FuchenlinghuView.prototype, "game.mod.activity.FuchenlinghuView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuWishView = /** @class */ (function (_super) {
                __extends(FuchenlinghuWishView, _super);
                function FuchenlinghuWishView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FuchenlinghuWishSkin";
                    return _this;
                }
                return FuchenlinghuWishView;
            }(eui.Component));
            activity.FuchenlinghuWishView = FuchenlinghuWishView;
            __reflect(FuchenlinghuWishView.prototype, "game.mod.activity.FuchenlinghuWishView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuXianlingView = /** @class */ (function (_super) {
                __extends(FuchenlinghuXianlingView, _super);
                function FuchenlinghuXianlingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.FuchenlinghuXianlingSkin";
                    return _this;
                }
                return FuchenlinghuXianlingView;
            }(eui.Component));
            activity.FuchenlinghuXianlingView = FuchenlinghuXianlingView;
            __reflect(FuchenlinghuXianlingView.prototype, "game.mod.activity.FuchenlinghuXianlingView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Handler = base.Handler;
            var HuanjingBaozangItem = /** @class */ (function (_super) {
                __extends(HuanjingBaozangItem, _super);
                function HuanjingBaozangItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuanjingBaozangItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do0, this.onClickBtn0, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do1, this.onClickBtn1, this);
                };
                HuanjingBaozangItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                HuanjingBaozangItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data || !data.cfg) {
                        return;
                    }
                    var cfg = data.cfg;
                    //免费奖励
                    this.icon.setData({
                        prop: cfg.reward[0],
                        isGot: data.freeStatus == 2 /* Draw */,
                        showTips: true
                    });
                    if (data.freeStatus == 0 /* NotFinish */) {
                        this.icon.gr_got.visible = true;
                        this.icon.img_gou.visible = false;
                    }
                    if (data.freeStatus == 2 /* Draw */) {
                        this.img_got0.visible = true;
                        this.btn_do0.visible = false;
                    }
                    else {
                        this.img_got0.visible = false;
                        this.btn_do0.visible = true;
                        var isFinish = data.freeStatus == 1 /* Finish */;
                        this.btn_do0.label = isFinish ? game.getLanById("lingqu" /* lingqu */) : game.getLanById("chengshen_goto1" /* chengshen_goto1 */);
                        if (isFinish) {
                            this.btn_do0.setYellow();
                        }
                        else {
                            this.btn_do0.setBlue();
                        }
                        this.btn_do0.setHint(this._proxy.getBaozangHint(cfg.index, true));
                    }
                    //付费奖励
                    if (data.cfg.reward2) {
                        this._listData.replaceAll(data.cfg.reward2);
                    }
                    else if (data.cfg.gift_id) {
                        var rewards = mod.PayUtil.getRewards(data.cfg.gift_id);
                        this._listData.replaceAll(rewards);
                    }
                    this.img_got1.visible = data.payStatus == 2 /* Draw */;
                    this.btn_do1.visible = !this.img_got1.visible;
                    if (data.cfg.gift_id) {
                        this.btn_do1.label = mod.PayUtil.getRmbValue(data.cfg.gift_id) + mod.PayUtil.getRmbUnit();
                        this.btn_do1.resetCost();
                    }
                    else if (data.cfg.cost) {
                        var cost = data.cfg.cost[0];
                        this.btn_do1.setCost(cost);
                        this.btn_do1.label = '';
                        this.btn_do1.setHint(this._proxy.getBaozangHint(cfg.index, false));
                    }
                    this.lab_val.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips16" /* fuchenlinghu_tips16 */), [cfg.times]));
                    this.bar.setData({ start: data.before, val: data.val, target: data.cfg.times, next: data.next });
                    // if (data.val <= data.before) {
                    //     this.thumb.height = 0;
                    //     this.scr.visible = false;
                    //     return;
                    // }
                    // let p = (data.val - data.before) / (data.cfg.times - data.before);
                    // if (p > 1) {
                    //     p = 1;
                    // } else if (p < 0) {
                    //     p = 0;
                    // }
                    // this.scr.visible = true;
                    // this.scr.height = 110 * p;//todo
                    //
                    // let p2 = (data.val - data.cfg.times) / (data.next - data.cfg.times);
                    // if (p2 > 1) {
                    //     p2 = 1;
                    // } else if (p2 < 0) {
                    //     p2 = 0;
                    // } else if (data.val <= data.cfg.times) {
                    //     p2 = 0;//未到下半进度
                    // }
                    // this.thumb.height = 70 * p2;
                };
                HuanjingBaozangItem.prototype.onClickBtn0 = function () {
                    if (this.data.freeStatus == 1 /* Finish */) {
                        this._proxy.c2s_linghu_oper(6 /* Oper6 */, this.data.cfg.index, 1);
                    }
                    else {
                        this.jumpFunc();
                    }
                };
                HuanjingBaozangItem.prototype.onClickBtn1 = function () {
                    if (this.data.payStatus == 0 /* NotFinish */) {
                        mod.ViewMgr.getIns().showConfirm(game.getLanById("jinjielibao_tips2" /* jinjielibao_tips2 */), Handler.alloc(this, this.jumpFunc));
                        return;
                    }
                    var cfg = this.data.cfg;
                    if (cfg.gift_id) {
                        mod.PayUtil.pay(cfg.gift_id);
                    }
                    else if (cfg.cost && this.data.payStatus == 1 /* Finish */) {
                        this._proxy.c2s_linghu_oper(6 /* Oper6 */, cfg.index, 2);
                    }
                };
                HuanjingBaozangItem.prototype.jumpFunc = function () {
                    if (this._proxy.isOpenSea(1 /* Sea1 */, true)) {
                        mod.ViewMgr.getIns().showView("27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */);
                    }
                };
                return HuanjingBaozangItem;
            }(mod.BaseListenerRenderer));
            activity.HuanjingBaozangItem = HuanjingBaozangItem;
            __reflect(HuanjingBaozangItem.prototype, "game.mod.activity.HuanjingBaozangItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var HuanjingBaozangView = /** @class */ (function (_super) {
                __extends(HuanjingBaozangView, _super);
                function HuanjingBaozangView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.HuanjingBaozangSkin";
                    return _this;
                }
                return HuanjingBaozangView;
            }(eui.Component));
            activity.HuanjingBaozangView = HuanjingBaozangView;
            __reflect(HuanjingBaozangView.prototype, "game.mod.activity.HuanjingBaozangView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureBoxView = /** @class */ (function (_super) {
                __extends(SummonTreasureBoxView, _super);
                function SummonTreasureBoxView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonTreasureBoxSkin";
                    return _this;
                }
                return SummonTreasureBoxView;
            }(eui.Component));
            activity.SummonTreasureBoxView = SummonTreasureBoxView;
            __reflect(SummonTreasureBoxView.prototype, "game.mod.activity.SummonTreasureBoxView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureItem = /** @class */ (function (_super) {
                __extends(SummonTreasureItem, _super);
                function SummonTreasureItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonTreasureItemSkin";
                    return _this;
                }
                SummonTreasureItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 234 /* SummonTreasure */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                SummonTreasureItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                SummonTreasureItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    var bagCnt = mod.BagUtil.getPropCntByIdx(cfg.itemid);
                    this.bar.show(bagCnt, cfg.cost, false, 0, false, 1 /* Value */);
                    var hint = bagCnt >= cfg.cost;
                    this.redPoint.visible = hint;
                    this.img_eft.visible = hint;
                    if (cfg.picture) {
                        this.img_icon.source = cfg.picture;
                    }
                };
                SummonTreasureItem.prototype.onClick = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "61" /* SummonTreasureBox */, this.data);
                };
                return SummonTreasureItem;
            }(mod.BaseRenderer));
            activity.SummonTreasureItem = SummonTreasureItem;
            __reflect(SummonTreasureItem.prototype, "game.mod.activity.SummonTreasureItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureList = /** @class */ (function (_super) {
                __extends(SummonTreasureList, _super);
                function SummonTreasureList() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonTreasureListSkin";
                    return _this;
                }
                SummonTreasureList.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list.itemRenderer = activity.SummonTreasureItem;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                SummonTreasureList.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                SummonTreasureList.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.replaceAll(data);
                };
                return SummonTreasureList;
            }(mod.BaseListenerRenderer));
            activity.SummonTreasureList = SummonTreasureList;
            __reflect(SummonTreasureList.prototype, "game.mod.activity.SummonTreasureList");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureTipsView = /** @class */ (function (_super) {
                __extends(SummonTreasureTipsView, _super);
                function SummonTreasureTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonTreasureTipsSkin";
                    return _this;
                }
                return SummonTreasureTipsView;
            }(eui.Component));
            activity.SummonTreasureTipsView = SummonTreasureTipsView;
            __reflect(SummonTreasureTipsView.prototype, "game.mod.activity.SummonTreasureTipsView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureView = /** @class */ (function (_super) {
                __extends(SummonTreasureView, _super);
                function SummonTreasureView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SummonTreasureSkin";
                    return _this;
                }
                return SummonTreasureView;
            }(eui.Component));
            activity.SummonTreasureView = SummonTreasureView;
            __reflect(SummonTreasureView.prototype, "game.mod.activity.SummonTreasureView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var Tween = base.Tween;
            var Handler = base.Handler;
            /**
             * 召唤特效界面，需传入 SummonEffectData
             */
            var SummonEffectMdr = /** @class */ (function (_super) {
                __extends(SummonEffectMdr, _super);
                function SummonEffectMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.SummonEffectView);
                    _this._isTween = false;
                    _this._idxTween = 0;
                    _this._count = 0;
                    _this._skip = false;
                    _this.posArr = [];
                    return _this;
                }
                SummonEffectMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    // this._proxy = this.retProxy(ProxyType.Summon);
                    this._view.img_bg.source = game.ResUtil.getUiJpg("beijingtu_chouka");
                    this.onInitPos();
                };
                SummonEffectMdr.prototype.onInitPos = function () {
                    for (var i = 0; i <= 10; i++) {
                        var card = this._view["card_" + i];
                        if (card) {
                            this.posArr.push([card.x, card.y]);
                        }
                    }
                };
                SummonEffectMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    // addEventListener(this._view.img_bg, TouchEvent.TOUCH_TAP, this.onSkin);
                    addEventListener(this._view.btn_back, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_again, TouchEvent.TOUCH_TAP, this.onClickAgain);
                    addEventListener(this._view, TouchEvent.TOUCH_TAP, this.onSkip);
                    this.onNt("on_update_summon_tween" /* ON_UPDATE_SUMMON_TWEEN */, this.onUpdateView, this);
                    this.onNt("on_update_summon_tween_over" /* ON_UPDATE_SUMMON_TWEEN_OVER */, this.onTween, this);
                    this.onNt("on_update_summon_shake" /* ON_UPDATE_SUMMON_SHAKE */, this.onUpdataShake, this);
                    this.onNt("on_update_summon_over" /* ON_UPDATE_SUMMON_OVER */, this.onCheckOver, this);
                };
                SummonEffectMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.removeEft();
                    // this.addEftByParent(UIEftSrc.Fanpai, this._view.grp_eff);
                    this.addEftByParent("zhaohuanbeijing" /* Zhaohuanbeijing */, this._view.grp_eff2, 0, 0, 0, null, 0, 1.4);
                    this._listData = this._showArgs.list;
                    this._len = this._listData.length;
                    this._view.currentState = this._len == 10 ? "more" : "once";
                    this.onUpdateData();
                    this.onStart();
                };
                SummonEffectMdr.prototype.onUpdateData = function () {
                    if (this._len == 1) {
                        this._view.card_0.setData(this._listData[0]);
                        return;
                    }
                    for (var i = 0; i < this._listData.length; i++) {
                        var card = this._view["card_" + (i + 1)];
                        if (!card) {
                            continue;
                        }
                        card.setData(this._listData[i]);
                    }
                };
                SummonEffectMdr.prototype.onClickAgain = function () {
                    var handler = this._showArgs.handler;
                    if (handler) {
                        handler.exec();
                    }
                };
                SummonEffectMdr.prototype.onUpdateView = function (n) {
                    if (this._isTween) {
                        return;
                    }
                    if (n && n.body) {
                        this._listData = n.body;
                    }
                    this.onStart();
                };
                SummonEffectMdr.prototype.onUpdataShake = function () {
                    Tween.remove(this._view);
                    mod.ViewMgr.getIns().shakeUI2(this._view);
                };
                SummonEffectMdr.prototype.onTween = function () {
                    // if (!this._isTween) {
                    //     return;
                    // }
                    var i = ++this._idxTween;
                    var item;
                    if (this._len == 1) {
                        item = this._view.card_0;
                    }
                    else {
                        item = this._view["card_" + i];
                    }
                    var data = this._listData[i - 1];
                    if (item && data) {
                        item.setTween();
                    }
                    else {
                        this.onOver();
                    }
                };
                SummonEffectMdr.prototype.onSkip = function () {
                    if (!this._isTween) {
                        return;
                    }
                    this.onOver(true);
                };
                SummonEffectMdr.prototype.onStart = function () {
                    this._isTween = true;
                    this._view.lab_num.text = "\u6B27\u6C14\u503C " + this._showArgs.luckNum;
                    var len = this._listData.length;
                    if (len == 1) {
                        Tween.get(this._view.card_0).from({ scaleX: 0.1, scaleY: 0.1 }, 500);
                    }
                    else {
                        for (var i = 0; i < this._listData.length; i++) {
                            var card = this._view["card_" + (i + 1)];
                            if (!card) {
                                continue;
                            }
                            Tween.remove(card);
                            Tween.get(card).from({ x: 360, y: 640, scaleX: 0.1, scaleY: 0.1 }, 500);
                        }
                    }
                    Tween.get(this._view).delay(450).exec(Handler.alloc(this, this.onTween));
                    this._view.btn_back.visible = false;
                    this._view.btn_again.visible = false;
                    this._view.cost.visible = false;
                };
                SummonEffectMdr.prototype.onCheckOver = function () {
                    this._count++;
                    if (this._count >= this._listData.length) {
                        this.onUpdateOver();
                        this._count = 0;
                    }
                };
                SummonEffectMdr.prototype.onUpdateOver = function () {
                    this._skip = false;
                    this._isTween = false;
                    this._idxTween = 0;
                    this._view.btn_back.visible = true;
                    this._view.btn_again.visible = true;
                    if (this._showArgs.type == 1 /* Summon */) {
                        mod.GuideMgr.getIns().show(23 /* SecondBack */, this._view.btn_back, Handler.alloc(this, this.hide)); //任务二级返回指引
                    }
                    this._view.cost.visible = true;
                    if (this._showArgs.type == 1 /* Summon */) {
                        //特殊处理
                        var data = this._showArgs.cost;
                        this._view.cost.imgCost = data.cfg.icon;
                        var num = mod.BagUtil.getPropCntByIdx(data.index);
                        var color = num >= data.count ? 8585074 /* GREEN */ : 16731212 /* RED */;
                        if (data.index == 1450000002 /* Xianyu */) {
                            this._view.cost.setLabCost("" + data.count, color);
                        }
                        else {
                            this._view.cost.setLabCost(num + "/" + data.count, color);
                        }
                    }
                    else {
                        var propData = this._showArgs.cost;
                        this._view.cost.imgCost = propData.cfg.icon;
                        var num = mod.BagUtil.getPropCntByIdx(propData.index);
                        var color = num >= propData.count ? 8585074 /* GREEN */ : 16731212 /* RED */;
                        this._view.cost.setLabCost(num + "/" + propData.count, color);
                    }
                };
                SummonEffectMdr.prototype.onOver = function (skip) {
                    if (skip === void 0) { skip = false; }
                    if (this._listData.length == 1) {
                        return;
                    }
                    if (this._skip) {
                        return;
                    }
                    this._skip = skip;
                    for (var i = this._idxTween + 1; i <= 10; i++) {
                        var card = this._view["card_" + i];
                        Tween.remove(card);
                        var point = this.posArr[i];
                        card.x = point[0];
                        card.y = point[1];
                        card.scaleX = card.scaleY = 1;
                        if (skip) {
                            card.setSkip();
                        }
                    }
                };
                SummonEffectMdr.prototype.onHide = function () {
                    if (this._showArgs.type == 1 /* Summon */) {
                        mod.GuideMgr.getIns().triggerGuide(); //触发返回指引
                    }
                    this._count = 0;
                    _super.prototype.onHide.call(this);
                };
                return SummonEffectMdr;
            }(game.EffectMdrBase));
            activity.SummonEffectMdr = SummonEffectMdr;
            __reflect(SummonEffectMdr.prototype, "game.mod.activity.SummonEffectMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonExchangeMainMdr = /** @class */ (function (_super) {
                __extends(SummonExchangeMainMdr, _super);
                function SummonExchangeMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "zhaohuanbiaoqiantubiao",
                            mdr: activity.SummonExchangeMdr,
                            title: "liquanduihuan" /* liquanduihuan */,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "36" /* SummonExchange */],
                        }
                    ];
                    return _this;
                }
                SummonExchangeMainMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                };
                return SummonExchangeMainMdr;
            }(mod.WndBaseMdr));
            activity.SummonExchangeMainMdr = SummonExchangeMainMdr;
            __reflect(SummonExchangeMainMdr.prototype, "game.mod.activity.SummonExchangeMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var SummonExchangeMdr = /** @class */ (function (_super) {
                __extends(SummonExchangeMdr, _super);
                function SummonExchangeMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.ExchangeView);
                    _this._listData = new ArrayCollection();
                    return _this;
                }
                SummonExchangeMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(206 /* Summon */);
                    this._view.list.itemRenderer = activity.SummonIconShopItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.img_bg.source = game.ResUtil.getUiJpg("beijingtu_duihuan");
                    this._view.img_banner.source = game.ResUtil.getUiJpg("guanggaotu_jinghuanjiemian");
                };
                SummonExchangeMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_exchange" /* ON_UPDATE_EXCHANGE */, this.onUpdateList, this);
                };
                SummonExchangeMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateList();
                    this.onUpdateTime();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                SummonExchangeMdr.prototype.onUpdateList = function () {
                    var cfgArr = game.getConfigListByName("draw_gift.json" /* DrawGift */);
                    // let list: ISummonShopData[] = this._proxy.getExchangeList();
                    this._listData.source = cfgArr;
                    var cfg = game.getConfigByNameId("draw_gift.json" /* DrawGift */, 1);
                    this._view.updateBigReward(cfg.items);
                };
                SummonExchangeMdr.prototype.update = function (time) {
                    this.onUpdateTime();
                };
                SummonExchangeMdr.prototype.onUpdateTime = function () {
                    var leftTime = game.TimeUtil.getNextWeekTime() - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, '', game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                SummonExchangeMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                return SummonExchangeMdr;
            }(game.MdrBase));
            activity.SummonExchangeMdr = SummonExchangeMdr;
            __reflect(SummonExchangeMdr.prototype, "game.mod.activity.SummonExchangeMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonGiftMainMdr = /** @class */ (function (_super) {
                __extends(SummonGiftMainMdr, _super);
                function SummonGiftMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "icon_lottery",
                            mdr: activity.SummonSecondMdr,
                            title: "zhanlizhuanpan" /* zhanlizhuanpan */,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */],
                        }
                    ];
                    return _this;
                }
                SummonGiftMainMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                };
                return SummonGiftMainMdr;
            }(mod.WndBaseMdr));
            activity.SummonGiftMainMdr = SummonGiftMainMdr;
            __reflect(SummonGiftMainMdr.prototype, "game.mod.activity.SummonGiftMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var ItemTapEvent = eui.ItemTapEvent;
            var TouchEvent = egret.TouchEvent;
            var SummonGiftMdr = /** @class */ (function (_super) {
                __extends(SummonGiftMdr, _super);
                function SummonGiftMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.SummonGiftView);
                    _this._listData = new ArrayCollection();
                    _this._btnList = new ArrayCollection();
                    return _this;
                }
                SummonGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(206 /* Summon */);
                    this._view.list.itemRenderer = activity.SummonGiftItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_type.itemRenderer = mod.TabSecondItem;
                    this._view.list_type.dataProvider = this._btnList;
                };
                SummonGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onTabChanged, this);
                    this.onNt("on_update_summon_gift" /* ON_UPDATE_SUMMON_GIFT */, this.onUpdateView, this);
                };
                SummonGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("mingyunhaoli" /* mingyunhaoli */));
                    this.onUpdateType();
                    this.onUpdateView();
                };
                SummonGiftMdr.prototype.onUpdateType = function () {
                    var list = [
                        {
                            icon: "jifentubiao",
                            showHint: false
                        },
                        {
                            icon: "feiqiutubiao",
                            showHint: false
                        },
                        {
                            icon: "ouhuangtubiao",
                            showHint: false
                        }
                    ];
                    this._btnList.source = list;
                    this._view.list_type.selectedIndex = 0;
                    this._proxy.mdrType = this._view.list_type.selectedIndex + 1;
                };
                SummonGiftMdr.prototype.onUpdateView = function () {
                    var type = this._proxy.mdrType;
                    if (type == 3) {
                        this._view.img_bg.source = game.ResUtil.getUiJpg("guanggaotu_mingyunhaoli_ouhuang");
                        this._view.img_type.source = "";
                        this._view.lab_count.text = "";
                    }
                    else {
                        this._view.img_bg.source = game.ResUtil.getUiJpg("guanggaotu_mingyunhaoli");
                        this._view.img_type.source = "jifen_" + type;
                        this._view.lab_count.text = "" + this._proxy.getCountByType(type);
                    }
                    this._view.lab_tips.text = game.getLanById(this._proxy.getTipsByType(type));
                    var list = this._proxy.getGiftCfgByType(type);
                    this._listData.source = list;
                    this._view.list.scrollV = 0;
                };
                SummonGiftMdr.prototype.onTabChanged = function (e) {
                    this._proxy.mdrType = e.itemIndex + 1;
                    this.onUpdateView();
                };
                SummonGiftMdr.prototype.onHide = function () {
                    this._proxy.mdrType = 1;
                    _super.prototype.onHide.call(this);
                };
                return SummonGiftMdr;
            }(game.MdrBase));
            activity.SummonGiftMdr = SummonGiftMdr;
            __reflect(SummonGiftMdr.prototype, "game.mod.activity.SummonGiftMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonMainMdr = /** @class */ (function (_super) {
                __extends(SummonMainMdr, _super);
                function SummonMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Zhaohuan */,
                            icon: "zhaohuanbiaoqiantubiao",
                            mdr: activity.SummonMdr,
                            title: "zhaohuan" /* zhaohuan */,
                            bg: 'beijingtu_zhaohuan',
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */]
                        },
                        {
                            btnType: "02" /* Treasure */,
                            icon: "baozangbiaoqiantubiao",
                            mdr: activity.SummonTreasureMdr,
                            title: "summon_treasure_tips1" /* summon_treasure_tips1 */,
                            openIdx: 1041670191 /* SummonTreasure */,
                            bg: 'summon_treasure_bg',
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "02" /* Treasure */]
                        },
                        {
                            btnType: "03" /* Fuchenlinghu */,
                            icon: "fuchenlinghubiaoqiantubiao",
                            mdr: activity.FuchenlinghuMdr,
                            title: "fuchenlinghu_tips1" /* fuchenlinghu_tips1 */,
                            bg: 'fuchenlinghu_bg',
                            openIdx: 1041670263 /* Fuchenlinghu */,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */]
                        },
                        {
                            btnType: "04" /* Huanjingzengli */,
                            icon: "huanjingzenglibiaoqiantubiao",
                            mdr: activity.HuanjingZengliMdr,
                            title: "fuchenlinghu_tips2" /* fuchenlinghu_tips2 */,
                            bg: '',
                            openIdx: 1041670264 /* Huanjingzengli */,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "04" /* Huanjingzengli */]
                        },
                        {
                            btnType: "05" /* Huanjingbaozang */,
                            icon: "huanjingbaozangbiaoqiantubiao",
                            mdr: activity.HuanjingBaozangMdr,
                            title: "fuchenlinghu_tips3" /* fuchenlinghu_tips3 */,
                            bg: '',
                            openIdx: 1041670265 /* Huanjingbaozang */,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "05" /* Huanjingbaozang */]
                        }
                    ];
                    return _this;
                }
                SummonMainMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                };
                SummonMainMdr.prototype.onTabCheck = function (index) {
                    var data = this._btnList.source[index];
                    if (data && data.btnType == "03" /* Fuchenlinghu */) {
                        var proxy = this.retProxy(266 /* Fuchenlinghu */);
                        if (!proxy.isOpenSea(1 /* Sea1 */)) {
                            //处理仙界之海
                            var name = proxy.getSeaNameByType(1 /* Sea1 */);
                            game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips17" /* fuchenlinghu_tips17 */), [name]));
                            return false;
                        }
                    }
                    return _super.prototype.onTabCheck.call(this, index);
                };
                return SummonMainMdr;
            }(mod.WndBaseMdr));
            activity.SummonMainMdr = SummonMainMdr;
            __reflect(SummonMainMdr.prototype, "game.mod.activity.SummonMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var SummonMdr = /** @class */ (function (_super) {
                __extends(SummonMdr, _super);
                function SummonMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.SummonView);
                    _this._isHund = false;
                    return _this;
                }
                SummonMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(206 /* Summon */);
                    // this._view.img_bg.source = ResUtil.getUiJpg("beijingtu_zhaohuan");
                    this._view.img_card.source = "card_2";
                };
                SummonMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_once, TouchEvent.TOUCH_TAP, this.onClickSummon);
                    addEventListener(this._view.btn_ten, TouchEvent.TOUCH_TAP, this.onClickSummonTen);
                    addEventListener(this._view.btn_exchange, TouchEvent.TOUCH_TAP, this.onJumpExchange);
                    addEventListener(this._view.btn_gift, TouchEvent.TOUCH_TAP, this.onJumpGift);
                    addEventListener(this._view.btn_rank, TouchEvent.TOUCH_TAP, this.onJumpRank);
                    addEventListener(this._view.checkbox, TouchEvent.TOUCH_TAP, this.onCheckBox);
                    addEventListener(this._view.btn_gain, TouchEvent.TOUCH_TAP, this.onClickGain);
                    addEventListener(this._view.btn_zhanling, TouchEvent.TOUCH_TAP, this.onClickZhanling);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickPreview);
                    addEventListener(this._view.btn_carnival, TouchEvent.TOUCH_TAP, this.onClickCarnival);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onUpdateHint, this);
                    this.onNt("on_update_summon" /* ON_UPDATE_SUMMON */, this.onUpdateView, this);
                    this.onNt("on_activity_update_by_type" /* ON_ACTIVITY_UPDATE_BY_TYPE */, this.onActivityUpdateByType, this);
                };
                SummonMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.removeEft();
                    this.addEftByParent("zhaohuananniu" /* Zhaohuananniu */, this._view.btn_ten.group_eft, 510, 914);
                    this.onUpdateView();
                    this.showGuide();
                    this.updateCarnival();
                };
                SummonMdr.prototype.onUpdateView = function () {
                    this._view.checkbox.visible = this._proxy.model.count >= 300;
                    // let liquan: PropData = PropData.create(PropIndex.Ticket);
                    // this._view.cost.imgCost = liquan.cfg.icon;
                    var cnt = mod.BagUtil.getPropCntByIdx(1450100007 /* Ticket */);
                    this._view.cost.updateShow([1450100007 /* Ticket */, cnt]);
                    this._view.cost.setLabCost("" + mod.BagUtil.getPropCntByIdx(1450100007 /* Ticket */));
                    this._view.btn_gift.setHint(mod.HintMgr.getHint(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */]));
                    this._view.btn_rank.setHint(mod.HintMgr.getHint(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */]));
                    this._view.btn_exchange.setHint(mod.HintMgr.getHint(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "36" /* SummonExchange */]));
                    var head = this._proxy.model.rank_list[0];
                    if (head) {
                        //this._view.head.updateShow(head.head, head.head_frame, head.sex, head.vip);
                        this._view.head.updateShow(head.head, head.head_frame, head.sex, head.sex, head.role_id);
                        this._view.lab_name.text = "" + head.name;
                    }
                    else {
                        this._view.head.defaultHeadShow();
                        this._view.lab_name.text = "虚位以待";
                    }
                    this.onUpdateMust();
                    this.onUpdateBtn();
                };
                SummonMdr.prototype.onUpdateBtn = function () {
                    var once = this._proxy.getPropDataByType(1 /* Once */);
                    this._view.cost_once.imgCost = once.cfg.icon;
                    var num = mod.BagUtil.getPropCntByIdx(once.index);
                    var color = num >= once.count ? 8585074 /* GREEN */ : 16731212 /* RED */;
                    if (once.index == 1450000002 /* Xianyu */) {
                        this._view.cost_once.setLabCost("" + once.count, color);
                    }
                    else {
                        this._view.cost_once.setLabCost(num + "/" + once.count, color);
                    }
                    this._view.btn_once.setImage("dancizhaohuan");
                    this._view.btn_once.setHint(num >= once.count);
                    this.onUpdateTenBtn();
                };
                SummonMdr.prototype.onUpdateMust = function () {
                    var count = this._proxy.getCount(this._proxy.model.count);
                    if (count < 1) {
                        //隐藏保底
                        this._view.gr.visible = false;
                        this.removeEft();
                        this._eftId_sel = null;
                        return;
                    }
                    if (!this._eftId_sel) {
                        this._eftId_sel = this.addEftByParent("surface_sel" /* SurfaceSel */, this._view.group_eft, 0, 0, 0, null, 0, 1.1);
                    }
                    this._view.icon.setData(this._proxy.getMustGetProp());
                    this._view.img_must.visible = count == 1;
                    this._view.grp_havecount.visible = count > 1;
                    if (count > 1) {
                        this.addBmpFont("" + count, game.BmpTextCfg[215 /* Summon */], this._view.grp_count, true, 1, true);
                    }
                };
                SummonMdr.prototype.isCheck = function (prop) {
                    if (prop.index == 1450000002 /* Xianyu */) {
                        var xianyu = mod.BagUtil.getPropCntByIdx(1450000002 /* Xianyu */);
                        if (xianyu < prop.count) {
                            mod.ViewMgr.getIns().openCommonRechargeView();
                        }
                    }
                    return true;
                };
                SummonMdr.prototype.onClickSummon = function () {
                    var once = this._proxy.getPropDataByType(1 /* Once */);
                    if (this.isCheck(once)) {
                        this.reqSummon(1 /* Once */);
                    }
                };
                SummonMdr.prototype.onClickSummonTen = function () {
                    var ten = this._proxy.getPropDataByType(2 /* Ten */);
                    if (this.isCheck(ten)) {
                        var type = this._isHund ? 3 /* Hund */ : 2 /* Ten */;
                        this.reqSummon(type);
                    }
                };
                SummonMdr.prototype.reqSummon = function (type) {
                    this._proxy.model.type = type;
                    this._proxy.c2s_draw_button_click(this._proxy.model.type);
                };
                SummonMdr.prototype.onJumpExchange = function () {
                    // ViewMgr.getIns().showView(ModName.Activity, MainActivityViewType.SummonExchange);
                    mod.ViewMgr.getIns().openExchangeShopView("0" + 3 /* Type2 */);
                };
                SummonMdr.prototype.onJumpGift = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "32" /* SummonGift */);
                };
                SummonMdr.prototype.onJumpRank = function () {
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "33" /* SummonRank */);
                };
                SummonMdr.prototype.onClickGain = function () {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_item");
                    mod.ViewMgr.getIns().showGainWaysTips(cfg.value[0][0]);
                };
                SummonMdr.prototype.onClickZhanling = function () {
                    //ViewMgr.getIns().showView(ModName.Activity, MainActivityViewType.Giving);
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "45" /* RoleRingMain */, "02" /* TabBtnType02 */);
                };
                SummonMdr.prototype.onClickPreview = function () {
                    var cfgArr = game.getConfigListByName("draw_main.json" /* DrawMain */);
                    var list = [];
                    for (var _i = 0, cfgArr_14 = cfgArr; _i < cfgArr_14.length; _i++) {
                        var cfg = cfgArr_14[_i];
                        list.push({
                            weight: cfg.weight,
                            award: cfg.award,
                            nameStr: "rolering_reward_type" + cfg.quality
                        });
                    }
                    mod.ViewMgr.getIns().openPreviewReward(list);
                };
                SummonMdr.prototype.onCheckBox = function () {
                    this._isHund = !this._isHund;
                    this.onUpdateTenBtn();
                };
                SummonMdr.prototype.onUpdateTenBtn = function () {
                    this._view.checkbox.currentState = this._isHund ? "upAndSelected" : "disabled";
                    var ten = this._proxy.getPropDataByType(this._isHund ? 3 /* Hund */ : 2 /* Ten */);
                    this._view.cost_ten.imgCost = ten.cfg.icon;
                    var count = mod.BagUtil.getPropCntByIdx(ten.index);
                    var color = count >= ten.count ? 8585074 /* GREEN */ : 16731212 /* RED */;
                    if (ten.index == 1450000002 /* Xianyu */) {
                        this._view.cost_ten.setLabCost("" + ten.count, color);
                    }
                    else {
                        this._view.cost_ten.setLabCost(count + "/" + ten.count, color);
                    }
                    this._view.btn_ten.setImage(this._isHund ? "bailianzhaohuan" : "shilianzhaohuan");
                    this._view.btn_ten.setHint(count >= ten.count);
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_item");
                    this._view.img_zhekou.visible = ten.index != cfg.value[0][0];
                };
                SummonMdr.prototype.onUpdateHint = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */])) {
                        this._view.btn_rank.redPoint.visible = data.value;
                    }
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */])) {
                        this._view.btn_gift.redPoint.visible = data.value;
                    }
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "36" /* SummonExchange */])) {
                        this._view.btn_exchange.redPoint.visible = data.value;
                    }
                };
                SummonMdr.prototype.onHide = function () {
                    mod.GuideMgr.getIns().clear(7 /* SummonTen */); //清除指引
                    this._eftId_sel = null;
                    TimeMgr.removeUpdateItem(this);
                    this._rankTime = 0;
                    this._actInfo = null;
                    _super.prototype.onHide.call(this);
                };
                SummonMdr.prototype.showGuide = function () {
                    mod.GuideMgr.getIns().show(7 /* SummonTen */, this._view.btn_ten, Handler.alloc(this, this.onClickSummonTen), 4 /* Back */, { y: -10 });
                };
                /**********************************狂欢庆典**********************************/
                SummonMdr.prototype.onClickCarnival = function () {
                    if (!this._actInfo) {
                        game.PromptBox.getIns().show(game.getLanById("huodongzanweikaiqi" /* huodongzanweikaiqi */));
                        return;
                    }
                    if (!mod.ViewMgr.getIns().isOpenCentralActivity(this._actInfo)) {
                        game.PromptBox.getIns().show("活动未开启");
                        return;
                    }
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "80" /* ActMain */, this._actInfo);
                };
                /** 通用中控活动事件监听 */
                SummonMdr.prototype.onActivityUpdateByType = function (n) {
                    var typeList = n.body;
                    if (typeList.indexOf(19 /* Carnival */) > -1 || typeList.indexOf(23 /* CarnivalNotice */) > -1) {
                        this.updateCarnival();
                    }
                };
                SummonMdr.prototype.updateCarnival = function () {
                    var activityProxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    var actList = activityProxy.getOperActList(19 /* Carnival */);
                    if (!actList.length) {
                        //取不到活动时，取活动预告时间
                        actList = activityProxy.getOperActList(23 /* CarnivalNotice */);
                    }
                    this._actInfo = actList.length ? actList[0] : null;
                    if (!this._actInfo) {
                        this._view.btn_carnival.visible = false;
                        this._view.img_ditu1.visible = false;
                        this._view.lab_carnival.text = "";
                        return;
                    }
                    this._view.btn_carnival.visible = true;
                    this._view.img_ditu1.visible = true;
                    this._rankTime = this._actInfo.c_end_time;
                    this.updateTime();
                    this._view.btn_carnival.redPoint.visible = activityProxy.getEntranceHintByActType(19 /* Carnival */);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                SummonMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                SummonMdr.prototype.updateTime = function () {
                    var leftTime = this._rankTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this._view.btn_carnival.visible = false;
                        this._view.img_ditu1.visible = false;
                        this._view.lab_carnival.text = "";
                        return;
                    }
                    if (this._actInfo.type == 19 /* Carnival */) {
                        this._view.lab_carnival.text = game.getLanById("battle_cue32" /* battle_cue32 */);
                    }
                    else {
                        this._view.lab_carnival.text = game.TimeUtil.formatSecond(leftTime, 'd天H时', true) + "后开启";
                    }
                };
                return SummonMdr;
            }(game.EffectMdrBase));
            activity.SummonMdr = SummonMdr;
            __reflect(SummonMdr.prototype, "game.mod.activity.SummonMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var SummonRankGodMdr = /** @class */ (function (_super) {
                __extends(SummonRankGodMdr, _super);
                function SummonRankGodMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankGodView);
                    _this.isEasyHide = true;
                    return _this;
                }
                SummonRankGodMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(206 /* Summon */);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = activity.SummonRankGodRender;
                    this._view.list_rank.dataProvider = this._itemList;
                };
                SummonRankGodMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_fengyun_list" /* ON_UPDATE_FENGYUN_LIST */, this.updateItemList, this);
                };
                SummonRankGodMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("fengyunlu" /* fengyunlu */));
                    this.updateItemList();
                };
                SummonRankGodMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                SummonRankGodMdr.prototype.updateItemList = function () {
                    var infos = this._proxy.getFengYunRankList();
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                };
                return SummonRankGodMdr;
            }(game.EffectMdrBase));
            activity.SummonRankGodMdr = SummonRankGodMdr;
            __reflect(SummonRankGodMdr.prototype, "game.mod.activity.SummonRankGodMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonRankMainMdr = /** @class */ (function (_super) {
                __extends(SummonRankMainMdr, _super);
                function SummonRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "zhaohuanbiaoqiantubiao",
                            mdr: activity.SummonRankMdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */],
                        }
                    ];
                    return _this;
                }
                SummonRankMainMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                };
                return SummonRankMainMdr;
            }(mod.WndBaseMdr));
            activity.SummonRankMainMdr = SummonRankMainMdr;
            __reflect(SummonRankMainMdr.prototype, "game.mod.activity.SummonRankMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var SummonRankMdr = /** @class */ (function (_super) {
                __extends(SummonRankMdr, _super);
                function SummonRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    return _this;
                }
                SummonRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(206 /* Summon */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._itemList;
                };
                SummonRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_god, TouchEvent.TOUCH_TAP, this.onJumpGod);
                    this.onNt("on_update_rank" /* ON_UPDATE_RANK */, this.onRankUpdate, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onUpdateHint, this);
                };
                SummonRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.onRankUpdate(); //不确定服务端会不会返回数据
                    this.reqRankInfo();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                SummonRankMdr.prototype.onJumpGod = function () {
                    // this.showView();
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "35" /* SummonRankGods */);
                };
                SummonRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                SummonRankMdr.prototype.onRankUpdate = function () {
                    this.updateShow();
                    this.updateTime();
                };
                SummonRankMdr.prototype.initShow = function () {
                    this._view.btn_god.visible = true;
                    var bool = mod.HintMgr.getHint(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */, "35" /* SummonRankGods */]);
                    this._view.btn_god.redPoint.visible = bool;
                    this._view.img_type2.source = "zhaohuancishu";
                    this._view.img_type3.source = "paimingjiangli";
                    // this._view.img_myRank.visible = false;
                    // this._view.lab_rank.x = this._view.img_myRank.x;
                    this._view.timeItem.visible = true;
                    var param = game.getConfigByNameId("param.json" /* Param */, "zhaohuan_rank");
                    //
                    if (+this._proxy.myRank > 0) {
                        this._view.lab_rank.text = "\u6211\u7684\u6392\u884C\uFF1A" + this._proxy.myRank;
                    }
                    else {
                        this._view.lab_rank.text = "召唤" + param.value + "次上榜";
                    }
                    this._view.lab_num.text = "\u6211\u7684\u6B21\u6570\uFF1A" + this._proxy.myRankCount;
                };
                SummonRankMdr.prototype.updateShow = function () {
                    var topInfo = this._proxy.getItemByRank(1);
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    var infos = this._proxy.getRankList();
                    this._itemList.replaceAll(infos);
                };
                SummonRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                SummonRankMdr.prototype.updateTime = function () {
                    var endTime = this._proxy.model.end_time;
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime == 0) {
                        this.reqRankInfo();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                SummonRankMdr.prototype.onUpdateHint = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "33" /* SummonRank */, "35" /* SummonRankGods */])) {
                        this._view.btn_god.redPoint.visible = data.value;
                    }
                };
                SummonRankMdr.prototype.reqRankInfo = function () {
                    this._proxy.c2s_draw_get_rank_info();
                };
                return SummonRankMdr;
            }(game.EffectMdrBase));
            activity.SummonRankMdr = SummonRankMdr;
            __reflect(SummonRankMdr.prototype, "game.mod.activity.SummonRankMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var SummonRankSectionMdr = /** @class */ (function (_super) {
                __extends(SummonRankSectionMdr, _super);
                function SummonRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    return _this;
                }
                SummonRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(206 /* Summon */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                };
                SummonRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_update_rank" /* ON_UPDATE_RANK */, this.onRankUpdate, this);
                };
                SummonRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._section = this._showArgs.rank;
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this.onRankUpdate();
                };
                SummonRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                SummonRankSectionMdr.prototype.onRankUpdate = function () {
                    if (this._section) {
                        this._itemList.source = this._proxy.getListBySection(this._section);
                    }
                    this._view.lab_rank.text = "\u6211\u7684\u6392\u540D\uFF1A" + this._proxy.myRank;
                    this._view.lab_score.text = "\u6211\u7684\u79EF\u5206\uFF1A" + this._proxy.myRankCount;
                };
                return SummonRankSectionMdr;
            }(game.EffectMdrBase));
            activity.SummonRankSectionMdr = SummonRankSectionMdr;
            __reflect(SummonRankSectionMdr.prototype, "game.mod.activity.SummonRankSectionMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            /**召唤系统命运豪礼 */
            var SummonSecondMdr = /** @class */ (function (_super) {
                __extends(SummonSecondMdr, _super);
                function SummonSecondMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "achievement_tab_icon",
                            mdr: activity.SummonGiftMdr,
                            title: 'surface_tips8',
                            // openIdx: 0,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */, "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "rank_tab_icon",
                            mdr: activity.SummonGiftMdr,
                            title: 'surface_tips8',
                            // openIdx: 0,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */, "02" /* TabBtnType02 */]
                        },
                        {
                            btnType: "03" /* TabBtnType03 */,
                            icon: "special_tab_icon",
                            mdr: activity.SummonGiftMdr,
                            title: 'surface_tips8',
                            // openIdx: 0,
                            hintTypes: ["27" /* Activity */, "31" /* SummonMain */, "01" /* Zhaohuan */, "32" /* SummonGift */, "03" /* TabBtnType03 */]
                        }
                    ];
                    return _this;
                }
                SummonSecondMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 206 /* Summon */);
                };
                SummonSecondMdr.prototype.onTabCheck = function (index) {
                    this._proxy.mdrType = index + 1;
                    return _super.prototype.onTabCheck.call(this, index);
                };
                SummonSecondMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._proxy.mdrType = 1;
                };
                return SummonSecondMdr;
            }(mod.WndSecondMdr));
            activity.SummonSecondMdr = SummonSecondMdr;
            __reflect(SummonSecondMdr.prototype, "game.mod.activity.SummonSecondMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            /**浮尘灵壶*/
            var FuchenlinghuMdr = /** @class */ (function (_super) {
                __extends(FuchenlinghuMdr, _super);
                function FuchenlinghuMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.FuchenlinghuView);
                    _this._isHundred = false; //是否是百连召唤
                    return _this;
                }
                FuchenlinghuMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                };
                FuchenlinghuMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_xianling, egret.TouchEvent.TOUCH_TAP, this.onClickBtnXianling, this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickBtnRule, this);
                    addEventListener(this._view.btn_reward, egret.TouchEvent.TOUCH_TAP, this.onClickBtnReward, this);
                    addEventListener(this._view.btn1, egret.TouchEvent.TOUCH_TAP, this.onClickBtn1, this);
                    addEventListener(this._view.btn10, egret.TouchEvent.TOUCH_TAP, this.onClickBtn10, this);
                    addEventListener(this._view.btn_refresh, egret.TouchEvent.TOUCH_TAP, this.onClickBtnRefresh, this);
                    addEventListener(this._view.btn_refresh1, egret.TouchEvent.TOUCH_TAP, this.onClickChange, this);
                    addEventListener(this._view.img_gain, egret.TouchEvent.TOUCH_TAP, this.onClickGain, this);
                    addEventListener(this._view.checkBox, egret.TouchEvent.TOUCH_TAP, this.onClickCheckbox, this);
                    addEventListener(this._view.avatarBaseItem, egret.TouchEvent.TOUCH_TAP, this.onClickAvatarBaseItem, this);
                    this.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.updateView, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                FuchenlinghuMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._isHundred = this._proxy.isHundred;
                    this.updateView();
                };
                FuchenlinghuMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FuchenlinghuMdr.prototype.updateView = function () {
                    if (this._seaType != this._proxy.type) {
                        this._seaType = this._proxy.type;
                        this._view.btn_refresh1.img.source = 'fuchenlinghu_seaname' + this._seaType;
                    }
                    this.updateIcon();
                    this.updateCost();
                    this._view.checkBox.visible = this._proxy.isShowHundredCheckBox(this._seaType);
                    this.updateXianlingHint();
                };
                FuchenlinghuMdr.prototype.updateIcon = function () {
                    var props = this._proxy.getShowProps(this._seaType);
                    for (var i = 0; i < props.length; i++) {
                        var icon = this._view["icon" + i];
                        if (!icon) {
                            continue;
                        }
                        icon.data = props[i];
                    }
                    var guaranteeCnt = this._proxy.getGuaranteeCnt(); //保底次数
                    var zhaohuanCnt = this._proxy.getZhaohuanCnt(this._seaType);
                    var leftCnt = Math.max(guaranteeCnt - zhaohuanCnt, 0);
                    this._view.lb_num.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips6" /* fuchenlinghu_tips6 */), [leftCnt]));
                    var upIndex = this._proxy.getUpIndex(this._seaType);
                    this._view.btn_refresh.visible = !!upIndex;
                    if (!upIndex) {
                        this._view.avatarBaseItem.img_avatar.source = "xianjianjiahao";
                    }
                    else {
                        var propCfg = game.getConfigById(upIndex);
                        if (propCfg && propCfg.param1 && propCfg.param1[0]) {
                            var cfg = game.getConfigById(propCfg.param1[0][0]);
                            this._view.avatarBaseItem.updateShow(cfg);
                        }
                    }
                };
                FuchenlinghuMdr.prototype.updateCost = function () {
                    var costOne = this._proxy.getCost(1 /* Once */);
                    this._view.cost1.updateShow(costOne);
                    this._view.btn1.setHint(this._proxy.canZhaohuan(this._seaType, 1 /* Once */));
                    var countType = this._isHundred ? 3 /* Hund */ : 2 /* Ten */;
                    var costTen = this._proxy.getCost(countType);
                    this._view.cost10.updateShow(costTen);
                    this._view.btn10.label = this._isHundred ? '百连召唤' : '十连召唤';
                    this._view.btn10.setHint(this._proxy.canZhaohuan(this._seaType, countType));
                    this._view.checkBox.currentState = this._isHundred ? "upAndSelected" : "disabled";
                };
                FuchenlinghuMdr.prototype.onClickCheckbox = function () {
                    this._isHundred = !this._isHundred;
                    this._proxy.isHundred = this._isHundred;
                    this.updateCost();
                };
                //点击up道具
                FuchenlinghuMdr.prototype.onClickAvatarBaseItem = function () {
                    var upIndex = this._proxy.getUpIndex(this._seaType);
                    if (!upIndex) {
                        this.onClickBtnRefresh();
                    }
                    else {
                        mod.ViewMgr.getIns().showPropTips(upIndex);
                    }
                };
                FuchenlinghuMdr.prototype.onClickBtnXianling = function () {
                    facade.showView("27" /* Activity */, "112" /* FuchenlinghuXianling */, this._seaType);
                };
                FuchenlinghuMdr.prototype.onClickBtnRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("fuchenlinghu_tips9" /* fuchenlinghu_tips9 */));
                };
                FuchenlinghuMdr.prototype.onClickBtnReward = function () {
                    var cfgObj = game.getConfigByNameId("linghu_quality.json" /* LinghuQuality */, this._seaType);
                    var list = [];
                    var highQualityList = [];
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        var itemData = {
                            weight: cfg.weight,
                            award: cfg.award,
                            nameStr: "rolering_reward_type" + cfg.quality
                        };
                        if (cfg.quality > 5) {
                            highQualityList.unshift(itemData); //6是绿卡，需排在前面
                        }
                        else {
                            list.push(itemData); //其他品质未按照默认QualityType品质处理
                        }
                    }
                    mod.ViewMgr.getIns().openPreviewReward(highQualityList.concat(list));
                };
                FuchenlinghuMdr.prototype.onClickBtnRefresh = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "111" /* FuchenlinghuWish */, this._seaType);
                };
                FuchenlinghuMdr.prototype.onClickChange = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "110" /* FuchenlinghuRefresh */, this._seaType);
                };
                FuchenlinghuMdr.prototype.onClickBtn1 = function () {
                    if (this._proxy.canZhaohuan(this._seaType, 1 /* Once */, true)) {
                        this._proxy.c2s_linghu_oper(1 /* Oper1 */, 1);
                    }
                };
                FuchenlinghuMdr.prototype.onClickBtn10 = function () {
                    var countType = this._isHundred ? 3 /* Hund */ : 2 /* Ten */;
                    if (this._proxy.canZhaohuan(this._seaType, countType, true)) {
                        this._proxy.c2s_linghu_oper(1 /* Oper1 */, this._isHundred ? 3 : 2);
                    }
                };
                FuchenlinghuMdr.prototype.onClickGain = function () {
                    var cost = this._proxy.getCost(1 /* Once */);
                    if (cost && cost[0]) {
                        mod.ViewMgr.getIns().showGainWaysTips(cost[0]);
                    }
                };
                FuchenlinghuMdr.prototype.updateXianlingHint = function () {
                    this._view.btn_xianling.setHint(this._proxy.canXianlingAllType());
                };
                FuchenlinghuMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var cost = this._proxy.getCost(1 /* Once */);
                    if (cost && indexs.indexOf(cost[0]) > -1) {
                        this.updateCost();
                    }
                    var costSpe = this._proxy.getCostSpecial();
                    if (costSpe && indexs.indexOf(costSpe[0]) > -1) {
                        this.updateXianlingHint();
                    }
                };
                return FuchenlinghuMdr;
            }(game.MdrBase));
            activity.FuchenlinghuMdr = FuchenlinghuMdr;
            __reflect(FuchenlinghuMdr.prototype, "game.mod.activity.FuchenlinghuMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuRefreshMdr = /** @class */ (function (_super) {
                __extends(FuchenlinghuRefreshMdr, _super);
                function FuchenlinghuRefreshMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.FuchenlinghuRefreshView);
                    _this._selIdx = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                FuchenlinghuRefreshMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                    this._view.list.itemRenderer = activity.FuchenlinghuRefreshItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                FuchenlinghuRefreshMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                };
                FuchenlinghuRefreshMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._seaType = this._showArgs;
                    this._selIdx = Math.max(0, this._seaType - 1);
                    this.updateView();
                };
                FuchenlinghuRefreshMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                };
                FuchenlinghuRefreshMdr.prototype.updateView = function () {
                    this._listData.replaceAll(game.SeaTypeAry);
                    this._view.list.selectedIndex = this._selIdx;
                };
                FuchenlinghuRefreshMdr.prototype.onClick = function () {
                    var type = this._selIdx + 1;
                    //跟当前选择的类型不一样才处理
                    if (type != this._proxy.type) {
                        this._proxy.c2s_linghu_oper(2 /* Oper2 */, this._selIdx + 1);
                    }
                    this.hide();
                };
                FuchenlinghuRefreshMdr.prototype.onClickList = function (e) {
                    if (this._selIdx == e.itemIndex) {
                        return;
                    }
                    var type = e.itemIndex + 1;
                    if (!this._proxy.isOpenSea(type)) {
                        var desc = game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips17" /* fuchenlinghu_tips17 */), [this._proxy.getSeaNameByType(type)]);
                        game.PromptBox.getIns().show(desc);
                        this._view.list.selectedIndex = this._selIdx;
                        return;
                    }
                    this._selIdx = e.itemIndex;
                };
                return FuchenlinghuRefreshMdr;
            }(game.MdrBase));
            activity.FuchenlinghuRefreshMdr = FuchenlinghuRefreshMdr;
            __reflect(FuchenlinghuRefreshMdr.prototype, "game.mod.activity.FuchenlinghuRefreshMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuWishMdr = /** @class */ (function (_super) {
                __extends(FuchenlinghuWishMdr, _super);
                function FuchenlinghuWishMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.FuchenlinghuWishView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FuchenlinghuWishMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                    this._view.list.itemRenderer = activity.FuchenlinghuAvatarItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                FuchenlinghuWishMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, egret.TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                };
                FuchenlinghuWishMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._seaType = this._showArgs;
                    if (!this._seaType) {
                        return;
                    }
                    this.updateView();
                };
                FuchenlinghuWishMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = null;
                };
                FuchenlinghuWishMdr.prototype.updateView = function () {
                    var upProps = this._proxy.getUpProps(this._seaType);
                    var listData = [];
                    for (var _i = 0, upProps_1 = upProps; _i < upProps_1.length; _i++) {
                        var prop = upProps_1[_i];
                        var propCfg = game.getConfigById(prop[0]);
                        if (propCfg && propCfg.param1) {
                            var cfg = game.getConfigById(propCfg.param1[0][0]);
                            listData.push({
                                cfg: cfg,
                                isBattle: false,
                                showHint: false,
                                isSel: false
                            });
                        }
                    }
                    //上一次选中的
                    if (this._proxy.up) {
                        var itemData = listData[this._proxy.up - 1];
                        if (itemData) {
                            itemData.isSel = true;
                        }
                        this._selIdx = this._proxy.up - 1;
                    }
                    this._listData.replaceAll(listData);
                };
                FuchenlinghuWishMdr.prototype.onClickBtn = function () {
                    if (this._selIdx == null) {
                        return;
                    }
                    //跟上次选择不一样，才发协议
                    if (this._selIdx + 1 != this._proxy.up) {
                        this._proxy.c2s_linghu_oper(3 /* Oper3 */, this._selIdx + 1);
                    }
                    this.hide();
                };
                FuchenlinghuWishMdr.prototype.onClickList = function (e) {
                    var selIdx = e.itemIndex;
                    if (selIdx == this._selIdx) {
                        return;
                    }
                    var list = this._listData.source;
                    var preData = list[this._selIdx];
                    if (preData) {
                        preData.isSel = false;
                        this._listData.itemUpdated(preData);
                    }
                    var data = e.item;
                    data.isSel = true;
                    this._listData.itemUpdated(data);
                    this._selIdx = selIdx;
                };
                return FuchenlinghuWishMdr;
            }(game.MdrBase));
            activity.FuchenlinghuWishMdr = FuchenlinghuWishMdr;
            __reflect(FuchenlinghuWishMdr.prototype, "game.mod.activity.FuchenlinghuWishMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var FuchenlinghuXianlingMdr = /** @class */ (function (_super) {
                __extends(FuchenlinghuXianlingMdr, _super);
                function FuchenlinghuXianlingMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.FuchenlinghuXianlingView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FuchenlinghuXianlingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                };
                FuchenlinghuXianlingMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.rect, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    addEventListener(this._view.btn_refresh, egret.TouchEvent.TOUCH_TAP, this.onClickChange, this);
                    this.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.updateView, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                FuchenlinghuXianlingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._seaType = this._showArgs;
                    if (!this._seaType) {
                        return;
                    }
                    this.updateView();
                    this.addEftByParent('xitongjihuo', this._view.gr_eff, 0, 0);
                };
                FuchenlinghuXianlingMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FuchenlinghuXianlingMdr.prototype.updateView = function () {
                    this._seaType = this._proxy.type;
                    this.updateCost();
                    this._view.btn_refresh.img.source = 'fuchenlinghu_seaname' + this._seaType;
                    var extraProps = this._proxy.getExtraProps(this._seaType);
                    for (var i = 0; i < 6; i++) {
                        var icon = this._view["icon" + i];
                        if (!icon) {
                            continue;
                        }
                        icon.data = extraProps[i];
                    }
                };
                FuchenlinghuXianlingMdr.prototype.updateCost = function () {
                    this._view.costIcon.updateShow(this._proxy.getCostSpecial());
                };
                FuchenlinghuXianlingMdr.prototype.onClick = function () {
                    if (this._proxy.canXianling(this._seaType, true)) {
                        this._proxy.c2s_linghu_oper(4 /* Oper4 */);
                    }
                };
                FuchenlinghuXianlingMdr.prototype.onClickChange = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "110" /* FuchenlinghuRefresh */, this._seaType);
                };
                FuchenlinghuXianlingMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var cost = this._proxy.getCostSpecial();
                    if (cost && indexs.indexOf(cost[0]) > -1) {
                        this.updateCost();
                    }
                };
                return FuchenlinghuXianlingMdr;
            }(game.EffectMdrBase));
            activity.FuchenlinghuXianlingMdr = FuchenlinghuXianlingMdr;
            __reflect(FuchenlinghuXianlingMdr.prototype, "game.mod.activity.FuchenlinghuXianlingMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            /**幻境宝藏*/
            var HuanjingBaozangMdr = /** @class */ (function (_super) {
                __extends(HuanjingBaozangMdr, _super);
                function HuanjingBaozangMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.HuanjingBaozangView);
                    return _this;
                }
                HuanjingBaozangMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                    this._view.list.itemRenderer = activity.HuanjingBaozangItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.scr["$hasScissor"] = true;
                };
                HuanjingBaozangMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.updateView, this);
                };
                HuanjingBaozangMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                HuanjingBaozangMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingBaozangMdr.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("huanjing_baozang.json" /* HuanjingBaozang */);
                    var list = [];
                    var val = this._proxy.total_count;
                    for (var i = 0; i < cfgList.length; i++) {
                        var cfg = cfgList[i];
                        var cfgBefore = cfgList[i - 1];
                        var cfgNext = cfgList[i + 1];
                        var freeStatus = this._proxy.getBaozangStatus(cfg.index, true);
                        var payStatus = this._proxy.getBaozangStatus(cfg.index, false);
                        var before = (cfgBefore && Math.floor((cfg.times - cfgBefore.times) / 2) + cfgBefore.times) || 0;
                        var next = (cfgNext && Math.floor((cfgNext.times - cfg.times) / 2) + cfg.times) || 0;
                        list.push({
                            cfg: cfg,
                            val: val,
                            freeStatus: freeStatus,
                            payStatus: payStatus,
                            before: before,
                            next: next
                        });
                    }
                    this._listData.replaceAll(list);
                    if (cfgList && cfgList[cfgList.length - 1]) {
                        var cfg = cfgList[cfgList.length - 1];
                        if (cfg.gift_id) {
                            var rewards = mod.PayUtil.getRewards(cfg.gift_id);
                            this._view.iconBigReward.data = rewards ? rewards[0] : null;
                        }
                        else if (cfg.reward2) {
                            this._view.iconBigReward.data = cfg.reward2[0];
                        }
                        else if (cfg.reward) {
                            this._view.iconBigReward.data = cfg.reward[0];
                        }
                    }
                    this._view.lb_cnt.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips12" /* fuchenlinghu_tips12 */), [val]));
                };
                HuanjingBaozangMdr.prototype.update = function (time) {
                    var endTime = game.TimeUtil.getNextWeekTime();
                    this._view.timeItem.updateTime(endTime);
                };
                return HuanjingBaozangMdr;
            }(game.MdrBase));
            activity.HuanjingBaozangMdr = HuanjingBaozangMdr;
            __reflect(HuanjingBaozangMdr.prototype, "game.mod.activity.HuanjingBaozangMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var HuanjingZengliItem = /** @class */ (function (_super) {
                __extends(HuanjingZengliItem, _super);
                function HuanjingZengliItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuanjingZengliItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                };
                HuanjingZengliItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.replaceAll(data.cfg.reward);
                    var desc = game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips13" /* fuchenlinghu_tips13 */), [data.cfg.times])
                        + game.TextUtil.addColor("(" + data.cnt + "/" + data.cfg.times + ")", data.cnt >= data.cfg.times ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                    if (data.status == 2 /* Draw */) {
                        this.img_bought.visible = true;
                        this.img_bought.source = "lvseyilingqu";
                        this.btn_buy.visible = false;
                    }
                    else {
                        this.img_bought.visible = false;
                        this.btn_buy.visible = true;
                        if (data.status == 1 /* Finish */) {
                            this.btn_buy.label = game.getLanById("lingqu" /* lingqu */);
                            this.btn_buy.setYellow();
                            this.btn_buy.setHint(true);
                        }
                        else {
                            this.btn_buy.label = game.getLanById("chengshen_goto1" /* chengshen_goto1 */);
                            this.btn_buy.setBlue();
                            this.btn_buy.setHint(false);
                        }
                    }
                };
                HuanjingZengliItem.prototype.onClick = function () {
                    if (this.data.status == 1 /* Finish */) {
                        this._proxy.c2s_linghu_oper(5 /* Oper5 */, this.data.cfg.index);
                    }
                    else {
                        if (this._proxy.isOpenSea(1 /* Sea1 */, true)) {
                            mod.ViewMgr.getIns().showView("27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */);
                        }
                    }
                };
                return HuanjingZengliItem;
            }(mod.BaseGiftItemRender));
            activity.HuanjingZengliItem = HuanjingZengliItem;
            __reflect(HuanjingZengliItem.prototype, "game.mod.activity.HuanjingZengliItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            /**幻境赠礼*/
            var HuanjingZengliMdr = /** @class */ (function (_super) {
                __extends(HuanjingZengliMdr, _super);
                function HuanjingZengliMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    return _this;
                }
                HuanjingZengliMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                    this._view.list.itemRenderer = activity.HuanjingZengliItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.updateBanner('huanjingzengli_banner', true);
                };
                HuanjingZengliMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.updateView, this);
                };
                HuanjingZengliMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                HuanjingZengliMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingZengliMdr.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("huanjing_zengli.json" /* HuanjingZengli */);
                    var list = [];
                    var cnt = this._proxy.total_count;
                    for (var _i = 0, cfgList_7 = cfgList; _i < cfgList_7.length; _i++) {
                        var cfg = cfgList_7[_i];
                        list.push({
                            cfg: cfg,
                            cnt: cnt,
                            status: this._proxy.getZengliStatus(cfg.index)
                        });
                    }
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                    if (cfgList && cfgList[cfgList.length - 1]) {
                        var rewards = cfgList[cfgList.length - 1].reward;
                        if (rewards && rewards[0]) {
                            this._view.updateBigReward(rewards[0]);
                        }
                    }
                };
                HuanjingZengliMdr.prototype.update = function (time) {
                    var endTime = game.TimeUtil.getNextWeekTime();
                    this._view.timeItem.updateTime(endTime);
                };
                return HuanjingZengliMdr;
            }(game.MdrBase));
            activity.HuanjingZengliMdr = HuanjingZengliMdr;
            __reflect(HuanjingZengliMdr.prototype, "game.mod.activity.HuanjingZengliMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureBoxMdr = /** @class */ (function (_super) {
                __extends(SummonTreasureBoxMdr, _super);
                function SummonTreasureBoxMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.SummonTreasureBoxView);
                    _this.isEasyHide = true;
                    return _this;
                }
                SummonTreasureBoxMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(234 /* SummonTreasure */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_onekey.setImage('yijiankaiqi');
                };
                SummonTreasureBoxMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_onekey, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_bag_update_by_bag_type" /* ON_BAG_UPDATE_BY_BAG_TYPE */, this.onBagUpdateByBagType, this);
                };
                SummonTreasureBoxMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                    this._view.secondPop.updateTitleStr(this._showArgs.name);
                    this._view.img_icon.y = this._showArgs.index == 1 ? 141 : 194;
                    this.updateView();
                    this.showEft();
                };
                SummonTreasureBoxMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                SummonTreasureBoxMdr.prototype.updateView = function () {
                    var cfg = this._showArgs;
                    if (cfg.picture) {
                        this._view.img_icon.source = cfg.picture;
                    }
                    this.updateCost();
                    var propCfg = game.GameConfig.getPropConfigById(cfg.itemid);
                    if (!propCfg) {
                        return;
                    }
                    if (propCfg.param1) {
                        var rewardCfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, propCfg.param1[0][0]);
                        this._listData.replaceAll(rewardCfg.content);
                    }
                };
                SummonTreasureBoxMdr.prototype.updateCost = function () {
                    var cfg = this._showArgs;
                    this._view.costIcon.updateShow([cfg.itemid, cfg.cost]);
                    this._view.btn_onekey.setHint(this._proxy.canOneKeyByIndex(cfg.index));
                };
                SummonTreasureBoxMdr.prototype.onClick = function () {
                    var index = this._showArgs.index;
                    if (this._proxy.canOneKeyByIndex(index, true)) {
                        this._proxy.c2s_baozangbox_onekey_open(index);
                    }
                };
                SummonTreasureBoxMdr.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(7 /* BaozangSuipian */) > -1) {
                        this.updateCost();
                    }
                    this.showEft();
                };
                SummonTreasureBoxMdr.prototype.showEft = function () {
                    //判断按钮特效是否显示
                    var cfg = this._showArgs;
                    var isShow = this._proxy.canOneKeyByIndex(cfg.index);
                    this.removeEft();
                    isShow ? this.addEftByParentScale(this._view.btn_onekey.group_eft) : this.removeEft();
                };
                return SummonTreasureBoxMdr;
            }(game.EffectMdrBase));
            activity.SummonTreasureBoxMdr = SummonTreasureBoxMdr;
            __reflect(SummonTreasureBoxMdr.prototype, "game.mod.activity.SummonTreasureBoxMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureMdr = /** @class */ (function (_super) {
                __extends(SummonTreasureMdr, _super);
                function SummonTreasureMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.SummonTreasureView);
                    return _this;
                }
                SummonTreasureMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(234 /* SummonTreasure */);
                    this._view.list.itemRenderer = activity.SummonTreasureList;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_onekey.setImage('yijiankaiqi');
                };
                SummonTreasureMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.treasureItem, egret.TouchEvent.TOUCH_TAP, this.onClickTreasure, this);
                    addEventListener(this._view.btn_onekey, egret.TouchEvent.TOUCH_TAP, this.onClickOneKey, this);
                    this.onNt("on_bag_update_by_bag_type" /* ON_BAG_UPDATE_BY_BAG_TYPE */, this.onBagUpdateByBagType, this);
                };
                SummonTreasureMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                    this.updateView();
                    this.addEftByParentScale(this._view.btn_onekey.group_eft);
                };
                SummonTreasureMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                SummonTreasureMdr.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("treasurebox.json" /* TreasureBox */);
                    var list = [];
                    var cfgs = cfgList.slice(1);
                    while (cfgs.length > 0) {
                        list.push(cfgs.slice(0, 3));
                        cfgs = cfgs.slice(3);
                    }
                    this._listData.replaceAll(list);
                    this._view.treasureItem.data = cfgList[0];
                    var can = this._proxy.canOpenOneKey();
                    this._view.btn_onekey.visible = can;
                    this._view.img_cond.visible = !can;
                    if (can) {
                        this._view.btn_onekey.setHint(this._proxy.canOneKey());
                    }
                };
                SummonTreasureMdr.prototype.onClickTreasure = function () {
                    var cfg = this._proxy.getConfig(1);
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "61" /* SummonTreasureBox */, cfg);
                };
                SummonTreasureMdr.prototype.onClickOneKey = function () {
                    if (this._proxy.canOneKey(true)) {
                        this._proxy.c2s_baozangbox_onekey_open();
                    }
                };
                SummonTreasureMdr.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(7 /* BaozangSuipian */) > -1) {
                        this.updateView();
                    }
                };
                return SummonTreasureMdr;
            }(game.EffectMdrBase));
            activity.SummonTreasureMdr = SummonTreasureMdr;
            __reflect(SummonTreasureMdr.prototype, "game.mod.activity.SummonTreasureMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SummonTreasureTipsMdr = /** @class */ (function (_super) {
                __extends(SummonTreasureTipsMdr, _super);
                function SummonTreasureTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.SummonTreasureTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                SummonTreasureTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._proxy = this.retProxy(234 /* SummonTreasure */);
                };
                SummonTreasureTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_go, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                SummonTreasureTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                SummonTreasureTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                SummonTreasureTipsMdr.prototype.updateView = function () {
                    this._view.propTips.updateShow(this._showArgs);
                    var cfg = this._showArgs.cfg;
                    this._view.descItem.updateShow(cfg.desc);
                    if (cfg.param1) {
                        var rewardCfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, cfg.param1[0][0]);
                        this._listData.replaceAll(rewardCfg.content);
                    }
                };
                // todo
                SummonTreasureTipsMdr.prototype.onClick = function () {
                    // PromptBox.getIns().show(`待处理`);
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "31" /* SummonMain */, "02" /* Treasure */);
                    this.hide();
                };
                return SummonTreasureTipsMdr;
            }(game.MdrBase));
            activity.SummonTreasureTipsMdr = SummonTreasureTipsMdr;
            __reflect(SummonTreasureTipsMdr.prototype, "game.mod.activity.SummonTreasureTipsMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SupremeGitMainMdr = /** @class */ (function (_super) {
                __extends(SupremeGitMainMdr, _super);
                function SupremeGitMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "zhizun_tab",
                            mdr: activity.SupremeGitMdr,
                            title: "supremegit" /* supremegit */,
                            bg: "zhizunlibao_bg",
                            hintTypes: ["27" /* Activity */, "70" /* ChaozhiLibao */, "71" /* SupremeGitMain */, "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "xianchi_tab",
                            mdr: activity.XianchiMdr,
                            title: "xianchi_tips" /* xianchi_tips */,
                            bg: "xianchi_bg",
                            openIdx: 1041670210 /* Xianchi */,
                            hintTypes: ["27" /* Activity */, "70" /* ChaozhiLibao */, "71" /* SupremeGitMain */, "02" /* TabBtnType02 */]
                        }
                    ];
                    return _this;
                }
                return SupremeGitMainMdr;
            }(mod.WndBaseMdr));
            activity.SupremeGitMainMdr = SupremeGitMainMdr;
            __reflect(SupremeGitMainMdr.prototype, "game.mod.activity.SupremeGitMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SupremeGitModel = /** @class */ (function () {
                function SupremeGitModel() {
                    this.infos = [];
                    this.hintType = ["27" /* Activity */, "70" /* ChaozhiLibao */, "71" /* SupremeGitMain */, "01" /* TabBtnType01 */];
                }
                return SupremeGitModel;
            }());
            activity.SupremeGitModel = SupremeGitModel;
            __reflect(SupremeGitModel.prototype, "game.mod.activity.SupremeGitModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_supreme_git_info = msg.s2c_supreme_git_info;
            var SupremeGitProxy = /** @class */ (function (_super) {
                __extends(SupremeGitProxy, _super);
                function SupremeGitProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SupremeGitProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.SupremeGitModel();
                    this.onProto(s2c_supreme_git_info, this.s2c_supreme_git_info, this);
                };
                SupremeGitProxy.prototype.s2c_supreme_git_info = function (n) {
                    var msg = n.body;
                    this._model.infos = msg.infos || []; //服务端会下发所有数据，直接覆盖
                    this.updateHint();
                    this.sendNt("on_update_zhizun_gift_info" /* ON_UDPATE_ZHIZUN_GIFT_INFO */);
                };
                //是否已购买
                SupremeGitProxy.prototype.hasBuy = function (productId) {
                    for (var _i = 0, _a = this._model.infos; _i < _a.length; _i++) {
                        var info = _a[_i];
                        if (info.id == productId) {
                            return info.count > 0;
                        }
                    }
                    return false;
                };
                //是否可以全部购买
                SupremeGitProxy.prototype.canAllBuy = function () {
                    //玩家已购买非0元礼包，则不能全部购买
                    for (var _i = 0, _a = this._model.infos; _i < _a.length; _i++) {
                        var info = _a[_i];
                        var rmb = mod.PayUtil.getRmbValue(info.id);
                        if (rmb <= 0) {
                            continue;
                        }
                        if (info.count > 0) {
                            return false;
                        }
                    }
                    return true;
                };
                //礼包红点
                SupremeGitProxy.prototype.getHint = function (productId) {
                    var hasBuy = this.hasBuy(productId);
                    if (!hasBuy) {
                        //显示对应商品价格，0元礼包的时候，显示红点
                        var rmb = mod.PayUtil.getRmbValue(productId);
                        return rmb == 0;
                    }
                    return false;
                };
                //更新红点
                SupremeGitProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670194 /* SupremeGit */)) {
                        return; //功能未开启
                    }
                    var hint = false;
                    var paramCfg = game.GameConfig.getParamConfigById("supreme_product_id");
                    var items = paramCfg.value;
                    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
                        var productId = items_1[_i];
                        if (this.getHint(productId)) {
                            hint = true;
                            break;
                        }
                    }
                    var hintType = this._model.hintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                /**功能开启刷新按钮*/
                SupremeGitProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670194 /* SupremeGit */) > -1) {
                        this.updateHint();
                    }
                };
                return SupremeGitProxy;
            }(game.ProxyBase));
            activity.SupremeGitProxy = SupremeGitProxy;
            __reflect(SupremeGitProxy.prototype, "game.mod.activity.SupremeGitProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var XianchiModel = /** @class */ (function () {
                function XianchiModel() {
                    this.hintType = ["27" /* Activity */, "70" /* ChaozhiLibao */, "71" /* SupremeGitMain */, "02" /* TabBtnType02 */];
                }
                return XianchiModel;
            }());
            activity.XianchiModel = XianchiModel;
            __reflect(XianchiModel.prototype, "game.mod.activity.XianchiModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_xian_chi_qi_yuan_info = msg.s2c_xian_chi_qi_yuan_info;
            var c2s_xian_chi_qi_yuan_click = msg.c2s_xian_chi_qi_yuan_click;
            var XianchiProxy = /** @class */ (function (_super) {
                __extends(XianchiProxy, _super);
                function XianchiProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianchiProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.XianchiModel();
                    this.onProto(s2c_xian_chi_qi_yuan_info, this.s2c_xian_chi_qi_yuan_info, this);
                };
                XianchiProxy.prototype.c2s_xian_chi_qi_yuan_click = function (type) {
                    var msg = new c2s_xian_chi_qi_yuan_click();
                    msg.button_type = type;
                    this.sendProto(msg);
                };
                XianchiProxy.prototype.s2c_xian_chi_qi_yuan_info = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    if (msg.layer != undefined) {
                        this._model.layer = msg.layer;
                    }
                    this._model.rewards = msg.get_rewards || [];
                    this.updateHint();
                    this.sendNt("on_update_xianchi_info" /* ON_UPDATE_XIANCHI_INFO */);
                };
                XianchiProxy.prototype.getReward = function (index) {
                    if (!this._model.rewards) {
                        return null;
                    }
                    for (var _i = 0, _a = this._model.rewards; _i < _a.length; _i++) {
                        var reward = _a[_i];
                        if (reward.index == index) {
                            return reward.props[0];
                        }
                    }
                    return null;
                };
                //祈福消耗，index，count
                XianchiProxy.prototype.getCost = function () {
                    var cfg = game.GameConfig.getParamConfigById("xianchi_need_item");
                    var costInfo = cfg && cfg.value;
                    return costInfo;
                };
                //大奖道具index
                XianchiProxy.prototype.getLayerRewardIndex = function () {
                    var layer = this._model.layer || 1;
                    var cfg = game.getConfigByNameId("xianchi_reward.json" /* XianchiReward */, layer);
                    if (cfg) {
                        return cfg.rewards[0][0];
                    }
                    var cfgList = game.getConfigListByName("xianchi_reward.json" /* XianchiReward */);
                    var maxCfg = cfgList[cfgList.length - 1];
                    return maxCfg.rewards[0][0];
                };
                //是否领取大奖
                XianchiProxy.prototype.hasDraw = function (layer) {
                    if (!this._model.layer) {
                        return false;
                    }
                    return this._model.layer > layer;
                };
                //是否可以领取大奖
                XianchiProxy.prototype.canDraw = function () {
                    if (!this._model.rewards || !this._model.rewards.length) {
                        return false;
                    }
                    var cfg = game.GameConfig.getParamConfigById("xianchi_count");
                    var maxCnt = cfg && cfg.value;
                    return this._model.rewards.length >= maxCnt;
                };
                Object.defineProperty(XianchiProxy.prototype, "hintType", {
                    get: function () {
                        return this._model.hintType;
                    },
                    enumerable: true,
                    configurable: true
                });
                XianchiProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670210 /* Xianchi */)) {
                        return;
                    }
                    var hint = this.checkHint();
                    var hintType = this._model.hintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                XianchiProxy.prototype.checkHint = function () {
                    if (this.canDraw()) {
                        return true;
                    }
                    var cost = this.getCost();
                    var index = cost[0];
                    var cnt = cost[1];
                    return mod.BagUtil.getPropCntByIdx(index) >= cnt;
                };
                /** 通用背包事件监听 */
                XianchiProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var cost = this.getCost();
                    var index = cost[0];
                    if (indexs.indexOf(index) >= 0) {
                        this.updateHint();
                    }
                };
                return XianchiProxy;
            }(game.ProxyBase));
            activity.XianchiProxy = XianchiProxy;
            __reflect(XianchiProxy.prototype, "game.mod.activity.XianchiProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var SupremeGitItem = /** @class */ (function (_super) {
                __extends(SupremeGitItem, _super);
                function SupremeGitItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SupremeGitItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var proxy = facade.retMod("27" /* Activity */).retProxy(237 /* SupremeGit */);
                    this.img_icon.source = "zhizunimg_" + (this.itemIndex + 1);
                    var rmb = mod.PayUtil.getRmbValue(data);
                    var rmbStr = rmb > 0 ? rmb + mod.PayUtil.getRmbUnit() : "免";
                    this.addBmpFont(rmbStr, game.BmpTextCfg[216 /* Supremegit */], this.gr_font, true, 1, true);
                    this.redPoint.visible = proxy.getHint(data);
                };
                return SupremeGitItem;
            }(mod.BaseRenderer));
            activity.SupremeGitItem = SupremeGitItem;
            __reflect(SupremeGitItem.prototype, "game.mod.activity.SupremeGitItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var SupremeGitView = /** @class */ (function (_super) {
                __extends(SupremeGitView, _super);
                function SupremeGitView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.SupremeGitSkin";
                    return _this;
                }
                return SupremeGitView;
            }(eui.Component));
            activity.SupremeGitView = SupremeGitView;
            __reflect(SupremeGitView.prototype, "game.mod.activity.SupremeGitView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var XianchiItem = /** @class */ (function (_super) {
                __extends(XianchiItem, _super);
                function XianchiItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianchiItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        this.currentState = "lock";
                        return;
                    }
                    this.currentState = "open";
                    this.icon.setData(this.data);
                };
                return XianchiItem;
            }(eui.ItemRenderer));
            activity.XianchiItem = XianchiItem;
            __reflect(XianchiItem.prototype, "game.mod.activity.XianchiItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var ArrayCollection = eui.ArrayCollection;
            var XianchiRewardItem = /** @class */ (function (_super) {
                __extends(XianchiRewardItem, _super);
                function XianchiRewardItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianchiRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(247 /* Xianchi */);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                };
                XianchiRewardItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var desc = game.StringUtil.substitute(game.getLanById("xianchi_tips4" /* xianchi_tips4 */), [this.data.index]);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(desc);
                    var rewards = this.data.rewards;
                    this._rewardList.source = rewards;
                    var hasDraw = this._proxy.hasDraw(this.data.index);
                    this.img_draw.visible = hasDraw;
                };
                return XianchiRewardItem;
            }(mod.BaseListenerRenderer));
            activity.XianchiRewardItem = XianchiRewardItem;
            __reflect(XianchiRewardItem.prototype, "game.mod.activity.XianchiRewardItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var XianchiRewardView = /** @class */ (function (_super) {
                __extends(XianchiRewardView, _super);
                function XianchiRewardView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.XianchiRewardSkin";
                    return _this;
                }
                return XianchiRewardView;
            }(eui.Component));
            activity.XianchiRewardView = XianchiRewardView;
            __reflect(XianchiRewardView.prototype, "game.mod.activity.XianchiRewardView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var XianchiView = /** @class */ (function (_super) {
                __extends(XianchiView, _super);
                function XianchiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.XianchiSkin";
                    return _this;
                }
                return XianchiView;
            }(eui.Component));
            activity.XianchiView = XianchiView;
            __reflect(XianchiView.prototype, "game.mod.activity.XianchiView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var ItemTapEvent = eui.ItemTapEvent;
            var SupremeGitMdr = /** @class */ (function (_super) {
                __extends(SupremeGitMdr, _super);
                function SupremeGitMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.SupremeGitView);
                    _this._selIndex = 0; //当前选中的礼包下标
                    return _this;
                }
                SupremeGitMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(237 /* SupremeGit */);
                    this._list_item = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.SupremeGitItem;
                    this._view.list_item.dataProvider = this._list_item;
                    this._list_reward = new ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._list_reward;
                };
                SupremeGitMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_last, TouchEvent.TOUCH_TAP, this.onClickLast, this);
                    addEventListener(this._view.btn_next, TouchEvent.TOUCH_TAP, this.onClickNext, this);
                    addEventListener(this._view.list_item, ItemTapEvent.ITEM_TAP, this.onClickItem);
                    addEventListener(this._view.btn_buy, TouchEvent.TOUCH_TAP, this.onClickBuy);
                    addEventListener(this._view.btn_allBuy, TouchEvent.TOUCH_TAP, this.onClickAllBuy);
                    this.onNt("on_update_zhizun_gift_info" /* ON_UDPATE_ZHIZUN_GIFT_INFO */, this.onInfoUpdate, this);
                };
                SupremeGitMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateItemList();
                    this.autoSel();
                    this.updateAllBuy();
                };
                SupremeGitMdr.prototype.onHide = function () {
                    this._selIndex = 0;
                    _super.prototype.onHide.call(this);
                };
                SupremeGitMdr.prototype.onInfoUpdate = function () {
                    //数据刷新
                    this.autoSel();
                    this.updateAllBuy();
                    this.updateItemList();
                };
                SupremeGitMdr.prototype.updateImg = function () {
                    this._view.img_lab.source = "zhizunlibao_text_" + (this._selIndex + 1);
                    this._view.img_item.source = "zhizunimg_" + (this._selIndex + 1);
                };
                SupremeGitMdr.prototype.onClickLast = function () {
                    var index = this._selIndex - 1;
                    //边界判断
                    if (index < 0) {
                        return;
                    }
                    this.setSelIndex(index);
                };
                SupremeGitMdr.prototype.onClickNext = function () {
                    var index = this._selIndex + 1;
                    //边界判断
                    var items = this._list_item.source;
                    if (index >= items.length) {
                        return;
                    }
                    this.setSelIndex(index);
                };
                SupremeGitMdr.prototype.onClickItem = function (e) {
                    var index = e.itemIndex;
                    if (index == this._selIndex) {
                        return;
                    }
                    this.setSelIndex(index);
                };
                //购买礼包
                SupremeGitMdr.prototype.onClickBuy = function () {
                    mod.PayUtil.pay(this._selProductId);
                };
                //购买全部礼包
                SupremeGitMdr.prototype.onClickAllBuy = function () {
                    //玩家已购买非0元礼包，则不能全部购买，点击提示 今日不可购买
                    if (!this._canAllBuy) {
                        game.PromptBox.getIns().show(game.getLanById("supremegit_tips" /* supremegit_tips */));
                        return;
                    }
                    mod.PayUtil.pay(200304 /* Id200304 */);
                };
                //刷新一次
                SupremeGitMdr.prototype.initShow = function () {
                    //额外赠送，打折
                    var cfg = game.GameConfig.getParamConfigById("supreme_extra");
                    var cost = cfg.value[0];
                    var index = cost[0];
                    var cnt = cost[1];
                    this._view.coinItem.initIcon(index);
                    //富文本形式
                    // let str = TextUtil.addColor(`${cnt}`, WhiteColor.GREEN);
                    // this._view.coinItem.lab_cost.textFlow = TextUtil.parseHtml(str);
                    this._view.coinItem.lab_cost.text = cnt + "";
                    this._view.coinItem.lab_cost.textColor = 8585074 /* GREEN */;
                    var cntStr = cnt + "仙";
                    this.addBmpFont(cntStr, game.BmpTextCfg[216 /* Supremegit */], this._view.gr_font);
                    var fakeRmb = mod.PayUtil.getFakeRmbValue(200304 /* Id200304 */);
                    var rmb = mod.PayUtil.getRmbValue(200304 /* Id200304 */);
                    this._view.lab_text.text = Math.round((rmb / fakeRmb) * 10) + game.getLanById("store11" /* store11 */);
                    this._view.btn_allBuy.labelDisplay.text = rmb + game.getLanById("yuan" /* yuan */);
                };
                //优先选中未购买的礼包，返回下标
                SupremeGitMdr.prototype.getSelIndex = function () {
                    var items = this.getItems();
                    for (var i = 0; i < items.length; ++i) {
                        var productId = items[i];
                        var hasBuy = this._proxy.hasBuy(productId);
                        if (!hasBuy) {
                            return i; //未购买
                        }
                    }
                    return this._selIndex; //默认返回当前选中的
                };
                //自动选中
                SupremeGitMdr.prototype.autoSel = function () {
                    var index = this.getSelIndex();
                    this.setSelIndex(index);
                };
                //当前列表选中的按钮
                SupremeGitMdr.prototype.setSelIndex = function (index) {
                    this._selIndex = index;
                    this._view.list_item.selectedIndex = this._selIndex;
                    this.updateImg();
                    this.indexUpdateInfo();
                };
                //获取配置表资源参数
                SupremeGitMdr.prototype.updateItemList = function () {
                    var items = this.getItems();
                    this._list_item.source = items;
                };
                SupremeGitMdr.prototype.getItems = function () {
                    var paramCfg = game.GameConfig.getParamConfigById("supreme_product_id");
                    var items = paramCfg.value;
                    return items;
                };
                //选中礼包后刷新
                SupremeGitMdr.prototype.indexUpdateInfo = function () {
                    var items = this._list_item.source;
                    this._selProductId = items[this._selIndex];
                    this.updateReward();
                    this.updateBuy();
                    this.updateBtn();
                };
                //获取礼包奖励
                SupremeGitMdr.prototype.updateReward = function () {
                    var rewards = mod.PayUtil.getRewards(this._selProductId);
                    this._list_reward.source = rewards; //奖励显示
                };
                //刷新购买
                SupremeGitMdr.prototype.updateBuy = function () {
                    var hasBuy = this._proxy.hasBuy(this._selProductId);
                    this._view.img_bought.visible = hasBuy;
                    this._view.btn_buy.visible = !hasBuy;
                    if (this._view.btn_buy.visible) {
                        //显示对应商品价格，0元礼包的时候，显示红点
                        var rmb = mod.PayUtil.getRmbValue(this._selProductId);
                        this._view.btn_buy.labelDisplay.text = rmb + game.getLanById("yuan" /* yuan */);
                        this._view.btn_buy.redPoint.visible = this._proxy.getHint(this._selProductId);
                    }
                };
                //刷新全部购买按钮
                SupremeGitMdr.prototype.updateAllBuy = function () {
                    var hasBuy = this._proxy.hasBuy(200304 /* Id200304 */);
                    this._view.img_allBought.visible = hasBuy;
                    this._view.btn_allBuy.visible = !hasBuy;
                    if (this._view.btn_allBuy.visible) {
                        //玩家已购买非0元礼包，则不能全部购买，按钮置灰
                        var canAllBuy = this._proxy.canAllBuy();
                        this._canAllBuy = canAllBuy;
                        if (!canAllBuy) {
                            this._view.btn_allBuy.setDisabled();
                            this._view.btn_allBuy.touchEnabled = true;
                        }
                        else {
                            this._view.btn_allBuy.setYellow();
                        }
                    }
                };
                //刷新左右切页按钮显示
                SupremeGitMdr.prototype.updateBtn = function () {
                    this._view.btn_last.visible = this._selIndex > 0;
                    var items = this._list_item.source;
                    this._view.btn_next.visible = this._selIndex < items.length - 1;
                };
                return SupremeGitMdr;
            }(game.EffectMdrBase));
            activity.SupremeGitMdr = SupremeGitMdr;
            __reflect(SupremeGitMdr.prototype, "game.mod.activity.SupremeGitMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var XianchiMdr = /** @class */ (function (_super) {
                __extends(XianchiMdr, _super);
                function XianchiMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.XianchiView);
                    return _this;
                }
                XianchiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(247 /* Xianchi */);
                };
                XianchiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rule, TouchEvent.TOUCH_TAP, this.onClickRule);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.btn_big, TouchEvent.TOUCH_TAP, this.onClickBig);
                    addEventListener(this._view.btn_draw, TouchEvent.TOUCH_TAP, this.onClickDraw);
                    this.onNt("on_update_xianchi_info" /* ON_UPDATE_XIANCHI_INFO */, this.onInfoUpdate, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateIndex, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                };
                XianchiMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTips();
                    this.updateCost();
                    this.updateItemList();
                    this.updateHint(mod.HintMgr.getHint(this._proxy.hintType));
                };
                XianchiMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianchiMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xianchi_tips5" /* xianchi_tips5 */));
                };
                XianchiMdr.prototype.onClickReward = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "98" /* XianchiReward */);
                };
                XianchiMdr.prototype.onClickBig = function () {
                    //只做tips展示
                    var index = this._proxy.getLayerRewardIndex();
                    mod.ViewMgr.getIns().showPropTips(index);
                };
                XianchiMdr.prototype.onClickDraw = function () {
                    if (this._canDraw) {
                        this._proxy.c2s_xian_chi_qi_yuan_click(2 /* Big */);
                        return;
                    }
                    if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    this._proxy.c2s_xian_chi_qi_yuan_click(1 /* Draw */);
                };
                XianchiMdr.prototype.onInfoUpdate = function () {
                    //数据刷新
                    this.updateItemList();
                };
                /** 通用背包事件监听 */
                XianchiMdr.prototype.onBagUpdateIndex = function (n) {
                    var indexs = n.body;
                    var costIdx = this._cost[0];
                    if (indexs.indexOf(costIdx) < 0) {
                        return;
                    }
                    this.updateCost();
                };
                /** 通用红点事件监听 */
                XianchiMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(this._proxy.hintType)) {
                        this.updateHint(data.value);
                    }
                };
                XianchiMdr.prototype.initShow = function () {
                    this._itemList = [
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4,
                        this._view.item5,
                        this._view.item6,
                        this._view.item7,
                        this._view.item8,
                        this._view.item9
                    ];
                };
                XianchiMdr.prototype.updateTips = function () {
                    //今日充值达到%s元赠送[%s]
                    var cfg = game.GameConfig.getParamConfigById("xianchi_recharge");
                    var costInfo = cfg && cfg.value;
                    var rmb = costInfo[0][0]; //充值金额
                    var index = costInfo[1][0]; //赠送道具
                    var cnt = costInfo[1][1]; //赠送道具数量
                    var prop = game.PropData.create(index);
                    var propName = prop.getPropNameStr();
                    var curRmb = Math.min(game.RoleVo.ins.day_charge_rmb, rmb);
                    var tipsStr = game.StringUtil.substitute(game.getLanById("xianchi_tips2" /* xianchi_tips2 */), [rmb, propName]) +
                        "X" + cnt + game.TextUtil.addColor("(" + curRmb + "/" + rmb + ")", curRmb >= rmb ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(tipsStr);
                };
                XianchiMdr.prototype.updateCost = function () {
                    this._cost = this._proxy.getCost();
                    this._view.cost.updateShow(this._cost);
                };
                XianchiMdr.prototype.updateItemList = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var index = i + 1;
                        var reward = this._proxy.getReward(index);
                        item.data = reward;
                    }
                    //刷新按钮状态
                    var canDraw = this._proxy.canDraw();
                    this._canDraw = canDraw;
                    var drawStr = canDraw ? game.getLanById("xianchi_tips7" /* xianchi_tips7 */) : game.getLanById("xianchi_tips6" /* xianchi_tips6 */);
                    this._view.btn_draw.labelDisplay.text = drawStr;
                };
                XianchiMdr.prototype.updateHint = function (hint) {
                    this._view.btn_draw.redPoint.visible = hint;
                };
                return XianchiMdr;
            }(game.EffectMdrBase));
            activity.XianchiMdr = XianchiMdr;
            __reflect(XianchiMdr.prototype, "game.mod.activity.XianchiMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var XianchiRewardMdr = /** @class */ (function (_super) {
                __extends(XianchiRewardMdr, _super);
                function XianchiRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.XianchiRewardView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianchiRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.XianchiRewardItem;
                    this._view.list_item.dataProvider = this._itemList;
                    this._proxy = this.retProxy(247 /* Xianchi */);
                };
                XianchiRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                XianchiRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateItemList();
                };
                XianchiRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianchiRewardMdr.prototype.updateItemList = function () {
                    var cfgList = game.getConfigListByName("xianchi_reward.json" /* XianchiReward */);
                    var items = cfgList.concat();
                    this._itemList.source = items;
                };
                return XianchiRewardMdr;
            }(game.EffectMdrBase));
            activity.XianchiRewardMdr = XianchiRewardMdr;
            __reflect(XianchiRewardMdr.prototype, "game.mod.activity.XianchiRewardMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeMainMdr = /** @class */ (function (_super) {
                __extends(TongtiangeMainMdr, _super);
                function TongtiangeMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TtgBtn1 */,
                            icon: "tongtiangebiaoqiantubiao",
                            mdr: activity.TongtiangeMdr1,
                            title: "tongtiange_tips2" /* tongtiange_tips2 */,
                            bg: "tongtiange_bg1",
                            hintTypes: ["27" /* Activity */, "73" /* TongtiangeMain */, "01" /* TtgBtn1 */]
                        },
                        {
                            btnType: "02" /* TtgBtn2 */,
                            icon: "gerentiaozhanbiaoqiantubiao",
                            mdr: activity.TongtiangeMdr2,
                            title: "tongtiange_tips22" /* tongtiange_tips22 */,
                            bg: "",
                            hintTypes: ["27" /* Activity */, "73" /* TongtiangeMain */, "02" /* TtgBtn2 */]
                        },
                        {
                            btnType: "03" /* TtgBtn3 */,
                            icon: "xianzongtiaozhanbiaoqiantubiao",
                            mdr: activity.TongtiangeMdr3,
                            title: "tongtiange_tips23" /* tongtiange_tips23 */,
                            bg: "",
                            hintTypes: ["27" /* Activity */, "73" /* TongtiangeMain */, "03" /* TtgBtn3 */]
                        },
                        {
                            btnType: "04" /* TtgBtn4 */,
                            icon: "libaobiaoqiantubiao",
                            mdr: activity.TongtiangeMdr4,
                            title: "tongtiange_tips24" /* tongtiange_tips24 */,
                            bg: "tongtiange_bg4",
                            hintTypes: ["27" /* Activity */, "73" /* TongtiangeMain */, "04" /* TtgBtn4 */]
                        },
                        {
                            btnType: "05" /* TtgBtn5 */,
                            icon: "duihuanbiaoqiantubiao",
                            mdr: activity.TongtiangeMdr5,
                            title: "tongtiange_tips25" /* tongtiange_tips25 */,
                            bg: "tongtiange_bg5",
                            coinIndex0: 1450000031 /* Tianxingzhu */,
                            hintTypes: ["27" /* Activity */, "73" /* TongtiangeMain */, "05" /* TtgBtn5 */]
                        },
                        {
                            btnType: "06" /* TtgBtn6 */,
                            icon: "tongtiangedenglujianglibiaoqiantubiao",
                            mdr: activity.TongtiangeMdr6,
                            title: "tongtiange_tips26" /* tongtiange_tips26 */,
                            bg: "",
                            hintTypes: ["27" /* Activity */, "73" /* TongtiangeMain */, "06" /* TtgBtn6 */]
                        }
                    ];
                    return _this;
                }
                TongtiangeMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this.onNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, this.onActivityClose, this);
                };
                TongtiangeMainMdr.prototype.onTabChanged = function () {
                    _super.prototype.onTabChanged.call(this);
                    var data = this._btnList.source[this._tab.selectIndex];
                    if (data && data.btnType == "04" /* TtgBtn4 */ && this._proxy.giftLoginHint) {
                        this._proxy.giftLoginHint = false;
                        this._proxy.updateHint4();
                    }
                };
                //活动关闭
                TongtiangeMainMdr.prototype.onActivityClose = function (n) {
                    var actId = n.body;
                    var curActId = this._proxy.getActId();
                    var curActId1 = this._proxy.getActId(true);
                    if ((curActId && curActId == actId) || (curActId1 && curActId1 == actId)) {
                        mod.ViewMgr.getIns().showMain();
                    }
                };
                return TongtiangeMainMdr;
            }(mod.WndBaseMdr));
            activity.TongtiangeMainMdr = TongtiangeMainMdr;
            __reflect(TongtiangeMainMdr.prototype, "game.mod.activity.TongtiangeMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeModel = /** @class */ (function () {
                function TongtiangeModel() {
                    //列表数据，value=1为黄金屋，rank_num为层数
                    this.role_list = {};
                    //排名（个人，宗门）
                    this.rank_no = 0;
                    this.rank_value = 0;
                    //排行榜玩家数据
                    this.role_rank_list = {};
                    //宗门列表数据
                    this.guild_rank_list = {};
                    //我的建造的次数
                    this.my_build_num = 0;
                    //宗门建造的次数
                    this.guild_build_num = 0;
                    //挑战奖励列表
                    this.role_challenge_list = {};
                    //宗门挑战奖励列表
                    this.guild_challenge_list = {};
                    //挑战阶段奖励列表
                    this.stage_list = {};
                    //兑换列表
                    this.exchange_list = {};
                    //登录奖励列表
                    this.login_reward_list = {};
                    //礼包数据
                    this.gift_list = {};
                    //上期排行数据
                    this.last_rank_no = 0;
                    this.last_build_cnt = 0;
                    this.last_role_list = {};
                    this.last_guild_list = {};
                    this.hintPath = {
                        1: ["27" /* Activity */, "73" /* TongtiangeMain */, "01" /* TtgBtn1 */],
                        2: ["27" /* Activity */, "73" /* TongtiangeMain */, "02" /* TtgBtn2 */],
                        3: ["27" /* Activity */, "73" /* TongtiangeMain */, "03" /* TtgBtn3 */],
                        4: ["27" /* Activity */, "73" /* TongtiangeMain */, "04" /* TtgBtn4 */],
                        5: ["27" /* Activity */, "73" /* TongtiangeMain */, "05" /* TtgBtn5 */],
                        6: ["27" /* Activity */, "73" /* TongtiangeMain */, "06" /* TtgBtn6 */]
                    };
                }
                return TongtiangeModel;
            }());
            activity.TongtiangeModel = TongtiangeModel;
            __reflect(TongtiangeModel.prototype, "game.mod.activity.TongtiangeModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_attic_storey_show = msg.c2s_attic_storey_show;
            var s2c_attic_storey_show = msg.s2c_attic_storey_show;
            var c2s_attic_rank_show = msg.c2s_attic_rank_show;
            var s2c_attic_rank_show = msg.s2c_attic_rank_show;
            var c2s_attic_build = msg.c2s_attic_build;
            var s2c_attic_build = msg.s2c_attic_build;
            var s2c_attic_role_info = msg.s2c_attic_role_info;
            var c2s_attic_guild_challenge_show = msg.c2s_attic_guild_challenge_show;
            var s2c_attic_guild_challenge_show = msg.s2c_attic_guild_challenge_show;
            var c2s_attic_exchange = msg.c2s_attic_exchange;
            var s2c_attic_exchange = msg.s2c_attic_exchange;
            var s2c_update_attic_login_reward = msg.s2c_update_attic_login_reward;
            var c2s_attic_get_reward = msg.c2s_attic_get_reward;
            var c2s_attic_item_buy_gift = msg.c2s_attic_item_buy_gift;
            var s2c_attic_item_buy_gift = msg.s2c_attic_item_buy_gift;
            var s2c_update_attic_challenge_data = msg.s2c_update_attic_challenge_data;
            var TimeMgr = base.TimeMgr;
            var c2s_attic_done_rank_show = msg.c2s_attic_done_rank_show;
            var s2c_attic_done_rank_show = msg.s2c_attic_done_rank_show;
            /**
             * @description 通天阁系统
             */
            var TongtiangeProxy = /** @class */ (function (_super) {
                __extends(TongtiangeProxy, _super);
                function TongtiangeProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //礼包登录红点
                    _this.giftLoginHint = true;
                    _this._buildCost = {};
                    _this._previewRewardMap = {};
                    _this._maxPersonalType = 0;
                    _this._personChallengeCfg = {};
                    _this._totalStage = 0;
                    return _this;
                }
                Object.defineProperty(TongtiangeProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                TongtiangeProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.TongtiangeModel();
                    this.onProto(s2c_attic_storey_show, this.s2c_attic_storey_show, this);
                    this.onProto(s2c_attic_rank_show, this.s2c_attic_rank_show, this);
                    this.onProto(s2c_attic_build, this.s2c_attic_build, this);
                    this.onProto(s2c_attic_role_info, this.s2c_attic_role_info, this);
                    this.onProto(s2c_update_attic_challenge_data, this.s2c_update_attic_challenge_data, this);
                    this.onProto(s2c_attic_guild_challenge_show, this.s2c_attic_guild_challenge_show, this);
                    this.onProto(s2c_attic_exchange, this.s2c_attic_exchange, this);
                    this.onProto(s2c_update_attic_login_reward, this.s2c_update_attic_login_reward, this);
                    this.onProto(s2c_attic_item_buy_gift, this.s2c_attic_item_buy_gift, this);
                    this.onProto(s2c_attic_done_rank_show, this.s2c_attic_done_rank_show, this);
                };
                /**
                 * 请求摘星楼界面
                 * @param type 1.首次打开界面2.进行滑动
                 * @param start 起始层
                 * @param end 结束层
                 */
                TongtiangeProxy.prototype.c2s_attic_storey_show = function (type, start, end) {
                    var msg = new c2s_attic_storey_show();
                    msg.act_id = this.getActId();
                    msg.type = type;
                    if (start != null) {
                        msg.start_num = start;
                    }
                    if (end != null) {
                        msg.end_num = end;
                    }
                    this.sendProto(msg);
                };
                //返回摘星楼界面
                TongtiangeProxy.prototype.s2c_attic_storey_show = function (n) {
                    var msg = n.body;
                    if (msg.first_data != null) {
                        this._model.first_data = msg.first_data;
                    }
                    if (msg.role_list != null) {
                        for (var _i = 0, _a = msg.role_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.role_list[item.rank_num] = item;
                            //保留请求的最后一名
                            if (!this.minRankNo) {
                                this.minRankNo = item.rank_num;
                            }
                            this.minRankNo = Math.min(this.minRankNo, item.rank_num);
                        }
                    }
                    this.sendNt("on_update_tongtiange_storey_info" /* ON_UPDATE_TONGTIANGE_STOREY_INFO */);
                };
                /**
                 * 请求通天阁排行界面
                 * @param type 1.个人2.宗门
                 * @param start 默认请求1
                 * @param end 默认请求3
                 */
                TongtiangeProxy.prototype.c2s_attic_rank_show = function (type, start, end) {
                    if (start === void 0) { start = 1; }
                    if (end === void 0) { end = 3; }
                    var msg = new c2s_attic_rank_show();
                    msg.act_id = this.getActId(true);
                    msg.type = type;
                    msg.start_num = start;
                    msg.end_num = end;
                    this.sendProto(msg);
                };
                //返回通天阁排行界面
                TongtiangeProxy.prototype.s2c_attic_rank_show = function (n) {
                    var msg = n.body;
                    this._model.rank_no = msg.rank_no != null ? msg.rank_no : 0;
                    this._model.rank_value = msg.my_value != null ? msg.my_value : 0;
                    if (msg.role_list != null) {
                        for (var _i = 0, _a = msg.role_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.role_rank_list[item.rank_num] = item;
                        }
                    }
                    if (msg.guild_list != null) {
                        for (var _b = 0, _c = msg.guild_list; _b < _c.length; _b++) {
                            var item = _c[_b];
                            this._model.guild_rank_list[item.rank_num] = item;
                        }
                    }
                    this.sendNt("on_update_tongtiange_rank_info" /* ON_UPDATE_TONGTIANGE_RANK_INFO */);
                };
                //建造 1.单词2.十次3.勾选
                TongtiangeProxy.prototype.c2s_attic_build = function (type) {
                    var msg = new c2s_attic_build();
                    msg.act_id = this.getActId();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //建造返回
                TongtiangeProxy.prototype.s2c_attic_build = function (n) {
                    var msg = n.body;
                    if (msg.num != null) {
                        this._model.my_build_num = msg.num;
                    }
                    if (msg.role_list != null) {
                        for (var _i = 0, _a = msg.role_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.role_list[item.rank_num] = item;
                        }
                    }
                    this.updateHint1();
                    this.sendNt("on_update_tongtiange_build_success" /* ON_UPDATE_TONGTIANGE_BUILD_SUCCESS */);
                };
                //登录下发或者隔天下发
                TongtiangeProxy.prototype.s2c_attic_role_info = function (n) {
                    var msg = n.body;
                    this._model.my_build_num = msg.num != null ? msg.num : 0;
                    this._model.role_challenge_list = {};
                    if (msg.role_challenge_list != null) {
                        for (var _i = 0, _a = msg.role_challenge_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.role_challenge_list[item.index] = item;
                        }
                    }
                    this._model.guild_challenge_list = {};
                    if (msg.guild_challenge_list != null) {
                        for (var _b = 0, _c = msg.guild_challenge_list; _b < _c.length; _b++) {
                            var item = _c[_b];
                            this._model.guild_challenge_list[item.index] = item;
                        }
                    }
                    this._model.stage_list = {};
                    if (msg.stage_list != null) {
                        for (var _d = 0, _e = msg.stage_list; _d < _e.length; _d++) {
                            var item = _e[_d];
                            this._model.stage_list[item.stage] = item;
                        }
                    }
                    this._model.exchange_list = {};
                    if (msg.exchange_list != null) {
                        for (var _f = 0, _g = msg.exchange_list; _f < _g.length; _f++) {
                            var item = _g[_f];
                            this._model.exchange_list[item.index] = item;
                        }
                    }
                    this._model.login_reward_list = {};
                    if (msg.login_reward_list != null) {
                        for (var _h = 0, _j = msg.login_reward_list; _h < _j.length; _h++) {
                            var item = _j[_h];
                            this._model.login_reward_list[item.index] = item;
                        }
                    }
                    this._model.gift_list = {};
                    if (msg.gift_list != null) {
                        for (var _k = 0, _l = msg.gift_list; _k < _l.length; _k++) {
                            var item = _l[_k];
                            this._model.gift_list[item.index] = item;
                        }
                    }
                    this.checkOpen();
                    this.sendNt("on_update_tongtiange_info" /* ON_UPDATE_TONGTIANGE_INFO */);
                };
                //更新数据(只更新数据)
                TongtiangeProxy.prototype.s2c_update_attic_challenge_data = function (n) {
                    var msg = n.body;
                    var types = [];
                    if (msg.challenge_list != null) {
                        for (var _i = 0, _a = msg.challenge_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            var type = item.type; //区分类型更新
                            if (type == 1) {
                                this._model.role_challenge_list[item.index] = item;
                                if (types.indexOf(1) < 0) {
                                    types.push(1);
                                }
                            }
                            else {
                                this._model.guild_challenge_list[item.index] = item;
                                if (types.indexOf(2) < 0) {
                                    types.push(2);
                                }
                            }
                        }
                    }
                    if (msg.stage_list != null) {
                        for (var _b = 0, _c = msg.stage_list; _b < _c.length; _b++) {
                            var item = _c[_b];
                            this._model.stage_list[item.stage] = item;
                        }
                        if (types.indexOf(1) < 0) {
                            types.push(1);
                        }
                    }
                    if (types.indexOf(1) > -1) {
                        this.updateHint2();
                    }
                    if (types.indexOf(2) > -1) {
                        this.updateHint3();
                    }
                    this.sendNt("on_update_tongtiange_challenge_info" /* ON_UPDATE_TONGTIANGE_CHALLENGE_INFO */);
                };
                //请求宗门挑战界面
                TongtiangeProxy.prototype.c2s_attic_guild_challenge_show = function () {
                    var msg = new c2s_attic_guild_challenge_show();
                    this.sendProto(msg);
                };
                //返回宗门挑战界面数据
                TongtiangeProxy.prototype.s2c_attic_guild_challenge_show = function (n) {
                    var msg = n.body;
                    this._model.guild_build_num = msg.num != null ? msg.num : 0;
                    if (msg.challenge_list != null) {
                        for (var _i = 0, _a = msg.challenge_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.guild_challenge_list[item.index] = item;
                        }
                    }
                    this.updateHint3();
                    this.sendNt("on_update_tongtiange_guild_challenge_info" /* ON_UPDATE_TONGTIANGE_GUILD_CHALLENGE_INFO */);
                };
                //兑换道具, place数组索引
                TongtiangeProxy.prototype.c2s_attic_exchange = function (index, place) {
                    var msg = new c2s_attic_exchange();
                    msg.index = index;
                    msg.place = place;
                    this.sendProto(msg);
                };
                //兑换道具返回
                TongtiangeProxy.prototype.s2c_attic_exchange = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.exchange_list[item.index] = item;
                        }
                    }
                    this.updateHint5();
                    this.sendNt("on_update_tongtiange_exchange_info" /* ON_UPDATE_TONGTIANGE_EXCHANGE_INFO */);
                };
                //更新登录奖励数据
                TongtiangeProxy.prototype.s2c_update_attic_login_reward = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.login_reward_list[item.index] = item;
                        }
                    }
                    this.updateHint6();
                    this.sendNt("on_update_tongtiange_login_info" /* ON_UPDATE_TONGTIANGE_LOGIN_INFO */);
                };
                //通天阁领取奖励(通用) type:1.挑战领取2.挑战目标领取3.宗门挑战领取4.登录领取
                TongtiangeProxy.prototype.c2s_attic_get_reward = function (type, index) {
                    var msg = new c2s_attic_get_reward();
                    msg.type = type;
                    msg.index = index;
                    this.sendProto(msg);
                };
                //礼包:购买道具
                TongtiangeProxy.prototype.c2s_attic_item_buy_gift = function (index) {
                    var msg = new c2s_attic_item_buy_gift();
                    msg.index = index;
                    this.sendProto(msg);
                };
                //返回:礼包:购买道具数据
                TongtiangeProxy.prototype.s2c_attic_item_buy_gift = function (n) {
                    var msg = n.body;
                    if (msg.data != null) {
                        this._model.gift_list[msg.data.index] = msg.data;
                    }
                    this.updateHint4();
                    this.sendNt("on_update_tongtiange_gift_info" /* ON_UPDATE_TONGTIANGE_GIFT_INFO */);
                };
                /**
                 * 请求通天阁上一期排行界面
                 * @param type 1.个人2.宗门
                 * @param start 起始层
                 * @param end 结束层
                 */
                TongtiangeProxy.prototype.c2s_attic_done_rank_show = function (type, start, end) {
                    if (start === void 0) { start = 1; }
                    if (end === void 0) { end = 10; }
                    var msg = new c2s_attic_done_rank_show();
                    msg.act_id = this.getActId(true);
                    msg.type = type;
                    msg.start_num = start;
                    msg.end_num = end;
                    this.sendProto(msg);
                };
                // 返回请求通天阁上一期排行界面
                TongtiangeProxy.prototype.s2c_attic_done_rank_show = function (n) {
                    var msg = n.body;
                    if (msg.rank_no != null) {
                        this._model.last_rank_no = msg.rank_no;
                    }
                    if (msg.my_value != null) {
                        this._model.last_build_cnt = msg.my_value;
                    }
                    if (msg.role_list != null) {
                        for (var _i = 0, _a = msg.role_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.last_role_list[item.rank_num] = item;
                        }
                    }
                    if (msg.guild_list != null) {
                        for (var _b = 0, _c = msg.guild_list; _b < _c.length; _b++) {
                            var item = _c[_b];
                            this._model.last_guild_list[item.rank_num] = item;
                        }
                    }
                    this.sendNt("on_update_tongtiange_last_rank_info" /* ON_UPDATE_TONGTIANGE_LAST_RANK_INFO */);
                };
                /**================================= 协议end =================================*/
                TongtiangeProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670199 /* Tongtiange */) > -1) {
                        this.checkOpen();
                    }
                };
                TongtiangeProxy.prototype.onOpenFuncInit = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670199 /* Tongtiange */) > -1) {
                        this.checkOpen();
                    }
                };
                TongtiangeProxy.prototype.onActivityInit = function (n) {
                    this.checkOpen();
                };
                TongtiangeProxy.prototype.onActivityUpdateByType = function (n) {
                    var types = n.body;
                    if (types.indexOf(7 /* TongtiangeRankReward */) > -1
                        || types.indexOf(6 /* TongtiangeReward */) > -1) {
                        this.checkOpen();
                    }
                };
                TongtiangeProxy.prototype.checkOpen = function () {
                    var isOpen = this.isOpen();
                    DEBUG && console.log("tongtiange attic", isOpen);
                    mod.BtnIconMgr.insLeft().updateOpen(1041670199 /* Tongtiange */, isOpen);
                    if (isOpen) {
                        this.updateHint();
                    }
                };
                //isRank=true，为排行榜奖励
                TongtiangeProxy.prototype.getActId = function (isRank) {
                    if (isRank === void 0) { isRank = false; }
                    var actData = this.getActData(isRank);
                    return actData ? actData.act_id : 0;
                };
                TongtiangeProxy.prototype.getActData = function (isRank) {
                    if (isRank === void 0) { isRank = false; }
                    var actType = isRank ? 7 /* TongtiangeRankReward */ : 6 /* TongtiangeReward */;
                    var proxy = game.getProxy("27" /* Activity */, 50 /* Activity */);
                    return proxy.getOperActByType(actType);
                };
                //活动开启否
                TongtiangeProxy.prototype.isOpen = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670199 /* Tongtiange */)) {
                        return false;
                    }
                    var actData = this.getActData();
                    if (!actData) {
                        return false;
                    }
                    var curTime = TimeMgr.time.serverTimeSecond;
                    return actData.c_begin_time <= curTime && curTime <= actData.c_end_time;
                };
                //活动结束时间
                TongtiangeProxy.prototype.getEndTime = function () {
                    var actData = this.getActData();
                    return actData && actData.c_end_time || 0;
                };
                /**活动最后一天提示*/
                TongtiangeProxy.prototype.checkActTips = function (type) {
                    var endTime = this.getEndTime();
                    mod.ViewMgr.getIns().showActTips(endTime, type);
                };
                //建造消耗
                TongtiangeProxy.prototype.getBuildCost = function (isTen) {
                    if (isTen === void 0) { isTen = false; }
                    var cnt = isTen ? 10 : 1;
                    if (this._buildCost[cnt]) {
                        return this._buildCost[cnt];
                    }
                    var paramCfg = game.GameConfig.getParamConfigById('attic_cost');
                    var value = paramCfg.value;
                    var cost = [value[0], value[1] * cnt];
                    this._buildCost[cnt] = cost;
                    return cost;
                };
                //能否建造
                TongtiangeProxy.prototype.canBuild = function (isTen, isTips) {
                    if (isTen === void 0) { isTen = false; }
                    if (isTips === void 0) { isTips = false; }
                    var cost = this.getBuildCost(isTen);
                    if (!cost) {
                        return false;
                    }
                    return mod.BagUtil.checkPropCnt(cost[0], cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //登陆奖励的状态
                TongtiangeProxy.prototype.getLoginStatus = function (index) {
                    var info = this._model.login_reward_list[index];
                    if (info) {
                        return info.status;
                    }
                    return 0 /* NotFinish */;
                };
                //礼包限购次数
                TongtiangeProxy.prototype.getGiftLimitCnt = function (index) {
                    var cfg = game.getConfigByNameId("attic_gift.json" /* TongtiangeGift */, index);
                    if (!cfg) {
                        return 0;
                    }
                    if (cfg.type == 1) {
                        var shopCfg = game.getConfigByNameId("shop.json" /* Store */, cfg.shop_index);
                        return shopCfg && shopCfg.lmt_cnt || 0;
                    }
                    var cfgObj = game.getConfigByNameId("direct_shop.json" /* DirectShop */, 10 /* Tongtiange */);
                    if (cfgObj && cfgObj[cfg.shop_index]) {
                        return cfgObj[cfg.shop_index].param1;
                    }
                    return 0;
                };
                //礼包剩余购买次数
                TongtiangeProxy.prototype.getGiftLeftCnt = function (index) {
                    var boughtCnt = this.getGiftBoughtCnt(index);
                    var limitCnt = this.getGiftLimitCnt(index);
                    return Math.max(0, limitCnt - boughtCnt);
                };
                //礼包的已购买次数
                TongtiangeProxy.prototype.getGiftBoughtCnt = function (index) {
                    var info = this._model.gift_list[index];
                    return info ? info.count : 0;
                };
                //奖励预览 1金装2普通
                TongtiangeProxy.prototype.getPreviewRewards = function (type) {
                    if (this._previewRewardMap[type]) {
                        return this._previewRewardMap[type];
                    }
                    var actData = this.getActData();
                    if (!actData || !actData.reward_list) {
                        return [];
                    }
                    for (var _i = 0, _a = actData.reward_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        var itemType = item.cond_1[0];
                        if (!this._previewRewardMap[itemType]) {
                            this._previewRewardMap[itemType] = [];
                        }
                        for (var _b = 0, _c = item.rewards; _b < _c.length; _b++) {
                            var reward = _c[_b];
                            this._previewRewardMap[itemType].push([reward.idx.toNumber(), reward.cnt]);
                        }
                    }
                    return this._previewRewardMap[type];
                };
                //第一名玩家信息
                TongtiangeProxy.prototype.getTopPlayerInfo = function () {
                    return this._model.first_data;
                };
                //建造次数
                TongtiangeProxy.prototype.getBuildCnt = function (isGuild) {
                    if (isGuild === void 0) { isGuild = false; }
                    return isGuild ? this._model.guild_build_num : this._model.my_build_num;
                };
                //排行榜排名（个人，宗门）
                TongtiangeProxy.prototype.getRankNo = function () {
                    return this._model.rank_no;
                };
                //上榜所需次数
                TongtiangeProxy.prototype.getRankCnt = function (isGuild) {
                    if (isGuild === void 0) { isGuild = false; }
                    var actData = this.getActData(true);
                    if (!actData || !actData.param) {
                        return 0;
                    }
                    return actData.param[isGuild ? 1 : 0];
                };
                TongtiangeProxy.prototype.getChallengeCfgByType = function (type) {
                    return game.getConfigByNameId("attic_challenge.json" /* TongtiangeChallenge */, type);
                };
                //个人挑战的最大轮次
                TongtiangeProxy.prototype.getMaxPersonalType = function () {
                    if (this._maxPersonalType) {
                        return this._maxPersonalType;
                    }
                    var cfgObj = this.getChallengeCfgByType(1);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (cfg) {
                            this._maxPersonalType = Math.max(this._maxPersonalType, cfg.stage);
                        }
                    }
                    return this._maxPersonalType;
                };
                //个人挑战的阶段配置
                TongtiangeProxy.prototype.getPersonChallengeCfg = function (stage) {
                    if (this._personChallengeCfg[stage]) {
                        return this._personChallengeCfg[stage];
                    }
                    var cfgObj = this.getChallengeCfgByType(1);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (!this._personChallengeCfg[cfg.stage]) {
                            this._personChallengeCfg[cfg.stage] = [];
                        }
                        this._personChallengeCfg[cfg.stage].push(cfg);
                    }
                    return this._personChallengeCfg[stage];
                };
                //获取挑战的全部轮次
                TongtiangeProxy.prototype.getTotalStage = function () {
                    if (this._totalStage) {
                        return this._totalStage;
                    }
                    var stageAry = [];
                    var cfgObj = this.getChallengeCfgByType(1);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (cfg && stageAry.indexOf(cfg.stage) < 0) {
                            stageAry.push(cfg.stage);
                        }
                    }
                    this._totalStage = stageAry.length;
                    return stageAry.length;
                };
                //获取完成的挑战轮次
                TongtiangeProxy.prototype.getDoneStage = function () {
                    var stageMap = this._model.stage_list;
                    var doneCnt = 0;
                    for (var key in stageMap) {
                        var item = stageMap[key];
                        if (item && item.is_finish) {
                            doneCnt++;
                        }
                    }
                    return doneCnt;
                };
                //某一阶段的全部完成
                TongtiangeProxy.prototype.isStageDone = function (stage) {
                    var cfgList = this.getPersonChallengeCfg(stage);
                    for (var _i = 0, cfgList_8 = cfgList; _i < cfgList_8.length; _i++) {
                        var cfg = cfgList_8[_i];
                        var info = this._model.role_challenge_list[cfg.index];
                        if (!info || (info && info.status != 2)) {
                            return false;
                        }
                    }
                    return true;
                };
                //当前轮次
                TongtiangeProxy.prototype.getCurStage = function () {
                    //某一阶段的任务全部完成就跳到下一阶段，不需要阶段奖励领取
                    var maxStage = this.getMaxPersonalType();
                    for (var i = 1; i <= maxStage; i++) {
                        var stageInfo = this._model.stage_list[i];
                        if (!stageInfo) {
                            return i;
                        }
                        if (!this.isStageDone(i)) {
                            return i;
                        }
                    }
                    var doneStage = this.getDoneStage();
                    var totalStage = this.getTotalStage();
                    if (doneStage >= totalStage) {
                        return totalStage;
                    }
                    return 1;
                };
                //前面轮次的最大次数总和
                TongtiangeProxy.prototype.getPreStagesCnt = function () {
                    var curStage = this.getCurStage(); //当前轮次
                    var cnt = 0;
                    for (var i = 1; i < curStage; i++) {
                        var cfgList = this.getPersonChallengeCfg(i);
                        if (!cfgList || !cfgList.length) {
                            continue;
                        }
                        var lastCfg = cfgList[cfgList.length - 1];
                        if (lastCfg) {
                            cnt += lastCfg.cnt;
                        }
                    }
                    return cnt;
                };
                //个人挑战状态
                TongtiangeProxy.prototype.getPersonChallengeStatus = function (index) {
                    var info = this._model.role_challenge_list[index];
                    if (info) {
                        return info.status;
                    }
                    return 0 /* NotFinish */;
                };
                //宗门挑战状态
                TongtiangeProxy.prototype.getGuildChallengeStatus = function (index) {
                    var info = this._model.guild_challenge_list[index];
                    if (info) {
                        return info.status;
                    }
                    return 0 /* NotFinish */;
                };
                //轮次奖励红点
                TongtiangeProxy.prototype.getStageHint = function (stage) {
                    var info = this._model.stage_list[stage];
                    if (info) {
                        return info.status == 1;
                    }
                    return false;
                };
                //兑换限购次数，写死1了
                TongtiangeProxy.prototype.getExchangeMaxCnt = function () {
                    return 1;
                };
                //兑换获取购买次数
                TongtiangeProxy.prototype.getExchangeBoughtCnt = function (index, pos) {
                    var info = this._model.exchange_list[index];
                    if (info && info.list && info.list.indexOf(pos) > -1) {
                        return 1;
                    }
                    return 0;
                };
                //兑换状态
                TongtiangeProxy.prototype.getExchangeStatus = function (index, pos) {
                    var info = this._model.exchange_list[index];
                    if (!info || !info.list) {
                        return 0 /* NotFinish */;
                    }
                    return info.list.indexOf(pos) > -1 ? 2 /* Draw */ : 0 /* NotFinish */;
                };
                //能否兑换
                TongtiangeProxy.prototype.canExchange = function (curIndex, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var info = this._model.exchange_list[curIndex - 1]; //上一层的数据
                    if (!info || !info.list || !info.list.length) {
                        // if (isTips) {
                        //     PromptBox.getIns().show(getLanById(LanDef.tongtiange_tips14));
                        // }
                        return false;
                    }
                    return true;
                };
                //某层是否激活了
                TongtiangeProxy.prototype.isLayerActed = function (layer, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (layer == 1) {
                        return true; //第一层默认解锁
                    }
                    var info = this._model.exchange_list[layer - 1];
                    //上一层的任一个解锁就算激活
                    var isAct = info && info.list && info.list.length > 0;
                    if (!isAct) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("tongtiange_tips14" /* tongtiange_tips14 */));
                        }
                        return false;
                    }
                    return true;
                };
                TongtiangeProxy.prototype.updateHint = function () {
                    if (!this.isOpen()) {
                        return;
                    }
                    this.updateHint1();
                    this.updateHint2();
                    this.updateHint3();
                    this.updateHint4();
                    this.updateHint5();
                    this.updateHint6();
                };
                TongtiangeProxy.prototype.updateHint1 = function () {
                    var cost = this.getBuildCost();
                    var hint = false;
                    if (mod.BagUtil.checkPropCnt(cost[0], cost[1])) {
                        hint = true;
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[1]);
                };
                //个人挑战
                TongtiangeProxy.prototype.updateHint2 = function () {
                    var map = this._model.role_challenge_list;
                    var hint = false;
                    for (var key in map) {
                        var item = map[key];
                        if (item && item.status == 1) {
                            hint = true;
                            break;
                        }
                    }
                    if (!hint) {
                        var stageMap = this._model.stage_list;
                        for (var key in stageMap) {
                            var item = stageMap[key];
                            if (item && item.status == 1) {
                                hint = true;
                                break;
                            }
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[2]);
                };
                //仙宗挑战
                TongtiangeProxy.prototype.updateHint3 = function () {
                    var map = this._model.guild_challenge_list;
                    var hint = false;
                    for (var key in map) {
                        var item = map[key];
                        if (item && item.status == 1) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[3]);
                };
                //礼包能否购买
                TongtiangeProxy.prototype.canBuyGift = function (index) {
                    var cfg = game.getConfigByNameId("attic_gift.json" /* TongtiangeGift */, index);
                    if (!cfg) {
                        return false;
                    }
                    var leftCnt = this.getGiftLeftCnt(cfg.index);
                    //rmb购买
                    if (cfg.type == 2) {
                        return leftCnt > 0;
                    }
                    //道具购买
                    if (leftCnt < 1) {
                        return false;
                    }
                    var shopCfg = game.getConfigByNameId("shop.json" /* Store */, cfg.shop_index);
                    if (!shopCfg) {
                        return false;
                    }
                    var price = Math.floor(shopCfg.price * (shopCfg.discount / 10000));
                    return mod.BagUtil.checkPropCnt(shopCfg.coin_type, price);
                };
                //礼包全部售罄
                TongtiangeProxy.prototype.isSoldOut = function () {
                    var cfgList = game.getConfigListByName("attic_gift.json" /* TongtiangeGift */);
                    for (var _i = 0, cfgList_9 = cfgList; _i < cfgList_9.length; _i++) {
                        var cfg = cfgList_9[_i];
                        var leftCnt = this.getGiftLeftCnt(cfg.index);
                        if (leftCnt > 0) {
                            return false;
                        }
                    }
                    this.giftLoginHint = false; //当日已售罄则设为false
                    return true;
                };
                //礼包红点
                TongtiangeProxy.prototype.updateHint4 = function () {
                    var cfgList = game.getConfigListByName("attic_gift.json" /* TongtiangeGift */);
                    var hint = false;
                    for (var _i = 0, cfgList_10 = cfgList; _i < cfgList_10.length; _i++) {
                        var cfg = cfgList_10[_i];
                        if (cfg.type == 1 && this.canBuyGift(cfg.index)) {
                            hint = true;
                            break;
                        }
                    }
                    if (!hint && !this.isSoldOut()) {
                        hint = this.giftLoginHint;
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[4]);
                };
                //兑换每层红点
                TongtiangeProxy.prototype.getExchangeLayerHint = function (layer) {
                    if (!this.isLayerActed(layer)) {
                        return false;
                    }
                    var cfg = game.getConfigByNameId("attic_exchange.json" /* TongtiangeExchange */, layer);
                    if (!cfg) {
                        return false;
                    }
                    var size = cfg.give_items.length;
                    var info = this._model.exchange_list[layer];
                    var exchangeList = info && info.list ? info.list : [];
                    //已兑换全部
                    if (exchangeList && exchangeList.length == size) {
                        return false;
                    }
                    for (var i = 1; i <= size; i++) {
                        var isExchange = exchangeList.indexOf(i) > -1; //已兑换
                        if (isExchange) {
                            continue;
                        }
                        var cost = cfg.cost_items[i - 1];
                        if (mod.BagUtil.checkPropCnt(cost[0], cost[1])) {
                            return true;
                        }
                    }
                    return false;
                };
                //兑换红点
                TongtiangeProxy.prototype.updateHint5 = function () {
                    var cfgList = game.getConfigListByName("attic_exchange.json" /* TongtiangeExchange */);
                    var hint = false;
                    for (var _i = 0, cfgList_11 = cfgList; _i < cfgList_11.length; _i++) {
                        var cfg = cfgList_11[_i];
                        if (this.getExchangeLayerHint(cfg.index)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[5]);
                };
                //登录奖励红点
                TongtiangeProxy.prototype.updateHint6 = function () {
                    var map = this._model.login_reward_list;
                    var hint = false;
                    for (var key in map) {
                        var item = map[key];
                        if (item && item.status == 1) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[6]);
                };
                TongtiangeProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    if (!this.isOpen()) {
                        return;
                    }
                    var indexs = n.body;
                    var cost = this.getBuildCost();
                    if (indexs.indexOf(cost[0]) > -1) {
                        this.updateHint1();
                    }
                };
                TongtiangeProxy.prototype.onRoleUpdate = function (n) {
                    if (!this.isOpen()) {
                        return;
                    }
                    var keys = n.body;
                    if (keys.indexOf("attic_point" /* Tianxingzhu */) > -1) {
                        this.updateHint5();
                    }
                    if (keys.indexOf("diamond" /* diamond */) > -1) {
                        this.updateHint4();
                    }
                };
                //开始自动建造的vip等级
                TongtiangeProxy.prototype.getAutoBuildVip = function () {
                    if (this._autoBuildVip) {
                        return this._autoBuildVip;
                    }
                    var vipCfgList = game.getConfigListByName("vip.json" /* Vip */);
                    for (var _i = 0, vipCfgList_1 = vipCfgList; _i < vipCfgList_1.length; _i++) {
                        var cfg = vipCfgList_1[_i];
                        if (!cfg || !cfg.privilege_id) {
                            continue;
                        }
                        var privilegeCfg = game.getConfigByNameId("new_privilege.json" /* NewPrivilege */, cfg.privilege_id);
                        if (privilegeCfg && privilegeCfg.pick_star) {
                            this._autoBuildVip = cfg.level;
                            break;
                        }
                    }
                    return this._autoBuildVip;
                };
                return TongtiangeProxy;
            }(game.ProxyBase));
            activity.TongtiangeProxy = TongtiangeProxy;
            __reflect(TongtiangeProxy.prototype, "game.mod.activity.TongtiangeProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeItem1 = /** @class */ (function (_super) {
                __extends(TongtiangeItem1, _super);
                function TongtiangeItem1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeItemSkin1";
                    return _this;
                }
                TongtiangeItem1.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                TongtiangeItem1.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                TongtiangeItem1.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.currentState = data.value && data.value.toNumber() == 1 ? '1' : '0';
                    this.lb_layer.text = data.rank_num + game.getLanById("relic3" /* relic3 */);
                    this.lb_name.text = data.name;
                    this.head.updateHeadShow(data.head, data.head_frame, data.sex, data.role_id, data.server_id);
                };
                return TongtiangeItem1;
            }(mod.BaseListenerRenderer));
            activity.TongtiangeItem1 = TongtiangeItem1;
            __reflect(TongtiangeItem1.prototype, "game.mod.activity.TongtiangeItem1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeItem2 = /** @class */ (function (_super) {
                __extends(TongtiangeItem2, _super);
                function TongtiangeItem2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TongtiangeItem2.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._tongtiangeProxy = game.getProxy("27" /* Activity */, 238 /* Tongtiange */);
                };
                TongtiangeItem2.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.replaceAll(data.cfg.reward);
                    var desc = game.getLanById("tongtiange_tips5" /* tongtiange_tips5 */);
                    if (data.type == 2 /* Guild */) {
                        desc = game.getLanById("union_title_2" /* union_title_2 */);
                    }
                    desc += game.StringUtil.substitute(game.getLanById("tongtiange_tips6" /* tongtiange_tips6 */), [data.cfg.cnt])
                        + game.TextUtil.addColor("(" + data.val + "/" + data.cfg.cnt + ")", data.val >= data.cfg.cnt ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                    var status = data.status;
                    this.img_bought.visible = status == 2 /* Draw */;
                    this.img_bought.source = "lvseyiwancheng";
                    this.btn_buy.visible = !this.img_bought.visible;
                    if (this.btn_buy.visible) {
                        var hint = status == 1 /* Finish */;
                        this.btn_buy.label = hint ? game.getLanById("tishi_29" /* tishi_29 */) : game.getLanById("goto" /* goto */);
                        this.btn_buy.setHint(hint);
                        if (hint) {
                            this.btn_buy.setYellow();
                        }
                        else {
                            this.btn_buy.setBlue();
                        }
                    }
                };
                TongtiangeItem2.prototype.onClick = function () {
                    if (!this.data) {
                        return;
                    }
                    var status = this.data.status;
                    if (status == 0 /* NotFinish */) {
                        mod.ViewMgr.getIns().showView("27" /* Activity */, "73" /* TongtiangeMain */);
                        return;
                    }
                    var type = this.data.type == 2 /* Guild */ ? 3 : 1;
                    this._tongtiangeProxy.c2s_attic_get_reward(type, this.data.cfg.index);
                };
                return TongtiangeItem2;
            }(mod.BaseGiftItemRender));
            activity.TongtiangeItem2 = TongtiangeItem2;
            __reflect(TongtiangeItem2.prototype, "game.mod.activity.TongtiangeItem2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeItem4 = /** @class */ (function (_super) {
                __extends(TongtiangeItem4, _super);
                function TongtiangeItem4() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.common.IconShopSkin2";
                    return _this;
                }
                TongtiangeItem4.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 238 /* Tongtiange */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_buy, this.onClick, this);
                };
                TongtiangeItem4.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                TongtiangeItem4.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    this._listData.replaceAll(this.getRewards());
                    var boughtCnt = this._proxy.getGiftBoughtCnt(cfg.index);
                    var limitCnt = this._proxy.getGiftLimitCnt(cfg.index);
                    var leftCnt = Math.max(limitCnt - boughtCnt, 0);
                    var limitDesc = game.getLanById("tongtiange_tips7" /* tongtiange_tips7 */);
                    if (leftCnt != 0) {
                        limitDesc = game.getLanById("tongtiange_tips8" /* tongtiange_tips8 */) + game.TextUtil.addColor(leftCnt + "/" + limitCnt, leftCnt > 0 ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    }
                    this.lb_limit.textFlow = game.TextUtil.parseHtml(limitDesc);
                    this.img_bought.visible = leftCnt == 0;
                    this.btn_buy.visible = !this.img_bought.visible;
                    this.img_icon.source = this.getIcon();
                    if (this.btn_buy.visible) {
                        if (cfg.type == 1) {
                            //商店表
                            this.btn_buy.label = '';
                            var shopCfg = game.getConfigByNameId("shop.json" /* Store */, cfg.shop_index);
                            if (shopCfg) {
                                var price = Math.floor(shopCfg.price * (shopCfg.discount / 10000));
                                this._cost = [shopCfg.coin_type, price];
                                this.btn_buy.setCost(this._cost);
                            }
                            this.btn_buy.setHint(this._proxy.canBuyGift(cfg.index));
                        }
                        else {
                            //商品id表
                            this.btn_buy.label = mod.PayUtil.getRmbValue(cfg.shop_index) + mod.PayUtil.getRmbUnit();
                        }
                    }
                };
                TongtiangeItem4.prototype.onClick = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    if (cfg.type == 2) {
                        mod.PayUtil.pay(cfg.shop_index);
                        return;
                    }
                    if (this._cost && mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        this._proxy.c2s_attic_item_buy_gift(cfg.index);
                    }
                };
                //奖励
                TongtiangeItem4.prototype.getRewards = function () {
                    if (!this.data) {
                        return [];
                    }
                    var cfg = this.data;
                    if (cfg.type == 1) {
                        var shopCfg = game.getConfigByNameId("shop.json" /* Store */, cfg.shop_index);
                        return shopCfg ? shopCfg.prop : [];
                    }
                    return mod.PayUtil.getRewards(cfg.shop_index);
                };
                TongtiangeItem4.prototype.getIcon = function () {
                    if (!this.data) {
                        return '';
                    }
                    var cfg = this.data;
                    if (cfg.type == 1) {
                        var shopCfg = game.getConfigByNameId("shop.json" /* Store */, cfg.shop_index);
                        return shopCfg && shopCfg.icon || '';
                    }
                    var giftCfg = game.getConfigByNameId("gift_bag.json" /* GiftBag */, cfg.shop_index);
                    return giftCfg && giftCfg.icon || '';
                };
                return TongtiangeItem4;
            }(mod.BaseListenerRenderer));
            activity.TongtiangeItem4 = TongtiangeItem4;
            __reflect(TongtiangeItem4.prototype, "game.mod.activity.TongtiangeItem4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeItem6 = /** @class */ (function (_super) {
                __extends(TongtiangeItem6, _super);
                function TongtiangeItem6() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TongtiangeItem6.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.img_bought.source = "lvseyilingqu";
                    this._proxy = game.getProxy("27" /* Activity */, 238 /* Tongtiange */);
                };
                TongtiangeItem6.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.replaceAll(data.cfg.reward);
                    var desc;
                    if (data.cfg.type == 1) {
                        var cost = data.cfg.cost;
                        var today = game.RoleVo.ins.day_charge_rmb;
                        desc = game.StringUtil.substitute(game.getLanById("tongtiange_tips9" /* tongtiange_tips9 */), [cost])
                            + game.TextUtil.addColor("(" + today + "/" + cost + ")", today >= cost ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    }
                    else {
                        desc = game.getLanById("tongtiange_tips10" /* tongtiange_tips10 */);
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                    this.img_bought.visible = data.status == 2 /* Draw */;
                    this.btn_buy.visible = !this.img_bought.visible;
                    this.btn_buy.setHint(data.status == 1 /* Finish */);
                    if (data.status == 0 /* NotFinish */) {
                        this.btn_buy.label = data.cfg.type == 1 ? game.getLanById("exp_pool15" /* exp_pool15 */) : game.getLanById("tishi_29" /* tishi_29 */);
                        this.btn_buy.setBlue();
                    }
                    else if (data.status == 1 /* Finish */) {
                        this.btn_buy.label = game.getLanById("tishi_29" /* tishi_29 */);
                        this.btn_buy.setYellow();
                    }
                };
                TongtiangeItem6.prototype.onClick = function () {
                    if (!this.data) {
                        return;
                    }
                    var type = this.data.cfg.type;
                    if (type == 1 && this.data.status != 1 /* Finish */) {
                        mod.ViewMgr.getIns().openCommonRechargeView();
                    }
                    this._proxy.c2s_attic_get_reward(4, this.data.cfg.index);
                };
                return TongtiangeItem6;
            }(mod.BaseGiftItemRender));
            activity.TongtiangeItem6 = TongtiangeItem6;
            __reflect(TongtiangeItem6.prototype, "game.mod.activity.TongtiangeItem6");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeLayerItem = /** @class */ (function (_super) {
                __extends(TongtiangeLayerItem, _super);
                function TongtiangeLayerItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeLayerItemSkin";
                    return _this;
                }
                TongtiangeLayerItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._layer = data.layer;
                    this.updateSel(data.isSel);
                    this.redPoint.visible = !!data.showHint;
                };
                TongtiangeLayerItem.prototype.updateSel = function (isSel) {
                    if (isSel === void 0) { isSel = false; }
                    this.img_type.source = isSel ? 'xuanzhong_1' : 'xuanzhong_0';
                    this.removeEft();
                    if (isSel) {
                        this.img_layer.source = "tongtiange_chong_" + this._layer;
                        this.addEftByParent("choose" /* Choose */, this.group_eft);
                    }
                    else {
                        this.img_layer.source = "tongtiange_chong_hui" + this._layer;
                    }
                };
                return TongtiangeLayerItem;
            }(mod.BaseRenderer));
            activity.TongtiangeLayerItem = TongtiangeLayerItem;
            __reflect(TongtiangeLayerItem.prototype, "game.mod.activity.TongtiangeLayerItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeRankItem = /** @class */ (function (_super) {
                __extends(TongtiangeRankItem, _super);
                function TongtiangeRankItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TongtiangeRankItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 238 /* Tongtiange */);
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.lab_name, this.onClick, this);
                    this.lab_num.visible = false;
                    this.list_reward.visible = true;
                };
                TongtiangeRankItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                TongtiangeRankItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (data.rankNo && data.rankNo <= 3) {
                        //1-3名展示
                        this.currentState = data.rankNo == 1 ? "first" : "default";
                        this.img_rank.visible = true;
                        this.img_rank.source = 'rank' + data.rankNo;
                        this.lab_rank.text = "";
                        var name = game.getLanById("tishi_2" /* tishi_2 */);
                        var cnt = 0;
                        if (data.teammate) {
                            if (data.type == 1 /* Personal */) {
                                name = data.teammate.name;
                            }
                            else {
                                name = game.StringUtil.substitute(game.getLanById("tongtiange_tips11" /* tongtiange_tips11 */), [data.teammate.guild_name, data.teammate.name]);
                            }
                            cnt = data.teammate.value ? data.teammate.value.toNumber() : 0;
                        }
                        this.lab_name.textFlow = game.TextUtil.parseHtml(name);
                        this.lab_power.text = cnt + '';
                    }
                    else {
                        this.currentState = "default";
                        //其余展示
                        this.img_rank.visible = false;
                        var rankRange = data.rankRange;
                        if (rankRange && rankRange.length == 1) {
                            this.lab_rank.text = rankRange[0] + '+';
                        }
                        else if (rankRange && rankRange.length == 2) {
                            this.lab_rank.text = rankRange[0] + '-' + rankRange[1];
                        }
                        if (!!data.isShow) {
                            this.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */)));
                        }
                        else {
                            this.lab_name.text = '';
                        }
                        this.lab_power.text = '';
                    }
                    this._listData.replaceAll(data.rewards);
                };
                //查看排名
                TongtiangeRankItem.prototype.onClick = function () {
                    if (!!this.data.isShow) {
                        mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "75" /* TongtiangeRankSection */, [this.data.type, this.data.rankRange]);
                    }
                };
                return TongtiangeRankItem;
            }(mod.BaseListenerRenderer));
            activity.TongtiangeRankItem = TongtiangeRankItem;
            __reflect(TongtiangeRankItem.prototype, "game.mod.activity.TongtiangeRankItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeRewardItem = /** @class */ (function (_super) {
                __extends(TongtiangeRewardItem, _super);
                function TongtiangeRewardItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeRewardItemSkin";
                    return _this;
                }
                TongtiangeRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 238 /* Tongtiange */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                TongtiangeRewardItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                TongtiangeRewardItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var pos = this.itemIndex;
                    this.icon.data = data.cfg.give_items[pos];
                    this.img_bought.visible = data.status == 2 /* Draw */;
                    this.btn_do.visible = !this.img_bought.visible;
                    if (this.btn_do.visible) {
                        this._cost = data.cfg.cost_items[pos];
                        this.btn_do.setCost(this._cost);
                        this.btn_do.setHint(mod.BagUtil.checkPropCnt(this._cost[0], this._cost[1]));
                    }
                    if (data.boughtCnt >= data.maxCnt) {
                        this.lb_limit.text = '';
                    }
                    else {
                        this.lb_limit.text = game.getLanById("tongtiange_tips8" /* tongtiange_tips8 */) + (data.maxCnt - data.boughtCnt + "/" + data.maxCnt);
                    }
                };
                TongtiangeRewardItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.cfg.index;
                    if (index > 1 && !this._proxy.canExchange(index, true)) {
                        return;
                    }
                    if (!this._cost || !mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    this._proxy.c2s_attic_exchange(index, this.itemIndex + 1);
                };
                return TongtiangeRewardItem;
            }(mod.BaseListenerRenderer));
            activity.TongtiangeRewardItem = TongtiangeRewardItem;
            __reflect(TongtiangeRewardItem.prototype, "game.mod.activity.TongtiangeRewardItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeStageItem = /** @class */ (function (_super) {
                __extends(TongtiangeStageItem, _super);
                function TongtiangeStageItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeStageItemSkin";
                    _this.addEventListener(egret.Event.ADDED_TO_STAGE, _this.onAddToStage, _this);
                    return _this;
                }
                TongtiangeStageItem.prototype.onAddToStage = function () {
                    this._proxy = game.getProxy("27" /* Activity */, 238 /* Tongtiange */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveFromStage, this);
                    this.btn_do.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                TongtiangeStageItem.prototype.onRemoveFromStage = function () {
                    this.removeEventListener(egret.Event.REMOVED_FROM_STAGE, this.onRemoveFromStage, this);
                    this.btn_do.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                //更新界面
                TongtiangeStageItem.prototype.updateView = function (curStage) {
                    this._curStage = curStage;
                    var cfgList = this._proxy.getPersonChallengeCfg(curStage);
                    var stageInfo = this._proxy.model.stage_list[curStage]; //轮次数据
                    var doneCnt = 0;
                    for (var _i = 0, cfgList_12 = cfgList; _i < cfgList_12.length; _i++) {
                        var cfg = cfgList_12[_i];
                        var info = this._proxy.model.role_challenge_list[cfg.index];
                        if (info && (info.status == 1 || info.status == 2)) {
                            doneCnt++;
                        }
                    }
                    var totalCnt = cfgList.length;
                    var str = game.StringUtil.substitute(game.getLanById("tongtiange_tips13" /* tongtiange_tips13 */), [curStage])
                        + game.TextUtil.addColor("(" + doneCnt + "/" + totalCnt + ")", doneCnt >= totalCnt ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    for (var i = totalCnt - 1; i >= 0; i--) {
                        var cfg = cfgList[i];
                        if (cfg && cfg.stage_reward) {
                            this._listData.replaceAll(cfg.stage_reward);
                            break;
                        }
                    }
                    var status = stageInfo && stageInfo.status || 0 /* NotFinish */;
                    if (status == 0 /* NotFinish */) {
                        this.btn_do.visible = false;
                        this.img_status.visible = true;
                        this.img_status.source = "hongseweiwancheng";
                    }
                    else if (status == 2 /* Draw */) {
                        this.btn_do.visible = false;
                        this.img_status.visible = true;
                        this.img_status.source = "lvseyiwancheng";
                    }
                    else {
                        this.btn_do.visible = true;
                        this.img_status.visible = false;
                        this.btn_do.setHint(true);
                    }
                };
                TongtiangeStageItem.prototype.onClick = function () {
                    var model = this._proxy.model;
                    var info = model.stage_list[this._curStage];
                    if (info && info.status == 1) {
                        this._proxy.c2s_attic_get_reward(2, this._curStage);
                    }
                };
                return TongtiangeStageItem;
            }(eui.Component));
            activity.TongtiangeStageItem = TongtiangeStageItem;
            __reflect(TongtiangeStageItem.prototype, "game.mod.activity.TongtiangeStageItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeView1 = /** @class */ (function (_super) {
                __extends(TongtiangeView1, _super);
                function TongtiangeView1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeSkin1";
                    return _this;
                }
                return TongtiangeView1;
            }(eui.Component));
            activity.TongtiangeView1 = TongtiangeView1;
            __reflect(TongtiangeView1.prototype, "game.mod.activity.TongtiangeView1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeView2 = /** @class */ (function (_super) {
                __extends(TongtiangeView2, _super);
                function TongtiangeView2() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeSkin2";
                    return _this;
                }
                return TongtiangeView2;
            }(eui.Component));
            activity.TongtiangeView2 = TongtiangeView2;
            __reflect(TongtiangeView2.prototype, "game.mod.activity.TongtiangeView2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeView4 = /** @class */ (function (_super) {
                __extends(TongtiangeView4, _super);
                function TongtiangeView4() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeSkin4";
                    return _this;
                }
                return TongtiangeView4;
            }(eui.Component));
            activity.TongtiangeView4 = TongtiangeView4;
            __reflect(TongtiangeView4.prototype, "game.mod.activity.TongtiangeView4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeView5 = /** @class */ (function (_super) {
                __extends(TongtiangeView5, _super);
                function TongtiangeView5() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TongtiangeSkin5";
                    return _this;
                }
                return TongtiangeView5;
            }(eui.Component));
            activity.TongtiangeView5 = TongtiangeView5;
            __reflect(TongtiangeView5.prototype, "game.mod.activity.TongtiangeView5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            //上期排名
            var TongtiangeLastRankMdr = /** @class */ (function (_super) {
                __extends(TongtiangeLastRankMdr, _super);
                function TongtiangeLastRankMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                TongtiangeLastRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_type2.source = "jianzaocishu";
                };
                TongtiangeLastRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.scroller.viewport, eui.PropertyEvent.PROPERTY_CHANGE, this.onListChange, this);
                    this.onNt("on_update_tongtiange_last_rank_info" /* ON_UPDATE_TONGTIANGE_LAST_RANK_INFO */, this.onUpdateView, this);
                };
                TongtiangeLastRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._view.secondPop.updateTitleStr(game.getLanById("compete_mars_26" /* compete_mars_26 */));
                    var type = this._showArgs[0];
                    this._proxy.c2s_attic_done_rank_show(type);
                    this._maxRankNo = 10;
                };
                TongtiangeLastRankMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                TongtiangeLastRankMdr.prototype.onUpdateView = function () {
                    var model = this._proxy.model;
                    var listMap = this._showArgs[0] == 1 /* Personal */ ? model.last_role_list : model.last_guild_list;
                    var list = [];
                    for (var i = 0; i < this._maxRankNo; i++) {
                        var teammate = listMap[i + 1];
                        var itemData = {
                            rank: i + 1,
                            name: teammate ? teammate.name : game.getLanById("tishi_2" /* tishi_2 */),
                            value: teammate && teammate.value ? teammate.value.toNumber() : 0
                        };
                        list.push(itemData);
                    }
                    this._listData.replaceAll(list);
                    this.updateView();
                };
                TongtiangeLastRankMdr.prototype.updateView = function () {
                    var isGuild = this._showArgs[0] == 2 /* Guild */; //是宗门
                    var model = this._proxy.model;
                    var lastRankNo = model.last_rank_no;
                    var lastBuildCnt = model.last_build_cnt;
                    var rankDesc = game.TextUtil.addColor(lastRankNo ? lastRankNo + '' : game.getLanById("tishi_13" /* tishi_13 */), 2330156 /* GREEN */);
                    var lanDesc = isGuild ? game.getLanById("tongtiange_tips15" /* tongtiange_tips15 */) : game.getLanById("tongtiange_tips16" /* tongtiange_tips16 */);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(lanDesc, [rankDesc]));
                    var cntDesc = game.TextUtil.addColor(lastBuildCnt + '', 2330156 /* GREEN */);
                    lanDesc = isGuild ? game.getLanById("tongtiange_tips17" /* tongtiange_tips17 */) : game.getLanById("tongtiange_tips18" /* tongtiange_tips18 */);
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(lanDesc, [cntDesc]));
                };
                //list滚动，请求下一页数据
                TongtiangeLastRankMdr.prototype.onListChange = function (e) {
                    //已到达最大名次
                    if (this._maxRankNo >= this._showArgs[1]) {
                        return;
                    }
                    if (e.property == "scrollV" || e.property == "contentWidth") {
                        var viewport = this._view.scroller.viewport;
                        var contentH = viewport.contentHeight;
                        var scrollV = viewport.scrollV;
                        var scrollerH = this._view.scroller.height;
                        if (scrollV >= contentH - scrollerH) {
                            //每次请求10名
                            this._proxy.c2s_attic_done_rank_show(this._showArgs[0], this._maxRankNo, this._maxRankNo + 10);
                            this._maxRankNo += 10;
                        }
                    }
                };
                return TongtiangeLastRankMdr;
            }(game.MdrBase));
            activity.TongtiangeLastRankMdr = TongtiangeLastRankMdr;
            __reflect(TongtiangeLastRankMdr.prototype, "game.mod.activity.TongtiangeLastRankMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeMdr1 = /** @class */ (function (_super) {
                __extends(TongtiangeMdr1, _super);
                function TongtiangeMdr1() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.TongtiangeView1);
                    _this._reqNext = false; //请求标识
                    _this._isClickCheckBox = false;
                    return _this;
                }
                TongtiangeMdr1.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = activity.TongtiangeItem1;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                TongtiangeMdr1.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rank, egret.TouchEvent.TOUCH_TAP, this.onClickRank, this);
                    addEventListener(this._view.btn_reward, egret.TouchEvent.TOUCH_TAP, this.onClickReward, this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_build, egret.TouchEvent.TOUCH_TAP, this.onClickBuild, this);
                    addEventListener(this._view.btn_buildten, egret.TouchEvent.TOUCH_TAP, this.onClickBuildTen, this);
                    addEventListener(this._view.checkBox, egret.TouchEvent.TOUCH_TAP, this.onClickCheckBox, this);
                    addEventListener(this._view.img_gain, egret.TouchEvent.TOUCH_TAP, this.onClickGain, this);
                    addEventListener(this._view.lb_checkboxcond, egret.TouchEvent.TOUCH_TAP, this.onClickVip, this);
                    addEventListener(this._view.scroller.viewport, eui.PropertyEvent.PROPERTY_CHANGE, this.onListChange, this);
                    this.onNt("on_update_tongtiange_storey_info" /* ON_UPDATE_TONGTIANGE_STOREY_INFO */, this.onUpdateViewByScroller, this);
                    this.onNt("on_update_tongtiange_build_success" /* ON_UPDATE_TONGTIANGE_BUILD_SUCCESS */, this.onUpdateViewByBuildSuccess, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                TongtiangeMdr1.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this._proxy.c2s_attic_storey_show(1); //打开界面请求
                    var buildVip = this._proxy.getAutoBuildVip();
                    var myVip = mod.VipUtil.getShowVipLv();
                    var showCheckbox = myVip >= buildVip;
                    this._view.checkBox.visible = showCheckbox;
                    this._view.lb_checkboxcond.visible = !showCheckbox;
                    if (!showCheckbox) {
                        var vipStr = game.StringUtil.substitute(game.getLanById("tongtiange_tips21" /* tongtiange_tips21 */), [buildVip]);
                        this._view.lb_checkboxcond.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(vipStr, 2330156 /* GREEN */));
                    }
                    this._proxy.checkActTips(4 /* Tongtiange */);
                };
                TongtiangeMdr1.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                    this._endTime = 0;
                    this._reqNext = false;
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                    this._proxy.minRankNo = null;
                    this._view.checkBox.selected = false;
                    this._proxy.model.role_list = {}; //todo
                };
                //打开界面请求或滚动请求回调，todo 待优化
                TongtiangeMdr1.prototype.onUpdateViewByScroller = function () {
                    var roleMap = this._proxy.model.role_list;
                    var keys = Object.keys(roleMap) || [];
                    if (keys) {
                        keys.sort(function (a, b) { return (+b) - (+a); });
                    }
                    var list = [];
                    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {
                        var key = keys_4[_i];
                        list.push(roleMap[key]);
                    }
                    this._listData.replaceAll(list);
                    this.updateScrollerPos();
                    //打开界面请求返回
                    if (!this._reqNext) {
                        this.updateBuildCnt();
                        var topPlayer = this._proxy.getTopPlayerInfo();
                        if (topPlayer) {
                            this._view.head.updateHeadShow(topPlayer.head, topPlayer.head_frame, topPlayer.sex, topPlayer.role_id, topPlayer.server_id);
                            this._view.lb_name.text = topPlayer.name;
                        }
                        else {
                            this._view.head.defaultHeadShow();
                            this._view.lb_name.text = game.getLanById("tishi_2" /* tishi_2 */);
                        }
                        this.updateCost();
                    }
                    this._reqNext = false;
                };
                //建造成功回调，顶部10条数据
                TongtiangeMdr1.prototype.onUpdateViewByBuildSuccess = function () {
                    var roleMap = this._proxy.model.role_list;
                    var keys = Object.keys(roleMap) || [];
                    if (keys) {
                        keys.sort(function (a, b) { return (+b) - (+a); });
                    }
                    var list = [];
                    for (var i = 0; i < 10; i++) { //只展示10名即可
                        var roleData = roleMap[keys[i]];
                        if (roleData) {
                            list.push(roleData);
                        }
                    }
                    this._listData.source = list;
                    this.updateScrollerPos();
                    this.updateBuildCnt();
                    this.updateCost();
                    if (this._isClickCheckBox) {
                        this._isClickCheckBox = false;
                        this._view.checkBox.selected = false;
                    }
                };
                //更新scroller的y位置
                TongtiangeMdr1.prototype.updateScrollerPos = function () {
                    var source = this._listData.source;
                    if (source && source.length == 1) {
                        this._view.scroller.y = 680;
                    }
                    else if (source && source.length == 2) {
                        this._view.scroller.y = 460;
                    }
                    else {
                        this._view.scroller.y = 210;
                    }
                };
                TongtiangeMdr1.prototype.updateBuildCnt = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('attic_baodi');
                    var maxCnt = paramCfg.value;
                    var myBuildCnt = this._proxy.getBuildCnt();
                    var leftCnt = (myBuildCnt % maxCnt == 0) ? maxCnt : (maxCnt - myBuildCnt % maxCnt);
                    var str = game.StringUtil.substitute(game.getLanById("tongtiange_tips3" /* tongtiange_tips3 */), [game.TextUtil.addColor(leftCnt + '', 2330156 /* GREEN */)])
                        + game.TextUtil.addColor(game.getLanById("tongtiange_tips4" /* tongtiange_tips4 */), 15855403 /* YELLOW */);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                };
                TongtiangeMdr1.prototype.updateCost = function () {
                    this._view.costIconOne.updateShow(this._proxy.getBuildCost());
                    this._view.costIconTen.updateShow(this._proxy.getBuildCost(true));
                    this._view.btn_build.setHint(this._proxy.canBuild());
                    this._view.btn_buildten.setHint(this._proxy.canBuild(true));
                };
                TongtiangeMdr1.prototype.onClickRank = function () {
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "74" /* TongtiangeRank */);
                };
                TongtiangeMdr1.prototype.onClickReward = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('attic_weight');
                    var list = [];
                    var value = paramCfg.value;
                    for (var i = 0; i < value.length; i++) {
                        list.push({
                            nameStr: i == 0 ? 'huangjinge' : 'putongge',
                            weight: value[i] * 100,
                            award: this._proxy.getPreviewRewards(i + 1)
                        });
                    }
                    mod.ViewMgr.getIns().openPreviewReward(list);
                };
                TongtiangeMdr1.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("tongtiange_tips1" /* tongtiange_tips1 */));
                };
                TongtiangeMdr1.prototype.onClickBuild = function () {
                    if (this._proxy.canBuild(false, true)) {
                        this.sendBuild(1);
                    }
                };
                TongtiangeMdr1.prototype.onClickBuildTen = function () {
                    if (this._proxy.canBuild(true, true)) {
                        this.sendBuild(2);
                    }
                };
                TongtiangeMdr1.prototype.onClickCheckBox = function () {
                    var check = this._view.checkBox.selected;
                    this._isClickCheckBox = true;
                    if (check && this._proxy.canBuild()) {
                        this.sendBuild(3);
                    }
                    else {
                        this._view.checkBox.selected = false;
                    }
                };
                TongtiangeMdr1.prototype.sendBuild = function (type) {
                    //todo 粗暴处理，避免数据滑动断层，后续有时间再优化
                    this._proxy.model.role_list = {};
                    this._proxy.c2s_attic_build(type);
                };
                TongtiangeMdr1.prototype.onClickGain = function () {
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "73" /* TongtiangeMain */, "04" /* TtgBtn4 */);
                };
                TongtiangeMdr1.prototype.onClickVip = function () {
                    if (mod.PayUtil.checkFirstCharge()) {
                        mod.ViewMgr.getIns().openVipView();
                    }
                    else {
                        // facade.showView(ModName.Activity, MainActivityViewType.FirstCharge);
                        mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "49" /* FirstCharge */);
                    }
                };
                //list滚动，请求下一页数据
                TongtiangeMdr1.prototype.onListChange = function (e) {
                    if (e.property == "scrollV") {
                        var viewport = this._view.scroller.viewport;
                        var contentH = viewport.contentHeight;
                        var scrollV = viewport.scrollV;
                        var scrollerH = this._view.scroller.height;
                        if (scrollV >= contentH - scrollerH && !this._reqNext) {
                            // 每次请求10名
                            var source = this._listData.source;
                            var lastRankItem = void 0;
                            if (source && source[source.length - 1]) {
                                lastRankItem = source[source.length - 1];
                            }
                            var lastRankNo = lastRankItem ? lastRankItem.rank_num : 0; //list中最后一名的数据
                            var rankNo = Math.max(lastRankNo - 10, 1); //最底下一名
                            if (rankNo == 1 && this._proxy.model.role_list[rankNo]) {
                                return; //最后一名已有，不需要请求
                            }
                            this._proxy.c2s_attic_storey_show(2, rankNo, rankNo + 10);
                            this._reqNext = true;
                        }
                    }
                };
                TongtiangeMdr1.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                TongtiangeMdr1.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var cost = this._proxy.getBuildCost();
                    if (indexs.indexOf(cost[0]) > -1) {
                        this.updateCost();
                    }
                };
                return TongtiangeMdr1;
            }(game.MdrBase));
            activity.TongtiangeMdr1 = TongtiangeMdr1;
            __reflect(TongtiangeMdr1.prototype, "game.mod.activity.TongtiangeMdr1", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeMdr2 = /** @class */ (function (_super) {
                __extends(TongtiangeMdr2, _super);
                function TongtiangeMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.TongtiangeView2);
                    _this._curStage = 0; //当前轮次
                    return _this;
                }
                TongtiangeMdr2.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = activity.TongtiangeItem2;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_banner.source = game.ResUtil.getUiJpg("tongtiange_banner2");
                };
                TongtiangeMdr2.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_left, egret.TouchEvent.TOUCH_TAP, this.onClickLeft, this);
                    addEventListener(this._view.btn_right, egret.TouchEvent.TOUCH_TAP, this.onClickRight, this);
                    this.onNt("on_update_tongtiange_info" /* ON_UPDATE_TONGTIANGE_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_tongtiange_challenge_info" /* ON_UPDATE_TONGTIANGE_CHALLENGE_INFO */, this.onUpdateView, this);
                };
                TongtiangeMdr2.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this.onUpdateView();
                };
                TongtiangeMdr2.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    this._endTime = 0;
                    this._curStage = 0;
                    _super.prototype.onHide.call(this);
                };
                TongtiangeMdr2.prototype.onUpdateView = function () {
                    var doneStage = this._proxy.getDoneStage();
                    var totalStage = this._proxy.getTotalStage();
                    var desc = game.TextUtil.addColor(doneStage + '/' + totalStage, 65280 /* GREEN */);
                    this._view.lb_stage.textFlow = game.TextUtil.parseHtml(desc);
                    var curStage = this._proxy.getCurStage();
                    this._curStage = curStage;
                    var cfgList = this._proxy.getPersonChallengeCfg(curStage);
                    var list = [];
                    var totalCnt = this._proxy.getBuildCnt() || 0; //总次数
                    var lastStageCnt = this._proxy.getPreStagesCnt(); //前面轮次的最大次数总和
                    var buildCnt = Math.max(0, totalCnt - lastStageCnt);
                    for (var _i = 0, cfgList_13 = cfgList; _i < cfgList_13.length; _i++) {
                        var cfg = cfgList_13[_i];
                        list.push({
                            type: 1 /* Personal */,
                            cfg: cfg,
                            status: this._proxy.getPersonChallengeStatus(cfg.index),
                            val: buildCnt
                        });
                    }
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                    this.updateStageView();
                };
                //更新轮次奖励
                TongtiangeMdr2.prototype.updateStageView = function () {
                    this._view.stageItem.updateView(this._curStage);
                    this._view.btn_left.visible = this._curStage > 1;
                    var totalStage = this._proxy.getTotalStage();
                    this._view.btn_right.visible = this._curStage < totalStage;
                    this.updateBtnHint();
                };
                TongtiangeMdr2.prototype.onClickLeft = function () {
                    this._curStage--;
                    if (this._curStage < 1) {
                        this._curStage = 1;
                    }
                    this.updateStageView();
                };
                TongtiangeMdr2.prototype.onClickRight = function () {
                    this._curStage++;
                    var totalStage = this._proxy.getTotalStage();
                    if (this._curStage > totalStage) {
                        this._curStage = totalStage;
                    }
                    this.updateStageView();
                };
                TongtiangeMdr2.prototype.updateBtnHint = function () {
                    if (this._view.btn_left.visible) {
                        var leftHint = false;
                        for (var i = 1; i < this._curStage; i++) {
                            if (this._proxy.getStageHint(i)) {
                                leftHint = true;
                                break;
                            }
                        }
                        this._view.btn_left.setHint(leftHint);
                    }
                    if (this._view.btn_right.visible) {
                        var totalStage = this._proxy.getTotalStage();
                        var rightHint = false;
                        for (var i = this._curStage + 1; i < totalStage; i++) {
                            if (this._proxy.getStageHint(i)) {
                                rightHint = true;
                                break;
                            }
                        }
                        this._view.btn_right.setHint(rightHint);
                    }
                };
                TongtiangeMdr2.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return TongtiangeMdr2;
            }(game.MdrBase));
            activity.TongtiangeMdr2 = TongtiangeMdr2;
            __reflect(TongtiangeMdr2.prototype, "game.mod.activity.TongtiangeMdr2", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeMdr3 = /** @class */ (function (_super) {
                __extends(TongtiangeMdr3, _super);
                function TongtiangeMdr3() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    return _this;
                }
                TongtiangeMdr3.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = activity.TongtiangeItem2;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_banner.source = game.ResUtil.getUiJpg("tongtiange_banner3");
                };
                TongtiangeMdr3.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_tongtiange_info" /* ON_UPDATE_TONGTIANGE_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_tongtiange_guild_challenge_info" /* ON_UPDATE_TONGTIANGE_GUILD_CHALLENGE_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_tongtiange_challenge_info" /* ON_UPDATE_TONGTIANGE_CHALLENGE_INFO */, this.onUpdateView, this);
                };
                TongtiangeMdr3.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    if (mod.RoleUtil.isInUnion()) {
                        this._proxy.c2s_attic_guild_challenge_show();
                    }
                    else {
                        this.onUpdateView();
                    }
                };
                TongtiangeMdr3.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    this._endTime = 0;
                    _super.prototype.onHide.call(this);
                };
                TongtiangeMdr3.prototype.onUpdateView = function () {
                    var cfgObj = this._proxy.getChallengeCfgByType(2);
                    var list = [];
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        list.push({
                            type: 2 /* Guild */,
                            cfg: cfg,
                            status: this._proxy.getGuildChallengeStatus(cfg.index),
                            val: this._proxy.getBuildCnt(true)
                        });
                    }
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                };
                TongtiangeMdr3.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return TongtiangeMdr3;
            }(game.MdrBase));
            activity.TongtiangeMdr3 = TongtiangeMdr3;
            __reflect(TongtiangeMdr3.prototype, "game.mod.activity.TongtiangeMdr3", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeMdr4 = /** @class */ (function (_super) {
                __extends(TongtiangeMdr4, _super);
                function TongtiangeMdr4() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.TongtiangeView4);
                    return _this;
                }
                TongtiangeMdr4.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = activity.TongtiangeItem4;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    // this._view.img_banner.source = ResUtil.getUiJpg(`tongtiange_banner4`);
                };
                TongtiangeMdr4.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_tongtiange_gift_info" /* ON_UPDATE_TONGTIANGE_GIFT_INFO */, this.updateView, this);
                    this.onNt("on_update_tongtiange_info" /* ON_UPDATE_TONGTIANGE_INFO */, this.updateView, this);
                };
                TongtiangeMdr4.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this.updateView();
                };
                TongtiangeMdr4.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                TongtiangeMdr4.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("attic_gift.json" /* TongtiangeGift */);
                    this._listData.replaceAll(cfgList);
                };
                TongtiangeMdr4.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return TongtiangeMdr4;
            }(game.MdrBase));
            activity.TongtiangeMdr4 = TongtiangeMdr4;
            __reflect(TongtiangeMdr4.prototype, "game.mod.activity.TongtiangeMdr4", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeMdr5 = /** @class */ (function (_super) {
                __extends(TongtiangeMdr5, _super);
                function TongtiangeMdr5() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.TongtiangeView5);
                    _this._curLayer = 1; //当前层数，默认第一层
                    _this._layerItemAry = [];
                    _this._lineItemAry = [];
                    return _this;
                }
                TongtiangeMdr5.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = activity.TongtiangeRewardItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    var i = 0;
                    while (this._view["layer" + i]) {
                        this._layerItemAry.push(this._view["layer" + i]);
                        i++;
                    }
                    i = 0;
                    while (this._view["line" + i]) {
                        this._lineItemAry.push(this._view["line" + i]);
                        i++;
                    }
                };
                TongtiangeMdr5.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    for (var _i = 0, _a = this._layerItemAry; _i < _a.length; _i++) {
                        var item = _a[_i];
                        addEventListener(item, egret.TouchEvent.TOUCH_TAP, this.onClickLayer, this);
                    }
                    this.onNt("on_update_tongtiange_info" /* ON_UPDATE_TONGTIANGE_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_tongtiange_exchange_info" /* ON_UPDATE_TONGTIANGE_EXCHANGE_INFO */, this.onUpdateView, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this);
                };
                TongtiangeMdr5.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._curLayer = 1; //初始第一层
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this.onUpdateView();
                };
                TongtiangeMdr5.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                TongtiangeMdr5.prototype.onUpdateView = function () {
                    this.updateLayerView();
                    this.updateListData();
                };
                TongtiangeMdr5.prototype.updateLayerView = function () {
                    var isActedAry = [];
                    for (var i = 1; i <= this._layerItemAry.length; i++) {
                        var item = this._layerItemAry[i - 1];
                        var isActed = this._proxy.isLayerActed(i);
                        isActedAry[i - 1] = isActed ? 1 : 0;
                        item.data = {
                            layer: i,
                            isSel: i == this._curLayer,
                            showHint: this._proxy.getExchangeLayerHint(i)
                        };
                    }
                    for (var i = 0; i < this._lineItemAry.length; i++) {
                        var line = this._lineItemAry[i];
                        var isActed = isActedAry[i + 1];
                        if (isActed) {
                            line.setYellow();
                        }
                        else {
                            line.setBlue();
                        }
                    }
                };
                TongtiangeMdr5.prototype.updateListData = function () {
                    var cfg = game.getConfigByNameId("attic_exchange.json" /* TongtiangeExchange */, this._curLayer);
                    if (!cfg) {
                        return;
                    }
                    var list = [];
                    for (var i = 0; i < cfg.give_items.length; i++) {
                        list.push({
                            cfg: cfg,
                            status: this._proxy.getExchangeStatus(cfg.index, i + 1),
                            maxCnt: this._proxy.getExchangeMaxCnt(),
                            boughtCnt: this._proxy.getExchangeBoughtCnt(cfg.index, i + 1)
                        });
                    }
                    this._listData.replaceAll(list);
                };
                TongtiangeMdr5.prototype.onClickLayer = function (e) {
                    var target = e.currentTarget;
                    var idx = this._layerItemAry.indexOf(target);
                    if (idx + 1 == this._curLayer || !this._proxy.isLayerActed(idx + 1, true)) {
                        return;
                    }
                    this._curLayer = idx + 1;
                    for (var i = 1; i <= this._layerItemAry.length; i++) {
                        var item = this._layerItemAry[i - 1];
                        item && item.updateSel(i == this._curLayer);
                    }
                    this.updateListData();
                };
                TongtiangeMdr5.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                TongtiangeMdr5.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("attic_point" /* Tianxingzhu */) > -1) {
                        this.onUpdateView();
                    }
                };
                return TongtiangeMdr5;
            }(game.MdrBase));
            activity.TongtiangeMdr5 = TongtiangeMdr5;
            __reflect(TongtiangeMdr5.prototype, "game.mod.activity.TongtiangeMdr5", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeMdr6 = /** @class */ (function (_super) {
                __extends(TongtiangeMdr6, _super);
                function TongtiangeMdr6() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    return _this;
                }
                TongtiangeMdr6.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = activity.TongtiangeItem6;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_banner.source = game.ResUtil.getUiJpg("tongtiange_banner6");
                };
                TongtiangeMdr6.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_tongtiange_login_info" /* ON_UPDATE_TONGTIANGE_LOGIN_INFO */, this.updateView, this);
                    this.onNt("on_update_tongtiange_info" /* ON_UPDATE_TONGTIANGE_INFO */, this.updateView, this);
                };
                TongtiangeMdr6.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this.updateView();
                };
                TongtiangeMdr6.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                TongtiangeMdr6.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("attic_login.json" /* TongtiangeLogin */);
                    var list = [];
                    for (var _i = 0, cfgList_14 = cfgList; _i < cfgList_14.length; _i++) {
                        var cfg = cfgList_14[_i];
                        list.push({
                            cfg: cfg,
                            status: this._proxy.getLoginStatus(cfg.index)
                        });
                    }
                    this._listData.replaceAll(list);
                };
                TongtiangeMdr6.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return TongtiangeMdr6;
            }(game.MdrBase));
            activity.TongtiangeMdr6 = TongtiangeMdr6;
            __reflect(TongtiangeMdr6.prototype, "game.mod.activity.TongtiangeMdr6", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TongtiangeRankMainMdr = /** @class */ (function (_super) {
                __extends(TongtiangeRankMainMdr, _super);
                function TongtiangeRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "personal_rank_",
                            mdr: activity.TongtiangeRankMdr1,
                            title: "pass_rank" /* pass_rank */,
                            bg: "pass_rank_bg"
                        },
                        {
                            btnType: "02" /* Btn2 */,
                            icon: "xianzongpaimingbiaoqiantubiao",
                            mdr: activity.TongtiangeRankMdr2,
                            title: "pass_rank" /* pass_rank */,
                            bg: "pass_rank_bg"
                        }
                    ];
                    return _this;
                }
                return TongtiangeRankMainMdr;
            }(mod.WndBaseMdr));
            activity.TongtiangeRankMainMdr = TongtiangeRankMainMdr;
            __reflect(TongtiangeRankMainMdr.prototype, "game.mod.activity.TongtiangeRankMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeRankMdr1 = /** @class */ (function (_super) {
                __extends(TongtiangeRankMdr1, _super);
                function TongtiangeRankMdr1() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    /**1个人排名，2宗门排名*/
                    _this._type = 1 /* Personal */;
                    _this._maxRankNum = 0; //最大展示的排名数量
                    return _this;
                }
                TongtiangeRankMdr1.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list_rank.itemRenderer = activity.TongtiangeRankItem;
                    this._view.list_rank.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.timeItem.visible = true;
                    this._view.btn_god.visible = false;
                    this._view.img_type2.source = "jianzaocishu";
                    this._view.img_type3.source = "paihangjiangli";
                    this._view.btn_lastRank.visible = true;
                };
                TongtiangeRankMdr1.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_lastRank, egret.TouchEvent.TOUCH_TAP, this.onClickLastRank, this);
                    this.onNt("on_update_tongtiange_rank_info" /* ON_UPDATE_TONGTIANGE_RANK_INFO */, this.onUpdateView, this);
                };
                TongtiangeRankMdr1.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    this._proxy.c2s_attic_rank_show(this._type);
                };
                TongtiangeRankMdr1.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                TongtiangeRankMdr1.prototype.onUpdateView = function () {
                    this.updateModel();
                    this.updateListData();
                    this.updateRankLabel();
                };
                //更新模型
                TongtiangeRankMdr1.prototype.updateModel = function () {
                    var topPlayer = this.getTopPlayer();
                    if (topPlayer) {
                        this.updateRankUIRole(this._view.grp_eff, topPlayer);
                    }
                };
                TongtiangeRankMdr1.prototype.getRewardList = function () {
                    if (this._rewardList) {
                        return this._rewardList;
                    }
                    var actData = this._proxy.getActData(true);
                    if (!actData || !actData.reward_list) {
                        return null;
                    }
                    var list = [];
                    for (var i = 0; i < actData.reward_list.length; i++) {
                        var item = actData.reward_list[i];
                        if (item && item.cond_1 && item.cond_1[0] == this._type) {
                            list.push(item);
                        }
                    }
                    this._rewardList = list;
                    return list;
                };
                TongtiangeRankMdr1.prototype.updateListData = function () {
                    var list = [];
                    var rewardList = this.getRewardList();
                    var size = rewardList.length;
                    var preRankNo = 0;
                    var model = this._proxy.model;
                    var teammateMap = this._type == 2 /* Guild */ ? model.guild_rank_list : model.role_rank_list;
                    for (var i = 0; i < size; i++) {
                        var item = rewardList[i];
                        var rankNo = item.cond_2[0];
                        var rankData = {
                            type: this._type,
                            rewards: item.rewards,
                            isShow: item.cond_3 && item.cond_3[0] == 1 //可查看排名
                        };
                        if (preRankNo + 1 == rankNo && i != size - 1) {
                            //具体名次，显示x
                            rankData.teammate = teammateMap[rankNo];
                            rankData.rankNo = rankNo;
                        }
                        else if (i == size - 1) {
                            //最后一名，显示xx+
                            rankData.rankRange = [rankNo - 1];
                            this._maxRankNum = rankNo - 1;
                        }
                        else {
                            //范围名次，显示x-xx
                            rankData.rankRange = [preRankNo + 1, rankNo];
                        }
                        preRankNo = rankNo;
                        list.push(rankData);
                    }
                    this._listData.replaceAll(list);
                };
                TongtiangeRankMdr1.prototype.updateRankLabel = function () {
                    var isGuild = this._type == 2 /* Guild */; //是宗门
                    var cntDesc = isGuild ? game.getLanById("tongtiange_tips17" /* tongtiange_tips17 */) : game.getLanById("tongtiange_tips18" /* tongtiange_tips18 */);
                    var buildCnt = this._proxy.model.rank_value;
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(cntDesc, [game.TextUtil.addColor(buildCnt + '', 2330156 /* GREEN */)]));
                    var rankBuildCnt = this._proxy.getRankCnt(isGuild); //上榜所需次数
                    //未达到上榜所需次数
                    if (buildCnt < rankBuildCnt) {
                        this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("tongtiange_tips19" /* tongtiange_tips19 */), [rankBuildCnt]));
                        return;
                    }
                    var rankNo = this._proxy.model.rank_no;
                    var rankNoDesc = rankNo ? rankNo + '' : game.getLanById("tishi_13" /* tishi_13 */);
                    var rankDesc = isGuild ? game.getLanById("tongtiange_tips15" /* tongtiange_tips15 */) : game.getLanById("tongtiange_tips16" /* tongtiange_tips16 */);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(rankDesc, [game.TextUtil.addColor(rankNoDesc, 2330156 /* GREEN */)]));
                };
                //获取第一名玩家
                TongtiangeRankMdr1.prototype.getTopPlayer = function () {
                    var model = this._proxy.model;
                    var rankMap = this._type == 2 /* Guild */ ? model.guild_rank_list : model.role_rank_list;
                    if (rankMap[1]) {
                        return rankMap[1];
                    }
                    return null;
                };
                TongtiangeRankMdr1.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                //上一次排行榜
                TongtiangeRankMdr1.prototype.onClickLastRank = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "76" /* TongtiangeLastRank */, [this._type, this._maxRankNum]);
                };
                return TongtiangeRankMdr1;
            }(game.EffectMdrBase));
            activity.TongtiangeRankMdr1 = TongtiangeRankMdr1;
            __reflect(TongtiangeRankMdr1.prototype, "game.mod.activity.TongtiangeRankMdr1", ["base.UpdateItem"]);
            var TongtiangeRankMdr2 = /** @class */ (function (_super) {
                __extends(TongtiangeRankMdr2, _super);
                function TongtiangeRankMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    /**1个人排名，2宗门排名*/
                    _this._type = 2 /* Guild */;
                    return _this;
                }
                return TongtiangeRankMdr2;
            }(TongtiangeRankMdr1));
            activity.TongtiangeRankMdr2 = TongtiangeRankMdr2;
            __reflect(TongtiangeRankMdr2.prototype, "game.mod.activity.TongtiangeRankMdr2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TongtiangeRankSectionMdr = /** @class */ (function (_super) {
                __extends(TongtiangeRankSectionMdr, _super);
                function TongtiangeRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                TongtiangeRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(238 /* Tongtiange */);
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_type2.source = "jianzaocishu";
                    this._view.timeItem.visible = true;
                };
                TongtiangeRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_update_tongtiange_rank_info" /* ON_UPDATE_TONGTIANGE_RANK_INFO */, this.onUpdateView, this);
                };
                TongtiangeRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs || !Array.isArray(this._showArgs)) {
                        return;
                    }
                    this._view.secondPop.updateTitleStr(game.getLanById("compete_mars_26" /* compete_mars_26 */));
                    this._endTime = this._proxy.getEndTime();
                    if (this._endTime) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    var type = this._showArgs[0];
                    var range = this._showArgs[1];
                    this._proxy.c2s_attic_rank_show(type, range[0], range[1]);
                };
                TongtiangeRankSectionMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                TongtiangeRankSectionMdr.prototype.onUpdateView = function () {
                    var type = this._showArgs[0];
                    var range = this._showArgs[1];
                    var model = this._proxy.model;
                    var rankList = type == 1 /* Personal */ ? model.role_rank_list : model.guild_rank_list;
                    var list = [];
                    for (var i = range[0]; i <= range[1]; i++) {
                        var teammate = rankList[i];
                        list.push({
                            rank: i,
                            name: teammate ? teammate.name : game.getLanById("tishi_2" /* tishi_2 */),
                            value: teammate && teammate.value ? teammate.value.toNumber() : 0
                        });
                    }
                    this._listData.replaceAll(list);
                    this.updateView();
                };
                TongtiangeRankSectionMdr.prototype.updateView = function () {
                    var isGuild = this._showArgs[0] == 2 /* Guild */; //是宗门
                    var rankDesc = isGuild ? game.getLanById("tongtiange_tips15" /* tongtiange_tips15 */) : game.getLanById("tongtiange_tips16" /* tongtiange_tips16 */);
                    var rankNo = this._proxy.getRankNo();
                    var rankNoDesc = rankNo ? rankNo + '' : game.getLanById("tishi_13" /* tishi_13 */);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(rankDesc, [game.TextUtil.addColor(rankNoDesc, 2330156 /* GREEN */)]));
                    var cntDesc = isGuild ? game.getLanById("tongtiange_tips17" /* tongtiange_tips17 */) : game.getLanById("tongtiange_tips18" /* tongtiange_tips18 */);
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(cntDesc, [game.TextUtil.addColor(this._proxy.getBuildCnt(isGuild) + '', 2330156 /* GREEN */)]));
                };
                TongtiangeRankSectionMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return TongtiangeRankSectionMdr;
            }(game.MdrBase));
            activity.TongtiangeRankSectionMdr = TongtiangeRankSectionMdr;
            __reflect(TongtiangeRankSectionMdr.prototype, "game.mod.activity.TongtiangeRankSectionMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActMainMdr = /** @class */ (function (_super) {
                __extends(WonderfulActMainMdr, _super);
                function WonderfulActMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "xiannvsonglibiaoqiantubiao",
                            mdr: activity.WonderfulActMdr1,
                            title: "jingcaihuodong_tips1" /* jingcaihuodong_tips1 */,
                            bg: "beijingtu_xiannvsongli",
                            openIdx: 1041670158 /* WonderfulAct */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "01" /* Btn1 */]
                        },
                        {
                            btnType: "02" /* Btn2 */,
                            icon: 'cangzhengebiaoqiantubiao',
                            mdr: activity.WonderfulActMdr2,
                            title: "jingcaihuodong_tips2" /* jingcaihuodong_tips2 */,
                            bg: "beijingtu_cangzhenkuo",
                            openIdx: 1041670159 /* WonderfulAct1 */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "02" /* Btn2 */],
                            param: 1 /* Cangzhenge */
                        },
                        {
                            btnType: "03" /* Btn3 */,
                            icon: 'lianxuchongzhibiaoqiantubiao',
                            mdr: activity.WonderfulActMdr3,
                            title: "jingcaihuodong_tips3" /* jingcaihuodong_tips3 */,
                            bg: "",
                            openIdx: 1041670159 /* WonderfulAct1 */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "03" /* Btn3 */],
                            param: 2 /* Lianxucharge */
                        },
                        {
                            btnType: "04" /* Btn4 */,
                            icon: 'leichonghaolibiaoqiantubiao',
                            mdr: activity.WonderfulActMdr4,
                            title: "jingcaihuodong_tips4" /* jingcaihuodong_tips4 */,
                            bg: "",
                            openIdx: 1041670217 /* Leijicharge */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "04" /* Btn4 */],
                            param: 3 /* Leijicharge */
                        },
                        {
                            btnType: "05" /* Btn5 */,
                            icon: 'denglujianglibiaoqiantubiao',
                            mdr: activity.WonderfulActMdr5,
                            title: "jingcaihuodong_tips5" /* jingcaihuodong_tips5 */,
                            bg: "",
                            openIdx: 1041670159 /* WonderfulAct1 */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "05" /* Btn5 */],
                            param: 4 /* Loginrewards */
                        },
                        {
                            btnType: "06" /* Btn6 */,
                            icon: 'hongyuncifu',
                            mdr: activity.WonderfulActMdr6,
                            title: "jingcaihuodong_tips7" /* jingcaihuodong_tips7 */,
                            bg: "hongyuncifu_bg",
                            openIdx: 1041670195 /* WonderfulAct6 */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "06" /* Btn6 */]
                        },
                        {
                            btnType: "07" /* Btn7 */,
                            icon: 'tiannvcifu_tab',
                            mdr: activity.TiannvWelfareMdr,
                            title: "jingcaihuodong_tips8" /* jingcaihuodong_tips8 */,
                            bg: "tiannvcifu_bg",
                            openIdx: 1041670216 /* TiannvWelfare */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "07" /* Btn7 */],
                            tag: "v9"
                        },
                        {
                            btnType: "08" /* Btn8 */,
                            icon: 'vipfuli_tab',
                            mdr: activity.VipWelfareMdr,
                            title: "jingcaihuodong_tips9" /* jingcaihuodong_tips9 */,
                            bg: "p1_del_bg",
                            openIdx: 1041670215 /* VipWelfare */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "08" /* Btn8 */],
                            tag: "v5"
                        },
                        {
                            btnType: "09" /* Btn9 */,
                            icon: 'huanjingleichongbiaoqiantubiao',
                            title: "fuchenlinghu_tips4" /* fuchenlinghu_tips4 */,
                            bg: '',
                            mdr: activity.HuanjingLeichongMdr,
                            openIdx: 1041670266 /* Huanjingleichong */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "09" /* Btn9 */]
                        },
                        {
                            btnType: "10" /* Btn10 */,
                            icon: 'huanjinglibaobiaoqiantubiao',
                            title: "fuchenlinghu_tips5" /* fuchenlinghu_tips5 */,
                            bg: '',
                            mdr: activity.HuanjingLibaoMdr,
                            openIdx: 1041670267 /* Huanjinglibao */,
                            hintTypes: ["27" /* Activity */, "57" /* WonderfulAct */, "10" /* Btn10 */]
                        }
                    ];
                    return _this;
                }
                WonderfulActMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                };
                WonderfulActMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_wonderful_act_close" /* ON_WONDERFUL_ACT_CLOSE */, this.onWonderfulActClose, this);
                };
                /**更新list数据*/
                WonderfulActMainMdr.prototype.updateBtnList = function () {
                    var list = [];
                    var mdrs = [];
                    for (var _i = 0, _a = this._btnData; _i < _a.length; _i++) {
                        var data = _a[_i];
                        if (!this.checkShow(data)) {
                            continue;
                        }
                        mdrs.push(data.mdr);
                        list.push(data);
                    }
                    this._btnList.source = list;
                    this._tab.mdrClsList = mdrs;
                };
                WonderfulActMainMdr.prototype.checkShow = function (data) {
                    if (data.openIdx && !mod.ViewMgr.getIns().checkViewOpen(data.openIdx)) {
                        return false;
                    }
                    //额外的判断活动开启时间
                    if (data.openIdx == 1041670159 /* WonderfulAct1 */ || data.openIdx == 1041670217 /* Leijicharge */) {
                        var actType = data.param;
                        return this._proxy.canOpen(actType);
                    }
                    else if (data.openIdx == 1041670216 /* TiannvWelfare */) {
                        return this._proxy.isTiannvOpen();
                    }
                    else if (data.openIdx == 1041670215 /* VipWelfare */) {
                        return this._proxy.isVipOpen();
                    }
                    return true;
                };
                WonderfulActMainMdr.prototype.onWonderfulActClose = function (n) {
                    var btnType = n.body;
                    var index = this.getMdrPosByType(btnType);
                    if (index < 0) {
                        return;
                    }
                    if (this._tab.selectIndex == index) {
                        mod.ViewMgr.getIns().showMain(); //当前活动关闭时，返回主界面
                    }
                    else {
                        this.updateBtnList(); //其他分页活动关闭时，刷新页签
                    }
                };
                return WonderfulActMainMdr;
            }(mod.WndBaseMdr));
            activity.WonderfulActMainMdr = WonderfulActMainMdr;
            __reflect(WonderfulActMainMdr.prototype, "game.mod.activity.WonderfulActMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActModel = /** @class */ (function () {
                function WonderfulActModel() {
                    var _a, _b;
                    /** 开启时间戳 */
                    this.open_time = 0;
                    /**藏珍阁*/
                    this.box_list = {};
                    /** 大奖状态 0未开启   1已开启 */
                    this.big_box_status = 0;
                    this.act_id_czg = 0;
                    /**连续充值*/
                    this.list_keepcharge = {};
                    this.act_id_keepcharge = 0;
                    /**累计充值*/
                    this.list_addcharge = {};
                    /** 充值累计金额 */
                    this.num_addcharge = 0;
                    this.act_id_addcharge = 0;
                    /**登录活动*/
                    this.list_login = {};
                    this.act_id_login = 0;
                    this.num_login = 0;
                    this.count = 0;
                    this.hintPath = (_a = {},
                        _a[1] = ["27" /* Activity */, "57" /* WonderfulAct */, "01" /* Btn1 */],
                        _a[2] = ["27" /* Activity */, "57" /* WonderfulAct */, "02" /* Btn2 */],
                        // [3]: [ModName.Activity, MainActivityViewType.WonderfulAct, WonderfulActMainBtnType.Btn3],
                        _a[4] = ["27" /* Activity */, "57" /* WonderfulAct */, "04" /* Btn4 */],
                        _a[5] = ["27" /* Activity */, "57" /* WonderfulAct */, "05" /* Btn5 */],
                        _a[6] = ["27" /* Activity */, "57" /* WonderfulAct */, "06" /* Btn6 */],
                        _a);
                    //连续充值
                    this.hintPath1 = (_b = {},
                        _b[1] = ["27" /* Activity */, "57" /* WonderfulAct */, "03" /* Btn3 */, "01" /* TabBtnType01 */],
                        _b[2] = ["27" /* Activity */, "57" /* WonderfulAct */, "03" /* Btn3 */, "02" /* TabBtnType02 */],
                        _b);
                    /********************************天女赐福&&VIP5福利****************************************/
                    this.infos = {}; //type是TiannvWelfareOpType
                    this.tiannvCfgs = null; //valueType是累充档位
                    this.tiannvValueTypes = []; //type是累充档位
                    this.tiannvHint = ["27" /* Activity */, "57" /* WonderfulAct */, "07" /* Btn7 */];
                    this.vipHint = ["27" /* Activity */, "57" /* WonderfulAct */, "08" /* Btn8 */];
                }
                return WonderfulActModel;
            }());
            activity.WonderfulActModel = WonderfulActModel;
            __reflect(WonderfulActModel.prototype, "game.mod.activity.WonderfulActModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_xiannv_gift_get_rewards = msg.c2s_xiannv_gift_get_rewards;
            var s2c_xiannv_gift_info = msg.s2c_xiannv_gift_info;
            var c2s_jingcai_cangzhenge_open = msg.c2s_jingcai_cangzhenge_open;
            var s2c_jingcai_cangzhenge_info = msg.s2c_jingcai_cangzhenge_info;
            var c2s_jingcai_keepcharge_get_rewards = msg.c2s_jingcai_keepcharge_get_rewards;
            var s2c_jingcai_keepcharge_info = msg.s2c_jingcai_keepcharge_info;
            var c2s_jingcai_addcharge_get_rewards = msg.c2s_jingcai_addcharge_get_rewards;
            var s2c_jingcai_addcharge_info = msg.s2c_jingcai_addcharge_info;
            var c2s_jingcai_login_get_rewards = msg.c2s_jingcai_login_get_rewards;
            var s2c_jingcai_login_info = msg.s2c_jingcai_login_info;
            var TimeMgr = base.TimeMgr;
            var c2s_luckbless_button_click = msg.c2s_luckbless_button_click;
            var s2c_luckbless_info = msg.s2c_luckbless_info;
            var s2c_tired_charge_info = msg.s2c_tired_charge_info;
            var s2c_tired_charge_update = msg.s2c_tired_charge_update;
            var c2s_tired_charge_receive = msg.c2s_tired_charge_receive;
            /**
             * @description 精彩活动
             */
            var WonderfulActProxy = /** @class */ (function (_super) {
                __extends(WonderfulActProxy, _super);
                function WonderfulActProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._czgCostId = 0;
                    _this._cfgOneId = 0;
                    _this._cfgTenId = 0;
                    return _this;
                }
                Object.defineProperty(WonderfulActProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                WonderfulActProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.WonderfulActModel();
                    this.onProto(s2c_xiannv_gift_info, this.s2c_xiannv_gift_info, this);
                    this.onProto(s2c_jingcai_cangzhenge_info, this.s2c_jingcai_cangzhenge_info, this);
                    this.onProto(s2c_jingcai_keepcharge_info, this.s2c_jingcai_keepcharge_info, this);
                    this.onProto(s2c_jingcai_addcharge_info, this.s2c_jingcai_addcharge_info, this);
                    this.onProto(s2c_jingcai_login_info, this.s2c_jingcai_login_info, this);
                    this.onProto(s2c_luckbless_info, this.s2c_luckbless_info, this);
                    this.onProto(s2c_tired_charge_info, this.s2c_tired_charge_info, this);
                    this.onProto(s2c_tired_charge_update, this.s2c_tired_charge_update, this);
                };
                //精彩活动-仙女送礼
                WonderfulActProxy.prototype.c2s_xiannv_gift_get_rewards = function () {
                    var msg = new c2s_xiannv_gift_get_rewards();
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_xiannv_gift_info = function (n) {
                    var msg = n.body;
                    if (msg.status != null) {
                        this._model.status = msg.status;
                    }
                    this._model.open_time = msg.open_time != null ? msg.open_time.toNumber() : 0;
                    this.updateHint1();
                    this.sendNt("on_update_wonderful_act_xiannv_gift" /* ON_UPDATE_WONDERFUL_ACT_XIANNV_GIFT */);
                };
                // 精彩活动-藏珍阁
                WonderfulActProxy.prototype.c2s_jingcai_cangzhenge_open = function (index) {
                    var msg = new c2s_jingcai_cangzhenge_open();
                    msg.act_id = this._model.act_id_czg;
                    msg.index = index;
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_jingcai_cangzhenge_info = function (n) {
                    var msg = n.body;
                    if (msg.act_id != null) {
                        this._model.act_id_czg = msg.act_id;
                    }
                    if (msg.big_box_status != null) {
                        this._model.big_box_status = msg.big_box_status;
                    }
                    if (msg.box_list != null) {
                        for (var _i = 0, _a = msg.box_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.box_list[item.index] = item;
                        }
                    }
                    else {
                        this._model.box_list = {}; //重置数据
                    }
                    this.updateHint2();
                    this.sendNt("on_update_wonderful_act_cangzhenge" /* ON_UPDATE_WONDERFUL_ACT_CANGZHENGE */);
                };
                //精彩活动-连续充值
                WonderfulActProxy.prototype.c2s_jingcai_keepcharge_get_rewards = function (index) {
                    var msg = new c2s_jingcai_keepcharge_get_rewards();
                    msg.act_id = this._model.act_id_keepcharge;
                    msg.index = index;
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_jingcai_keepcharge_info = function (n) {
                    var msg = n.body;
                    if (msg.act_id != null) {
                        this._model.act_id_keepcharge = msg.act_id;
                    }
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.list_keepcharge[item.type] = item;
                        }
                    }
                    else {
                        this._model.list_keepcharge = {};
                    }
                    this.updateHint3();
                    this.sendNt("on_update_wonderful_act_keepcharge" /* ON_UPDATE_WONDERFUL_ACT_KEEPCHARGE */);
                };
                //精彩活动-累计充值
                WonderfulActProxy.prototype.c2s_jingcai_addcharge_get_rewards = function (index) {
                    var msg = new c2s_jingcai_addcharge_get_rewards();
                    msg.act_id = this._model.act_id_addcharge;
                    msg.index = index;
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_jingcai_addcharge_info = function (n) {
                    var msg = n.body;
                    if (msg.act_id != null) {
                        this._model.act_id_addcharge = msg.act_id;
                    }
                    if (msg.num != null) {
                        this._model.num_addcharge = msg.num.toNumber();
                    }
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.list_addcharge[item.index] = item;
                        }
                    }
                    else {
                        this._model.list_addcharge = {};
                    }
                    this.updateHintOther(4);
                    this.sendNt("on_update_wonderful_act_addcharge" /* ON_UPDATE_WONDERFUL_ACT_ADDCHARGE */);
                };
                //精彩活动-登录活动
                WonderfulActProxy.prototype.c2s_jingcai_login_get_rewards = function (index) {
                    var msg = new c2s_jingcai_login_get_rewards();
                    msg.act_id = this._model.act_id_login;
                    msg.index = index;
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_jingcai_login_info = function (n) {
                    var msg = n.body;
                    if (msg.act_id != null) {
                        this._model.act_id_login = msg.act_id;
                    }
                    if (msg.num != null) {
                        this._model.num_login = msg.num.toNumber();
                    }
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.list_login[item.index] = item;
                        }
                    }
                    else {
                        this._model.list_login = {};
                    }
                    this.updateHintOther(5);
                    this.sendNt("on_update_wonderful_act_login" /* ON_UPDATE_WONDERFUL_ACT_LOGIN */);
                };
                WonderfulActProxy.prototype.c2s_luckbless_button_click = function (button_type) {
                    var msg = new c2s_luckbless_button_click();
                    msg.button_type = button_type;
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_luckbless_info = function (n) {
                    var msg = n.body;
                    if (msg.count) {
                        this._model.count = msg.count;
                    }
                    this.sendNt("on_update_wonderful_act_6" /* ON_UPDATE_WONDERFUL_ACT_6 */);
                };
                //时间段（开始时间，结束时间；开始时间，结束时间；......）
                WonderfulActProxy.prototype.getXiannvTimeObjList = function () {
                    if (this._xiannvTimeObjList) {
                        return this._xiannvTimeObjList;
                    }
                    var list = [];
                    var cfg = game.GameConfig.getParamConfigById('xiannvsongli_shijian');
                    var timeList = cfg.value;
                    for (var _i = 0, timeList_1 = timeList; _i < timeList_1.length; _i++) {
                        var item = timeList_1[_i];
                        list.push({
                            h: item[0],
                            m: item[1]
                        });
                        list.push({
                            h: item[2],
                            m: item[3]
                        });
                    }
                    this._xiannvTimeObjList = list;
                    return list;
                };
                WonderfulActProxy.prototype.getXiannvTimeSecondList = function () {
                    var list = [];
                    var timeList = this.getXiannvTimeObjList();
                    var date = new Date(TimeMgr.time.serverTime);
                    for (var i = 0; i < timeList.length; i += 2) {
                        var startObj = timeList[i];
                        date.setHours(startObj.h, startObj.m, 0, 0);
                        list.push(Math.floor(date.getTime() / 1000));
                        var endObj = timeList[i + 1];
                        date.setHours(endObj.h, endObj.m, 0, 0);
                        list.push(Math.floor(date.getTime() / 1000));
                    }
                    return list;
                };
                WonderfulActProxy.prototype.inXiannvActTime = function () {
                    var curTimeSec = TimeMgr.time.serverTimeSecond;
                    var list = this.getXiannvTimeSecondList();
                    for (var i = 0; i < list.length; i += 2) {
                        var startTime = list[i];
                        var endTime = list[i + 1];
                        if (startTime <= curTimeSec && curTimeSec < endTime) {
                            return true;
                        }
                    }
                    return false;
                };
                //仙女奖励，在活动时间内且未领取
                WonderfulActProxy.prototype.canGetXiannvReward = function () {
                    if (!this.inXiannvActTime()) {
                        return false;
                    }
                    var status = this._model.status;
                    return status != null && status == 0;
                };
                WonderfulActProxy.prototype.getXiannvNextTimeSec = function () {
                    var curTimeSec = TimeMgr.time.serverTimeSecond;
                    var list = this.getXiannvTimeSecondList();
                    for (var i = 0; i < list.length; i += 2) {
                        var startTime = list[i];
                        if (curTimeSec < startTime) {
                            return startTime;
                        }
                    }
                    return list[0] + game.Second.Day;
                };
                WonderfulActProxy.prototype.getCzgRewardGottenCnt = function () {
                    var cnt = 0;
                    for (var key in this._model.box_list) {
                        var item = this._model.box_list[key];
                        if (item && item.status == 1) {
                            cnt++;
                        }
                    }
                    return cnt;
                };
                WonderfulActProxy.prototype.getCzgRewardMaxCnt = function () {
                    var list = game.getConfigListByName("canzhenge.json" /* Cangzhenge */) || [];
                    return list.length - 1;
                };
                WonderfulActProxy.prototype.canOpenCzgReward = function (index, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var box = this._model.box_list[index];
                    if (box) {
                        return false;
                    }
                    var cfg = game.getConfigByNameId("canzhenge.json" /* Cangzhenge */, index);
                    if (!cfg || !cfg.costs) {
                        return false;
                    }
                    for (var _i = 0, _a = cfg.costs; _i < _a.length; _i++) {
                        var cost = _a[_i];
                        if (!mod.BagUtil.checkPropCnt(cost[0], cost[1], isTips ? 1 /* Dialog */ : 0 /* None */)) {
                            return false;
                        }
                    }
                    return true;
                };
                //1藏珍阁，2连续充值，3累计豪礼，4登陆奖励
                WonderfulActProxy.prototype.getActDataByType = function (type) {
                    var actId = this.getActId(type);
                    return this.getActData(actId);
                };
                WonderfulActProxy.prototype.getActData = function (act_id) {
                    var proxy = game.getProxy("27" /* Activity */, 50 /* Activity */);
                    return proxy.getActData(act_id);
                };
                //1藏珍阁，2连续充值，3累计豪礼，4登陆奖励
                WonderfulActProxy.prototype.getActId = function (type) {
                    var model = this._model;
                    var ary = [0, model.act_id_czg, model.act_id_keepcharge, model.act_id_addcharge, model.act_id_login];
                    return ary[type] || 0;
                };
                //1藏珍阁，2连续充值，3累计豪礼，4登陆奖励
                WonderfulActProxy.prototype.getEndTimeSec = function (type) {
                    var actId = this.getActId(type);
                    var actData = this.getActData(actId);
                    return actData && actData.c_end_time || 0;
                };
                //活动开启否
                WonderfulActProxy.prototype.canOpen = function (type) {
                    var actData = this.getActDataByType(type);
                    if (!actData) {
                        return false;
                    }
                    var timeSec = TimeMgr.time.serverTimeSecond;
                    return actData.c_begin_time <= timeSec && timeSec <= actData.c_end_time;
                };
                WonderfulActProxy.prototype.canGetLoginReward = function (index) {
                    var info = this._model.list_login[index];
                    return info && info.status == 1;
                };
                //0未开启   1可领取   2已领取
                WonderfulActProxy.prototype.getKeepChargeStatus = function (type, index) {
                    var info = this._model.list_keepcharge[type];
                    if (!info || !info.list) {
                        return 0;
                    }
                    for (var _i = 0, _a = info.list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item && item.index == index) {
                            return item.status;
                        }
                    }
                    return 0;
                };
                WonderfulActProxy.prototype.getCountOne = function () {
                    if (this._cfgOneId) {
                        return this._cfgOneId;
                    }
                    var cost = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    this._cfgOneId = cost.value[0][0];
                    return this._cfgOneId;
                };
                WonderfulActProxy.prototype.getCountTen = function () {
                    if (this._cfgTenId) {
                        return this._cfgTenId;
                    }
                    var cost = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    this._cfgTenId = cost.value[1][0];
                    return this._cfgTenId;
                };
                WonderfulActProxy.prototype.getCzgCostId = function () {
                    if (this._czgCostId) {
                        return this._czgCostId;
                    }
                    var cfg = game.getConfigByNameId("canzhenge.json" /* Cangzhenge */, 1);
                    if (cfg && cfg.costs[0]) {
                        this._czgCostId = cfg.costs[0][0];
                    }
                    return this._czgCostId;
                };
                WonderfulActProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(this.getCzgCostId()) > -1) {
                        this.updateHint2();
                    }
                    if (indexs.indexOf(this.getCountOne()) > -1 || indexs.indexOf(this.getCountTen()) > -1) {
                        this.updateHint6();
                    }
                };
                WonderfulActProxy.prototype.updateHint6 = function () {
                    var hint1 = this.oneIsHasHint();
                    var hint2 = this.tenIsHasHint();
                    mod.HintMgr.setHint(hint1 || hint2, this._model.hintPath[6]);
                };
                WonderfulActProxy.prototype.oneIsHasHint = function () {
                    var cost = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    var hasNum = mod.BagUtil.getPropCntByIdx(cost.value[0][0]);
                    return hasNum > cost.value[0][1];
                };
                WonderfulActProxy.prototype.tenIsHasHint = function () {
                    var cost = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    var hasNum = mod.BagUtil.getPropCntByIdx(cost.value[1][0]);
                    return hasNum > cost.value[1][1];
                };
                WonderfulActProxy.prototype.updateHint1 = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670158 /* WonderfulAct */)) {
                        return;
                    }
                    var hint = this.canGetXiannvReward();
                    mod.HintMgr.setHint(hint, this._model.hintPath[1]);
                };
                WonderfulActProxy.prototype.updateHint2 = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670159 /* WonderfulAct1 */)) {
                        return;
                    }
                    var hint = false;
                    var cfgList = game.getConfigListByName("canzhenge.json" /* Cangzhenge */);
                    for (var _i = 0, cfgList_15 = cfgList; _i < cfgList_15.length; _i++) {
                        var cfg = cfgList_15[_i];
                        //过滤大奖
                        if (!cfg.index) {
                            continue;
                        }
                        //过滤已领取的
                        var info = this._model.box_list[cfg.index];
                        if (info && info.status == 1) {
                            continue;
                        }
                        if (this.canOpenCzgReward(cfg.index)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[2]);
                };
                WonderfulActProxy.prototype.updateHint3 = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670159 /* WonderfulAct1 */)) {
                        return;
                    }
                    var list = this._model.list_keepcharge;
                    for (var type in list) {
                        var info = list[type];
                        var hint = false;
                        if (info && info.list) {
                            for (var _i = 0, _a = info.list; _i < _a.length; _i++) {
                                var item = _a[_i];
                                if (item && item.status == 1) {
                                    hint = true;
                                    break;
                                }
                            }
                        }
                        mod.HintMgr.setHint(hint, this._model.hintPath1[+type]);
                    }
                };
                //4累计豪礼，5登陆奖励
                WonderfulActProxy.prototype.updateHintOther = function (type) {
                    var isCharge = type == 4; //是否累计充值
                    if (isCharge && !mod.ViewMgr.getIns().checkViewOpen(1041670217 /* Leijicharge */)) {
                        return;
                    }
                    if (!isCharge && !mod.ViewMgr.getIns().checkViewOpen(1041670159 /* WonderfulAct1 */)) {
                        return;
                    }
                    var list = isCharge ? this._model.list_addcharge : this._model.list_login;
                    var hint = false;
                    for (var key in list) {
                        var item = list[key];
                        if (item && item.status == 1) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[type]);
                };
                //连续充值金额
                WonderfulActProxy.prototype.getKeepChargeRmb = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('wonderful_act_keepcharge');
                    return paramCfg ? paramCfg.value : [30, 100];
                };
                /********************************天女赐福&&VIP5福利****************************************/
                WonderfulActProxy.prototype.c2s_tired_charge_receive = function (type, index) {
                    var msg = new c2s_tired_charge_receive();
                    msg.type = type;
                    msg.index = index;
                    this.sendProto(msg);
                };
                WonderfulActProxy.prototype.s2c_tired_charge_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.type) {
                        return;
                    }
                    if (!this._model.infos[msg.type]) {
                        this._model.infos[msg.type] = msg;
                    }
                    this._model.infos[msg.type] = msg; //数据直接覆盖，服务端会清空数据
                    if (msg.type == 1 /* Tiannv */) {
                        this.updateTiannvHint();
                        this.checkTiannvClose();
                        this.sendNt("on_update_tiannv_welfare_info" /* ON_UPDATE_TIANNV_WELFARE_INFO */);
                    }
                    else {
                        this.updateVipHint();
                        this.checkVipClose();
                        this.sendNt("on_update_vip_welfare_info" /* ON_UPDATE_VIP_WELFARE_INFO */);
                    }
                };
                WonderfulActProxy.prototype.s2c_tired_charge_update = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.type) {
                        return;
                    }
                    var info = this._model.infos[msg.type];
                    for (var k in msg) {
                        info[k] = msg[k];
                    }
                    if (msg.type == 1 /* Tiannv */) {
                        this.updateTiannvHint();
                        this.sendNt("on_update_tiannv_welfare_info" /* ON_UPDATE_TIANNV_WELFARE_INFO */);
                    }
                    else {
                        this.updateVipHint();
                        this.sendNt("on_update_vip_welfare_info" /* ON_UPDATE_VIP_WELFARE_INFO */);
                    }
                };
                WonderfulActProxy.prototype.getInfo = function (type) {
                    return this._model.infos[type] || null;
                };
                WonderfulActProxy.prototype.getEndTime = function (type) {
                    var info = this.getInfo(type);
                    return info && info.end_time || 0;
                };
                WonderfulActProxy.prototype.getRmb = function (type) {
                    var info = this.getInfo(type);
                    return info && info.total_value || 0;
                };
                WonderfulActProxy.prototype.getRewardList = function (type) {
                    var info = this.getInfo(type);
                    return info && info.list || [];
                };
                WonderfulActProxy.prototype.checkOpen = function (openIdx, type) {
                    if (!mod.ViewMgr.getIns().checkViewOpen(openIdx)) {
                        return false;
                    }
                    var endTime = this.getEndTime(type);
                    return endTime > TimeMgr.time.serverTimeSecond;
                };
                WonderfulActProxy.prototype.isTiannvOpen = function () {
                    return this.checkOpen(1041670216 /* TiannvWelfare */, 1 /* Tiannv */);
                };
                WonderfulActProxy.prototype.isVipOpen = function () {
                    return this.checkOpen(1041670215 /* VipWelfare */, 2 /* Vip */);
                };
                WonderfulActProxy.prototype.initTiannvCfgs = function () {
                    if (!this._model.tiannvCfgs) {
                        this._model.tiannvCfgs = {};
                        var cfgList = game.getConfigListByName("tiannvcharge_weal.json" /* TiannvChargeWeal */);
                        for (var _i = 0, cfgList_16 = cfgList; _i < cfgList_16.length; _i++) {
                            var cfg = cfgList_16[_i];
                            var valueType = cfg.value;
                            if (!this._model.tiannvCfgs[valueType]) {
                                this._model.tiannvCfgs[valueType] = [];
                                this._model.tiannvValueTypes.push(valueType);
                            }
                            this._model.tiannvCfgs[valueType].push(cfg);
                        }
                    }
                };
                WonderfulActProxy.prototype.getValueTypes = function () {
                    var types = this._model.tiannvValueTypes;
                    if (!types || !types.length) {
                        this.initTiannvCfgs();
                    }
                    return types;
                };
                WonderfulActProxy.prototype.getTiannvCfgs = function (valueType) {
                    this.initTiannvCfgs();
                    return this._model.tiannvCfgs[valueType];
                };
                WonderfulActProxy.prototype.hasDraw = function (type, index) {
                    var rewardList = this.getRewardList(type);
                    return rewardList.indexOf(index) > -1;
                };
                WonderfulActProxy.prototype.canTiannvDraw = function (cfg) {
                    var valueType = cfg.value;
                    var cfgs = this.getTiannvCfgs(valueType);
                    for (var _i = 0, cfgs_7 = cfgs; _i < cfgs_7.length; _i++) {
                        var i = cfgs_7[_i];
                        if (this.hasDraw(1 /* Tiannv */, i.index)) {
                            return false; //每档位奖励活动期内仅能领取一个且一次
                        }
                    }
                    var rmb = this.getRmb(1 /* Tiannv */);
                    return rmb >= cfg.value;
                };
                WonderfulActProxy.prototype.canVipDraw = function (cfg) {
                    if (this.hasDraw(2 /* Vip */, cfg.index)) {
                        return false;
                    }
                    var rmb = this.getRmb(2 /* Vip */);
                    return rmb >= cfg.value;
                };
                WonderfulActProxy.prototype.getTiannvHintByValueType = function (valueType) {
                    var cfgList = this.getTiannvCfgs(valueType);
                    for (var _i = 0, cfgList_17 = cfgList; _i < cfgList_17.length; _i++) {
                        var cfg = cfgList_17[_i];
                        if (this.canTiannvDraw(cfg)) {
                            return true;
                        }
                    }
                    return false;
                };
                WonderfulActProxy.prototype.checkTiannvHint = function () {
                    var types = this.getValueTypes();
                    for (var _i = 0, types_5 = types; _i < types_5.length; _i++) {
                        var valueType = types_5[_i];
                        if (this.getTiannvHintByValueType(valueType)) {
                            return true;
                        }
                    }
                    return false;
                };
                WonderfulActProxy.prototype.updateTiannvHint = function () {
                    if (!this.isTiannvOpen()) {
                        return;
                    }
                    var hint = this.checkTiannvHint();
                    var hintType = this._model.tiannvHint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                WonderfulActProxy.prototype.updateVipHint = function () {
                    if (!this.isVipOpen()) {
                        return;
                    }
                    var hint = this.checkVipHint();
                    var hintType = this._model.vipHint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                WonderfulActProxy.prototype.checkVipHint = function () {
                    var cfgList = game.getConfigListByName("vip_charge.json" /* VipCharge */);
                    for (var _i = 0, cfgList_18 = cfgList; _i < cfgList_18.length; _i++) {
                        var cfg = cfgList_18[_i];
                        var canDraw = this.canVipDraw(cfg);
                        if (canDraw) {
                            return true;
                        }
                    }
                    return false;
                };
                WonderfulActProxy.prototype.checkTiannvClose = function () {
                    var nextTime = this.getEndTime(1 /* Tiannv */);
                    if (!nextTime) {
                        return;
                    }
                    mod.HintMgr.addTimeEvent(8 /* TiannvWelfare */, nextTime, this, this.onTiannvClose);
                };
                WonderfulActProxy.prototype.onTiannvClose = function () {
                    var isOpen = this.isTiannvOpen();
                    if (!isOpen) {
                        this.sendNt("on_wonderful_act_close" /* ON_WONDERFUL_ACT_CLOSE */, "07" /* Btn7 */);
                    }
                };
                WonderfulActProxy.prototype.checkVipClose = function () {
                    var nextTime = this.getEndTime(2 /* Vip */);
                    if (!nextTime) {
                        return;
                    }
                    mod.HintMgr.addTimeEvent(9 /* VipWelfare */, nextTime, this, this.onVipClose);
                };
                WonderfulActProxy.prototype.onVipClose = function () {
                    var isOpen = this.isVipOpen();
                    if (!isOpen) {
                        this.sendNt("on_wonderful_act_close" /* ON_WONDERFUL_ACT_CLOSE */, "08" /* Btn8 */);
                    }
                };
                /**功能开启刷新按钮*/
                WonderfulActProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670158 /* WonderfulAct */) > -1) {
                        this.updateHint1();
                    }
                    if (addIdx.indexOf(1041670159 /* WonderfulAct1 */) > -1) {
                        this.updateHint2();
                        this.updateHint3();
                        this.updateHintOther(5);
                    }
                    if (addIdx.indexOf(1041670217 /* Leijicharge */) > -1) {
                        this.updateHintOther(4);
                    }
                    if (addIdx.indexOf(1041670216 /* TiannvWelfare */) > -1) {
                        this.updateTiannvHint();
                    }
                    if (addIdx.indexOf(1041670215 /* VipWelfare */) > -1) {
                        this.updateVipHint();
                    }
                };
                return WonderfulActProxy;
            }(game.ProxyBase));
            activity.WonderfulActProxy = WonderfulActProxy;
            __reflect(WonderfulActProxy.prototype, "game.mod.activity.WonderfulActProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var HuanjingLeichongItem = /** @class */ (function (_super) {
                __extends(HuanjingLeichongItem, _super);
                function HuanjingLeichongItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuanjingLeichongItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                    this.img_bought.source = 'lvseyilingqu';
                };
                HuanjingLeichongItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data || !data.cfg) {
                        return;
                    }
                    var cfg = data.cfg;
                    this._listData.replaceAll(cfg.reward);
                    var desc;
                    var payedRmb = game.RoleVo.ins.day_charge_rmb;
                    if (cfg.value == 0) {
                        desc = game.getLanById("fuchenlinghu_tips14" /* fuchenlinghu_tips14 */);
                    }
                    else {
                        desc = game.StringUtil.substitute(game.getLanById("fuchenlinghu_tips15" /* fuchenlinghu_tips15 */), [cfg.value])
                            + game.TextUtil.addColor("(" + payedRmb + "/" + cfg.value + ")", payedRmb >= cfg.value ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                    if (data.status == 2 /* Draw */) {
                        this.btn_buy.visible = false;
                        this.img_bought.visible = true;
                    }
                    else {
                        this.btn_buy.visible = true;
                        this.img_bought.visible = false;
                        if (data.status == 1 /* Finish */) {
                            this.btn_buy.label = game.getLanById("lingqu" /* lingqu */);
                            this.btn_buy.setHint(true);
                            this.btn_buy.setYellow();
                        }
                        else {
                            this.btn_buy.label = game.getLanById("exp_pool15" /* exp_pool15 */);
                            this.btn_buy.setHint(false);
                            this.btn_buy.setBlue();
                        }
                    }
                };
                HuanjingLeichongItem.prototype.onClick = function () {
                    if (this.data.status == 1 /* Finish */) {
                        this._proxy.c2s_linghu_oper(7 /* Oper7 */, this.data.cfg.index);
                    }
                    else {
                        mod.ViewMgr.getIns().openCommonRechargeView();
                    }
                };
                return HuanjingLeichongItem;
            }(mod.BaseGiftItemRender));
            activity.HuanjingLeichongItem = HuanjingLeichongItem;
            __reflect(HuanjingLeichongItem.prototype, "game.mod.activity.HuanjingLeichongItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var HuanjingLibaoItem = /** @class */ (function (_super) {
                __extends(HuanjingLibaoItem, _super);
                function HuanjingLibaoItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = 'skins.common.BaseGiftItemSkin3';
                    return _this;
                }
                HuanjingLibaoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 266 /* Fuchenlinghu */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_buy, this.onClick, this);
                    this.img_bought.source = 'lvseyilingqu';
                };
                HuanjingLibaoItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data || !data.cfg) {
                        return;
                    }
                    var cfg = data.cfg;
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(cfg.title);
                    this.btn_buy.setHint(false);
                    if (cfg.type == 1 && cfg.cost) {
                        this._listData.replaceAll(cfg.reward2);
                        this.btn_buy.setCost(cfg.cost);
                        this.btn_buy.label = '';
                        this.btn_buy.setHint(data.status == 1 /* Finish */);
                    }
                    else if (cfg.type == 2 && cfg.product_id) {
                        var rewards = mod.PayUtil.getRewards(cfg.product_id);
                        this._listData.replaceAll(rewards);
                        this.btn_buy.resetCost();
                        var rmb = mod.PayUtil.getRmbValue(cfg.product_id);
                        if (rmb == 0) {
                            this.btn_buy.label = '免费';
                            this.btn_buy.setHint(true);
                        }
                        else {
                            this.btn_buy.label = rmb + mod.PayUtil.getRmbUnit();
                        }
                    }
                    var isDraw = data.status == 2 /* Draw */;
                    this.img_bought.visible = isDraw;
                    this.btn_buy.visible = !isDraw;
                    this.lb_cnt.visible = !isDraw;
                    if (this.lb_cnt.visible) {
                        var leftCnt = Math.max(cfg.count - data.boughtCnt, 0);
                        var cntStr = game.TextUtil.addColor(leftCnt + "/" + cfg.count, 2330156 /* GREEN */);
                        if (cfg.reset_type == 1) {
                            cntStr = '每日：' + cntStr;
                        }
                        this.lb_cnt.textFlow = game.TextUtil.parseHtml(cntStr);
                    }
                };
                HuanjingLibaoItem.prototype.onClick = function () {
                    var cfg = this.data.cfg;
                    if (cfg.type == 1) {
                        if (cfg.cost && mod.BagUtil.checkPropCntUp(cfg.cost[0], cfg.cost[1])) {
                            this._proxy.c2s_linghu_oper(8 /* Oper8 */, cfg.index);
                        }
                    }
                    else if (cfg.type == 2) {
                        mod.PayUtil.pay(cfg.product_id);
                    }
                };
                return HuanjingLibaoItem;
            }(mod.BaseListenerRenderer));
            activity.HuanjingLibaoItem = HuanjingLibaoItem;
            __reflect(HuanjingLibaoItem.prototype, "game.mod.activity.HuanjingLibaoItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var TiannvWelfareItem = /** @class */ (function (_super) {
                __extends(TiannvWelfareItem, _super);
                function TiannvWelfareItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TiannvWelfareItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(219 /* WonderfulAct */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_box, this.onClickBox, this);
                };
                TiannvWelfareItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var valueType = this.data;
                    var rmbStr = valueType + mod.PayUtil.getRmbUnit();
                    this.addBmpFont(rmbStr, game.BmpTextCfg[216 /* Supremegit */], this.gr_font, true, 0.8, true);
                    this.btn_box.redPoint.visible = this._proxy.getTiannvHintByValueType(valueType);
                };
                TiannvWelfareItem.prototype.onClickBox = function () {
                    if (!this.data) {
                        return;
                    }
                    var valueType = this.data;
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "101" /* TiannvWelfareReward */, valueType);
                };
                //设置宝箱资源
                TiannvWelfareItem.prototype.setBox = function (icon) {
                    this.btn_box.icon = icon;
                };
                return TiannvWelfareItem;
            }(mod.BaseRenderer));
            activity.TiannvWelfareItem = TiannvWelfareItem;
            __reflect(TiannvWelfareItem.prototype, "game.mod.activity.TiannvWelfareItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var TiannvWelfareRewardItem = /** @class */ (function (_super) {
                __extends(TiannvWelfareRewardItem, _super);
                function TiannvWelfareRewardItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TiannvWelfareRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(219 /* WonderfulAct */);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_draw, this.onClickDraw, this);
                };
                TiannvWelfareRewardItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data;
                    this._rewardList.source = cfg.reward.concat().slice(0, 3);
                    var canDraw = this._proxy.canTiannvDraw(cfg);
                    this.btn_draw.visible = this.btn_draw.redPoint.visible = canDraw;
                    this.img_status.visible = !canDraw;
                    if (this.img_status.visible) {
                        var hasDraw = this._proxy.hasDraw(1 /* Tiannv */, cfg.index);
                        this.img_status.source = hasDraw ? "lvseyilingqu" : "weidacheng";
                    }
                };
                TiannvWelfareRewardItem.prototype.onClickDraw = function () {
                    var _this = this;
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data;
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("tiannv_welfare_tips3" /* tiannv_welfare_tips3 */), Handler.alloc(this, function () {
                        _this._proxy.c2s_tired_charge_receive(1 /* Tiannv */, cfg.index);
                    }));
                };
                return TiannvWelfareRewardItem;
            }(mod.BaseListenerRenderer));
            activity.TiannvWelfareRewardItem = TiannvWelfareRewardItem;
            __reflect(TiannvWelfareRewardItem.prototype, "game.mod.activity.TiannvWelfareRewardItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TiannvWelfareRewardView = /** @class */ (function (_super) {
                __extends(TiannvWelfareRewardView, _super);
                function TiannvWelfareRewardView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TiannvWelfareRewardSkin";
                    return _this;
                }
                return TiannvWelfareRewardView;
            }(eui.Component));
            activity.TiannvWelfareRewardView = TiannvWelfareRewardView;
            __reflect(TiannvWelfareRewardView.prototype, "game.mod.activity.TiannvWelfareRewardView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TiannvWelfareView = /** @class */ (function (_super) {
                __extends(TiannvWelfareView, _super);
                function TiannvWelfareView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.TiannvWelfareSkin";
                    return _this;
                }
                return TiannvWelfareView;
            }(eui.Component));
            activity.TiannvWelfareView = TiannvWelfareView;
            __reflect(TiannvWelfareView.prototype, "game.mod.activity.TiannvWelfareView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var VipWelfareItem = /** @class */ (function (_super) {
                __extends(VipWelfareItem, _super);
                function VipWelfareItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                VipWelfareItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(219 /* WonderfulAct */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_draw, this.onClickDraw, this);
                };
                VipWelfareItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data.cfg;
                    var rmb = this._proxy.getRmb(2 /* Vip */);
                    var limitRmb = cfg.value;
                    var descStr = game.StringUtil.substitute(game.getLanById("vip_welfare_tips1" /* vip_welfare_tips1 */), [limitRmb])
                        + game.TextUtil.addColor("(" + rmb + "/" + limitRmb + ")", rmb >= limitRmb ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    this._rewardList.source = cfg.reward.slice(0, 3);
                    var hasDraw = data.hasDraw;
                    this.btn_draw.visible = !hasDraw;
                    this.img_draw.visible = hasDraw;
                    if (this.btn_draw.visible) {
                        var canDraw = data.canDraw;
                        this.btn_draw.redPoint.visible = canDraw;
                        if (canDraw) {
                            this.btn_draw.labelDisplay.text = game.getLanById("tishi_29" /* tishi_29 */);
                            this.btn_draw.setYellow();
                        }
                        else {
                            this.btn_draw.labelDisplay.text = game.getLanById("exp_pool15" /* exp_pool15 */);
                            this.btn_draw.setBlue();
                        }
                    }
                };
                VipWelfareItem.prototype.onClickDraw = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (data.canDraw) {
                        var cfg = data.cfg;
                        this._proxy.c2s_tired_charge_receive(2 /* Vip */, cfg.index);
                        return;
                    }
                    mod.ViewMgr.getIns().openCommonRechargeView();
                };
                return VipWelfareItem;
            }(mod.BaseListenerRenderer));
            activity.VipWelfareItem = VipWelfareItem;
            __reflect(VipWelfareItem.prototype, "game.mod.activity.VipWelfareItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var VipWelfareView = /** @class */ (function (_super) {
                __extends(VipWelfareView, _super);
                function VipWelfareView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.VipWelfareSkin";
                    return _this;
                }
                return VipWelfareView;
            }(eui.Component));
            activity.VipWelfareView = VipWelfareView;
            __reflect(VipWelfareView.prototype, "game.mod.activity.VipWelfareView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActIcon = /** @class */ (function (_super) {
                __extends(WonderfulActIcon, _super);
                function WonderfulActIcon() {
                    var _this = _super.call(this) || this;
                    _this.skinName = 'skins.activity.WonderfulActIconSkin';
                    return _this;
                }
                WonderfulActIcon.prototype.dataChanged = function () {
                    var data = this.data;
                    this.img_icon.source = data == 1 ? 'baoxiang_dakai' : 'baoxiang';
                };
                return WonderfulActIcon;
            }(mod.BaseListenerRenderer));
            activity.WonderfulActIcon = WonderfulActIcon;
            __reflect(WonderfulActIcon.prototype, "game.mod.activity.WonderfulActIcon");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActItem4 = /** @class */ (function (_super) {
                __extends(WonderfulActItem4, _super);
                function WonderfulActItem4() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulActItemSkin";
                    return _this;
                }
                WonderfulActItem4.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 219 /* WonderfulAct */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                WonderfulActItem4.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this._listData.removeAll();
                };
                WonderfulActItem4.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.replaceAll(data.info.rewards.concat());
                    this.img_bought.visible = data.status == 2;
                    this.btn_do.visible = !this.img_bought.visible;
                    if (data.status == 1) {
                        this.btn_do.setYellow();
                    }
                    else {
                        this.btn_do.setBlue();
                    }
                    this.btn_do.visible && this.btn_do.setHint(data.status == 1);
                    this.updateItemView();
                };
                WonderfulActItem4.prototype.updateItemView = function () {
                    var data = this.data;
                    this.btn_do.label = data.status == 1 ? game.getLanById("tishi_29" /* tishi_29 */) : game.getLanById("exp_pool15" /* exp_pool15 */);
                    var desc = data.info.desc || '';
                    var cnt = 0;
                    if (this.data.type == 3 /* Leijicharge */) {
                        cnt = data.info.cond_1[0];
                    }
                    else if (this.data.type == 2 /* Lianxucharge */) {
                        cnt = data.info.cond_2[0];
                    }
                    desc += game.TextUtil.addColor("(" + Math.min(data.val, cnt) + "/" + cnt + ")", data.val >= cnt ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                };
                WonderfulActItem4.prototype.onClick = function () {
                    if (this.data.status == 1) {
                        if (this.data.type == 3 /* Leijicharge */) {
                            this._proxy.c2s_jingcai_addcharge_get_rewards(this.data.info.index);
                        }
                        else if (this.data.type == 2 /* Lianxucharge */) {
                            this._proxy.c2s_jingcai_keepcharge_get_rewards(this.data.info.index);
                        }
                    }
                    else {
                        mod.ViewMgr.getIns().openCommonRechargeView();
                    }
                };
                return WonderfulActItem4;
            }(mod.BaseListenerRenderer));
            activity.WonderfulActItem4 = WonderfulActItem4;
            __reflect(WonderfulActItem4.prototype, "game.mod.activity.WonderfulActItem4");
            var WonderfulActItem5 = /** @class */ (function (_super) {
                __extends(WonderfulActItem5, _super);
                function WonderfulActItem5() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                WonderfulActItem5.prototype.dataChanged = function () {
                    _super.prototype.dataChanged.call(this);
                };
                WonderfulActItem5.prototype.updateItemView = function () {
                    var data = this.data;
                    var btnLab = game.getLanById("tishi_29" /* tishi_29 */);
                    var index = data.info.index;
                    if (data.status != 1) {
                        btnLab = index == 2 ? game.getLanById("equip_Rresolve_tips4" /* equip_Rresolve_tips4 */) : game.getLanById("exp_pool15" /* exp_pool15 */);
                    }
                    this.btn_do.label = btnLab;
                    var cnt = data.val;
                    var val = data.info.cond_1[0];
                    var desc = data.info.desc;
                    //index为1是每日登陆
                    if (index != 1) {
                        desc += game.TextUtil.addColor("(" + Math.min(cnt, val) + "/" + val + ")", cnt >= val ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                };
                WonderfulActItem5.prototype.onClick = function () {
                    if (this.data.status == 1) {
                        this._proxy.c2s_jingcai_login_get_rewards(this.data.info.index);
                        return;
                    }
                    var subType = this.data.info.index;
                    if (subType == 2) {
                        mod.ViewMgr.getIns().openVipView();
                    }
                    else {
                        mod.ViewMgr.getIns().openCommonRechargeView();
                    }
                };
                return WonderfulActItem5;
            }(WonderfulActItem4));
            activity.WonderfulActItem5 = WonderfulActItem5;
            __reflect(WonderfulActItem5.prototype, "game.mod.activity.WonderfulActItem5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActRewardView = /** @class */ (function (_super) {
                __extends(WonderfulActRewardView, _super);
                function WonderfulActRewardView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulRewardSkin";
                    return _this;
                }
                return WonderfulActRewardView;
            }(eui.Component));
            activity.WonderfulActRewardView = WonderfulActRewardView;
            __reflect(WonderfulActRewardView.prototype, "game.mod.activity.WonderfulActRewardView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActView1 = /** @class */ (function (_super) {
                __extends(WonderfulActView1, _super);
                function WonderfulActView1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulActSkin1";
                    return _this;
                }
                return WonderfulActView1;
            }(eui.Component));
            activity.WonderfulActView1 = WonderfulActView1;
            __reflect(WonderfulActView1.prototype, "game.mod.activity.WonderfulActView1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActView2 = /** @class */ (function (_super) {
                __extends(WonderfulActView2, _super);
                function WonderfulActView2() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulActSkin2";
                    return _this;
                }
                return WonderfulActView2;
            }(eui.Component));
            activity.WonderfulActView2 = WonderfulActView2;
            __reflect(WonderfulActView2.prototype, "game.mod.activity.WonderfulActView2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActView3 = /** @class */ (function (_super) {
                __extends(WonderfulActView3, _super);
                function WonderfulActView3() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulActSkin3";
                    return _this;
                }
                return WonderfulActView3;
            }(eui.Component));
            activity.WonderfulActView3 = WonderfulActView3;
            __reflect(WonderfulActView3.prototype, "game.mod.activity.WonderfulActView3");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActView4 = /** @class */ (function (_super) {
                __extends(WonderfulActView4, _super);
                function WonderfulActView4() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulActSkin4";
                    return _this;
                }
                return WonderfulActView4;
            }(eui.Component));
            activity.WonderfulActView4 = WonderfulActView4;
            __reflect(WonderfulActView4.prototype, "game.mod.activity.WonderfulActView4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActView6 = /** @class */ (function (_super) {
                __extends(WonderfulActView6, _super);
                function WonderfulActView6() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.WonderfulActSkin6";
                    return _this;
                }
                return WonderfulActView6;
            }(eui.Component));
            activity.WonderfulActView6 = WonderfulActView6;
            __reflect(WonderfulActView6.prototype, "game.mod.activity.WonderfulActView6");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            /**幻境累充*/
            var HuanjingLeichongMdr = /** @class */ (function (_super) {
                __extends(HuanjingLeichongMdr, _super);
                function HuanjingLeichongMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    return _this;
                }
                HuanjingLeichongMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                    this._view.list.itemRenderer = activity.HuanjingLeichongItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.updateBanner('huanjingleichong_banner', true);
                };
                HuanjingLeichongMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this);
                    this.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.updateView, this);
                };
                HuanjingLeichongMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                HuanjingLeichongMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingLeichongMdr.prototype.updateView = function () {
                    var list = [];
                    var cfgList = game.getConfigListByName("huanjing_leichong.json" /* HuanjingLeichong */) || [];
                    for (var _i = 0, cfgList_19 = cfgList; _i < cfgList_19.length; _i++) {
                        var cfg = cfgList_19[_i];
                        list.push({
                            cfg: cfg,
                            status: this._proxy.getLeichongStatus(cfg.index)
                        });
                    }
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                    if (cfgList && cfgList[cfgList.length - 1]) {
                        var reward = cfgList[cfgList.length - 1].reward[0];
                        this._view.updateBigReward(reward);
                    }
                };
                HuanjingLeichongMdr.prototype.update = function (time) {
                    var endTime = game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, 1);
                    this._view.timeItem.updateTime(endTime);
                };
                HuanjingLeichongMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("day_charge_rmb" /* day_charge_rmb */) > -1) {
                        this.updateView();
                    }
                };
                return HuanjingLeichongMdr;
            }(game.MdrBase));
            activity.HuanjingLeichongMdr = HuanjingLeichongMdr;
            __reflect(HuanjingLeichongMdr.prototype, "game.mod.activity.HuanjingLeichongMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            /**幻境礼包*/
            var HuanjingLibaoMdr = /** @class */ (function (_super) {
                __extends(HuanjingLibaoMdr, _super);
                function HuanjingLibaoMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    return _this;
                    // private onRoleUpdate(n: GameNT): void {
                    //     let keys: string[] = n.body;
                    //     if (keys.indexOf(RolePropertyKey.day_charge_rmb) > -1) {
                    //         this.updateView();
                    //     }
                    // }
                }
                HuanjingLibaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(266 /* Fuchenlinghu */);
                    this._view.list.itemRendererSkinName = 'skins.common.BaseGiftItemSkin3';
                    this._view.list.itemRenderer = activity.HuanjingLibaoItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.updateBanner('huanjinglibao_banner', true);
                };
                HuanjingLibaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    // this.onNt(RoleEvent.ON_ROLE_UPDATE, this.onRoleUpdate, this);
                    this.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.updateView, this);
                };
                HuanjingLibaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                HuanjingLibaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingLibaoMdr.prototype.updateView = function () {
                    var list = [];
                    var cfgList = game.getConfigListByName("huanjing_gift.json" /* HuanjingGift */) || [];
                    for (var _i = 0, cfgList_20 = cfgList; _i < cfgList_20.length; _i++) {
                        var cfg = cfgList_20[_i];
                        list.push({
                            cfg: cfg,
                            status: this._proxy.getLibaoStatus(cfg.index),
                            boughtCnt: this._proxy.getLibaoBoughtCnt(cfg.index)
                        });
                    }
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                    if (cfgList && cfgList[cfgList.length - 1]) {
                        var cfg = cfgList[cfgList.length - 1];
                        if (cfg && cfg.type == 1) {
                            this._view.updateBigReward(cfg.reward2[0]);
                        }
                        else if (cfg && cfg.type == 2 && cfg.product_id) {
                            var rewards = mod.PayUtil.getRewards(cfg.product_id);
                            this._view.updateBigReward(rewards[0]);
                        }
                    }
                };
                HuanjingLibaoMdr.prototype.update = function (time) {
                    var endTime = game.TimeUtil.getNextWeekTime();
                    this._view.timeItem.updateTime(endTime);
                };
                return HuanjingLibaoMdr;
            }(game.MdrBase));
            activity.HuanjingLibaoMdr = HuanjingLibaoMdr;
            __reflect(HuanjingLibaoMdr.prototype, "game.mod.activity.HuanjingLibaoMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var TiannvWelfareMdr = /** @class */ (function (_super) {
                __extends(TiannvWelfareMdr, _super);
                function TiannvWelfareMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.TiannvWelfareView);
                    _this._type = 1 /* Tiannv */;
                    return _this;
                }
                TiannvWelfareMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                };
                TiannvWelfareMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_tiannv_welfare_info" /* ON_UPDATE_TIANNV_WELFARE_INFO */, this.updateItemList, this);
                };
                TiannvWelfareMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateItemList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                TiannvWelfareMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                TiannvWelfareMdr.prototype.initShow = function () {
                    var cfgList = game.getConfigListByName("tiannvcharge_weal.json" /* TiannvChargeWeal */);
                    var cfg = cfgList[cfgList.length - 1];
                    var rewards = cfg.reward;
                    this._view.icon_bigreward.setData(rewards[0]);
                    this._itemList = [
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4,
                        this._view.item5
                    ];
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var index = i + 1;
                        item.setBox("baoxiang_new" + index);
                    }
                };
                TiannvWelfareMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                TiannvWelfareMdr.prototype.updateTime = function () {
                    var endTime = this._proxy.getEndTime(this._type);
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                TiannvWelfareMdr.prototype.updateItemList = function () {
                    var types = this._proxy.getValueTypes();
                    for (var i = 0; i < this._itemList.length && i < types.length; ++i) {
                        var item = this._itemList[i];
                        var valueType = types[i];
                        item.data = valueType;
                    }
                };
                return TiannvWelfareMdr;
            }(game.EffectMdrBase));
            activity.TiannvWelfareMdr = TiannvWelfareMdr;
            __reflect(TiannvWelfareMdr.prototype, "game.mod.activity.TiannvWelfareMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TiannvWelfareRewardMdr = /** @class */ (function (_super) {
                __extends(TiannvWelfareRewardMdr, _super);
                function TiannvWelfareRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.TiannvWelfareRewardView);
                    _this._type = 1 /* Tiannv */;
                    _this.isEasyHide = true;
                    return _this;
                }
                TiannvWelfareRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.TiannvWelfareRewardItem;
                    this._view.list_item.dataProvider = this._itemList;
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                };
                TiannvWelfareRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_tiannv_welfare_info" /* ON_UPDATE_TIANNV_WELFARE_INFO */, this.onInfoUpdate, this);
                };
                TiannvWelfareRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._valueType = this._showArgs;
                    this.onInfoUpdate();
                };
                TiannvWelfareRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                TiannvWelfareRewardMdr.prototype.onInfoUpdate = function () {
                    this.updateItemList();
                    this.updateTips();
                };
                TiannvWelfareRewardMdr.prototype.updateItemList = function () {
                    var cfgList = this._proxy.getTiannvCfgs(this._valueType);
                    var items = cfgList.concat();
                    this._itemList.source = items;
                };
                TiannvWelfareRewardMdr.prototype.updateTips = function () {
                    var tipsStr = game.getLanById("tiannv_welfare_tips2" /* tiannv_welfare_tips2 */);
                    var rmb = this._proxy.getRmb(this._type);
                    var rmbStr = game.TextUtil.addColor(rmb + "/" + this._valueType, rmb >= this._valueType ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    tipsStr = game.StringUtil.substitute(tipsStr, [rmbStr]);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(tipsStr);
                };
                return TiannvWelfareRewardMdr;
            }(game.EffectMdrBase));
            activity.TiannvWelfareRewardMdr = TiannvWelfareRewardMdr;
            __reflect(TiannvWelfareRewardMdr.prototype, "game.mod.activity.TiannvWelfareRewardMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var VipWelfareMdr = /** @class */ (function (_super) {
                __extends(VipWelfareMdr, _super);
                function VipWelfareMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.VipWelfareView);
                    _this._type = 2 /* Vip */;
                    return _this;
                }
                VipWelfareMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = activity.VipWelfareItem;
                    this._view.list_item.dataProvider = this._itemList;
                };
                VipWelfareMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_vip_welfare_info" /* ON_UPDATE_VIP_WELFARE_INFO */, this.updateItemList, this);
                };
                VipWelfareMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateTime();
                    this.updateItemList();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                VipWelfareMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                VipWelfareMdr.prototype.initShow = function () {
                    var cfgList = game.getConfigListByName("vip_charge.json" /* VipCharge */);
                    var cfg = cfgList[cfgList.length - 1];
                    var rewards = cfg.reward;
                    this._view.icon_bigreward.setData(rewards[0]);
                };
                VipWelfareMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                VipWelfareMdr.prototype.updateTime = function () {
                    var endTime = this._proxy.getEndTime(this._type);
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                VipWelfareMdr.prototype.updateItemList = function () {
                    var cfgList = game.getConfigListByName("vip_charge.json" /* VipCharge */);
                    var tmps = [];
                    for (var _i = 0, cfgList_21 = cfgList; _i < cfgList_21.length; _i++) {
                        var cfg = cfgList_21[_i];
                        var sort = cfg.index; //从小到大排序
                        var hasDraw = this._proxy.hasDraw(this._type, cfg.index);
                        var canDraw = this._proxy.canVipDraw(cfg);
                        if (hasDraw) {
                            sort += 10000000;
                        }
                        if (canDraw) {
                            sort -= 100000;
                        }
                        tmps.push({ sort: sort, info: { cfg: cfg, canDraw: canDraw, hasDraw: hasDraw } });
                    }
                    tmps.sort(game.SortTools.sortByRort);
                    var infos = [];
                    for (var _a = 0, tmps_5 = tmps; _a < tmps_5.length; _a++) {
                        var item = tmps_5[_a];
                        infos.push(item.info);
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                };
                return VipWelfareMdr;
            }(game.EffectMdrBase));
            activity.VipWelfareMdr = VipWelfareMdr;
            __reflect(VipWelfareMdr.prototype, "game.mod.activity.VipWelfareMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var WonderfulActMdr1 = /** @class */ (function (_super) {
                __extends(WonderfulActMdr1, _super);
                function WonderfulActMdr1() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.WonderfulActView1);
                    _this._endTime = 0;
                    return _this;
                }
                WonderfulActMdr1.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_do.setImage('common_get');
                };
                WonderfulActMdr1.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_wonderful_act_xiannv_gift" /* ON_UPDATE_WONDERFUL_ACT_XIANNV_GIFT */, this.onUpdateView, this);
                };
                WonderfulActMdr1.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                    this.addEftByParentScale(this._view.btn_do.group_eft);
                };
                WonderfulActMdr1.prototype.updateView = function () {
                    var cfg = game.GameConfig.getParamConfigById('xiannvsongli_jiangli');
                    this._listData.replaceAll(cfg.value);
                    var timeList = this._proxy.getXiannvTimeObjList();
                    var str = [];
                    for (var i = 0; i < timeList.length; i += 2) {
                        var startObj = timeList[i];
                        var endObj = timeList[i + 1];
                        var h = this.getFormatTimeStr(startObj.h);
                        var m = this.getFormatTimeStr(startObj.m);
                        var h1 = this.getFormatTimeStr(endObj.h);
                        var m1 = this.getFormatTimeStr(endObj.m);
                        str.push(h + ":" + m + "-" + h1 + ":" + m1);
                    }
                    this._view.lb_time.text = str.join('、');
                    this.onUpdateView();
                };
                WonderfulActMdr1.prototype.getFormatTimeStr = function (time) {
                    return time >= 10 ? time + '' : '0' + time;
                };
                WonderfulActMdr1.prototype.onUpdateView = function () {
                    var canGet = this._proxy.canGetXiannvReward();
                    this._view.btn_do.visible = canGet;
                    canGet && this._view.btn_do.setHint(canGet);
                    this._view.gr_time.visible = !canGet;
                    if (!canGet) {
                        this._endTime = this._proxy.getXiannvNextTimeSec();
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                    else {
                        TimeMgr.removeUpdateItem(this);
                    }
                };
                WonderfulActMdr1.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                WonderfulActMdr1.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this.onUpdateView();
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime, '后可领取');
                };
                WonderfulActMdr1.prototype.onClick = function () {
                    if (this._proxy.canGetXiannvReward()) {
                        this._proxy.c2s_xiannv_gift_get_rewards();
                    }
                };
                return WonderfulActMdr1;
            }(game.EffectMdrBase));
            activity.WonderfulActMdr1 = WonderfulActMdr1;
            __reflect(WonderfulActMdr1.prototype, "game.mod.activity.WonderfulActMdr1", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var WonderfulActMdr2 = /** @class */ (function (_super) {
                __extends(WonderfulActMdr2, _super);
                function WonderfulActMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.WonderfulActView2);
                    _this._endTime = 0;
                    _this._type = 1 /* Cangzhenge */;
                    return _this;
                }
                WonderfulActMdr2.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                    this._view.list.itemRenderer = activity.WonderfulActIcon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                WonderfulActMdr2.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_reward, egret.TouchEvent.TOUCH_TAP, this.onClickReward, this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_add, egret.TouchEvent.TOUCH_TAP, this.onClickAdd, this);
                    addEventListener(this._view.icon_bigreward, egret.TouchEvent.TOUCH_TAP, this.onClickBigReward, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_wonderful_act_cangzhenge" /* ON_UPDATE_WONDERFUL_ACT_CANGZHENGE */, this.updateView, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onUpdateByPropIndex, this);
                    this.onNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, this.onActivityClose, this);
                };
                WonderfulActMdr2.prototype.onActivityClose = function (n) {
                    var actId = n.body;
                    if (actId == this._proxy.getActId(this._type)) {
                        mod.ViewMgr.getIns().showMain();
                    }
                };
                WonderfulActMdr2.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTimeSec(this._type);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                WonderfulActMdr2.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                WonderfulActMdr2.prototype.updateView = function () {
                    var cfg = game.getConfigByNameId("canzhenge.json" /* Cangzhenge */, 0);
                    var bigData = {
                        prop: cfg.prix_id,
                        isGot: this._proxy.model.big_box_status == 1
                    };
                    this._bigData = bigData;
                    this._view.icon_bigreward.setData(bigData);
                    var cnt = this._proxy.getCzgRewardGottenCnt();
                    var maxCnt = this._proxy.getCzgRewardMaxCnt();
                    this._view.bar.show(cnt, maxCnt, false, 0, false, 1 /* Value */);
                    var list = [];
                    for (var i = 1; i <= maxCnt; i++) {
                        var box = this._proxy.model.box_list[i];
                        list.push(box ? box.status : 0);
                    }
                    this._listData.replaceAll(list);
                    this._view.lb_desc.text = "\u5F00\u542F\u5269\u4F59\u7684" + Math.max(maxCnt - cnt, 0) + "\u4E2A\u5B9D\u7BB1\u53EF\u9886\u53D6\u5927\u5956";
                    this.updateCost();
                };
                WonderfulActMdr2.prototype.updateCost = function () {
                    var cfg = game.getConfigByNameId("canzhenge.json" /* Cangzhenge */, 1);
                    if (!cfg || !cfg.costs) {
                        return;
                    }
                    var cost = cfg.costs[0];
                    var propCfg = game.GameConfig.getPropConfigById(cost[0]);
                    this._view.costIcon.imgCost = propCfg.icon;
                    this._view.costIcon.setLabCost(mod.BagUtil.getPropCntByIdx(cost[0]) + '');
                    if (!this._cost) {
                        this._cost = cfg.costs[0];
                    }
                };
                WonderfulActMdr2.prototype.onClickReward = function () {
                    this.showView("58" /* WonderfulActReward */);
                };
                WonderfulActMdr2.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("jingcaihuodong_tips6" /* jingcaihuodong_tips6 */));
                };
                WonderfulActMdr2.prototype.onClickAdd = function () {
                    if (this._cost) {
                        mod.ViewMgr.getIns().showGainWaysTips(this._cost[0]);
                    }
                };
                WonderfulActMdr2.prototype.onClickBigReward = function () {
                    if (!this._bigData) {
                        return;
                    }
                    mod.ViewMgr.getIns().showPropTips(this._bigData.prop[0]);
                };
                WonderfulActMdr2.prototype.onClickList = function (e) {
                    var data = e.item;
                    if (data == 1) {
                        return;
                    }
                    var index = e.itemIndex + 1;
                    if (!this._proxy.canOpenCzgReward(index, true)) {
                        return;
                    }
                    this._proxy.c2s_jingcai_cangzhenge_open(index);
                };
                WonderfulActMdr2.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                WonderfulActMdr2.prototype.onUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(this._proxy.getCzgCostId()) > -1) {
                        this.updateCost();
                    }
                };
                return WonderfulActMdr2;
            }(game.MdrBase));
            activity.WonderfulActMdr2 = WonderfulActMdr2;
            __reflect(WonderfulActMdr2.prototype, "game.mod.activity.WonderfulActMdr2", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var WonderfulActMdr3 = /** @class */ (function (_super) {
                __extends(WonderfulActMdr3, _super);
                function WonderfulActMdr3() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.WonderfulActView3);
                    _this._endTime = 0;
                    _this._type = 1; //1:30元，2:100元
                    _this._bigType = 2 /* Lianxucharge */;
                    return _this;
                }
                WonderfulActMdr3.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                    this._view.list.itemRenderer = activity.WonderfulActItem4;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.list_btn.itemRenderer = mod.BtnTabItem;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                };
                WonderfulActMdr3.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickBtn, this);
                    this.onNt("on_update_wonderful_act_keepcharge" /* ON_UPDATE_WONDERFUL_ACT_KEEPCHARGE */, this.onUpdateView, this);
                    this.onNt("on_activity_close" /* ON_ACTIVITY_CLOSE */, this.onActivityClose, this);
                };
                WonderfulActMdr3.prototype.onActivityClose = function (n) {
                    var actId = n.body;
                    if (actId == this._proxy.getActId(this._bigType)) {
                        mod.ViewMgr.getIns().showMain();
                    }
                };
                WonderfulActMdr3.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    var btnTabData = [];
                    var rmbList = this._proxy.getKeepChargeRmb(); //30元，100元
                    for (var i = 0; i < rmbList.length; i++) {
                        var itemData = {
                            name: rmbList[i] + mod.PayUtil.getRmbUnit(),
                            showHint: mod.HintMgr.getHint(this._proxy.model.hintPath1[i + 1])
                        };
                        btnTabData.push(itemData);
                    }
                    this._listBtn.replaceAll(btnTabData);
                    this._view.list_btn.selectedIndex = 0;
                    this.onSwitchType(0);
                };
                WonderfulActMdr3.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._listData.removeAll();
                    TimeMgr.removeUpdateItem(this);
                };
                WonderfulActMdr3.prototype.getEndTime = function () {
                    return this._proxy.getEndTimeSec(this._bigType);
                };
                WonderfulActMdr3.prototype.onUpdateView = function () {
                    this.updateBtnHint();
                    this.updateView();
                };
                WonderfulActMdr3.prototype.updateView = function () {
                    var typeInfo = this._proxy.model.list_keepcharge[this._type];
                    var chargeNum = typeInfo && typeInfo.num.toNumber() || 0;
                    this._view.lb_chargenum.text = "\u672C\u65E5\u5DF2\u5145\u503C\uFF1A" + chargeNum + "\u5143";
                    var actData = this._proxy.getActDataByType(this._bigType);
                    var chargeDay = typeInfo && typeInfo.list ? typeInfo.list.length : 0;
                    var rst = [];
                    var reward_list = actData && actData.reward_list || [];
                    for (var _i = 0, reward_list_2 = reward_list; _i < reward_list_2.length; _i++) {
                        var item = reward_list_2[_i];
                        if (!item || item.cond_1[0] != this._type) {
                            continue;
                        }
                        var itemData = {
                            type: this._bigType,
                            info: item,
                            status: this._proxy.getKeepChargeStatus(this._type, item.index),
                            val: chargeDay
                        };
                        rst.push(itemData);
                    }
                    var lastItem = rst[rst.length - 1];
                    if (lastItem && lastItem.info) {
                        this._view.icon_bigreward.data = lastItem.info.rewards[0];
                    }
                    game.SortTools.sortReward(rst);
                    this._listData.replaceAll(rst);
                };
                WonderfulActMdr3.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                WonderfulActMdr3.prototype.onSwitchType = function (selIdx) {
                    this._type = selIdx + 1;
                    this.updateView();
                };
                WonderfulActMdr3.prototype.onClickBtn = function (e) {
                    var index = e.itemIndex;
                    if (this._type - 1 == index) {
                        return;
                    }
                    this.onSwitchType(index);
                };
                WonderfulActMdr3.prototype.updateBtnHint = function () {
                    for (var i = 0; i < 2; i++) {
                        var btnData = this._listBtn.source[i];
                        if (!btnData) {
                            continue;
                        }
                        btnData.showHint = mod.HintMgr.getHint(this._proxy.model.hintPath1[i + 1]);
                        this._listBtn.itemUpdated(btnData);
                    }
                };
                return WonderfulActMdr3;
            }(game.MdrBase));
            activity.WonderfulActMdr3 = WonderfulActMdr3;
            __reflect(WonderfulActMdr3.prototype, "game.mod.activity.WonderfulActMdr3", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TextEvent = egret.TextEvent;
            var CarnivalRankRender = /** @class */ (function (_super) {
                __extends(CarnivalRankRender, _super);
                function CarnivalRankRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CarnivalRankRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this.list_reward.visible = true;
                    this.lab_num.text = "";
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._carnivalProxy = facade.retMod("27" /* Activity */).retProxy(252 /* Carnival */);
                    this.lab_look.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */), 3496307 /* DEFAULT */, ""));
                    this.addEventListenerEx(TextEvent.LINK, this.lab_look, this.onClick, this);
                };
                CarnivalRankRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    //条件1：名次
                    var rankNo = data.cond_1 && data.cond_1[0];
                    this.currentState = rankNo == 1 ? "first" : "default";
                    this.lab_look.visible = false;
                    var nameStr = "";
                    var powerStr = "";
                    var actInfo = this._proxy.curOpenAct;
                    var maxRank = this._proxy.getMaxRank(actInfo);
                    if (rankNo <= 3) {
                        //前三名显示图标
                        this.img_rank.visible = true;
                        this.img_rank.source = 'rank' + rankNo;
                        this.lab_rank.text = "";
                        //玩家信息
                        var rankInfo = this._carnivalProxy.getRankInfo(actInfo.act_id, rankNo);
                        //跨服排行榜显示玩家名字，仙宗排行榜显示仙宗名字和宗主
                        var isCross = actInfo.type == 21 /* CarnivalCrossRank */;
                        nameStr = game.getLanById("tishi_2" /* tishi_2 */); //虚位以待
                        if (isCross && rankInfo && rankInfo.role_id) {
                            nameStr = rankInfo.name;
                        }
                        else if (!isCross && rankInfo && rankInfo.guild_name) {
                            nameStr = game.getLanById("union_title_2" /* union_title_2 */) + ":" + rankInfo.guild_name + "\n"
                                + game.UnionJobStr[1 /* Leader */] + ":" + rankInfo.zongzhu_name;
                        }
                        powerStr = rankInfo && rankInfo.value ? rankInfo.value + "" : "";
                    }
                    else {
                        this.img_rank.visible = false;
                        if (rankNo > maxRank) {
                            this.lab_rank.text = maxRank + "+"; //50+
                        }
                        else {
                            var nextRank = this._proxy.getNextRank(actInfo, rankNo);
                            this.lab_rank.text = rankNo + "-" + nextRank; ////4-10
                            this.lab_look.visible = true;
                            this._start = rankNo;
                            this._end = nextRank;
                        }
                    }
                    this.lab_name.text = nameStr;
                    this.lab_power.text = powerStr;
                    this._rewardList.source = data.rewards.concat();
                };
                CarnivalRankRender.prototype.onClick = function () {
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "107" /* CarnivalRankSection */, { start: this._start, end: this._end });
                };
                return CarnivalRankRender;
            }(mod.BaseListenerRenderer));
            activity.CarnivalRankRender = CarnivalRankRender;
            __reflect(CarnivalRankRender.prototype, "game.mod.activity.CarnivalRankRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActMdr5 = /** @class */ (function (_super) {
                __extends(WonderfulActMdr5, _super);
                function WonderfulActMdr5() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 4 /* Loginrewards */;
                    return _this;
                }
                WonderfulActMdr5.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.gr_bigreward.visible = false;
                    this._view.list.itemRenderer = activity.WonderfulActItem5;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_banner.source = game.ResUtil.getUiJpg('denglujiangli');
                };
                WonderfulActMdr5.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.offNt("on_update_wonderful_act_addcharge" /* ON_UPDATE_WONDERFUL_ACT_ADDCHARGE */);
                    this.onNt("on_update_wonderful_act_login" /* ON_UPDATE_WONDERFUL_ACT_LOGIN */, this.updateView, this);
                };
                WonderfulActMdr5.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                };
                WonderfulActMdr5.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                WonderfulActMdr5.prototype.updateView = function () {
                    var actData = this._proxy.getActDataByType(this._type);
                    if (!actData) {
                        return;
                    }
                    var rst = [];
                    var reward_list = actData.reward_list || [];
                    for (var _i = 0, reward_list_3 = reward_list; _i < reward_list_3.length; _i++) {
                        var item = reward_list_3[_i];
                        var statusItem = this._proxy.model.list_login[item.index];
                        var itemData = {
                            type: this._type,
                            info: item,
                            status: statusItem && statusItem.status || 0,
                            val: item.index == 2 ? mod.VipUtil.getShowVipLv() : this._proxy.model.num_login
                        };
                        rst.push(itemData);
                    }
                    game.SortTools.sortReward(rst);
                    this._listData.replaceAll(rst);
                };
                return WonderfulActMdr5;
            }(activity.WonderfulActMdr4));
            activity.WonderfulActMdr5 = WonderfulActMdr5;
            __reflect(WonderfulActMdr5.prototype, "game.mod.activity.WonderfulActMdr5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var WonderfulActMdr6 = /** @class */ (function (_super) {
                __extends(WonderfulActMdr6, _super);
                function WonderfulActMdr6() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.WonderfulActView6);
                    return _this;
                }
                WonderfulActMdr6.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                };
                WonderfulActMdr6.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_once, TouchEvent.TOUCH_TAP, this.onClick);
                    addEventListener(this._view.btn_ten, TouchEvent.TOUCH_TAP, this.onClick);
                    addEventListener(this._view.btn_gain, TouchEvent.TOUCH_TAP, this.onClickGain);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickPreview);
                    this.onNt("on_update_wonderful_act_6" /* ON_UPDATE_WONDERFUL_ACT_6 */, this.onUpdateView, this);
                };
                WonderfulActMdr6.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                WonderfulActMdr6.prototype.onUpdateView = function () {
                    var cost = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    this._view.cost_once.updateShow(cost.value[0]);
                    this._view.cost_ten.updateShow(cost.value[1]);
                    //let count_one: number = BagUtil.getPropCntByIdx(cost.value[0][0]);
                    //let hint1 = count_one >= cost.value[0][1];
                    this._view.btn_once.setImage("cifu_1");
                    var hint1 = this._proxy.oneIsHasHint();
                    this._view.btn_once.setHint(hint1);
                    //let count_ten: number = BagUtil.getPropCntByIdx(cost.value[1][0]);
                    //let hint2 = count_ten >= cost.value[1][1];
                    this._view.btn_ten.setImage("cifu_2");
                    var hint2 = this._proxy.tenIsHasHint();
                    this._view.btn_ten.setHint(hint2);
                    var param = game.getConfigByNameId("param.json" /* Param */, "bless_bottom");
                    for (var i = 1; i <= param.value.length; i++) {
                        var icon = this._view["icon_" + i];
                        if (!icon) {
                            break;
                        }
                        var nums = param.value[i - 1];
                        var prop = game.PropData.create(nums[0], nums[1]);
                        icon.setData(prop);
                        var color = this._view["color_" + i];
                        color.source = "yuan_color_" + prop.quality;
                    }
                    this.onUpdateCount();
                };
                WonderfulActMdr6.prototype.onUpdateCount = function () {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "bless_bottom_num");
                    var count = this._proxy.model.count || 0;
                    var showValue = cfg.value - count % cfg.value;
                    this._view.lab.textFlow = game.TextUtil.parseHtml("\u518D\u62BD" + game.TextUtil.addColor("" + showValue, 2330156 /* GREEN */) + "\u6B21\u83B7\u5F97\u5927\u5956");
                };
                WonderfulActMdr6.prototype.onClick = function (e) {
                    var button_type;
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    switch (e.currentTarget) {
                        case this._view.btn_once:
                            if (!mod.BagUtil.checkPropCnt(cfg.value[0][0], cfg.value[0][1], 1 /* Dialog */)) {
                                return;
                            }
                            button_type = 1;
                            break;
                        case this._view.btn_ten:
                            if (!mod.BagUtil.checkPropCnt(cfg.value[1][0], cfg.value[1][1], 1 /* Dialog */)) {
                                return;
                            }
                            button_type = 2;
                            break;
                    }
                    if (!button_type) {
                        return;
                    }
                    this._proxy.c2s_luckbless_button_click(button_type);
                };
                WonderfulActMdr6.prototype.onClickGain = function () {
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "bless_cost");
                    mod.ViewMgr.getIns().showGainWaysTips(cfg.value[0][0]);
                };
                WonderfulActMdr6.prototype.onClickPreview = function () {
                    var cfgArr = game.getConfigListByName("bless_main.json" /* BlessMain */);
                    var list = [];
                    for (var _i = 0, cfgArr_15 = cfgArr; _i < cfgArr_15.length; _i++) {
                        var cfg = cfgArr_15[_i];
                        list.push({
                            weight: cfg.weight,
                            award: cfg.show,
                            nameStr: "rolering_reward_type" + cfg.quality
                        });
                    }
                    mod.ViewMgr.getIns().openPreviewReward(list);
                };
                return WonderfulActMdr6;
            }(game.MdrBase));
            activity.WonderfulActMdr6 = WonderfulActMdr6;
            __reflect(WonderfulActMdr6.prototype, "game.mod.activity.WonderfulActMdr6");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var WonderfulActRewardMdr = /** @class */ (function (_super) {
                __extends(WonderfulActRewardMdr, _super);
                function WonderfulActRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.WonderfulActRewardView);
                    _this.isEasyHide = true;
                    return _this;
                }
                WonderfulActRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(219 /* WonderfulAct */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.list1.itemRenderer = mod.Icon;
                    this._view.list1.dataProvider = this._listData1 = new eui.ArrayCollection();
                };
                WonderfulActRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                };
                WonderfulActRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                WonderfulActRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                WonderfulActRewardMdr.prototype.updateView = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('cangzhengu_reward');
                    var value = paramCfg ? paramCfg.value : [];
                    var cfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, value[0]);
                    if (cfg) {
                        this._listData.replaceAll(cfg.content);
                    }
                    var cfg1 = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, value[1]);
                    if (cfg1) {
                        this._listData1.replaceAll(cfg1.content);
                    }
                    var paramCfg1 = game.GameConfig.getParamConfigById('cangzhengu_gailv');
                    var str = game.getLanById("gailv_tips" /* gailv_tips */);
                    this._view.lb_prob.textFlow = game.TextUtil.parseHtml("(" + str + ":" + game.TextUtil.addColor(paramCfg1.value[0] + '%', 2330156 /* GREEN */) + ')');
                    this._view.lb_prob1.textFlow = game.TextUtil.parseHtml("(" + str + ":" + game.TextUtil.addColor(paramCfg1.value[1] + '%', 2330156 /* GREEN */) + ')');
                };
                return WonderfulActRewardMdr;
            }(game.MdrBase));
            activity.WonderfulActRewardMdr = WonderfulActRewardMdr;
            __reflect(WonderfulActRewardMdr.prototype, "game.mod.activity.WonderfulActRewardMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_xianlv_libao = msg.c2s_xianlv_libao;
            var s2c_xianlv_libao = msg.s2c_xianlv_libao;
            /**
             * @description 仙侣礼包系统
             */
            var XianlvGiftProxy = /** @class */ (function (_super) {
                __extends(XianlvGiftProxy, _super);
                function XianlvGiftProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    // 已购买列表 1为仙玉 2 为直购
                    _this.info = [];
                    _this._hintType = ["27" /* Activity */, "70" /* ChaozhiLibao */, "60" /* XianlvGift */];
                    _this._hint = true;
                    return _this;
                }
                XianlvGiftProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this.onProto(s2c_xianlv_libao, this.s2c_xianlv_libao, this);
                };
                // 仙玉礼包购买
                XianlvGiftProxy.prototype.c2s_xianlv_libao = function () {
                    var msg = new c2s_xianlv_libao();
                    this.sendProto(msg);
                };
                XianlvGiftProxy.prototype.s2c_xianlv_libao = function (n) {
                    var msg = n.body;
                    if (msg.info != null) {
                        this.info = msg.info;
                    }
                    this.updateHint();
                    this.sendNt("on_update_xianlv_gift" /* ON_UPDATE_XIANLV_GIFT */);
                };
                XianlvGiftProxy.prototype.isBought = function (type) {
                    if (type === void 0) { type = 1; }
                    return this.info.indexOf(type) > -1;
                };
                XianlvGiftProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670179 /* XianlvGift */)) {
                        return; //功能未开启
                    }
                    var hint = this._hint;
                    var hintType = this._hintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                Object.defineProperty(XianlvGiftProxy.prototype, "hint", {
                    set: function (hint) {
                        if (this._hint == hint) {
                            return;
                        }
                        this._hint = hint;
                        this.updateHint();
                    },
                    enumerable: true,
                    configurable: true
                });
                return XianlvGiftProxy;
            }(game.ProxyBase));
            activity.XianlvGiftProxy = XianlvGiftProxy;
            __reflect(XianlvGiftProxy.prototype, "game.mod.activity.XianlvGiftProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var XianlvGiftView = /** @class */ (function (_super) {
                __extends(XianlvGiftView, _super);
                function XianlvGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.XianlvGiftSkin";
                    return _this;
                }
                return XianlvGiftView;
            }(eui.Component));
            activity.XianlvGiftView = XianlvGiftView;
            __reflect(XianlvGiftView.prototype, "game.mod.activity.XianlvGiftView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var XianlvGiftMdr = /** @class */ (function (_super) {
                __extends(XianlvGiftMdr, _super);
                function XianlvGiftMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.XianlvGiftView);
                    _this._type = 1;
                    _this.isEasyHide = true;
                    return _this;
                }
                XianlvGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(229 /* XianlvGift */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianlvGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_buy, egret.TouchEvent.TOUCH_TAP, this.onClickBuy, this);
                    addEventListener(this._view.btn1, egret.TouchEvent.TOUCH_TAP, this.onClickBtn1, this);
                    addEventListener(this._view.btn2, egret.TouchEvent.TOUCH_TAP, this.onClickBtn2, this);
                    this.onNt("on_update_xianlv_gift" /* ON_UPDATE_XIANLV_GIFT */, this.updateView, this);
                };
                XianlvGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.hint = false;
                    this.switchType(1);
                    this.addEftByParentScale(this._view.btn_buy.group_eft);
                };
                XianlvGiftMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianlvGiftMdr.prototype.updateView = function () {
                    var isBought = this._proxy.isBought(this._type);
                    this._view.img_bought.visible = isBought;
                    this._view.btn_buy.visible = !isBought;
                    var rewards = [];
                    if (this._type == 1) {
                        var paramCfg = game.GameConfig.getParamConfigById('xianlv_gift_1');
                        if (!paramCfg) {
                            return;
                        }
                        rewards = paramCfg.value.slice(1);
                        this._view.btn_buy.setCost(paramCfg.value[0]);
                        this._view.btn_buy.label = '';
                    }
                    else {
                        rewards = mod.PayUtil.getRewards(200006 /* Id200006 */);
                        var rmb = mod.PayUtil.getRmbValue(200006 /* Id200006 */);
                        this._view.btn_buy.resetCost();
                        this._view.btn_buy.label = rmb + mod.PayUtil.getRmbUnit();
                    }
                    this._listData.source = rewards;
                };
                XianlvGiftMdr.prototype.onClickBuy = function () {
                    if (this._type == 1) {
                        this._proxy.c2s_xianlv_libao();
                    }
                    else {
                        mod.PayUtil.pay(200006 /* Id200006 */);
                    }
                };
                XianlvGiftMdr.prototype.onClickBtn1 = function () {
                    this.switchType(1);
                };
                XianlvGiftMdr.prototype.onClickBtn2 = function () {
                    this.switchType(2);
                };
                XianlvGiftMdr.prototype.switchType = function (type) {
                    this._type = type;
                    if (type == 1) {
                        this._view.btn1.img_bg.source = "xin_huangseanniu";
                        this._view.btn2.img_bg.source = "xin_shenhongseanniu";
                    }
                    else {
                        this._view.btn1.img_bg.source = "xin_shenhongseanniu";
                        this._view.btn2.img_bg.source = "xin_huangseanniu";
                    }
                    this.updateView();
                    this._view.img_desc0.source = "xylb_desc_" + type + "0";
                    this._view.img_desc1.source = "xylb_desc_" + type + "1";
                    this._view.img_name0.source = "xylb_name_" + type + "0";
                    this._view.img_name1.source = "xylb_name_" + type + "1";
                    this._view.img_name2.source = "xylb_name_" + type + "2";
                };
                return XianlvGiftMdr;
            }(game.EffectMdrBase));
            activity.XianlvGiftMdr = XianlvGiftMdr;
            __reflect(XianlvGiftMdr.prototype, "game.mod.activity.XianlvGiftMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsFirstMainMdr = /** @class */ (function (_super) {
                __extends(YjjsFirstMainMdr, _super);
                function YjjsFirstMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "yaojijiangshibiaoqiantubiao",
                            mdr: activity.YjjsFirstMdr,
                            title: "yjjs_tips8" /* yjjs_tips8 */,
                            bg: "bg_yaojijiangshi",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "51" /* YjjsFirstMain */, "01" /* Btn1 */]
                        }
                    ];
                    return _this;
                }
                return YjjsFirstMainMdr;
            }(mod.WndBaseMdr));
            activity.YjjsFirstMainMdr = YjjsFirstMainMdr;
            __reflect(YjjsFirstMainMdr.prototype, "game.mod.activity.YjjsFirstMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Tween = base.Tween;
            var YjjsMainMdr = /** @class */ (function (_super) {
                __extends(YjjsMainMdr, _super);
                function YjjsMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "sanshengxiulianbiaoqiantu",
                            mdr: activity.YjjsMdr1,
                            title: "yjjs_tips1" /* yjjs_tips1 */,
                            bg: "bg_sanshengxiulian",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "01" /* Btn1 */]
                        },
                        {
                            btnType: "02" /* Btn2 */,
                            icon: "sanshiweijibiaoqiantubiao",
                            mdr: activity.YjjsMdr2,
                            title: "yjjs_tips2" /* yjjs_tips2 */,
                            bg: "bg_sanshiweiji",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "02" /* Btn2 */]
                        },
                        {
                            btnType: "03" /* Btn3 */,
                            icon: "shenqixiuxingbiaoqiantubiao",
                            mdr: activity.YjjsMdr3,
                            title: "yjjs_tips3" /* yjjs_tips3 */,
                            bg: "bg_sanshixiulian",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "03" /* Btn3 */]
                        },
                        {
                            btnType: "04" /* Btn4 */,
                            icon: "yaojibaokubiaoqiantubiao",
                            mdr: activity.YjjsMdr4,
                            title: "yjjs_tips4" /* yjjs_tips4 */,
                            bg: "bg_yaojibaoku",
                            openIdx: 0,
                            coinIndex0: 1450100119 /* Xianshenyu */,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "04" /* Btn4 */]
                        },
                        {
                            btnType: "05" /* Btn5 */,
                            icon: "chongzhilibaobiaoqiantubiao",
                            mdr: activity.YjjsMdr5,
                            title: "yjjs_tips5" /* yjjs_tips5 */,
                            bg: "",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "05" /* Btn5 */]
                        },
                        {
                            btnType: "06" /* Btn6 */,
                            icon: "mubiaohaolibiaoqiantubiao",
                            mdr: activity.YjjsMdr6,
                            title: "yjjs_tips6" /* yjjs_tips6 */,
                            bg: "",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "06" /* Btn6 */]
                        },
                        {
                            btnType: "07" /* Btn7 */,
                            icon: "yaojilingbiaoqiantubiao",
                            mdr: activity.YjjsMdr7,
                            title: "yjjs_tips7" /* yjjs_tips7 */,
                            bg: "",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "52" /* YjjsMain */, "07" /* Btn7 */]
                        }
                    ];
                    return _this;
                }
                YjjsMainMdr.prototype.onShow = function () {
                    var _this = this;
                    _super.prototype.onShow.call(this);
                    var selIdx = this._tab.selectIndex;
                    if (selIdx >= 4) {
                        egret.callLater(function () {
                            var src = _this._view.list_menu.parent;
                            mod.ScrollUtil.moveHToAssign(src, selIdx, 120);
                        }, this);
                    }
                };
                YjjsMainMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    Tween.remove(this._view.list_menu.parent.viewport);
                };
                return YjjsMainMdr;
            }(mod.WndBaseMdr));
            activity.YjjsMainMdr = YjjsMainMdr;
            __reflect(YjjsMainMdr.prototype, "game.mod.activity.YjjsMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsModel = /** @class */ (function () {
                function YjjsModel() {
                    var _a;
                    /**三生修练*/
                    this.sansheng_target_list = []; //目标奖励数据
                    /**三世危机*/
                    this.sanshi_target_list = [];
                    this.sanshi_stage = 0; //阶段
                    this.sanshi_count = 0; //完成的数量
                    /**神器修炼*/
                    this.shenqi_count = 0;
                    /**瑶姬宝库*/
                    this.baoku_list = [];
                    /**累充礼包*/
                    this.charge_list = [];
                    /**目标豪礼*/
                    this.haoli_list = [];
                    this.ling_list2 = {};
                    this.ling_day = 0;
                    this.is_ling_buy = false;
                    this.hintPath = (_a = {},
                        _a[1] = ["27" /* Activity */, "52" /* YjjsMain */, "01" /* Btn1 */],
                        _a[2] = ["27" /* Activity */, "52" /* YjjsMain */, "02" /* Btn2 */],
                        _a[3] = ["27" /* Activity */, "52" /* YjjsMain */, "03" /* Btn3 */],
                        _a[4] = ["27" /* Activity */, "52" /* YjjsMain */, "04" /* Btn4 */],
                        _a[5] = ["27" /* Activity */, "52" /* YjjsMain */, "05" /* Btn5 */],
                        _a[6] = ["27" /* Activity */, "52" /* YjjsMain */, "06" /* Btn6 */],
                        _a[7] = ["27" /* Activity */, "52" /* YjjsMain */, "07" /* Btn7 */],
                        _a);
                }
                return YjjsModel;
            }());
            activity.YjjsModel = YjjsModel;
            __reflect(YjjsModel.prototype, "game.mod.activity.YjjsModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_yaoji_sansheng_info = msg.s2c_yaoji_sansheng_info;
            var s2c_yaoji_sanshi_info = msg.s2c_yaoji_sanshi_info;
            var s2c_yaoji_shenqi_info = msg.s2c_yaoji_shenqi_info;
            var c2s_yaoji_shenqi_challenge = msg.c2s_yaoji_shenqi_challenge;
            var s2c_yaoji_baoku_info = msg.s2c_yaoji_baoku_info;
            var s2c_yaoji_charge_info = msg.s2c_yaoji_charge_info;
            var s2c_yaoji_haoli_info = msg.s2c_yaoji_haoli_info;
            var s2c_yaoji_ling_info = msg.s2c_yaoji_ling_info;
            var c2s_yaoji_receive_reward = msg.c2s_yaoji_receive_reward;
            var c2s_yaoji_target_reward = msg.c2s_yaoji_target_reward;
            var c2s_yaoji_buy = msg.c2s_yaoji_buy;
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            /**
             * @description 瑶姬降世系统
             */
            var YjjsProxy = /** @class */ (function (_super) {
                __extends(YjjsProxy, _super);
                function YjjsProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //当前界面奖励全部领取完后：按天数顺序跳转至第一个有奖励可领取的天数
                    _this.clickDrawReward = false;
                    _this.clickDay = 0;
                    return _this;
                }
                Object.defineProperty(YjjsProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                YjjsProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.YjjsModel();
                    this.onProto(s2c_yaoji_sansheng_info, this.s2c_yaoji_sansheng_info, this);
                    this.onProto(s2c_yaoji_sanshi_info, this.s2c_yaoji_sanshi_info, this);
                    this.onProto(s2c_yaoji_shenqi_info, this.s2c_yaoji_shenqi_info, this);
                    this.onProto(s2c_yaoji_baoku_info, this.s2c_yaoji_baoku_info, this);
                    this.onProto(s2c_yaoji_charge_info, this.s2c_yaoji_charge_info, this);
                    this.onProto(s2c_yaoji_haoli_info, this.s2c_yaoji_haoli_info, this);
                    this.onProto(s2c_yaoji_ling_info, this.s2c_yaoji_ling_info, this);
                    facade.onNt("on_update_givingshenling_info" /* ON_UPDATE_GIVING_SHENLING_INFO */, this.checkOpen, this);
                };
                //三生修练
                YjjsProxy.prototype.s2c_yaoji_sansheng_info = function (n) {
                    var msg = n.body;
                    if (msg.target_list != null) {
                        this._model.sansheng_target_list = msg.target_list;
                    }
                    this.updateHint1();
                    this.sendNt("on_yjjs_sansheng_info_update" /* ON_YJJS_SANSHENG_INFO_UPDATE */);
                };
                //三世危机
                YjjsProxy.prototype.s2c_yaoji_sanshi_info = function (n) {
                    var msg = n.body;
                    if (msg.target_list != null) {
                        this._model.sanshi_target_list = msg.target_list;
                    }
                    if (msg.stage != null) {
                        this._model.sanshi_stage = msg.stage;
                    }
                    if (msg.count != null) {
                        this._model.sanshi_count = msg.count;
                    }
                    this.updateHint2();
                    this.sendNt("on_yjjs_sanshi_info_update" /* ON_YJJS_SANSHI_INFO_UPDATE */);
                };
                //神器挑战
                YjjsProxy.prototype.c2s_yaoji_shenqi_challenge = function () {
                    var msg = new c2s_yaoji_shenqi_challenge();
                    this.sendProto(msg);
                };
                //神器修炼
                YjjsProxy.prototype.s2c_yaoji_shenqi_info = function (n) {
                    var msg = n.body;
                    if (msg.count != null) {
                        this._model.shenqi_count = msg.count;
                    }
                    this.updateHint3();
                    this.sendNt("on_yjjs_shenqi_info_update" /* ON_YJJS_SHENQI_INFO_UPDATE */);
                };
                //瑶姬宝库
                YjjsProxy.prototype.s2c_yaoji_baoku_info = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        this._model.baoku_list = msg.list;
                    }
                    this.updateHint4();
                    this.sendNt("on_yjjs_baoku_info_update" /* ON_YJJS_BAOKU_INFO_UPDATE */);
                };
                //累充礼包
                YjjsProxy.prototype.s2c_yaoji_charge_info = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        this._model.charge_list = msg.list;
                    }
                    this.updateHint5();
                    this.sendNt("on_yjjs_charge_info_update" /* ON_YJJS_CHARGE_INFO_UPDATE */);
                };
                //目标豪礼
                YjjsProxy.prototype.s2c_yaoji_haoli_info = function (n) {
                    var msg = n.body;
                    if (msg.buy_list != null) {
                        this._model.haoli_list = msg.buy_list;
                    }
                    this.updateHint6();
                    this.sendNt("on_yjjs_haoli_info_update" /* ON_YJJS_HAOLI_INFO_UPDATE */);
                };
                //瑶姬令
                YjjsProxy.prototype.s2c_yaoji_ling_info = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        this._model.ling_list = msg.list;
                    }
                    if (msg.ling_list != null) {
                        for (var _i = 0, _a = msg.ling_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.ling_list2[item.index] = item;
                        }
                    }
                    if (msg.day != null) {
                        this._model.ling_day = msg.day;
                    }
                    if (msg.is_ling != null) {
                        this._model.is_ling_buy = msg.is_ling;
                    }
                    this.updateHint7();
                    this.sendNt("on_yjjs_ling_info_update" /* ON_YJJS_LING_INFO_UPDATE */);
                };
                /**
                 * 奖励领取
                 * @param type 1.三生修炼2.三世危机4.累充礼包5.目标豪礼6.瑶姬令
                 * @param index 奖励索引
                 */
                YjjsProxy.prototype.c2s_yaoji_receive_reward = function (type, index) {
                    var msg = new c2s_yaoji_receive_reward();
                    msg.type = type;
                    if (index != null) {
                        msg.index = index;
                    }
                    this.sendProto(msg);
                };
                /**
                 * 达成次数奖励领取
                 * @param type 1.三生修炼2.三世危机
                 * @param index 奖励索引
                 */
                YjjsProxy.prototype.c2s_yaoji_target_reward = function (type, index) {
                    var msg = new c2s_yaoji_target_reward();
                    msg.type = type;
                    msg.index = index;
                    this.sendProto(msg);
                };
                /**
                 * 购买奖励
                 * @param type 3.瑶姬宝库5.目标豪礼
                 * @param index 奖励索引
                 * @param count 购买次数
                 */
                YjjsProxy.prototype.c2s_yaoji_buy = function (type, index, count) {
                    if (count === void 0) { count = 1; }
                    var msg = new c2s_yaoji_buy();
                    msg.type = type;
                    msg.index = index;
                    msg.count = count;
                    this.sendProto(msg);
                };
                /**================================= 协议end =================================*/
                //从创建角色时间开始算天数
                YjjsProxy.prototype.getCurDay = function () {
                    var createTime = game.RoleVo.ins.create_time;
                    var day = new Date(createTime * 1000);
                    day.setHours(0, 0, 0);
                    createTime = Math.floor(day.getTime() / 1000);
                    var todayTime = TimeMgr.time.serverTimeSecond;
                    if (todayTime > createTime) {
                        return Math.ceil((todayTime - createTime) / (24 * 60 * 60));
                    }
                    return 0;
                };
                //活动持续天数
                YjjsProxy.prototype.getEndDay = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('yaoji_date');
                    return paramCfg && paramCfg.value || 8;
                };
                YjjsProxy.prototype.isOpenByDay = function (day) {
                    var curDay = this.getCurDay();
                    return day <= curDay;
                };
                //是否开启 玩家领取了“送神灵”的活动奖励 且在活动时间内
                YjjsProxy.prototype.isOpen = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670153 /* Yaojijiangshi */)) {
                        return false;
                    }
                    var proxy = game.getProxy("27" /* Activity */, 216 /* GivingShenLing */);
                    if (proxy && proxy.model.receive != 2) {
                        return false;
                    }
                    var endDay = this.getEndDay();
                    var curDay = this.getCurDay();
                    return curDay <= endDay;
                };
                //某天的任务是否全部完成
                YjjsProxy.prototype.isTaskFinishedByDay = function (day) {
                    var taskIdList = this.getSanshengTaskListByDay(day);
                    var allFinished = true;
                    for (var _i = 0, taskIdList_1 = taskIdList; _i < taskIdList_1.length; _i++) {
                        var taskId = taskIdList_1[_i];
                        if (!mod.TaskUtil.canRewardDraw(mod.TaskUtil.getTask(taskId))) {
                            allFinished = false;
                            break;
                        }
                    }
                    return allFinished;
                };
                //某天的奖励是否全部领取
                YjjsProxy.prototype.isTaskReceivedByDay = function (day) {
                    var taskIdList = this.getSanshengTaskListByDay(day);
                    var allReceived = true;
                    for (var _i = 0, taskIdList_2 = taskIdList; _i < taskIdList_2.length; _i++) {
                        var taskId = taskIdList_2[_i];
                        if (!mod.TaskUtil.hasRewardDraw(mod.TaskUtil.getTask(taskId))) {
                            allReceived = false;
                            break;
                        }
                    }
                    return allReceived;
                };
                YjjsProxy.prototype.getDrawDay = function () {
                    var curDay = this.getCurDay();
                    for (var i = 1; i <= curDay; i++) {
                        if (this.getHintByDay(i)) {
                            return i;
                        }
                    }
                    return 0;
                };
                YjjsProxy.prototype.getNotFinishDay = function () {
                    var curDay = this.getCurDay();
                    for (var i = 1; i <= curDay; i++) {
                        var val = this.getSanShengTaskFinishedCntByDay(i);
                        var max = this.getSanshengTaskListByDay(i).length;
                        if (val < max) {
                            return i;
                        }
                    }
                    return 0;
                };
                /**
                 * 当前选择天数页签
                 * 显示按状态优先级：可领取＞未完成＞已领取；在同状态下天数越早优先级越高
                 */
                YjjsProxy.prototype.getSelDay = function () {
                    var drawDay = this.getDrawDay();
                    if (drawDay) {
                        return drawDay;
                    }
                    var notFinishDay = this.getNotFinishDay();
                    if (notFinishDay) {
                        return notFinishDay;
                    }
                    return 1;
                };
                //活动时间为8天，活动周期为创角第一天开始~第九天的00:00:00结束
                YjjsProxy.prototype.getEndTime = function () {
                    var curDay = this.getCurDay();
                    var endDay = this.getEndDay();
                    if (curDay > endDay) {
                        return 0;
                    }
                    var disDay = endDay + 1 - curDay;
                    var left_time = game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, disDay);
                    return left_time;
                };
                /**三生修炼*/
                YjjsProxy.prototype.getSanshengTaskListByDay = function (day) {
                    var cfgs = game.getConfigByNameId("total_task.json" /* TotalTask */, 1001 /* Yjjs */);
                    for (var key in cfgs) {
                        var cfg = cfgs[key];
                        if (cfg && cfg.days == day) {
                            return cfg.quest_list || [];
                        }
                    }
                    return [];
                };
                //三生修炼某天完成的任务数量
                YjjsProxy.prototype.getSanShengTaskFinishedCntByDay = function (day) {
                    var taskList = this.getSanshengTaskListByDay(day);
                    var cnt = 0;
                    for (var _i = 0, taskList_2 = taskList; _i < taskList_2.length; _i++) {
                        var id = taskList_2[_i];
                        if (mod.TaskUtil.hasRewardDraw(mod.TaskUtil.getTask(id))) {
                            cnt++;
                        }
                    }
                    return cnt;
                };
                /**三世危机*/
                YjjsProxy.prototype.getSanShiTaskListByStage = function (stage) {
                    var cfgs = game.getConfigByNameId("total_task2.json" /* ToTalTask2 */, 1001 /* Yjjs */);
                    for (var key in cfgs) {
                        var cfg = cfgs[key];
                        if (cfg && cfg.main_index == stage) {
                            return cfg.quest_list || [];
                        }
                    }
                    return [];
                };
                /**
                 * 获取进度条奖励信息
                 * @param type 1三生修炼，2三世危机
                 * @param idx
                 */
                YjjsProxy.prototype.getTargetInfo = function (type, idx) {
                    var list = type == 1 ? this._model.sansheng_target_list : this._model.sanshi_target_list;
                    if (!list || !list.length) {
                        return null;
                    }
                    for (var _i = 0, list_3 = list; _i < list_3.length; _i++) {
                        var item = list_3[_i];
                        if (item && item.index == idx) {
                            return item;
                        }
                    }
                    return null;
                };
                /**
                 * 获取完成的任务数量
                 */
                YjjsProxy.prototype.getFinishedTaskCnt = function () {
                    var cfgs = game.getConfigByNameId("total_task.json" /* TotalTask */, 1001 /* Yjjs */);
                    var totalCnt = 0;
                    var curDay = this.getCurDay();
                    for (var key in cfgs) {
                        var cfg = cfgs[key];
                        if (!cfg || !cfg.quest_list) {
                            continue;
                        }
                        if (cfg.days > curDay) {
                            continue;
                        }
                        for (var _i = 0, _a = cfg.quest_list; _i < _a.length; _i++) {
                            var taskId = _a[_i];
                            var taskData = mod.TaskUtil.getTask(taskId);
                            if (mod.TaskUtil.hasRewardDraw(taskData)) {
                                totalCnt++;
                            }
                        }
                    }
                    return totalCnt;
                };
                YjjsProxy.prototype.getFinishedTaskCnt2 = function () {
                    var cfgs = game.getConfigByNameId("total_task2.json" /* ToTalTask2 */, 1001 /* Yjjs */);
                    var totalCnt = 0;
                    for (var key in cfgs) {
                        var cfg = cfgs[key];
                        if (!cfg || !cfg.quest_list) {
                            continue;
                        }
                        if (cfg.main_index > this._model.sanshi_stage) {
                            continue;
                        }
                        for (var _i = 0, _a = cfg.quest_list; _i < _a.length; _i++) {
                            var taskId = _a[_i];
                            var taskData = mod.TaskUtil.getTask(taskId);
                            if (mod.TaskUtil.hasRewardDraw(taskData)) {
                                totalCnt++;
                            }
                        }
                    }
                    return totalCnt;
                };
                /**
                 * 获取进度总数
                 * @param type 1三生修炼，2三世危机
                 */
                YjjsProxy.prototype.getTotalTaskCnt = function (type) {
                    var cfg = game.getConfigByNameId("total_main.json" /* TotalMain */, 1001 /* Yjjs */);
                    if (!cfg) {
                        return 0;
                    }
                    var list = type == 1 ? cfg.gift_list : cfg.gift2_list;
                    var max = 0;
                    for (var _i = 0, list_4 = list; _i < list_4.length; _i++) {
                        var item = list_4[_i];
                        max = Math.max(max, item[2]);
                    }
                    return max;
                };
                YjjsProxy.prototype.getFubenCfgList = function () {
                    if (this._fubenCfgAry) {
                        return this._fubenCfgAry;
                    }
                    this._fubenCfgAry = [];
                    var cfgObj = game.getConfigByNameId("total_fuben.json" /* TotalFuben */, 1001 /* Yjjs */);
                    for (var key in cfgObj) {
                        this._fubenCfgAry.push(cfgObj[key]);
                    }
                    return this._fubenCfgAry;
                };
                //神器，当前副本配置
                YjjsProxy.prototype.getFubenCfg = function () {
                    var lv = this._model.shenqi_count;
                    var ary = this.getFubenCfgList();
                    if (this.isFubenMax()) {
                        lv = ary.length - 1; //通过全部后，选择最后一关
                    }
                    return ary[lv];
                };
                YjjsProxy.prototype.getFubenMaxLv = function () {
                    var ary = this.getFubenCfgList();
                    return ary.length;
                };
                YjjsProxy.prototype.isFubenMax = function () {
                    var lv = this._model.shenqi_count;
                    return lv >= this.getFubenMaxLv();
                };
                /**神器--能否挑战*/
                YjjsProxy.prototype.canChallengeShenqi = function (isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (this.isFubenMax()) {
                        if (isTips) {
                            game.PromptBox.getIns().show("\u5DF2\u901A\u5173\u5168\u90E8");
                        }
                        return false;
                    }
                    var cfg = this.getFubenCfg();
                    var power = game.RoleVo.ins.showpower;
                    if (cfg && cfg.power_show > power.toNumber()) {
                        if (isTips) {
                            var hurtStr = cfg.power_show;
                            game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("yaoji_fighting_tips" /* yaoji_fighting_tips */), [hurtStr]));
                        }
                        return false;
                    }
                    return true;
                };
                //获取瑶姬宝库购买信息
                YjjsProxy.prototype.getStoreInfo = function (index) {
                    var list = this._model.baoku_list || [];
                    for (var _i = 0, list_5 = list; _i < list_5.length; _i++) {
                        var item = list_5[_i];
                        if (item && item.index == index) {
                            return item;
                        }
                    }
                    return null;
                };
                //累充礼包数据
                YjjsProxy.prototype.getChargeCfgList = function () {
                    var cfgObj = game.getConfigByNameId("total_cumulative.json" /* TotalCumulative */, 1001 /* Yjjs */);
                    var list = [];
                    for (var key in cfgObj) {
                        list.push(cfgObj[key]);
                    }
                    return list;
                };
                //累充礼包配置
                YjjsProxy.prototype.getChargeCfgByIdx = function (index) {
                    var list = this.getChargeCfgList();
                    for (var _i = 0, list_6 = list; _i < list_6.length; _i++) {
                        var cfg = list_6[_i];
                        if (cfg && cfg.index == index) {
                            return cfg;
                        }
                    }
                    return null;
                };
                //累充礼包info
                YjjsProxy.prototype.getChargeInfo = function (index) {
                    var list = this._model.charge_list || [];
                    for (var _i = 0, list_7 = list; _i < list_7.length; _i++) {
                        var item = list_7[_i];
                        if (item && item.index == index) {
                            return item;
                        }
                    }
                    return null;
                };
                //目标豪礼配置
                YjjsProxy.prototype.getHaoliCfgList = function () {
                    var cfgObj = game.getConfigByNameId("total_target.json" /* TotalTarget */, 1001 /* Yjjs */);
                    var list = [];
                    for (var key in cfgObj) {
                        list.push(cfgObj[key]);
                    }
                    return list;
                };
                YjjsProxy.prototype.getHaoliCfgByIdx = function (index) {
                    var list = this.getHaoliCfgList();
                    for (var _i = 0, list_8 = list; _i < list_8.length; _i++) {
                        var cfg = list_8[_i];
                        if (cfg && cfg.index == index) {
                            return cfg;
                        }
                    }
                    return null;
                };
                //目标豪礼购买状态，分仙玉购买和rmb购买 2已购买，0未购买
                YjjsProxy.prototype.getHaoliStatus = function (index) {
                    var cfg = this.getHaoliCfgByIdx(index);
                    if (!cfg) {
                        return 0;
                    }
                    if (cfg.pay_type == 1) {
                        if (this._model.haoli_list.indexOf(index) > -1) {
                            return 2;
                        }
                    }
                    else {
                        var proxy = game.getProxy("50" /* Pay */, 196 /* Pay */);
                        if (proxy.hasReceived(cfg.pay_index)) {
                            return 2;
                        }
                    }
                    return 0;
                };
                /**
                 * 获取进度
                 * 1三生修炼 2三世危机 3神器修行 4瑶姬宝库 5累充礼包 6目标豪礼 7瑶姬令
                 */
                YjjsProxy.prototype.getProgressVal = function (type) {
                    if (type == 4 || type == 5) {
                        return [0, 0];
                    }
                    if (type == 1 || type == 2) {
                        var max = this.getTotalTaskCnt(type);
                        var finishedCnt = type == 1 ? this.getFinishedTaskCnt() : this.getFinishedTaskCnt2();
                        return [finishedCnt, max];
                    }
                    if (type == 3) {
                        var max = this.getFubenMaxLv();
                        return [this._model.shenqi_count, max];
                    }
                    if (type == 6) {
                        var cfgObj = game.getConfigByNameId("total_target.json" /* TotalTarget */, 1001 /* Yjjs */);
                        var max = Object.keys(cfgObj).length;
                        var finishedCnt = 0;
                        for (var key in cfgObj) {
                            var cfg = cfgObj[key];
                            if (!cfg || !cfg.quest_list) {
                                continue;
                            }
                            var taskId = cfg.quest_list[0];
                            var taskData = mod.TaskUtil.getTask(taskId);
                            var isDraw = mod.TaskUtil.hasRewardDraw(taskData);
                            if (isDraw) {
                                finishedCnt++;
                            }
                        }
                        return [finishedCnt, max];
                    }
                    if (type == 7) {
                        var cfgObj = game.getConfigByNameId("game_order.json" /* GameOrder */, 3 /* Yaojiling */);
                        var max = Object.keys(cfgObj).length;
                        var finishedCnt = 0;
                        for (var key in cfgObj) {
                            var cfg = cfgObj[key];
                            if (!cfg) {
                                continue;
                            }
                            var rewardStatus = this.getStatusByTypeIndex(+key);
                            if (rewardStatus && rewardStatus.state == 2) {
                                finishedCnt++;
                            }
                        }
                        return [finishedCnt, max];
                    }
                    return [0, 0];
                };
                /**============================== hint ==============================*/
                YjjsProxy.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(36 /* Yaojijiangshi */) > -1) {
                        this.updateHint1();
                        this.updateHint2();
                        this.updateHint6();
                    }
                };
                //三生修炼某天红点
                YjjsProxy.prototype.getHintByDay = function (day) {
                    if (day > this.getCurDay()) {
                        return false;
                    }
                    var taskIdList = this.getSanshengTaskListByDay(day);
                    for (var _i = 0, taskIdList_3 = taskIdList; _i < taskIdList_3.length; _i++) {
                        var taskId = taskIdList_3[_i];
                        if (mod.TaskUtil.canRewardDraw(mod.TaskUtil.getTask(taskId))) {
                            return true;
                        }
                    }
                    return false;
                };
                //1三生修炼，2三世危机
                YjjsProxy.prototype.getBarIconHint = function (type) {
                    if (type === void 0) { type = 1; }
                    var cfg = game.getConfigByNameId("total_main.json" /* TotalMain */, 1001 /* Yjjs */);
                    if (!cfg) {
                        return false;
                    }
                    var list = type == 1 ? cfg.gift_list : cfg.gift2_list;
                    if (!list || !list.length) {
                        return false;
                    }
                    for (var i = 0; i < list.length; i++) {
                        var info = this.getTargetInfo(type, i + 1);
                        if (info && info.state && info.state == 1) {
                            return true;
                        }
                    }
                    return false;
                };
                //三生修炼红点
                YjjsProxy.prototype.updateHint1 = function () {
                    var cfgObj = game.getConfigByNameId("total_task.json" /* TotalTask */, 1001 /* Yjjs */);
                    var curDay = this.getCurDay();
                    var hint = this.getBarIconHint(1);
                    if (!hint) {
                        for (var key in cfgObj) {
                            var cfg = cfgObj[key];
                            if (cfg.days > curDay) {
                                continue;
                            }
                            if (this.getHintByDay(cfg.days)) {
                                hint = true;
                                break;
                            }
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[1]);
                    this.updateFirstMainHint();
                };
                //三世危机某阶段红点
                YjjsProxy.prototype.getHintByStage = function (stage) {
                    var taskIdList = this.getSanShiTaskListByStage(stage);
                    for (var _i = 0, taskIdList_4 = taskIdList; _i < taskIdList_4.length; _i++) {
                        var taskId = taskIdList_4[_i];
                        if (mod.TaskUtil.canRewardDraw(mod.TaskUtil.getTask(taskId))) {
                            return true;
                        }
                    }
                    return false;
                };
                //三世危机红点
                YjjsProxy.prototype.updateHint2 = function () {
                    var cfgObj = game.getConfigByNameId("total_task2.json" /* ToTalTask2 */, 1001 /* Yjjs */);
                    var stage = this._model.sanshi_stage;
                    var hint = this.getBarIconHint(2);
                    if (!hint) {
                        for (var key in cfgObj) {
                            var cfg = cfgObj[key];
                            if (cfg.main_index > stage) {
                                continue;
                            }
                            if (this.getHintByStage(cfg.main_index)) {
                                hint = true;
                                break;
                            }
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[2]);
                    this.updateFirstMainHint();
                };
                //神器修行红点
                YjjsProxy.prototype.updateHint3 = function () {
                    var hint = this.canChallengeShenqi();
                    mod.HintMgr.setHint(hint, this._model.hintPath[3]);
                    this.updateFirstMainHint();
                };
                //瑶姬宝库红点
                YjjsProxy.prototype.updateHint4 = function () {
                    var list = mod.StoreUtil.getStoreCfgListByType(101 /* Yaojibaoku */);
                    if (!list || !list.length) {
                        return;
                    }
                    var hint = false;
                    for (var _i = 0, list_9 = list; _i < list_9.length; _i++) {
                        var cfg = list_9[_i];
                        var info = this.getStoreInfo(cfg.index);
                        var bought_cnt = info ? info.count : 0;
                        var left_cnt = cfg.lmt_cnt - bought_cnt;
                        var cost = cfg.price;
                        if (cfg.discount) {
                            cost = Math.floor(cfg.price * cfg.discount / 10000);
                        }
                        if (mod.BagUtil.checkPropCnt(cfg.coin_type, left_cnt * cost)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[4]);
                    this.updateFirstMainHint();
                };
                //累充礼包红点
                YjjsProxy.prototype.updateHint5 = function () {
                    var list = this.getChargeCfgList() || [];
                    var hint = false;
                    for (var _i = 0, list_10 = list; _i < list_10.length; _i++) {
                        var cfg = list_10[_i];
                        var info = this.getChargeInfo(cfg.index);
                        if (info && info.state == 1) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[5]);
                    this.updateFirstMainHint();
                };
                //目标豪礼红点
                YjjsProxy.prototype.updateHint6 = function () {
                    var list = this.getHaoliCfgList();
                    var hint = false;
                    for (var _i = 0, list_11 = list; _i < list_11.length; _i++) {
                        var cfg = list_11[_i];
                        if (cfg && cfg.quest_list) {
                            var taskId = cfg.quest_list[0];
                            if (mod.TaskUtil.canRewardDraw(mod.TaskUtil.getTask(taskId))) {
                                hint = true;
                                break;
                            }
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath[6]);
                    this.updateFirstMainHint();
                };
                YjjsProxy.prototype.onUpdateGivingList = function (n) {
                    var types = n.body;
                    if (types.indexOf(3 /* Yaojiling */) > -1) {
                        this.updateHint7();
                    }
                };
                YjjsProxy.prototype.getBtnStatus = function () {
                    var list = this._model.ling_list;
                    if (!list || !list.length) { //没有解锁奖励
                        return 1;
                    }
                    for (var _i = 0, list_12 = list; _i < list_12.length; _i++) { //可领取奖励
                        var data = list_12[_i];
                        if (data.state == 1) {
                            return 2;
                        }
                    }
                    if (this._model.is_ling_buy) {
                        var list2 = this._model.ling_list2;
                        for (var key in list2) {
                            var item = list2[key];
                            if (item && item.state == 1) {
                                return 2;
                            }
                        }
                    }
                    var cfgObj = game.getConfigByNameId("game_order.json" /* GameOrder */, 3 /* Yaojiling */);
                    var len = 0;
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        len++;
                        var status = this.getStatusByTypeIndex(cfg.index);
                        if (!status) {
                            return 1;
                        }
                    }
                    //免费奖励都可领取或都已领取，但是还没购买瑶姬令
                    var isAll = len == list.length;
                    if (!this.model.is_ling_buy && isAll) {
                        return 3;
                    }
                    return 0;
                };
                /**获取解锁战令不可领取奖励 */
                YjjsProxy.prototype.getReward = function () {
                    var list = [];
                    var map = {};
                    var cfgObj = game.getConfigByNameId("game_order.json" /* GameOrder */, 3 /* Yaojiling */);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (cfg && cfg.rewad_1) {
                            for (var _i = 0, _a = cfg.rewad_1; _i < _a.length; _i++) {
                                var reward = _a[_i];
                                map[reward[0]] = reward[1] + (map[reward[0]] || 0);
                            }
                        }
                    }
                    for (var key in map) {
                        list.push(game.PropData.create(+key, map[key]));
                    }
                    return list;
                };
                /**获取可领取奖励，解锁瑶姬令可获得奖励 */
                YjjsProxy.prototype.getRewardCanGet = function () {
                    var list = [];
                    var map = {};
                    var cfgObj = game.getConfigByNameId("game_order.json" /* GameOrder */, 3 /* Yaojiling */);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        var status = this.getStatusByTypeIndex(cfg.index);
                        if (status && status.state >= 1) {
                            var status2 = this._model.ling_list2[status.index]; //购买后可获得奖励状态
                            if (!status2 || status2.state != 2) {
                                for (var _i = 0, _a = cfg.rewad_1; _i < _a.length; _i++) {
                                    var reward = _a[_i];
                                    map[reward[0]] = reward[1] + (map[reward[0]] || 0);
                                }
                            }
                        }
                    }
                    for (var key in map) {
                        list.push(game.PropData.create(+key, map[key]));
                    }
                    return list;
                };
                /**根据引获取状态 */
                YjjsProxy.prototype.getStatusByTypeIndex = function (index) {
                    var list = this.model.ling_list;
                    if (!list || !list.length) {
                        return null;
                    }
                    for (var _i = 0, list_13 = list; _i < list_13.length; _i++) {
                        var act = list_13[_i];
                        if (act.index == index) {
                            return act;
                        }
                    }
                    return null;
                };
                //瑶姬令红点
                YjjsProxy.prototype.updateHint7 = function () {
                    var hint = this.getBtnStatus() == 2;
                    mod.HintMgr.setHint(hint, this._model.hintPath[7]);
                    this.updateFirstMainHint();
                };
                /**
                 * 根据按钮类型获取红点
                 * 1三生修炼 2三世危机 3神器修行 4瑶姬宝库 5累充礼包 6目标豪礼 7瑶姬令
                 * @param type
                 */
                YjjsProxy.prototype.getHintByBtnType = function (type) {
                    var hintPath = this._model.hintPath[type];
                    return mod.HintMgr.getHint(hintPath);
                };
                //统一入口界面的红点
                YjjsProxy.prototype.updateFirstMainHint = function () {
                    var hint = false;
                    for (var i = 1; i <= 7; i++) {
                        if (mod.HintMgr.getHint(this._model.hintPath[i])) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, ["27" /* Activity */, "51" /* YjjsFirstMain */, "01" /* Btn1 */]);
                };
                YjjsProxy.prototype.checkOpen = function () {
                    var isOpen = this.isOpen();
                    mod.BtnIconMgr.insLeft().updateOpen(1041670153 /* Yjjs */, isOpen);
                };
                return YjjsProxy;
            }(game.ProxyBase));
            activity.YjjsProxy = YjjsProxy;
            __reflect(YjjsProxy.prototype, "game.mod.activity.YjjsProxy", ["game.mod.IYjjsProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsFirstView = /** @class */ (function (_super) {
                __extends(YjjsFirstView, _super);
                function YjjsFirstView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsFirstSkin";
                    return _this;
                }
                return YjjsFirstView;
            }(eui.Component));
            activity.YjjsFirstView = YjjsFirstView;
            __reflect(YjjsFirstView.prototype, "game.mod.activity.YjjsFirstView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsView1 = /** @class */ (function (_super) {
                __extends(YjjsView1, _super);
                function YjjsView1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsSkin1";
                    return _this;
                }
                return YjjsView1;
            }(eui.Component));
            activity.YjjsView1 = YjjsView1;
            __reflect(YjjsView1.prototype, "game.mod.activity.YjjsView1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsView2 = /** @class */ (function (_super) {
                __extends(YjjsView2, _super);
                function YjjsView2() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsSkin2";
                    return _this;
                }
                return YjjsView2;
            }(eui.Component));
            activity.YjjsView2 = YjjsView2;
            __reflect(YjjsView2.prototype, "game.mod.activity.YjjsView2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsView3 = /** @class */ (function (_super) {
                __extends(YjjsView3, _super);
                function YjjsView3() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsSkin3";
                    return _this;
                }
                return YjjsView3;
            }(eui.Component));
            activity.YjjsView3 = YjjsView3;
            __reflect(YjjsView3.prototype, "game.mod.activity.YjjsView3");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsView4 = /** @class */ (function (_super) {
                __extends(YjjsView4, _super);
                function YjjsView4() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsSkin4";
                    return _this;
                }
                return YjjsView4;
            }(eui.Component));
            activity.YjjsView4 = YjjsView4;
            __reflect(YjjsView4.prototype, "game.mod.activity.YjjsView4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsView5 = /** @class */ (function (_super) {
                __extends(YjjsView5, _super);
                function YjjsView5() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsSkin5";
                    return _this;
                }
                return YjjsView5;
            }(eui.Component));
            activity.YjjsView5 = YjjsView5;
            __reflect(YjjsView5.prototype, "game.mod.activity.YjjsView5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsView6 = /** @class */ (function (_super) {
                __extends(YjjsView6, _super);
                function YjjsView6() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsSkin6";
                    return _this;
                }
                return YjjsView6;
            }(eui.Component));
            activity.YjjsView6 = YjjsView6;
            __reflect(YjjsView6.prototype, "game.mod.activity.YjjsView6");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsDayItem = /** @class */ (function (_super) {
                __extends(YjjsDayItem, _super);
                function YjjsDayItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsDayItemSkin";
                    return _this;
                }
                YjjsDayItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                YjjsDayItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsDayItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_day.source = "tian" + data.day;
                    if (data.unlock) {
                        this.lb_progress.text = data.val + "/" + data.max;
                    }
                    else {
                        this.lb_progress.text = "\u672A\u89E3\u9501";
                    }
                    this.redPoint.visible = !!data.hint;
                };
                return YjjsDayItem;
            }(mod.BaseListenerRenderer));
            activity.YjjsDayItem = YjjsDayItem;
            __reflect(YjjsDayItem.prototype, "game.mod.activity.YjjsDayItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsFirstItem = /** @class */ (function (_super) {
                __extends(YjjsFirstItem, _super);
                function YjjsFirstItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsFirstItemSkin";
                    return _this;
                }
                YjjsFirstItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                YjjsFirstItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsFirstItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.redPoint.visible = !!data.hint;
                    this.img_bg.source = game.ResUtil.getUiPng("yaojijiangshi_" + (this.itemIndex + 1));
                    if (this.itemIndex == 3) {
                        //3瑶姬宝库展示仙神玉，不需要进度
                        this.coinItem.visible = true;
                        this.gr_bar.visible = false;
                        this.coinItem.setData(1450100119 /* Xianshenyu */);
                    }
                    else if (this.itemIndex == 4) {
                        //4累充礼包
                        this.gr_bar.visible = this.coinItem.visible = false;
                    }
                    else {
                        this.gr_bar.visible = true;
                        this.coinItem.visible = false;
                        this.bar.show(data.val, data.max, false, 0, false, 0 /* Percent */);
                    }
                };
                return YjjsFirstItem;
            }(mod.BaseListenerRenderer));
            activity.YjjsFirstItem = YjjsFirstItem;
            __reflect(YjjsFirstItem.prototype, "game.mod.activity.YjjsFirstItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsItem1 = /** @class */ (function (_super) {
                __extends(YjjsItem1, _super);
                function YjjsItem1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsItemSkin1";
                    return _this;
                }
                YjjsItem1.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 214 /* Yjjs */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                YjjsItem1.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsItem1.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var taskId = this.data.task_id;
                    var taskCfg = mod.TaskUtil.getCfg(taskId);
                    if (!taskCfg) {
                        DEBUG && console.error("\u6CA1\u6709\u4EFB\u52A1id\uFF1A" + taskId);
                        return;
                    }
                    this._jump = taskCfg.jump;
                    this.lb_desc.text = taskCfg.desc;
                    this.icon.data = taskCfg.rewards[0];
                    var taskData = this.data;
                    var schedule = taskData && taskData.schedule || 0;
                    var target = taskData && taskData.target || 0;
                    this.bar.show(schedule, target, false, 0, false);
                    var state = taskData ? taskData.status : 0;
                    if (state == 2) {
                        this.btn_do.visible = false;
                        this.img_done.visible = true;
                    }
                    else {
                        this.btn_do.visible = true;
                        this.img_done.visible = false;
                        this.btn_do.label = state == 0 ? "\u524D \u5F80" : "\u9886 \u53D6";
                        if (state == 0) {
                            this.btn_do.setBlue();
                        }
                        else {
                            this.btn_do.setYellow();
                        }
                        this.btn_do.setHint(state == 1);
                    }
                };
                YjjsItem1.prototype.onClick = function () {
                    if (this.data && this.data.status == 1) {
                        mod.TaskUtil.clickTask(this.data);
                        this._proxy.clickDrawReward = true;
                        return;
                    }
                    if (this._jump) {
                        mod.ViewMgr.getIns().showViewByID(this._jump);
                    }
                };
                return YjjsItem1;
            }(mod.BaseListenerRenderer));
            activity.YjjsItem1 = YjjsItem1;
            __reflect(YjjsItem1.prototype, "game.mod.activity.YjjsItem1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsItem2 = /** @class */ (function (_super) {
                __extends(YjjsItem2, _super);
                function YjjsItem2() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsItemSkin2";
                    return _this;
                }
                YjjsItem2.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                YjjsItem2.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsItem2.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var taskId = this.data.task_id;
                    var taskCfg = mod.TaskUtil.getCfg(taskId);
                    if (!taskCfg) {
                        DEBUG && console.error("\u6CA1\u6709\u4EFB\u52A1\u914D\u7F6Eid\uFF1A" + taskId);
                        return;
                    }
                    this._jump = taskCfg.jump;
                    this.lb_desc.text = taskCfg.desc;
                    this.icon.data = taskCfg.rewards[0];
                    var taskData = this.data;
                    var str = game.TextUtil.addColor("(" + taskData.schedule + "/" + taskData.target + ")", taskData.schedule >= taskData.target ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_cond.textFlow = game.TextUtil.parseHtml(str);
                    if (taskData.status == 2) {
                        this.img_done.visible = true;
                        this.btn_do.visible = false;
                    }
                    else {
                        this.img_done.visible = false;
                        this.btn_do.visible = true;
                        this.btn_do.label = taskData.status == 0 ? "\u524D \u5F80" : "\u9886 \u53D6";
                        if (taskData.status == 0) {
                            this.btn_do.setBlue();
                        }
                        else {
                            this.btn_do.setYellow();
                        }
                        this.btn_do.setHint(taskData.status == 1);
                    }
                };
                YjjsItem2.prototype.onClick = function () {
                    if (this.data && this.data.status == 1) {
                        mod.TaskUtil.clickTask(this.data);
                        return;
                    }
                    if (this._jump) {
                        mod.ViewMgr.getIns().showViewByID(this._jump);
                    }
                };
                return YjjsItem2;
            }(mod.BaseListenerRenderer));
            activity.YjjsItem2 = YjjsItem2;
            __reflect(YjjsItem2.prototype, "game.mod.activity.YjjsItem2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Handler = base.Handler;
            var YjjsItem4 = /** @class */ (function (_super) {
                __extends(YjjsItem4, _super);
                function YjjsItem4() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                YjjsItem4.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 214 /* Yjjs */);
                };
                YjjsItem4.prototype.dataChanged = function () {
                    _super.prototype.dataChanged.call(this);
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    var left_cnt = this.getLeftCnt();
                    this.updateLmtLab(left_cnt);
                };
                YjjsItem4.prototype.updateLmtLab = function (left_cnt, total_cnt, str) {
                    _super.prototype.updateLmtLab.call(this, left_cnt, total_cnt, str);
                    this.lab_limit.visible = !this.img_bought.visible;
                };
                YjjsItem4.prototype.getLeftCnt = function () {
                    var info = this._proxy.getStoreInfo(this.data.index);
                    var bought_cnt = info ? info.count : 0;
                    return this.data.lmt_cnt - bought_cnt;
                };
                YjjsItem4.prototype.onClickBuy = function () {
                    mod.ViewMgr.getIns().openStoreBuyTips(this.data.index, this.getLeftCnt(), Handler.alloc(this._proxy, this._proxy.c2s_yaoji_buy, [3, this.data.index]));
                };
                return YjjsItem4;
            }(mod.IconShop));
            activity.YjjsItem4 = YjjsItem4;
            __reflect(YjjsItem4.prototype, "game.mod.activity.YjjsItem4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsItem5 = /** @class */ (function (_super) {
                __extends(YjjsItem5, _super);
                function YjjsItem5() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YjjsItemSkin5";
                    return _this;
                }
                YjjsItem5.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 214 /* Yjjs */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                YjjsItem5.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsItem5.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    this._listData.replaceAll(cfg.cumulative_reward.concat());
                    var charge_cnt = game.RoleVo.ins.charge_rmb || 0;
                    var finish = charge_cnt >= cfg.main_index; //是否达成
                    var desc = game.StringUtil.substitute(game.getLanById("vip_welfare_tips1" /* vip_welfare_tips1 */), [cfg.main_index]) +
                        game.TextUtil.addColor("(" + charge_cnt + "/" + cfg.main_index + ")", finish ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc);
                    var info = this._proxy.getChargeInfo(cfg.index);
                    var state = info ? info.state : 0;
                    if (state == 2) {
                        this.btn_do.visible = false;
                        this.img_done.visible = true;
                    }
                    else {
                        this.btn_do.label = state == 1 ? game.getLanById("lingqu" /* lingqu */) : game.getLanById("exp_pool15" /* exp_pool15 */);
                        if (state == 1) {
                            this.btn_do.setYellow();
                        }
                        else {
                            this.btn_do.setBlue();
                        }
                        this.btn_do.visible = true;
                        this.img_done.visible = false;
                        this.btn_do.setHint(state == 1);
                    }
                };
                YjjsItem5.prototype.onClick = function () {
                    var info = this._proxy.getChargeInfo(this.data.index);
                    if (info && info.state == 1) {
                        this._proxy.c2s_yaoji_receive_reward(4, this.data.index);
                        return;
                    }
                    mod.ViewMgr.getIns().openCommonRechargeView();
                };
                return YjjsItem5;
            }(mod.BaseListenerRenderer));
            activity.YjjsItem5 = YjjsItem5;
            __reflect(YjjsItem5.prototype, "game.mod.activity.YjjsItem5");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Handler = base.Handler;
            var YjjsItem6 = /** @class */ (function (_super) {
                __extends(YjjsItem6, _super);
                function YjjsItem6() {
                    var _this = _super.call(this) || this;
                    _this._status = 0; //任务状态 0未完成  1完成  2领取
                    _this.skinName = "skins.activity.YjjsItemSkin6";
                    return _this;
                }
                YjjsItem6.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 214 /* Yjjs */);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_go, this.onClickGo, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_buy, this.onClickBuy, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.icon, this.onClickIcon, this);
                };
                YjjsItem6.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsItem6.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var taskId = data.quest_list[0];
                    var taskData = mod.TaskUtil.getTask(taskId);
                    var status = taskData ? taskData.status : 0; //0未完成  1完成  2领取
                    this._status = status;
                    var taskDesc = '';
                    if (taskData) {
                        taskDesc = mod.TaskUtil.getTaskDesc(taskData) + '可领取';
                    }
                    this.lb_cond.textFlow = game.TextUtil.parseHtml(taskDesc);
                    var taskCfg = mod.TaskUtil.getCfg(taskId);
                    if (!taskCfg) {
                        return;
                    }
                    var iconData = {
                        prop: taskCfg.rewards[0],
                        isGot: status == 2
                    };
                    this._reward = taskCfg.rewards[0];
                    this.icon.data = iconData;
                    //todo
                    if (status == 0) {
                        this.icon.gr_got.visible = true;
                        this.icon.img_gou.visible = false;
                    }
                    this.img_got.visible = status == 2;
                    this.btn_go.visible = !this.img_got.visible;
                    this.btn_go.label = status == 1 ? game.getLanById("tishi_29" /* tishi_29 */) : game.getLanById("goto" /* goto */);
                    this.btn_go.setHint(status == 1);
                    this.updateRightView();
                };
                YjjsItem6.prototype.updateRightView = function () {
                    var cfg = this.data;
                    var rewards = [];
                    if (cfg.pay_type == 1) {
                        var shopCfg = game.getConfigByNameId("shop.json" /* Store */, cfg.pay_index);
                        var price = 0;
                        if (shopCfg) {
                            rewards = shopCfg.prop.concat();
                            price = shopCfg.price * shopCfg.discount / 10000;
                            this._cost = [shopCfg.coin_type, price];
                            this.btn_buy.setCost(this._cost);
                        }
                    }
                    else {
                        var giftBagCfg = game.getConfigByNameId("gift_bag.json" /* GiftBag */, cfg.pay_index);
                        if (giftBagCfg) {
                            rewards = giftBagCfg.awards.concat();
                            this.btn_buy.label = mod.PayUtil.getRmbValue(cfg.pay_index) + mod.PayUtil.getRmbUnit();
                        }
                    }
                    this._listData.replaceAll(rewards);
                    // 获取购买状态
                    var buyStatus = this._proxy.getHaoliStatus(this.data.index);
                    this.img_got0.visible = buyStatus == 2;
                    this.btn_buy.visible = !this.img_got0.visible;
                };
                YjjsItem6.prototype.onClickGo = function () {
                    var taskId = this.data.quest_list[0];
                    var taskData = mod.TaskUtil.getTask(taskId);
                    if (!taskData) {
                        DEBUG && console.error("\u6CA1\u6709\u4EFB\u52A1\u6570\u636E:" + taskId);
                        return;
                    }
                    mod.TaskUtil.clickTask(taskData);
                };
                YjjsItem6.prototype.onClickBuy = function () {
                    //不可购买
                    if (this._status == 0) {
                        var cfg = game.getConfigByNameId("main_task1.json" /* MainTask1 */, this.data.quest_list[0]);
                        if (cfg.jump) {
                            this._jump = cfg.jump;
                        }
                        mod.ViewMgr.getIns().showConfirm("\u6761\u4EF6\u672A\u8FBE\u6210\uFF0C\u65E0\u6CD5\u8D2D\u4E70", Handler.alloc(this, this.onConfirmFunc));
                        return;
                    }
                    //可购买
                    if (this.data.pay_type == 1) {
                        if (!this._cost || !mod.BagUtil.checkPropCnt(this._cost[0], this._cost[1], 1 /* Dialog */)) {
                            return;
                        }
                        this._proxy.c2s_yaoji_buy(5, this.data.index);
                    }
                    else {
                        mod.PayUtil.pay(this.data.pay_index);
                    }
                };
                YjjsItem6.prototype.onConfirmFunc = function () {
                    if (this._jump) {
                        mod.ViewMgr.getIns().showViewByID(this._jump);
                    }
                    else {
                        DEBUG && console.error("\u6CA1\u6709\u914D\u7F6E\u4EFB\u52A1jump\u5B57\u6BB5");
                    }
                };
                YjjsItem6.prototype.onClickIcon = function () {
                    if (this._reward) {
                        mod.ViewMgr.getIns().showPropTips(this._reward[0]);
                    }
                };
                return YjjsItem6;
            }(mod.BaseListenerRenderer));
            activity.YjjsItem6 = YjjsItem6;
            __reflect(YjjsItem6.prototype, "game.mod.activity.YjjsItem6");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsItem7 = /** @class */ (function (_super) {
                __extends(YjjsItem7, _super);
                function YjjsItem7() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "";
                    return _this;
                }
                YjjsItem7.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                YjjsItem7.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                YjjsItem7.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                };
                return YjjsItem7;
            }(mod.BaseListenerRenderer));
            activity.YjjsItem7 = YjjsItem7;
            __reflect(YjjsItem7.prototype, "game.mod.activity.YjjsItem7");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var YjjsFirstMdr = /** @class */ (function (_super) {
                __extends(YjjsFirstMdr, _super);
                function YjjsFirstMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsFirstView);
                    _this._endTime = 0;
                    return _this;
                }
                YjjsFirstMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list.itemRenderer = activity.YjjsFirstItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                YjjsFirstMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                };
                YjjsFirstMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                YjjsFirstMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                YjjsFirstMdr.prototype.updateView = function () {
                    var list = [];
                    for (var i = 0; i < 7; i++) {
                        var progressAry = this._proxy.getProgressVal(i + 1);
                        list.push({
                            hint: this._proxy.getHintByBtnType(i + 1),
                            val: progressAry[0],
                            max: progressAry[1]
                        });
                    }
                    this._listData.replaceAll(list);
                };
                YjjsFirstMdr.prototype.onClickList = function (e) {
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "52" /* YjjsMain */, '0' + (e.itemIndex + 1));
                };
                YjjsFirstMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime < 1) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return YjjsFirstMdr;
            }(game.MdrBase));
            activity.YjjsFirstMdr = YjjsFirstMdr;
            __reflect(YjjsFirstMdr.prototype, "game.mod.activity.YjjsFirstMdr", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var YjjsMdr1 = /** @class */ (function (_super) {
                __extends(YjjsMdr1, _super);
                function YjjsMdr1() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsView1);
                    _this._endTime = 0;
                    _this._curDay = 1; //当前第几天，默认第1天
                    _this._iconGotList = [];
                    return _this;
                }
                YjjsMdr1.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list_day.itemRenderer = activity.YjjsDayItem;
                    this._view.list_day.dataProvider = this._listDay = new eui.ArrayCollection();
                    this._view.list_item.itemRenderer = activity.YjjsItem1;
                    this._view.list_item.dataProvider = this._listItem = new eui.ArrayCollection();
                    var i = 0;
                    while (this._view["icon" + i]) {
                        this._iconGotList.push(this._view["icon" + i]);
                        i++;
                    }
                };
                YjjsMdr1.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_day, eui.ItemTapEvent.ITEM_TAP, this.onClickDay, this);
                    var i = 0;
                    while (this._view["icon" + i]) {
                        addEventListener(this._view["icon" + i], egret.TouchEvent.TOUCH_TAP, this.onClickIcon, this);
                        i++;
                    }
                    this.onNt("on_yjjs_sansheng_info_update" /* ON_YJJS_SANSHENG_INFO_UPDATE */, this.updateView, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onUpdateTask, this);
                    // this.onNt(RoleEvent.ON_SERVER_DAY_UPDATE, this.updateView, this);
                };
                YjjsMdr1.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._curDay = this._proxy.getSelDay(); //选择天数
                    this._proxy.clickDay = this._curDay;
                    this._endTime = this._proxy.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                YjjsMdr1.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                    this._proxy.clickDrawReward = false;
                    this._proxy.clickDay = 0;
                };
                YjjsMdr1.prototype.onUpdateTask = function (n) {
                    var types = n.body;
                    if (types.indexOf(36 /* Yaojijiangshi */) > -1) {
                        //当前界面奖励全部领取完后：按天数顺序跳转至第一个有奖励可领取的天数
                        var day = this._proxy.getDrawDay();
                        if (this._proxy.clickDay == this._curDay && this._proxy.clickDrawReward
                            && day && day != this._curDay) {
                            this._curDay = day;
                            this._proxy.clickDay = day;
                            this._proxy.clickDrawReward = false;
                        }
                        this.updateView();
                    }
                };
                YjjsMdr1.prototype.updateView = function () {
                    this.updateTopView();
                    this.updateDayView();
                    this.updateItemView();
                };
                YjjsMdr1.prototype.updateTopView = function () {
                    var cfg = game.getConfigByNameId("total_main.json" /* TotalMain */, 1001 /* Yjjs */);
                    if (!cfg) {
                        DEBUG && console.error("total_main.json: \u65E0\u914D\u7F6E " + 1001 /* Yjjs */);
                        return;
                    }
                    var itemMin = 0; //每段进度条最小值
                    var finishedCnt = this._proxy.getFinishedTaskCnt();
                    for (var i = 0; i < cfg.gift_list.length; i++) {
                        if (!this._view["icon" + i]) {
                            continue;
                        }
                        var item = cfg.gift_list[i];
                        var targetInfo = this._proxy.getTargetInfo(1, i + 1);
                        var state = targetInfo ? targetInfo.state : 0;
                        var isBig = i == cfg.gift_list.length - 1;
                        var iconData = {
                            prop: [item[0], item[1]],
                            showHint: state == 1,
                            isGot: state == 2,
                            isReward: isBig
                        };
                        this._view["icon" + i].data = iconData;
                        if (isBig && state != 2) {
                            this._view["icon" + i].icon.setImgLock();
                        }
                        this._view["barCntComp" + i].updateShow(finishedCnt, itemMin, item[2]);
                        itemMin = item[2] + 1;
                    }
                    this.addBmpFont(finishedCnt + '', game.BmpTextCfg[212 /* VipFont */], this._view.gr_font, true, 1, true);
                };
                YjjsMdr1.prototype.updateDayView = function () {
                    var _this = this;
                    var list = [];
                    var taskList = this._proxy.getSanshengTaskListByDay(this._curDay);
                    var max = taskList && taskList.length || 0;
                    for (var i = 1; i <= 7; i++) {
                        list.push({
                            day: i,
                            unlock: this._proxy.isOpenByDay(i),
                            hint: this._proxy.getHintByDay(i),
                            val: this._proxy.getSanShengTaskFinishedCntByDay(i),
                            max: max,
                            sel: i == this._curDay
                        });
                    }
                    this._listDay.replaceAll(list);
                    var preSel = this._view.list_day.selectedIndex || 0;
                    this._view.list_day.selectedIndex = this._curDay - 1;
                    if (preSel < 5 && this._curDay >= 6) {
                        egret.callLater(function () {
                            mod.ScrollUtil.moveHToAssign(_this._view.scroller, _this._curDay - 1, 119);
                        }, this);
                    }
                };
                YjjsMdr1.prototype.updateItemView = function () {
                    var taskIds = this._proxy.getSanshengTaskListByDay(this._curDay) || [];
                    var list = [];
                    for (var _i = 0, taskIds_1 = taskIds; _i < taskIds_1.length; _i++) {
                        var id = taskIds_1[_i];
                        var taskData = mod.TaskUtil.getTask(id);
                        list.push(taskData);
                    }
                    list.sort(game.SortTools.sortTask);
                    this._listItem.replaceAll(list);
                };
                YjjsMdr1.prototype.onClickDay = function (e) {
                    var data = e.item;
                    if (!data || data.day == this._curDay) {
                        return;
                    }
                    if (!this._proxy.isOpenByDay(data.day)) {
                        game.PromptBox.getIns().show("\u6682\u672A\u5F00\u542F");
                        this._view.list_day.selectedIndex = this._curDay - 1;
                        return;
                    }
                    this._curDay = data.day;
                    if (this._proxy.clickDay != this._curDay) {
                        this._proxy.clickDrawReward = false; //重置
                        this._proxy.clickDay = this._curDay;
                    }
                    this.updateView();
                };
                YjjsMdr1.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime < 1) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                YjjsMdr1.prototype.onClickIcon = function (e) {
                    var data = e.currentTarget.data;
                    if (data && data.showHint) {
                        var idx = this._iconGotList.indexOf(e.currentTarget) + 1;
                        this._proxy.c2s_yaoji_target_reward(1, idx);
                        return;
                    }
                    mod.ViewMgr.getIns().showPropTips(data.prop[0]);
                };
                return YjjsMdr1;
            }(game.EffectMdrBase));
            activity.YjjsMdr1 = YjjsMdr1;
            __reflect(YjjsMdr1.prototype, "game.mod.activity.YjjsMdr1", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsMdr2 = /** @class */ (function (_super) {
                __extends(YjjsMdr2, _super);
                function YjjsMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsView2);
                    _this._curStage = 0; //当前阶段
                    _this._iconGotList = [];
                    return _this;
                }
                YjjsMdr2.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._view.gr_eff.touchEnabled = false;
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list.itemRenderer = activity.YjjsItem2;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    var i = 0;
                    while (this._view["icon" + i]) {
                        this._iconGotList.push(this._view["icon" + i]);
                        i++;
                    }
                };
                YjjsMdr2.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    var i = 0;
                    while (this._view["icon" + i]) {
                        addEventListener(this._view["icon" + i], egret.TouchEvent.TOUCH_TAP, this.onClickIcon, this);
                        i++;
                    }
                    this.onNt("on_yjjs_sanshi_info_update" /* ON_YJJS_SANSHI_INFO_UPDATE */, this.updateView, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onUpdateTask, this);
                };
                YjjsMdr2.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._curStage = this._proxy.model.sanshi_stage || 1;
                    this.updateView();
                };
                YjjsMdr2.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._effId && this.removeEffect(this._effId);
                    this._effId = null;
                };
                YjjsMdr2.prototype.onUpdateTask = function (n) {
                    var types = n.body;
                    if (types.indexOf(36 /* Yaojijiangshi */) > -1) {
                        this.updateView();
                    }
                };
                YjjsMdr2.prototype.updateView = function () {
                    this._curStage = this._proxy.model.sanshi_stage;
                    var cfg = game.getConfigByNameId("total_main.json" /* TotalMain */, 1001 /* Yjjs */);
                    if (!cfg || !cfg.gift2_list) {
                        return;
                    }
                    var maxBar = 0;
                    var finishedCnt = this._proxy.getFinishedTaskCnt2();
                    for (var i = 0; i < cfg.gift2_list.length; i++) {
                        if (!this._view["icon" + i]) {
                            continue;
                        }
                        var item = cfg.gift2_list[i];
                        var targetInfo = this._proxy.getTargetInfo(2, i + 1);
                        var state = targetInfo ? targetInfo.state : 0;
                        var isBig = i == cfg.gift2_list.length - 1;
                        var iconData = {
                            prop: [item[0], item[1]],
                            showHint: state == 1,
                            isGot: state == 2,
                            isReward: isBig
                        };
                        this._view["icon" + i].data = iconData;
                        if (isBig && state != 2) {
                            this._view["icon" + i].icon.setImgLock();
                        }
                        this._view["barCnt" + i].updateShow(item[2], item[2] <= finishedCnt);
                        maxBar = Math.max(maxBar, item[2]);
                    }
                    this._view.bar.show(finishedCnt, maxBar, false, 0, false, 2 /* NoValue */);
                    this.updateListView();
                    var bigReward = cfg.gift2_list[cfg.gift2_list.length - 1];
                    if (bigReward && !this._effId) {
                        var propCfg = game.GameConfig.getPropConfigById(bigReward[0]);
                        if (propCfg && propCfg.param1) {
                            this._effId = this.addAnimate(propCfg.param1[0][0], this._view.gr_eff);
                        }
                    }
                };
                YjjsMdr2.prototype.updateListView = function () {
                    var taskIds = this._proxy.getSanShiTaskListByStage(this._curStage);
                    var list = [];
                    var doneList = [];
                    for (var _i = 0, taskIds_2 = taskIds; _i < taskIds_2.length; _i++) {
                        var id = taskIds_2[_i];
                        var taskData = mod.TaskUtil.getTask(id);
                        if (!taskData) {
                            DEBUG && console.error("\u6CA1\u6709\u4EFB\u52A1\u6570\u636ETaskData,id\uFF1A" + id);
                            continue;
                        }
                        if (mod.TaskUtil.hasRewardDraw(taskData)) {
                            doneList.push(taskData);
                        }
                        else {
                            list.push(taskData);
                        }
                    }
                    list = list.concat(doneList);
                    this._listData.replaceAll(list);
                };
                YjjsMdr2.prototype.onClickIcon = function (e) {
                    var data = e.currentTarget.data;
                    if (data && data.showHint) {
                        var idx = this._iconGotList.indexOf(e.currentTarget) + 1;
                        this._proxy.c2s_yaoji_target_reward(2, idx);
                        return;
                    }
                    mod.ViewMgr.getIns().showPropTips(data.prop[0]);
                };
                return YjjsMdr2;
            }(game.EffectMdrBase));
            activity.YjjsMdr2 = YjjsMdr2;
            __reflect(YjjsMdr2.prototype, "game.mod.activity.YjjsMdr2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YjjsMdr3 = /** @class */ (function (_super) {
                __extends(YjjsMdr3, _super);
                function YjjsMdr3() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsView3);
                    return _this;
                }
                YjjsMdr3.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._view.gr_eff.touchEnabled = false;
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.lb_go.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(this._view.lb_go.text, 2330156 /* GREEN */));
                };
                YjjsMdr3.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.lb_go, egret.TouchEvent.TOUCH_TAP, this.onClickGo, this);
                    addEventListener(this._view.btn_challenge, egret.TouchEvent.TOUCH_TAP, this.onClickChallenge, this);
                    this.onNt("on_yjjs_shenqi_info_update" /* ON_YJJS_SHENQI_INFO_UPDATE */, this.updateView, this);
                };
                YjjsMdr3.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                YjjsMdr3.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._effId && this.removeEffect(this._effId);
                    this._effId = null;
                };
                YjjsMdr3.prototype.updateView = function () {
                    this._fubenCfg = this._proxy.getFubenCfg();
                    if (!this._fubenCfg) {
                        return;
                    }
                    this._view.lb_lvdesc.text = "\u7B2C" + game.StringUtil.ChineseNum[this._fubenCfg.barrier_index] + "\u5173\u5956\u52B1";
                    this.addBmpFont(this._fubenCfg.power_show + '', game.BmpTextCfg[100 /* CommonPower */], this._view.gr_font);
                    this._view.lb_vipdesc.text = "VIP" + this._fubenCfg.vip_level + "\u53EF\u76F4\u63A5\u78BE\u538B\u901A\u8FC7";
                    // this._view.lb_progress.text = `${this._proxy.model.shenqi_count}/${this._proxy.getFubenMaxLv()}`;
                    this._view.bar.show(this._proxy.model.shenqi_count, this._proxy.getFubenMaxLv(), false, 0, false, 1 /* Value */);
                    var isMax = this._proxy.isFubenMax();
                    this._view.img_finished.visible = isMax;
                    this._view.btn_challenge.visible = !isMax;
                    if (this._view.btn_challenge.visible) {
                        this._view.btn_challenge.setHint(this._proxy.canChallengeShenqi());
                    }
                    var cfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, this._fubenCfg.reward_big);
                    if (!cfg || !cfg.content) {
                        return;
                    }
                    this._listData.replaceAll(cfg.content.slice());
                    var bigReward = cfg.content[0];
                    this._view.icon.data = bigReward;
                    if (!this._effId) {
                        var propCfg = game.GameConfig.getPropConfigById(bigReward[0]);
                        if (propCfg && propCfg.param1) {
                            this._effId = this.addAnimate(propCfg.param1[0][0], this._view.gr_eff);
                        }
                    }
                };
                YjjsMdr3.prototype.onClickChallenge = function () {
                    if (this._proxy.canChallengeShenqi(true)) {
                        this._proxy.c2s_yaoji_shenqi_challenge();
                    }
                };
                YjjsMdr3.prototype.onClickGo = function () {
                    mod.ViewMgr.getIns().showView("28" /* Vip */, "01" /* VipMain */);
                };
                return YjjsMdr3;
            }(game.EffectMdrBase));
            activity.YjjsMdr3 = YjjsMdr3;
            __reflect(YjjsMdr3.prototype, "game.mod.activity.YjjsMdr3");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var YjjsMdr4 = /** @class */ (function (_super) {
                __extends(YjjsMdr4, _super);
                function YjjsMdr4() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsView4);
                    _this._endTime = 0;
                    return _this;
                }
                YjjsMdr4.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list.itemRenderer = activity.YjjsItem4;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                YjjsMdr4.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_yjjs_baoku_info_update" /* ON_YJJS_BAOKU_INFO_UPDATE */, this.updateView, this);
                };
                YjjsMdr4.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                YjjsMdr4.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                YjjsMdr4.prototype.updateView = function () {
                    var list = mod.StoreUtil.getStoreCfgListByType(101 /* Yaojibaoku */);
                    if (!list || !list.length) {
                        return;
                    }
                    var shopCfg = list[0];
                    this._view.icon_bigreward.data = shopCfg.prop[0];
                    this._listData.replaceAll(list.concat());
                };
                YjjsMdr4.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime < 1) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    var str = game.TimeUtil.formatSecond(leftTime, leftTime > game.Second.Hour ? 'dd天HH时' : 'HH时mm秒');
                    this._view.lb_time.textFlow = game.TextUtil.parseHtml(str);
                };
                return YjjsMdr4;
            }(game.MdrBase));
            activity.YjjsMdr4 = YjjsMdr4;
            __reflect(YjjsMdr4.prototype, "game.mod.activity.YjjsMdr4", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var YjjsMdr5 = /** @class */ (function (_super) {
                __extends(YjjsMdr5, _super);
                function YjjsMdr5() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsView5);
                    _this._endTime = 0;
                    return _this;
                }
                YjjsMdr5.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list.itemRenderer = activity.YjjsItem5;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                YjjsMdr5.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_yjjs_charge_info_update" /* ON_YJJS_CHARGE_INFO_UPDATE */, this.updateView, this);
                };
                YjjsMdr5.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                YjjsMdr5.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                YjjsMdr5.prototype.updateView = function () {
                    var list = this._proxy.getChargeCfgList();
                    if (!list || !list.length) {
                        return;
                    }
                    var doneList = [];
                    var notList = [];
                    for (var _i = 0, list_14 = list; _i < list_14.length; _i++) {
                        var cfg_2 = list_14[_i];
                        var info = this._proxy.getChargeInfo(cfg_2.index);
                        if (info && info.state == 2) {
                            doneList.push(cfg_2);
                        }
                        else {
                            notList.push(cfg_2);
                        }
                    }
                    notList = notList.concat(doneList);
                    this._listData.replaceAll(notList);
                    var cfg = list[list.length - 1];
                    var reward = cfg.cumulative_reward[cfg.cumulative_reward.length - 1];
                    this._view.icon_bigreward.data = reward;
                };
                YjjsMdr5.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime < 1) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    var str = game.TimeUtil.formatSecond(leftTime, leftTime > game.Second.Hour ? 'dd天HH时' : 'HH时mm秒');
                    this._view.lb_time.textFlow = game.TextUtil.parseHtml(str);
                };
                return YjjsMdr5;
            }(game.MdrBase));
            activity.YjjsMdr5 = YjjsMdr5;
            __reflect(YjjsMdr5.prototype, "game.mod.activity.YjjsMdr5", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var YjjsMdr6 = /** @class */ (function (_super) {
                __extends(YjjsMdr6, _super);
                function YjjsMdr6() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YjjsView6);
                    _this._endTime = 0;
                    return _this;
                }
                YjjsMdr6.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(214 /* Yjjs */);
                    this._view.list.itemRenderer = activity.YjjsItem6;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                YjjsMdr6.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onUpdateTask, this);
                    this.onNt("on_yjjs_haoli_info_update" /* ON_YJJS_HAOLI_INFO_UPDATE */, this.updateView, this);
                    this.onNt("on_direct_buy_update" /* ON_DIRECT_BUY_UPDATE */, this.updateView, this);
                };
                YjjsMdr6.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._endTime = this._proxy.getEndTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                    this.updateBigReward();
                };
                YjjsMdr6.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                YjjsMdr6.prototype.onUpdateTask = function (n) {
                    var types = n.body;
                    if (types.indexOf(36 /* Yaojijiangshi */) > -1) {
                        this.updateView();
                    }
                };
                YjjsMdr6.prototype.updateView = function () {
                    var list = this._proxy.getHaoliCfgList();
                    this._listData.replaceAll(list);
                };
                YjjsMdr6.prototype.updateBigReward = function () {
                    var list = this._proxy.getHaoliCfgList();
                    if (!list || !list.length) {
                        return;
                    }
                    var bigCfg = list[list.length - 1];
                    var payType = bigCfg.pay_type;
                    var reward = [];
                    if (payType == 1) {
                        var shopCfg = game.getConfigByNameId("shop.json" /* Store */, bigCfg.pay_index);
                        if (shopCfg) {
                            reward = shopCfg.prop[0];
                        }
                    }
                    else {
                        var giftBagCfg = game.getConfigByNameId("gift_bag.json" /* GiftBag */, bigCfg.pay_index);
                        if (giftBagCfg) {
                            reward = giftBagCfg.awards[0];
                        }
                    }
                    this._view.icon.data = reward;
                };
                YjjsMdr6.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime < 1) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    var str = game.TimeUtil.formatSecond(leftTime, leftTime > game.Second.Hour ? 'dd天HH时' : 'HH时mm秒');
                    this._view.lb_time.textFlow = game.TextUtil.parseHtml(str);
                };
                return YjjsMdr6;
            }(game.MdrBase));
            activity.YjjsMdr6 = YjjsMdr6;
            __reflect(YjjsMdr6.prototype, "game.mod.activity.YjjsMdr6", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            /**
             * 瑶姬令
             * 协议没有整合
             */
            var YjjsMdr7 = /** @class */ (function (_super) {
                __extends(YjjsMdr7, _super);
                function YjjsMdr7() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._gameOrderType = 3 /* Yaojiling */;
                    return _this;
                }
                YjjsMdr7.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._yjjsProxy = this.retProxy(214 /* Yjjs */);
                    this._view.img_banner.source = game.ResUtil.getUiJpg('guanggaotu_yaojiling');
                    this._view.gr_icon.x = 100;
                    this._view.img_type1.source = "meishuzi_jiangli";
                    this._view.img_type2.source = "yaojiling";
                };
                YjjsMdr7.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.offNt("on_update_giving_list" /* ON_UPDATE_GIVING_LIST */);
                    this.onNt("on_yjjs_ling_info_update" /* ON_YJJS_LING_INFO_UPDATE */, this.onUpdateView, this);
                };
                YjjsMdr7.prototype.getEndTime = function (type) {
                    return this._yjjsProxy.getEndTime();
                };
                YjjsMdr7.prototype.getBtnStatus = function (type) {
                    return this._yjjsProxy.getBtnStatus();
                };
                /**根据类型和索引获取状态 */
                YjjsMdr7.prototype.getStatusByTypeIndex = function (index) {
                    return this._yjjsProxy.getStatusByTypeIndex(index);
                };
                YjjsMdr7.prototype.getListByType = function (type) {
                    var cfgArr = game.getConfigByNameId("game_order.json" /* GameOrder */, 3 /* Yaojiling */);
                    var act_list = this._yjjsProxy.model.ling_list;
                    var list = [];
                    var val = act_list ? act_list.length : 0;
                    for (var key in cfgArr) {
                        var cfg = cfgArr[key];
                        var cfgBefore = cfgArr[+key - 1];
                        var cfgNext = cfgArr[+key + 1];
                        var before = cfgBefore && Math.floor((cfg.target - cfgBefore.target) / 2) + cfgBefore.target || 0;
                        var next = cfgNext && Math.floor((cfgNext.target - cfg.target) / 2) + cfg.target || 0;
                        var isBought = this.getIsBought(this._gameOrderType);
                        if (act_list) {
                            //免费奖励
                            var yaojiTarget = this.getStatusByTypeIndex(cfg.index);
                            //付费奖励
                            var yaojiTarget2 = this._yjjsProxy.model.ling_list2[cfg.index];
                            list.push({
                                cfg: cfg,
                                freeStatus: yaojiTarget ? yaojiTarget.state : 0 /* NotFinish */,
                                payStatus: yaojiTarget2 ? yaojiTarget2.state : 0 /* NotFinish */,
                                before: before,
                                next: next,
                                type: this._gameOrderType,
                                val: val,
                                isBought: isBought
                            });
                        }
                        else {
                            list.push({ cfg: cfg, before: before, next: next, type: this._gameOrderType, val: val, isBought: isBought });
                        }
                    }
                    return list;
                };
                YjjsMdr7.prototype.getIsBought = function (type) {
                    return this._yjjsProxy.model.is_ling_buy;
                };
                YjjsMdr7.prototype.clickBtnStatus2 = function () {
                    this._yjjsProxy.c2s_yaoji_receive_reward(6, null);
                };
                /**购买后累计可领取*/
                YjjsMdr7.prototype.getReward = function () {
                    return this._yjjsProxy.getReward() || [];
                };
                /**现在购买立即领取*/
                YjjsMdr7.prototype.getRewardCanGet = function () {
                    return this._yjjsProxy.getRewardCanGet() || [];
                };
                YjjsMdr7.prototype.onUpdateView = function () {
                    _super.prototype.onUpdateView.call(this);
                    var status = this.getBtnStatus(this._gameOrderType);
                    if (status == 3) {
                        this._view.btn.label = '解锁战令';
                    }
                    else {
                        this._view.btn.label = "一键领取";
                    }
                    var day = this._yjjsProxy.model.ling_day;
                    var str = "\u5F53\u524D\u7D2F\u8BA1\u767B\u5F55\uFF1A"
                        + game.TextUtil.addColor(day + "\u5929", 8585074 /* GREEN */);
                    this._view.lab_cur.textFlow = game.TextUtil.parseHtml(str);
                };
                YjjsMdr7.prototype.clickBtnStatus1 = function () {
                };
                /**获取可领取位置*/
                YjjsMdr7.prototype.getPosByType = function () {
                    var cfgObj = game.getConfigByNameId("game_order.json" /* GameOrder */, 3 /* Yaojiling */);
                    var keys = Object.keys(cfgObj) || [];
                    for (var i = 0; i < keys.length; i++) {
                        var cfg = cfgObj[keys[i]];
                        //免费奖励
                        var yaojiTarget = this.getStatusByTypeIndex(cfg.index);
                        //付费奖励
                        var yaojiTarget2 = this._yjjsProxy.model.ling_list2[cfg.index];
                        if ((yaojiTarget && yaojiTarget.state == 1) || (yaojiTarget2 && yaojiTarget2.state == 1)) {
                            return i;
                        }
                    }
                    return 0;
                };
                return YjjsMdr7;
            }(activity.GameOrderMdr));
            activity.YjjsMdr7 = YjjsMdr7;
            __reflect(YjjsMdr7.prototype, "game.mod.activity.YjjsMdr7");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YhcsModel = /** @class */ (function () {
                function YhcsModel() {
                    this.isEnough = false;
                }
                return YhcsModel;
            }());
            activity.YhcsModel = YhcsModel;
            __reflect(YhcsModel.prototype, "game.mod.activity.YhcsModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var c2s_yuhuochongsheng_get_rewards = msg.c2s_yuhuochongsheng_get_rewards;
            var s2c_yuhuochongsheng_info = msg.s2c_yuhuochongsheng_info;
            var YhcsProxy = /** @class */ (function (_super) {
                __extends(YhcsProxy, _super);
                function YhcsProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(YhcsProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                YhcsProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.YhcsModel();
                    this.onProto(s2c_yuhuochongsheng_info, this.s2c_yuhuochongsheng_info, this);
                };
                /**--------------------协议start-------------------- */
                YhcsProxy.prototype.c2s_yuhuochongsheng_get_rewards = function (index) {
                    var msg = new c2s_yuhuochongsheng_get_rewards();
                    msg.index = index;
                    this.sendProto(msg);
                };
                YhcsProxy.prototype.s2c_yuhuochongsheng_info = function (n) {
                    var msg = n.body;
                    if (msg.list) {
                        this._model.list = msg.list;
                    }
                    if (msg.open_day) {
                        this._model.open_day = msg.open_day;
                    }
                    this._model.num = msg.num || 0;
                    this.onUpdateHint();
                    this.sendNt("on_update_yhcs_info" /* ON_UPDATE_YHCS_INFO */);
                };
                /**--------------------协议end-------------------- */
                /**获取奖励列表 */
                YhcsProxy.prototype.getList = function () {
                    var cfgArr = game.getConfigListByName("yuhuo_reward.json" /* YuhuoReward */);
                    var self = this;
                    return cfgArr.sort(function (a, b) {
                        if (!self._model.list) {
                            return a.index - b.index;
                        }
                        var b1 = self._model.list.indexOf(a.index) > -1;
                        var b2 = self._model.list.indexOf(b.index) > -1;
                        if (b1 != b2) {
                            if (b1) {
                                return 1;
                            }
                            else {
                                return -1;
                            }
                        }
                        return a.index - b.index;
                    });
                };
                Object.defineProperty(YhcsProxy.prototype, "isEnough", {
                    /**是否充值达标 */
                    get: function () {
                        if (this._model.isEnough) {
                            return this._model.isEnough;
                        }
                        var cfg = game.getConfigByNameId("param.json" /* Param */, "yuhuochongsheng_leichong");
                        return this._model.isEnough = this._model.num >= cfg.value;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**是否已领取 */
                YhcsProxy.prototype.isReceived = function (index) {
                    return this._model.list && this._model.list.indexOf(index) > -1;
                };
                /**用于判断活动图标隐藏 */
                YhcsProxy.prototype.isActivityEnd = function () {
                    var cfgArr = game.getConfigListByName("yuhuo_reward.json" /* YuhuoReward */);
                    for (var _i = 0, cfgArr_16 = cfgArr; _i < cfgArr_16.length; _i++) {
                        var cfg = cfgArr_16[_i];
                        if (!this.isReceived(cfg.index)) {
                            return false;
                        }
                    }
                    return true;
                };
                YhcsProxy.prototype.onUpdateHint = function () {
                    if (!this.isEnough) {
                        mod.HintMgr.setHint(false, ["27" /* Activity */, "59" /* Yhcs */]);
                        return;
                    }
                    var cfgArr = game.getConfigListByName("yuhuo_reward.json" /* YuhuoReward */);
                    for (var _i = 0, cfgArr_17 = cfgArr; _i < cfgArr_17.length; _i++) {
                        var cfg = cfgArr_17[_i];
                        var bool = this._model.open_day >= cfg.open_day && !this.isReceived(cfg.index);
                        if (bool) {
                            mod.HintMgr.setHint(bool, ["27" /* Activity */, "59" /* Yhcs */]);
                            return;
                        }
                    }
                    mod.HintMgr.setHint(false, ["27" /* Activity */, "59" /* Yhcs */]);
                };
                YhcsProxy.prototype.isOpen = function () {
                    if (!this._model.list) {
                        return true;
                    }
                    var cfgArr = game.getConfigListByName("yuhuo_reward.json" /* YuhuoReward */);
                    for (var _i = 0, cfgArr_18 = cfgArr; _i < cfgArr_18.length; _i++) {
                        var cfg = cfgArr_18[_i];
                        if (this._model.list.indexOf(cfg.index) < 0) {
                            return true;
                        }
                    }
                    return false;
                };
                return YhcsProxy;
            }(game.ProxyBase));
            activity.YhcsProxy = YhcsProxy;
            __reflect(YhcsProxy.prototype, "game.mod.activity.YhcsProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var YhcsItem = /** @class */ (function (_super) {
                __extends(YhcsItem, _super);
                function YhcsItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                YhcsItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                YhcsItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this._listData.source = data.reward;
                    this.lb_desc.text = "\u7B2C" + game.StringUtil.ChineseNum[data.open_day] + "\u5929";
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(224 /* Yhcs */);
                    if (_proxy.isReceived(data.index)) {
                        this.btn_buy.visible = false;
                        this.img_bought.visible = true;
                        return;
                    }
                    this.btn_buy.visible = true;
                    this.img_bought.visible = false;
                    if (_proxy.isEnough) {
                        this.btn_buy.label = "领取";
                        this.btn_buy.setHint(_proxy.model.open_day >= data.open_day);
                    }
                    else {
                        this.btn_buy.label = "激活立领";
                        this.btn_buy.setHint(false);
                    }
                };
                YhcsItem.prototype.onClick = function () {
                    var _proxy = facade.retMod("27" /* Activity */).retProxy(224 /* Yhcs */);
                    if (!_proxy.isEnough) {
                        mod.ViewMgr.getIns().openCommonRechargeView();
                        return;
                    }
                    if (_proxy.model.open_day < this.data.open_day) {
                        game.PromptBox.getIns().show(game.getLanById("fight_soul_altar_tips1" /* fight_soul_altar_tips1 */));
                        return;
                    }
                    _proxy.c2s_yuhuochongsheng_get_rewards(this.data.index);
                };
                return YhcsItem;
            }(mod.BaseGiftItemRender));
            activity.YhcsItem = YhcsItem;
            __reflect(YhcsItem.prototype, "game.mod.activity.YhcsItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YhcsView = /** @class */ (function (_super) {
                __extends(YhcsView, _super);
                function YhcsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.YhcsSkin";
                    return _this;
                }
                return YhcsView;
            }(eui.Component));
            activity.YhcsView = YhcsView;
            __reflect(YhcsView.prototype, "game.mod.activity.YhcsView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var YhcsMainMdr = /** @class */ (function (_super) {
                __extends(YhcsMainMdr, _super);
                function YhcsMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "yuhuochongshengbiaoqiantubiao",
                            mdr: activity.YhcsMdr,
                            title: "yhcs_tips" /* yhcs_tips */,
                            hintTypes: ["27" /* Activity */, "59" /* Yhcs */]
                        }
                    ];
                    return _this;
                }
                return YhcsMainMdr;
            }(mod.WndBaseMdr));
            activity.YhcsMainMdr = YhcsMainMdr;
            __reflect(YhcsMainMdr.prototype, "game.mod.activity.YhcsMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var YhcsMdr = /** @class */ (function (_super) {
                __extends(YhcsMdr, _super);
                function YhcsMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.YhcsView);
                    _this._listData = new ArrayCollection();
                    return _this;
                }
                YhcsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(224 /* Yhcs */);
                    this._view.list.itemRenderer = activity.YhcsItem;
                    this._view.list.dataProvider = this._listData;
                };
                YhcsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_recharge, TouchEvent.TOUCH_TAP, this.onRecharge, this);
                    this.onNt("on_update_yhcs_info" /* ON_UPDATE_YHCS_INFO */, this.onUpdateView, this);
                };
                YhcsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                    this.addEftByParentScale(this._view.btn_recharge.group_eft);
                };
                YhcsMdr.prototype.onUpdateView = function () {
                    var list = this._proxy.getList();
                    this._listData.source = list;
                    //按钮图片美术字资源
                    this._view.btn_recharge.setImage("meishuzi_qianwangchongzhi");
                    var cfg = game.getConfigByNameId("param.json" /* Param */, "yuhuochongsheng_leichong");
                    var str = game.TextUtil.addColor(this._proxy.model.num + "/" + cfg.value, this._proxy.isEnough ? 1022764 /* GREEN */ : 13895688 /* RED */);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml("\u5DF2\u5145\u503C" + str + "\u5143");
                };
                YhcsMdr.prototype.onRecharge = function () {
                    mod.ViewMgr.getIns().openCommonRechargeView();
                };
                YhcsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return YhcsMdr;
            }(game.EffectMdrBase));
            activity.YhcsMdr = YhcsMdr;
            __reflect(YhcsMdr.prototype, "game.mod.activity.YhcsMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZeroBuyModel = /** @class */ (function () {
                function ZeroBuyModel() {
                    this.index = -1;
                }
                return ZeroBuyModel;
            }());
            activity.ZeroBuyModel = ZeroBuyModel;
            __reflect(ZeroBuyModel.prototype, "game.mod.activity.ZeroBuyModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_zero_buy_info = msg.s2c_zero_buy_info;
            var c2s_zero_buy_get = msg.c2s_zero_buy_get;
            var ZeroBuyProxy = /** @class */ (function (_super) {
                __extends(ZeroBuyProxy, _super);
                function ZeroBuyProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(ZeroBuyProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                ZeroBuyProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.ZeroBuyModel();
                    this.onProto(s2c_zero_buy_info, this.s2c_zero_buy_info, this);
                };
                /**--------------------协议start-------------------- */
                ZeroBuyProxy.prototype.s2c_zero_buy_info = function (n) {
                    var msg = n.body;
                    if (msg) {
                        this._model.infos = msg.infos || [];
                    }
                    this.onUpdateHint();
                    this.checkOpen();
                    this.sendNt("on_update_zero_buy_info" /* ON_UPDATE_ZERO_BUY_INFO */);
                };
                ZeroBuyProxy.prototype.c2s_zero_buy_get = function (index) {
                    var msg = new c2s_zero_buy_get();
                    msg.index = index;
                    this.sendProto(msg);
                };
                /**--------------------协议end-------------------- */
                /**列表 */
                ZeroBuyProxy.prototype.getList = function () {
                    this._model.index = -1;
                    var list = [];
                    var cfgArr = game.getConfigListByName("zero_buy.json" /* ZeroBuy */);
                    var vip = mod.VipUtil.getShowVipLv();
                    for (var _i = 0, cfgArr_19 = cfgArr; _i < cfgArr_19.length; _i++) {
                        var cfg = cfgArr_19[_i];
                        var status = this.getStatusByIndex(cfg.index);
                        if (status == 0) {
                            list.push(cfg);
                        }
                        if (!status && this._model.index == -1) {
                            this._model.index = list.length - 1;
                        }
                        var limit_vip = mod.VipUtil.getShowVipLv(cfg.vip_idx);
                        if (vip < limit_vip) {
                            break;
                        }
                    }
                    return list;
                };
                /**获取状态 1已购买 2已返回奖励 */
                ZeroBuyProxy.prototype.getStatusByIndex = function (index) {
                    if (!this._model.infos) {
                        return 0;
                    }
                    for (var _i = 0, _a = this._model.infos; _i < _a.length; _i++) {
                        var info = _a[_i];
                        if (+info.index == index) {
                            return info.status;
                        }
                    }
                    return 0;
                };
                ZeroBuyProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf(game.PropIndexToKey[1450000002 /* Xianyu */]) > -1) {
                        this.onUpdateHint();
                    }
                    if (keys.indexOf("vip_lv" /* vip_lv */) > -1) {
                        this.onUpdateHint();
                    }
                };
                /**更新红点 */
                ZeroBuyProxy.prototype.onUpdateHint = function () {
                    var list = this.getList();
                    var vip = mod.VipUtil.getShowVipLv();
                    for (var _i = 0, list_15 = list; _i < list_15.length; _i++) {
                        var cfg = list_15[_i];
                        var enough = mod.BagUtil.checkPropCnt(cfg.cost[0], cfg.cost[1]);
                        var status = this.getStatusByIndex(cfg.index);
                        if (enough && !status && vip >= mod.VipUtil.getShowVipLv(cfg.vip_idx)) {
                            mod.HintMgr.setHint(true, ["27" /* Activity */, "48" /* ZeroBuy */]);
                            return;
                        }
                    }
                    mod.HintMgr.setHint(false, ["27" /* Activity */, "48" /* ZeroBuy */]);
                };
                Object.defineProperty(ZeroBuyProxy.prototype, "isOpen", {
                    get: function () {
                        var list = this.getList();
                        for (var _i = 0, list_16 = list; _i < list_16.length; _i++) {
                            var cfg = list_16[_i];
                            var status = this.getStatusByIndex(cfg.index);
                            if (status != 2) {
                                return true;
                            }
                        }
                        return false;
                    },
                    enumerable: true,
                    configurable: true
                });
                ZeroBuyProxy.prototype.checkOpen = function () {
                    mod.BtnIconMgr.insLeft().updateOpen(1041670145 /* ZeroBuy */, this.isOpen);
                };
                return ZeroBuyProxy;
            }(game.ProxyBase));
            activity.ZeroBuyProxy = ZeroBuyProxy;
            __reflect(ZeroBuyProxy.prototype, "game.mod.activity.ZeroBuyProxy", ["game.mod.IZeroBuyProxy", "base.IProxy"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZeroBuyMainView = /** @class */ (function (_super) {
                __extends(ZeroBuyMainView, _super);
                function ZeroBuyMainView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZeroBuyMainSkin";
                    return _this;
                }
                return ZeroBuyMainView;
            }(eui.Component));
            activity.ZeroBuyMainView = ZeroBuyMainView;
            __reflect(ZeroBuyMainView.prototype, "game.mod.activity.ZeroBuyMainView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var ZeroBuyRender = /** @class */ (function (_super) {
                __extends(ZeroBuyRender, _super);
                function ZeroBuyRender() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._listData = new ArrayCollection();
                    return _this;
                }
                ZeroBuyRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(210 /* ZeroBuy */);
                    this.img_bg.source = game.ResUtil.getUiPng("di_0yuangou");
                    this.touchEnabled = false;
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData;
                    this.btn.img_bg.source = "huangseanniu";
                    this.btn.addEventListener(TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.img_close.touchEnabled = true;
                    this.img_close.addEventListener(TouchEvent.TOUCH_TAP, this.onClickClose, this);
                };
                ZeroBuyRender.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this.btn.removeEventListener(TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.img_close.removeEventListener(TouchEvent.TOUCH_TAP, this.onClickClose, this);
                };
                ZeroBuyRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lab_limit.text = mod.VipUtil.getVipStr(data.vip_idx) + "\u53EF\u8D2D\u4E70";
                    this._listData.source = data.reward;
                    if (this._effId) {
                        this.removeEffect(this._effId);
                        this._effId = null;
                    }
                    this._effId = this.addAnimate(data.surface[0], this.grp_eff);
                    var xianyuStr = data.cost[1];
                    this.addBmpFont(xianyuStr + "", game.BmpTextCfg[227 /* LingYuanGou */], this.gr_font);
                    var cfg = game.getConfigById(data.surface[0]);
                    this.name_item.updateShow(cfg.name, cfg.quality);
                    this.special_attr.updateDesc(cfg, 203);
                    // this.special_attr.updateDesc(cfg);
                    // let isBought: boolean = this._proxy.getStatusByIndex(data.index) == 1;
                    // if (isBought) {
                    //     this.btn.visible = false;
                    //     this.img_got.visible = true;
                    //     return;
                    // }
                    // this.btn.visible = true;
                    // this.img_got.visible = false;
                    var bool = this._proxy.getStatusByIndex(data.index) > 0;
                    this.img_got.visible = bool;
                    this.btn.visible = !bool;
                    var limit = mod.VipUtil.getShowVipLv(data.vip_idx);
                    var vip = mod.VipUtil.getShowVipLv();
                    if (vip < limit) {
                        this.btn.label = "前往充值";
                        this.btn.resetCost();
                    }
                    else {
                        this.btn.label = "";
                        this.btn.setCost(data.cost);
                    }
                    this.btn.setHint(mod.BagUtil.checkPropCnt(data.cost[0], data.cost[1]) && vip >= limit);
                };
                ZeroBuyRender.prototype.onClickClose = function () {
                    // ViewMgr.getIns().back();
                    facade.sendNt("on_common_back" /* ON_COMMON_BACK */);
                };
                ZeroBuyRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var limit = mod.VipUtil.getShowVipLv(data.vip_idx);
                    var vip = mod.VipUtil.getShowVipLv();
                    if (vip < limit) {
                        mod.ViewMgr.getIns().openCommonRechargeView();
                        return;
                    }
                    if (data && data.cost) {
                        if (!mod.BagUtil.checkPropCnt(data.cost[0], data.cost[1], 2 /* Text */)) {
                            return;
                        }
                    }
                    this._proxy.c2s_zero_buy_get(data.index);
                };
                return ZeroBuyRender;
            }(mod.BaseRenderer));
            activity.ZeroBuyRender = ZeroBuyRender;
            __reflect(ZeroBuyRender.prototype, "game.mod.activity.ZeroBuyRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var Tween = base.Tween;
            var Handler = base.Handler;
            var Event = egret.Event;
            var ZeroBuyMainMdr = /** @class */ (function (_super) {
                __extends(ZeroBuyMainMdr, _super);
                function ZeroBuyMainMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.ZeroBuyMainView);
                    _this._listData = new ArrayCollection();
                    _this._width = 720;
                    _this._showIdx = 0;
                    _this._delay = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                ZeroBuyMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(210 /* ZeroBuy */);
                    this._view.list.itemRenderer = activity.ZeroBuyRender;
                    this._view.list.dataProvider = this._listData;
                    this._view.scr.bounces = false;
                    this._view.scr.throwSpeed = 0;
                };
                ZeroBuyMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.img_next, TouchEvent.TOUCH_TAP, this.onClickNext, this);
                    addEventListener(this._view.img_before, TouchEvent.TOUCH_TAP, this.onClickBefore, this);
                    addEventListener(this._view.scr, Event.CHANGE, this.onChange, this);
                    this.onNt("on_update_zero_buy_info" /* ON_UPDATE_ZERO_BUY_INFO */, this.onUpdateItem, this);
                    this.onNt("on_common_back" /* ON_COMMON_BACK */, this.hide, this);
                };
                ZeroBuyMainMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                ZeroBuyMainMdr.prototype.onUpdateView = function () {
                    var list = this._proxy.getList();
                    this._listData.source = list;
                    // this._showIdx = 0;
                    // this._view.scr.viewport.scrollH = 0;
                    // callLater(this.onUpdateIndex, this, [this._proxy.model.index]);
                    // Tween.get(this).delay(200).exec(Handler.alloc(this, this.onUpdateIndex, [this._proxy.model.index]));
                    var index = this._proxy.model.index;
                    index = index < 0 ? 0 : index;
                    this.onUpdateIndex(index);
                    this.onUpdateBtn();
                };
                ZeroBuyMainMdr.prototype.onUpdateIndex = function (index) {
                    // this._showIdx = index;
                    // this._view.scr.viewport.scrollH = this._showIdx * this._width;
                    //
                    // this.onUpdateBtn();
                    this._showIdx = index;
                    this.onTween();
                };
                ZeroBuyMainMdr.prototype.onUpdateItem = function () {
                    this._listData.itemUpdated(this._listData.source[this._showIdx]);
                };
                ZeroBuyMainMdr.prototype.onChange = function () {
                    // ThrottleUtil.throttle(this.onUpdateChange, this);
                    if (this._delay) {
                        base.clearDelay(this._delay);
                        this._delay = 0;
                    }
                    this._delay = base.delayCall(Handler.alloc(this, this.onUpdateChange), 100);
                };
                ZeroBuyMainMdr.prototype.onUpdateChange = function () {
                    var num = this._view.scr.viewport.scrollH / this._width;
                    if (num > this._showIdx) {
                        this._showIdx = Math.ceil(num);
                    }
                    else {
                        this._showIdx = Math.floor(num);
                    }
                    this.onTween();
                };
                ZeroBuyMainMdr.prototype.onUpdateBtn = function () {
                    this._view.img_before.visible = false;
                    this._view.img_next.visible = false;
                    if (this._showIdx < this._listData.length - 1) {
                        this._view.img_next.visible = true;
                    }
                    if (this._showIdx > 0) {
                        this._view.img_before.visible = true;
                    }
                };
                ZeroBuyMainMdr.prototype.onClickNext = function () {
                    if (this._showIdx >= this._listData.length - 1) {
                        return;
                    }
                    this._showIdx++;
                    this.onTween();
                };
                ZeroBuyMainMdr.prototype.onClickBefore = function () {
                    if (!this._showIdx) {
                        return;
                    }
                    this._showIdx--;
                    this.onTween();
                };
                /**滑动容器缓动 */
                ZeroBuyMainMdr.prototype.onTween = function () {
                    // let w: number = this._view.scr.viewport.scrollH;
                    var scrollH = this._showIdx * this._width;
                    // let duration: number = Math.abs(w - scrollH) / this._width * 200;
                    Tween.get(this._view.scr.viewport)
                        .to({ scrollH: scrollH }, 300)
                        .exec(Handler.alloc(this, this.onUpdateBtn));
                };
                ZeroBuyMainMdr.prototype.onHide = function () {
                    if (this._delay) {
                        base.clearDelay(this._delay);
                        this._delay = 0;
                    }
                    Tween.remove(this);
                    this._view.scr.viewport.scrollH = 0;
                    this._showIdx = 0;
                    _super.prototype.onHide.call(this);
                };
                return ZeroBuyMainMdr;
            }(game.MdrBase));
            activity.ZeroBuyMainMdr = ZeroBuyMainMdr;
            __reflect(ZeroBuyMainMdr.prototype, "game.mod.activity.ZeroBuyMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxMainMdr = /** @class */ (function (_super) {
                __extends(ZcxMainMdr, _super);
                function ZcxMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //充值前界面
                    _this._firstBtnData = [
                        {
                            btnType: "00" /* NoPay */,
                            icon: "zhaocaixianbiaoqiantubiao",
                            mdr: activity.ZcxFirstMdr,
                            title: "zcx_tips6" /* zcx_tips6 */,
                            bg: "zcx_first"
                        }
                    ];
                    //充值后界面
                    _this._openBtnData = [
                        {
                            btnType: "01" /* LuckNum */,
                            icon: "xingyunshuzibiaoqiantubiao",
                            mdr: activity.ZcxMdr1,
                            title: "zcx_tips7" /* zcx_tips7 */,
                            bg: "zcx_bg1",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "01" /* LuckNum */]
                        },
                        {
                            btnType: "02" /* Bank */,
                            icon: "jinbaoqianzhuangbiaoqiantubiao",
                            mdr: activity.ZcxMdr2,
                            title: "zcx_tips8" /* zcx_tips8 */,
                            bg: "zcx_bg2",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "02" /* Bank */]
                        },
                        {
                            btnType: "03" /* Fuben */,
                            icon: "caishenfubenbiaoqiantubiao",
                            mdr: activity.ZcxMdr3,
                            title: "zcx_tips9" /* zcx_tips9 */,
                            bg: "zcx_bg3",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "03" /* Fuben */]
                        },
                        {
                            btnType: "04" /* Exchange */,
                            icon: "caishenduihuanbiaoqiantubiao",
                            mdr: activity.ZcxMdr4,
                            title: "zcx_tips10" /* zcx_tips10 */,
                            bg: "zcx_bg4",
                            openIdx: 0,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "04" /* Exchange */]
                        }
                    ];
                    //二期内容，战令+基金
                    _this._openBtnData2 = [
                        {
                            btnType: "05" /* Chaojilicai */,
                            icon: "chaojilicaibiaoqiantubiao",
                            mdr: activity.ZcxMdr5,
                            bg: "",
                            openIdx: 1041670257 /* Chaojilicai */,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "05" /* Chaojilicai */],
                            param: 7 /* Chaojilicai */
                        },
                        {
                            btnType: "06" /* Zhizunlicai */,
                            icon: "zhizunlicaibiaoqiantubiao",
                            mdr: activity.ZcxMdr6,
                            bg: "",
                            openIdx: 1041670258 /* Zhizunlicai */,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "06" /* Zhizunlicai */],
                            param: 8 /* Zhizunlicai */
                        },
                        {
                            btnType: "07" /* Fulijijin */,
                            icon: "fulijijinbiaoqiantubiao",
                            mdr: activity.ZcxMdr7,
                            title: "zcx_tips11" /* zcx_tips11 */,
                            bg: "zcx_fund_bg",
                            openIdx: 1041670259 /* Fulijijin */,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "07" /* Fulijijin */]
                        },
                        {
                            btnType: "08" /* Chaojijijin */,
                            icon: "chaojijijinbiaoqiantubiao",
                            mdr: activity.ZcxMdr8,
                            title: "zcx_tips12" /* zcx_tips12 */,
                            bg: "zcx_fund_bg",
                            openIdx: 1041670260 /* Chaojijijin */,
                            hintTypes: ["27" /* Activity */, "42" /* ZcxMain */, "08" /* Chaojijijin */]
                        }
                    ];
                    return _this;
                }
                ZcxMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._gameOrderProxy = this.retProxy(207 /* GameOrder */);
                };
                ZcxMainMdr.prototype.updateBtnList = function () {
                    this.setBtnData();
                    _super.prototype.updateBtnList.call(this);
                };
                ZcxMainMdr.prototype.setBtnData = function () {
                    if (this._proxy.isOpen()) {
                        var list = this._openBtnData.concat();
                        for (var _i = 0, _a = this._openBtnData2; _i < _a.length; _i++) {
                            var btnData = _a[_i];
                            if (btnData && btnData.param) {
                                var cfg = game.getConfigByNameId("game_order_type.json" /* GameOrderType */, btnData.param);
                                btnData.title = cfg.name;
                                // if (this._gameOrderProxy.getInfoByType(btnData.param)) {
                                list.push(btnData);
                                // }
                            }
                            else {
                                list.push(btnData);
                            }
                        }
                        this._btnData = list;
                    }
                    else {
                        this._btnData = this._firstBtnData;
                    }
                };
                return ZcxMainMdr;
            }(mod.WndBaseMdr));
            activity.ZcxMainMdr = ZcxMainMdr;
            __reflect(ZcxMainMdr.prototype, "game.mod.activity.ZcxMainMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxModel = /** @class */ (function () {
                function ZcxModel() {
                    var _a;
                    /** 幸运数字 */
                    this.luck_num = 0;
                    /** 0不可领取   1可领取   2已领取 */
                    this.status = 0;
                    /** 第x等奖   0表示未开奖 */
                    this.rank_num = 0;
                    /** 字段value为幸运数字 */
                    this.list = [];
                    /** 存储的货币数 */
                    this.value = Long.fromNumber(0);
                    /** 收益重新开始的时间戳 */
                    this.save_time = 0;
                    /** 收益道具 */
                    this.item_list = [];
                    /** 兑换列表 */
                    this.exchange_list = {};
                    /** 副本--获得奖励记录 */
                    this.records = [];
                    /** 副本--剩余可挑战次数 */
                    this.count = 0;
                    /**============基金============*/
                    this.fundMap = {};
                    this.fundBoxShowMap = {};
                    this.fundRewardShowMap = {};
                    this.fundCfgMap = {};
                    this.hintPath = (_a = {},
                        _a["01" /* LuckNum */] = ["27" /* Activity */, "42" /* ZcxMain */, "01" /* LuckNum */],
                        _a["02" /* Bank */] = ["27" /* Activity */, "42" /* ZcxMain */, "02" /* Bank */],
                        _a["03" /* Fuben */] = ["27" /* Activity */, "42" /* ZcxMain */, "03" /* Fuben */],
                        _a["04" /* Exchange */] = ["27" /* Activity */, "42" /* ZcxMain */, "04" /* Exchange */],
                        _a["05" /* Chaojilicai */] = ["27" /* Activity */, "42" /* ZcxMain */, "05" /* Chaojilicai */],
                        _a["06" /* Zhizunlicai */] = ["27" /* Activity */, "42" /* ZcxMain */, "06" /* Zhizunlicai */],
                        _a["07" /* Fulijijin */] = ["27" /* Activity */, "42" /* ZcxMain */, "07" /* Fulijijin */],
                        _a["08" /* Chaojijijin */] = ["27" /* Activity */, "42" /* ZcxMain */, "08" /* Chaojijijin */],
                        _a);
                }
                return ZcxModel;
            }());
            activity.ZcxModel = ZcxModel;
            __reflect(ZcxModel.prototype, "game.mod.activity.ZcxModel");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var s2c_zcx_luck_number = msg.s2c_zcx_luck_number;
            var c2s_get_zcx_luck_number = msg.c2s_get_zcx_luck_number;
            var s2c_zcx_coins_bank_info = msg.s2c_zcx_coins_bank_info;
            var c2s_zcx_coins_bank_button = msg.c2s_zcx_coins_bank_button;
            var c2s_zcx_exchange_button = msg.c2s_zcx_exchange_button;
            var s2c_zcx_exchange_info = msg.s2c_zcx_exchange_info;
            var c2s_zcx_coins_bank_get_rewards = msg.c2s_zcx_coins_bank_get_rewards;
            var c2s_zcx_raid_challenge = msg.c2s_zcx_raid_challenge;
            var s2c_zcx_raid_info = msg.s2c_zcx_raid_info;
            var s2c_zcx_fund_update = msg.s2c_zcx_fund_update;
            var c2s_zcx_fund_box_reward = msg.c2s_zcx_fund_box_reward;
            var c2s_zcx_fund_day_reward = msg.c2s_zcx_fund_day_reward;
            var c2s_zcx_fund_box_show = msg.c2s_zcx_fund_box_show;
            var s2c_zcx_fund_box_show = msg.s2c_zcx_fund_box_show;
            var c2s_zcx_fund_reward_show = msg.c2s_zcx_fund_reward_show;
            var s2c_zcx_fund_reward_show = msg.s2c_zcx_fund_reward_show;
            /**
             * @description 招财仙系统
             */
            var ZcxProxy = /** @class */ (function (_super) {
                __extends(ZcxProxy, _super);
                function ZcxProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._maxBankVal = 0;
                    _this._recordTipsAry = [];
                    _this._rewardMap = {};
                    _this._exchangeCostIds = [];
                    return _this;
                    /**============================ 基金end ============================*/
                }
                Object.defineProperty(ZcxProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                ZcxProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new activity.ZcxModel();
                    this.onProto(s2c_zcx_luck_number, this.s2c_zcx_luck_number, this);
                    this.onProto(s2c_zcx_coins_bank_info, this.s2c_zcx_coins_bank_info, this);
                    this.onProto(s2c_zcx_exchange_info, this.s2c_zcx_exchange_info, this);
                    this.onProto(s2c_zcx_raid_info, this.s2c_zcx_raid_info, this);
                    this.onProto(s2c_zcx_fund_update, this.s2c_zcx_fund_update, this);
                    this.onProto(s2c_zcx_fund_box_show, this.s2c_zcx_fund_box_show, this);
                    this.onProto(s2c_zcx_fund_reward_show, this.s2c_zcx_fund_reward_show, this);
                };
                /** 幸运数字 */
                ZcxProxy.prototype.s2c_zcx_luck_number = function (n) {
                    var msg = n.body;
                    if (msg.luck_num != null) {
                        this._model.luck_num = msg.luck_num;
                    }
                    if (msg.status != null) {
                        this._model.status = msg.status;
                    }
                    if (msg.rank_num != null) {
                        this._model.rank_num = msg.rank_num;
                    }
                    if (msg.list != null) {
                        this._model.list = msg.list;
                    }
                    this.updateLuckNumHint();
                    this.sendNt("on_zcx_luck_num_update" /* ON_ZCX_LUCK_NUM_UPDATE */);
                };
                /** 1获得幸运数字  2领奖   3请求获奖名单 */
                ZcxProxy.prototype.c2s_get_zcx_luck_number = function (type) {
                    var msg = new c2s_get_zcx_luck_number();
                    msg.button_type = type;
                    this.sendProto(msg);
                };
                /** 进宝钱庄 */
                ZcxProxy.prototype.s2c_zcx_coins_bank_info = function (n) {
                    var msg = n.body;
                    if (msg.value != null) {
                        this._model.value = msg.value;
                    }
                    if (msg.save_time != null) {
                        this._model.save_time = msg.save_time.toNumber();
                    }
                    this._model.item_list = msg.item_list != null ? msg.item_list : [];
                    this.updateBankHint();
                    this.sendNt("on_zcx_coins_bank_update" /* ON_ZCX_COINS_BANK_UPDATE */);
                };
                /** 1为存   2为取 */
                ZcxProxy.prototype.c2s_zcx_coins_bank_button = function (type) {
                    var msg = new c2s_zcx_coins_bank_button();
                    msg.button_type = type;
                    this.sendProto(msg);
                };
                /**进宝钱庄 领取收益*/
                ZcxProxy.prototype.c2s_zcx_coins_bank_get_rewards = function () {
                    var msg = new c2s_zcx_coins_bank_get_rewards();
                    this.sendProto(msg);
                };
                /** 兑换 */
                ZcxProxy.prototype.c2s_zcx_exchange_button = function (index, num) {
                    var msg = new c2s_zcx_exchange_button();
                    msg.index = index;
                    msg.num = num;
                    this.sendProto(msg);
                };
                /**财神兑换*/
                ZcxProxy.prototype.s2c_zcx_exchange_info = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.exchange_list[item.index] = item;
                        }
                    }
                    else {
                        this._model.exchange_list = {};
                    }
                    this.updateExchangeHint();
                    this.sendNt("on_zcx_exchange_update" /* ON_ZCX_EXCHANGE_UPDATE */);
                };
                /**请求挑战财神副本*/
                ZcxProxy.prototype.c2s_zcx_raid_challenge = function () {
                    this.sendProto(new c2s_zcx_raid_challenge());
                };
                ZcxProxy.prototype.s2c_zcx_raid_info = function (n) {
                    var msg = n.body;
                    if (msg.records != null) {
                        this._model.records = msg.records;
                    }
                    if (msg.count != null) {
                        this._model.count = msg.count;
                    }
                    this.updateFubenHint();
                    this.sendNt("on_zcx_raid_info_update" /* ON_ZCX_RAID_INFO_UPDATE */);
                };
                /**================================ 协议end ================================*/
                //转换成6位字符串
                ZcxProxy.prototype.getSixLuckNum = function (num) {
                    var numStr = num + '';
                    if (numStr.length < 6) {
                        numStr = ("000000" + numStr).substr(numStr.length);
                    }
                    return numStr;
                };
                //判断是否充值，充值前后界面不一样
                ZcxProxy.prototype.isOpen = function () {
                    return mod.PayUtil.checkFirstCharge();
                };
                //存款上限
                ZcxProxy.prototype.getMaxBankVal = function () {
                    if (this._maxBankVal) {
                        return this._maxBankVal;
                    }
                    var list = game.getConfigListByName("zcx_coins_bank.json" /* ZcxCoinsBank */);
                    var maxCfg = list[list.length - 1];
                    this._maxBankVal = maxCfg.base_value;
                    return maxCfg.base_value;
                };
                //是否达到最大的存款上限
                ZcxProxy.prototype.isMaxBankSave = function () {
                    return this._model.value.toNumber() >= this.getMaxBankVal();
                };
                //能否领取钱庄收益
                ZcxProxy.prototype.canGetBankInterest = function () {
                    var item_list = this._model.item_list;
                    if (!item_list || !item_list.length) {
                        return false;
                    }
                    for (var _i = 0, item_list_1 = item_list; _i < item_list_1.length; _i++) {
                        var item = item_list_1[_i];
                        if (item.cnt > 0) {
                            return true;
                        }
                    }
                    return false;
                };
                //钱庄倒计时
                ZcxProxy.prototype.getBankEndTime = function () {
                    var save_time = this._model.save_time || 0;
                    var cfg = game.GameConfig.getParamConfigById('zcx_reward_time');
                    return save_time + cfg.value * 60 * 60;
                };
                //兑换信息
                ZcxProxy.prototype.getExchangeInfo = function (index) {
                    return this._model.exchange_list[index];
                };
                //获得兑换的剩余次数
                ZcxProxy.prototype.getExchangeLeftCnt = function (index) {
                    var info = this.getExchangeInfo(index);
                    if (info) {
                        return info.count;
                    }
                    var cfg = game.getConfigByNameId("zcx_exchange.json" /* ZcxExchange */, index);
                    return cfg.count;
                };
                ZcxProxy.prototype.canExchange = function (index) {
                    var cfg = game.getConfigByNameId("zcx_exchange.json" /* ZcxExchange */, index);
                    if (!cfg) {
                        return false;
                    }
                    var leftCnt = this.getExchangeLeftCnt(index);
                    if (leftCnt <= 0) {
                        return false;
                    }
                    var costs = cfg.costs || [];
                    for (var _i = 0, costs_1 = costs; _i < costs_1.length; _i++) {
                        var cost = costs_1[_i];
                        if (!mod.BagUtil.checkPropCnt(cost[0], cost[1])) {
                            return false;
                        }
                    }
                    return true;
                };
                //当前挑战的副本
                ZcxProxy.prototype.getCurFubenCfg = function () {
                    var cfgs = game.getConfigListByName("zcx_fuben.json" /* ZcxFuben */);
                    if (!cfgs || !cfgs.length) {
                        return null;
                    }
                    var rebirthLv = mod.RoleUtil.getRebirthLv();
                    for (var i = cfgs.length - 1; i >= 0; i--) {
                        var cfg = cfgs[i];
                        if (cfg && cfg.level_condition <= rebirthLv) {
                            return cfg;
                        }
                    }
                    DEBUG && console.error("\u62DB\u8D22\u4ED9\u6CA1\u6709\u53EF\u6311\u6218\u7684\u526F\u672C\u914D\u7F6E\uFF0C\u73A9\u5BB6\u8F6C\u751F\u7B49\u7EA7:" + rebirthLv);
                    return null;
                };
                //副本能否挑战
                ZcxProxy.prototype.canChallenge = function () {
                    var cfgs = game.getConfigListByName("zcx_fuben.json" /* ZcxFuben */);
                    if (!cfgs || !cfgs.length) {
                        return false;
                    }
                    var can = this.getCurFubenCfg() != null;
                    return can && this._model.count > 0;
                };
                //获取区间随机整数
                ZcxProxy.prototype.getRandomNum = function (start, end) {
                    var range = end + 1 - start;
                    return start + Math.floor(Math.random() * range);
                };
                //恭喜%s获得%s
                ZcxProxy.prototype.getRandomTipsStrKey = function () {
                    var random = Math.floor(this.getRandomNum(1, 3));
                    return game.getLanById("zcx_challenge_tips" + random);
                };
                ZcxProxy.prototype.getRandomName = function () {
                    var cfgs = game.getConfigListByName("role_name.json" /* RoleName */);
                    var random = this.getRandomNum(1, cfgs.length);
                    var cfg = game.getConfigByNameId("role_name.json" /* RoleName */, random);
                    if (cfg) {
                        var genderNum = this.getRandomNum(1, 2);
                        return cfg.name_f + cfg["name_" + genderNum];
                    }
                    return '';
                };
                ZcxProxy.prototype.getRandomRewardTips = function () {
                    var cfg = this.getCurFubenCfg();
                    var reward = cfg ? cfg.show_rewards[0] : [];
                    var propCfg = game.GameConfig.getPropConfigById(reward[0]);
                    if (!propCfg) {
                        return '';
                    }
                    return propCfg.name + '*' + reward[1];
                };
                //服务端下发的记录文本
                ZcxProxy.prototype.getRecordTipStr = function (index) {
                    var tipsStr = this.getRandomTipsStrKey();
                    var record = this._model.records[index];
                    if (record) {
                        var rst = [];
                        rst.push(game.TextUtil.addColor("[" + record.name + "]", 16748553 /* ORANGE */));
                        var str = '';
                        for (var i = 0; i < record.item_list.length; i++) {
                            var item = record.item_list[i];
                            var cfg = game.GameConfig.getPropConfigById(item.idx.toNumber());
                            str += game.TextUtil.addColor((cfg.name + '*' + item.cnt), 2330156 /* GREEN */);
                            if (i != record.item_list.length - 1) {
                                str += ',';
                            }
                        }
                        rst.push(str);
                        return game.StringUtil.substitute(tipsStr, rst);
                    }
                    return '';
                };
                //不足30条，随机的文本
                ZcxProxy.prototype.getRandomTipsStr = function (index) {
                    if (this._recordTipsAry[index]) {
                        return this._recordTipsAry[index];
                    }
                    var tipsStr = this.getRandomTipsStrKey();
                    var nameStr = game.TextUtil.addColor("[" + this.getRandomName() + "]", 16748553 /* ORANGE */);
                    var rewardStr = game.TextUtil.addColor(this.getRandomRewardTips(), 2330156 /* GREEN */);
                    var str = game.StringUtil.substitute(tipsStr, [nameStr, rewardStr]);
                    this._recordTipsAry[index] = str;
                    return str;
                };
                //副本记录文本
                ZcxProxy.prototype.getRecordTips = function (index) {
                    if (index < this._model.records.length) {
                        return this.getRecordTipStr(index);
                    }
                    return this.getRandomTipsStr(index);
                };
                //存款利息
                ZcxProxy.prototype.getBankReward = function (coin) {
                    if (this._rewardMap[coin]) {
                        return this._rewardMap[coin];
                    }
                    var cfgList = game.getConfigListByName("zcx_coins_bank.json" /* ZcxCoinsBank */);
                    for (var i = 0; i < cfgList.length; i++) {
                        var cfg = cfgList[i];
                        this._rewardMap[cfg.base_value] = [cfg.rewards, cfg.rewards2];
                    }
                    if (this._rewardMap[coin]) {
                        return this._rewardMap[coin];
                    }
                    var rewards = [];
                    var firstCfg = cfgList[0];
                    if (firstCfg) {
                        rewards.push([firstCfg.rewards[0], 1]);
                        rewards.push([firstCfg.rewards2[0], 1]);
                    }
                    this._rewardMap[coin] = rewards;
                    return rewards;
                };
                /**================================= hint =================================*/
                //能否获取幸运数字，首充了且未获得幸运数字
                ZcxProxy.prototype.canGetLuckNum = function () {
                    if (!this.isOpen()) {
                        return false;
                    }
                    return !this._model.luck_num;
                };
                /**兑换消耗id*/
                ZcxProxy.prototype.getExchangeCostIds = function () {
                    var cfgs = game.getConfigListByName("zcx_exchange.json" /* ZcxExchange */);
                    for (var _i = 0, cfgs_8 = cfgs; _i < cfgs_8.length; _i++) {
                        var cfg = cfgs_8[_i];
                        if (!cfg || !cfg.costs) {
                            continue;
                        }
                        for (var _a = 0, _b = cfg.costs; _a < _b.length; _a++) {
                            var cost = _b[_a];
                            if (cost && this._exchangeCostIds.indexOf(cost[0]) < 0) {
                                this._exchangeCostIds.push(cost[0]);
                            }
                        }
                    }
                    return this._exchangeCostIds;
                };
                ZcxProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (!indexs || !indexs.length) {
                        return;
                    }
                    var costIds = this.getExchangeCostIds();
                    for (var _i = 0, indexs_1 = indexs; _i < indexs_1.length; _i++) {
                        var idx = indexs_1[_i];
                        if (costIds.indexOf(idx) > -1) {
                            this.sendNt("on_zcx_exchange_update" /* ON_ZCX_EXCHANGE_UPDATE */);
                            this.updateExchangeHint();
                            break;
                        }
                    }
                };
                //幸运数字红点
                ZcxProxy.prototype.updateLuckNumHint = function () {
                    if (!this.isOpen()) {
                        return;
                    }
                    var hint = this._model.status == 1 || this.canGetLuckNum();
                    mod.HintMgr.setHint(hint, this._model.hintPath["01" /* LuckNum */]);
                };
                //进宝钱庄红点
                ZcxProxy.prototype.updateBankHint = function () {
                    if (!this.isOpen()) {
                        return;
                    }
                    mod.HintMgr.setHint(this.canGetBankInterest(), this._model.hintPath["02" /* Bank */]);
                };
                //财神副本红点
                ZcxProxy.prototype.updateFubenHint = function () {
                    if (!this.isOpen()) {
                        return;
                    }
                    mod.HintMgr.setHint(this.canChallenge(), this._model.hintPath["03" /* Fuben */]);
                };
                //兑换红点
                ZcxProxy.prototype.updateExchangeHint = function () {
                    if (!this.isOpen()) {
                        return;
                    }
                    var cfgs = game.getConfigListByName("zcx_exchange.json" /* ZcxExchange */);
                    var hint = false;
                    for (var _i = 0, cfgs_9 = cfgs; _i < cfgs_9.length; _i++) {
                        var cfg = cfgs_9[_i];
                        if (this.canExchange(cfg.index)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath["04" /* Exchange */]);
                };
                /**============================ 基金start ============================*/
                //招财仙基金: 领取宝箱奖励
                ZcxProxy.prototype.c2s_zcx_fund_box_reward = function (type) {
                    var msg = new c2s_zcx_fund_box_reward();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //招财仙基金: 领取天数奖励
                ZcxProxy.prototype.c2s_zcx_fund_day_reward = function (type) {
                    var msg = new c2s_zcx_fund_day_reward();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //招财仙基金: 打开宝箱界面
                ZcxProxy.prototype.c2s_zcx_fund_box_show = function (type) {
                    var msg = new c2s_zcx_fund_box_show();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //招财仙基金: 数据下发
                ZcxProxy.prototype.s2c_zcx_fund_update = function (n) {
                    var msg = n.body;
                    if (msg.type != null) {
                        this._model.fundMap[msg.type] = msg;
                    }
                    this.updateFundHint();
                    this.sendNt("on_zcx_fund_update" /* ON_ZCX_FUND_UPDATE */);
                };
                //招财仙基金: 打开宝箱界面 返回
                ZcxProxy.prototype.s2c_zcx_fund_box_show = function (n) {
                    var msg = n.body;
                    if (msg.type != null) {
                        this._model.fundBoxShowMap[msg.type] = msg.count || 0;
                    }
                    this.sendNt("on_zcx_fund_box_show" /* ON_ZCX_FUND_BOX_SHOW */);
                };
                //招财仙基金： 请求奖励界面
                ZcxProxy.prototype.c2s_zcx_fund_reward_show = function (type) {
                    var msg = new c2s_zcx_fund_reward_show();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //招财仙基金： 请求奖励界面 返回
                ZcxProxy.prototype.s2c_zcx_fund_reward_show = function (n) {
                    var msg = n.body;
                    if (msg.type != null) {
                        this.model.fundRewardShowMap[msg.type] = msg.index;
                    }
                    this.sendNt("on_zcx_fund_reward_show" /* ON_ZCX_FUND_REWARD_SHOW */);
                };
                //获取购买人数（真实购买+虚假购买）
                ZcxProxy.prototype.getBoughtNum = function (type) {
                    var info = this._model.fundBoxShowMap[type];
                    return info || 0;
                };
                //宝箱状态 1.可领取2.已领取
                ZcxProxy.prototype.getBoxStatus = function (type) {
                    var info = this._model.fundMap[type];
                    return info && info.box_status ? info.box_status : 0 /* NotFinish */;
                };
                // //是否已领取宝箱奖励
                // public isReceiveBoxReward(type: ZcxFundType): boolean {
                //     let status = this.getBoxStatus(type);
                //     return status == RewardStatus.Draw;
                // }
                //
                // //可否领取宝箱奖励
                // public canReceiveBoxReward(type: ZcxFundType): boolean {
                //     let status = this.getBoxStatus(type);
                //     return status == RewardStatus.Finish;
                // }
                //是否购买了
                ZcxProxy.prototype.isBought = function (type) {
                    var info = this._model.fundMap[type];
                    return info && info.is_buy && info.is_buy == true;
                };
                //今天是否已领取
                ZcxProxy.prototype.isReceiveToday = function (type) {
                    if (!this.isBought(type)) {
                        return false;
                    }
                    var info = this._model.fundMap[type];
                    if (!info) {
                        return false;
                    }
                    return info.index == 0; //领取后服务端重置为0
                };
                //是否已领取所有
                ZcxProxy.prototype.isReceiveAll = function (type) {
                    if (!this.isBought(type)) {
                        return false;
                    }
                    var info = this._model.fundMap[type];
                    if (!info) {
                        return false;
                    }
                    var receivedSize = info.get_index || 0;
                    var cfgList = this.getFundCfgList(type);
                    var totalSize = cfgList.length;
                    return receivedSize >= totalSize;
                };
                //领取状态
                ZcxProxy.prototype.getReceiveStatus = function (type, day) {
                    var info = this._model.fundMap[type];
                    if (!info) {
                        return 0 /* NotFinish */;
                    }
                    var receivedDay = info.get_index || 0;
                    if (day <= receivedDay) {
                        return 2 /* Draw */; //已领取
                    }
                    var today = info.index || 0;
                    return day <= today ? 1 /* Finish */ : 0 /* NotFinish */;
                };
                //基金配置
                ZcxProxy.prototype.getFundCfgList = function (type) {
                    if (this._model.fundCfgMap && this._model.fundCfgMap[type]) {
                        return this._model.fundCfgMap[type];
                    }
                    var cfgObj = game.getConfigByNameId("zcx_fund.json" /* ZcxFund */, type);
                    var list = [];
                    for (var key in cfgObj) {
                        list.push(cfgObj[key]);
                    }
                    this._model.fundCfgMap[type] = list;
                    return list;
                };
                //基金宝箱奖励
                ZcxProxy.prototype.getFundBoxReward = function (type) {
                    var id = 'zhaocai_box_reward' + type;
                    var cfg = game.GameConfig.getParamConfigById(id);
                    return cfg ? cfg.value : [];
                };
                //基金重置时间，秒
                ZcxProxy.prototype.getFundResetTime = function (type) {
                    var id = 'zhaocai_reset_time' + type;
                    var cfg = game.GameConfig.getParamConfigById(id);
                    return cfg ? cfg.value : 0;
                };
                //基金购买人数目标
                ZcxProxy.prototype.getFundTargetNum = function (type) {
                    var id = 'zhaocai_box_target' + type;
                    var cfg = game.GameConfig.getParamConfigById(id);
                    return cfg ? cfg.value : 0;
                };
                //基金的商品id
                ZcxProxy.prototype.getFundProductId = function (type) {
                    var list = [201901 /* Id201901 */, 201902 /* Id201902 */];
                    return list[type - 1];
                };
                //所有奖励
                ZcxProxy.prototype.getAllRewards = function (type) {
                    var cfgList = this.getFundCfgList(type);
                    var obj = {};
                    for (var _i = 0, cfgList_22 = cfgList; _i < cfgList_22.length; _i++) {
                        var cfg = cfgList_22[_i];
                        if (cfg && cfg.reward) {
                            obj[cfg.reward[0]] = cfg.reward[1] + (obj[cfg.reward[0]] || 0);
                        }
                    }
                    var list = [];
                    for (var key in obj) {
                        list.push([+key, obj[key]]);
                    }
                    return list;
                };
                //当前购买可一次性获得的奖励
                ZcxProxy.prototype.getRewardsAfterPay = function (type) {
                    var cfgList = this.getFundCfgList(type);
                    var obj = {};
                    var showDay = this._model.fundRewardShowMap[type] || 0;
                    for (var _i = 0, cfgList_23 = cfgList; _i < cfgList_23.length; _i++) {
                        var cfg = cfgList_23[_i];
                        if (cfg.index <= showDay && cfg.reward) {
                            obj[cfg.reward[0]] = cfg.reward[1] + (obj[cfg.reward[0]] || 0);
                        }
                    }
                    var list = [];
                    for (var key in obj) {
                        list.push([+key, obj[key]]);
                    }
                    return list;
                };
                //战令红点
                ZcxProxy.prototype.onUpdateGivingList = function (n) {
                    var types = n.body;
                    if (types.indexOf(7 /* Chaojilicai */) > -1 || types.indexOf(8 /* Zhizunlicai */) > -1) {
                        this.updateGameorderHint();
                    }
                };
                //战令红点
                ZcxProxy.prototype.updateGameorderHint = function () {
                    var gameOrderProxy = game.getProxy("27" /* Activity */, 207 /* GameOrder */);
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670257 /* Chaojilicai */)) {
                        var hint1 = gameOrderProxy.getHintByType(7 /* Chaojilicai */);
                        mod.HintMgr.setHint(hint1, this._model.hintPath["05" /* Chaojilicai */]);
                    }
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670258 /* Zhizunlicai */)) {
                        var hint2 = gameOrderProxy.getHintByType(8 /* Zhizunlicai */);
                        mod.HintMgr.setHint(hint2, this._model.hintPath["06" /* Zhizunlicai */]);
                    }
                };
                //基金红点
                ZcxProxy.prototype.getFundHint = function (type) {
                    var info = this._model.fundMap[type];
                    if (!info || !info.index) {
                        return false;
                    }
                    return info.index != 0;
                };
                //基金红点
                ZcxProxy.prototype.updateFundHint = function () {
                    //福利基金
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670259 /* Fulijijin */)) {
                        var hint = this.getFundHint(1 /* Fuli */);
                        mod.HintMgr.setHint(hint, this.model.hintPath["07" /* Fulijijin */]);
                    }
                    //超级基金
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670260 /* Chaojijijin */)) {
                        var hint = this.getFundHint(2 /* Chaoji */);
                        mod.HintMgr.setHint(hint, this.model.hintPath["08" /* Chaojijijin */]);
                    }
                };
                return ZcxProxy;
            }(game.ProxyBase));
            activity.ZcxProxy = ZcxProxy;
            __reflect(ZcxProxy.prototype, "game.mod.activity.ZcxProxy");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxBuyTipsView = /** @class */ (function (_super) {
                __extends(ZcxBuyTipsView, _super);
                function ZcxBuyTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxBuyTipsSkin";
                    return _this;
                }
                return ZcxBuyTipsView;
            }(eui.Component));
            activity.ZcxBuyTipsView = ZcxBuyTipsView;
            __reflect(ZcxBuyTipsView.prototype, "game.mod.activity.ZcxBuyTipsView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxCoinItem = /** @class */ (function (_super) {
                __extends(ZcxCoinItem, _super);
                function ZcxCoinItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.common.CoinItemSkin";
                    return _this;
                }
                ZcxCoinItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                ZcxCoinItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZcxCoinItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = game.GameConfig.getPropConfigById(data[0]);
                    this.img_cost.source = cfg.icon;
                    var have_cnt = mod.BagUtil.getPropCntByIdx(data[0]);
                    this.lab_cost.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(data[1] + '', have_cnt >= data[1] ? 8585074 /* GREEN */ : 16731212 /* RED */));
                };
                return ZcxCoinItem;
            }(mod.BaseListenerRenderer));
            activity.ZcxCoinItem = ZcxCoinItem;
            __reflect(ZcxCoinItem.prototype, "game.mod.activity.ZcxCoinItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxFirstBubbleItem = /** @class */ (function (_super) {
                __extends(ZcxFirstBubbleItem, _super);
                function ZcxFirstBubbleItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxFirstBubbleItem";
                    return _this;
                }
                ZcxFirstBubbleItem.prototype.updateView = function (txt) {
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(txt);
                };
                return ZcxFirstBubbleItem;
            }(eui.Component));
            activity.ZcxFirstBubbleItem = ZcxFirstBubbleItem;
            __reflect(ZcxFirstBubbleItem.prototype, "game.mod.activity.ZcxFirstBubbleItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var Tween = base.Tween;
            var ZcxFirstItem = /** @class */ (function (_super) {
                __extends(ZcxFirstItem, _super);
                function ZcxFirstItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZCXFirstItemSkin";
                    return _this;
                }
                ZcxFirstItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                ZcxFirstItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZcxFirstItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_bg.source = "zcx_type" + data.index;
                    if (data.isSel) {
                        this.bubbleItem.updateView(game.getLanById("zcx_tips" + data.index));
                        this.bubbleItem.visible = true;
                        this.bubbleItem.scaleX = this.bubbleItem.scaleY = 0;
                        Tween.get(this.bubbleItem)
                            .to({ scaleX: 1, scaleY: 1 }, 400);
                    }
                    else {
                        this.bubbleItem.visible = false;
                    }
                };
                return ZcxFirstItem;
            }(mod.BaseListenerRenderer));
            activity.ZcxFirstItem = ZcxFirstItem;
            __reflect(ZcxFirstItem.prototype, "game.mod.activity.ZcxFirstItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxFirstView = /** @class */ (function (_super) {
                __extends(ZcxFirstView, _super);
                function ZcxFirstView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZCXFirstSkin";
                    return _this;
                }
                return ZcxFirstView;
            }(eui.Component));
            activity.ZcxFirstView = ZcxFirstView;
            __reflect(ZcxFirstView.prototype, "game.mod.activity.ZcxFirstView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxFundItem = /** @class */ (function (_super) {
                __extends(ZcxFundItem, _super);
                function ZcxFundItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxFundItemSkin";
                    return _this;
                }
                ZcxFundItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data.cfg;
                    this.icon.data = cfg.reward;
                    this.lb_desc.text = game.StringUtil.substitute(game.getLanById("fairy_day" /* fairy_day */), [cfg.index]);
                    this.img_got.visible = data.status == 2 /* Draw */;
                    this.img_gray.visible = data.status == 2 /* Draw */;
                    // this.lb_desc.visible = !this.img_got.visible;
                    this.redPoint.visible = data.status == 1 /* Finish */;
                };
                return ZcxFundItem;
            }(mod.BaseListenerRenderer));
            activity.ZcxFundItem = ZcxFundItem;
            __reflect(ZcxFundItem.prototype, "game.mod.activity.ZcxFundItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxFundView = /** @class */ (function (_super) {
                __extends(ZcxFundView, _super);
                function ZcxFundView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxFundSkin";
                    return _this;
                }
                return ZcxFundView;
            }(eui.Component));
            activity.ZcxFundView = ZcxFundView;
            __reflect(ZcxFundView.prototype, "game.mod.activity.ZcxFundView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxIconItem = /** @class */ (function (_super) {
                __extends(ZcxIconItem, _super);
                function ZcxIconItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ZcxIconItem.prototype.dataChanged = function () {
                    _super.prototype.dataChanged.call(this);
                    var data = this.data;
                    var isSatisfy = mod.BagUtil.checkPropCnt(data[0], data[1]);
                    if (isSatisfy) {
                        this.setImgGray('');
                    }
                    else {
                        this.setImgGray();
                    }
                    var cntStr = game.TextUtil.addColor(game.StringUtil.getHurtNumStr(data[1]) + '', isSatisfy ? 8585074 /* GREEN */ : 16731212 /* RED */);
                    this.updateCnt(cntStr);
                };
                return ZcxIconItem;
            }(mod.Icon));
            activity.ZcxIconItem = ZcxIconItem;
            __reflect(ZcxIconItem.prototype, "game.mod.activity.ZcxIconItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxItem1 = /** @class */ (function (_super) {
                __extends(ZcxItem1, _super);
                function ZcxItem1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxItemSkin1";
                    return _this;
                }
                ZcxItem1.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZcxItem1.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZcxItem1.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_rank.source = "dengjiang" + data.index;
                    this._listData.replaceAll(data.rewards.slice());
                };
                return ZcxItem1;
            }(mod.BaseListenerRenderer));
            activity.ZcxItem1 = ZcxItem1;
            __reflect(ZcxItem1.prototype, "game.mod.activity.ZcxItem1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxItem3 = /** @class */ (function (_super) {
                __extends(ZcxItem3, _super);
                function ZcxItem3() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxItemSkin3";
                    return _this;
                }
                ZcxItem3.prototype.updateView = function (str) {
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                };
                return ZcxItem3;
            }(eui.Component));
            activity.ZcxItem3 = ZcxItem3;
            __reflect(ZcxItem3.prototype, "game.mod.activity.ZcxItem3");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var ZcxItem4 = /** @class */ (function (_super) {
                __extends(ZcxItem4, _super);
                function ZcxItem4() {
                    var _this = _super.call(this) || this;
                    _this._leftCnt = 0; //剩余次数
                    _this.skinName = "skins.activity.ZcxItemSkin4";
                    return _this;
                }
                ZcxItem4.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 211 /* Zhaocaixian */);
                    this.list.itemRenderer = activity.ZcxIconItem;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_exchange, this.onClick, this);
                };
                ZcxItem4.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZcxItem4.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    this._listData.replaceAll(cfg.costs.slice());
                    this.icon_target.data = cfg.rewards[0];
                    var left_cnt = this._proxy.getExchangeLeftCnt(cfg.index);
                    this._leftCnt = left_cnt;
                    var str = game.TextUtil.addColor(left_cnt + "/" + cfg.count, left_cnt > 0 ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lb_cnt.textFlow = game.TextUtil.parseHtml("\u6BCF\u5468\uFF1A" + str);
                    this.btn_exchange.setHint(this._proxy.canExchange(cfg.index));
                };
                ZcxItem4.prototype.onClick = function () {
                    if (this._leftCnt < 1) {
                        game.PromptBox.getIns().show(game.getLanById("zcx_tips23" /* zcx_tips23 */));
                        return;
                    }
                    facade.showView("27" /* Activity */, "44" /* ZcxBuyTips */, this.data);
                };
                return ZcxItem4;
            }(mod.BaseListenerRenderer));
            activity.ZcxItem4 = ZcxItem4;
            __reflect(ZcxItem4.prototype, "game.mod.activity.ZcxItem4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxView1 = /** @class */ (function (_super) {
                __extends(ZcxView1, _super);
                function ZcxView1() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxSkin1";
                    return _this;
                }
                return ZcxView1;
            }(eui.Component));
            activity.ZcxView1 = ZcxView1;
            __reflect(ZcxView1.prototype, "game.mod.activity.ZcxView1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxView2 = /** @class */ (function (_super) {
                __extends(ZcxView2, _super);
                function ZcxView2() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxSkin2";
                    return _this;
                }
                return ZcxView2;
            }(eui.Component));
            activity.ZcxView2 = ZcxView2;
            __reflect(ZcxView2.prototype, "game.mod.activity.ZcxView2");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxView3 = /** @class */ (function (_super) {
                __extends(ZcxView3, _super);
                function ZcxView3() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxSkin3";
                    return _this;
                }
                return ZcxView3;
            }(eui.Component));
            activity.ZcxView3 = ZcxView3;
            __reflect(ZcxView3.prototype, "game.mod.activity.ZcxView3");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxView4 = /** @class */ (function (_super) {
                __extends(ZcxView4, _super);
                function ZcxView4() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZcxSkin4";
                    return _this;
                }
                return ZcxView4;
            }(eui.Component));
            activity.ZcxView4 = ZcxView4;
            __reflect(ZcxView4.prototype, "game.mod.activity.ZcxView4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxWinnerListView = /** @class */ (function (_super) {
                __extends(ZcxWinnerListView, _super);
                function ZcxWinnerListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.ZCXWinnerListSkin";
                    return _this;
                }
                return ZcxWinnerListView;
            }(eui.Component));
            activity.ZcxWinnerListView = ZcxWinnerListView;
            __reflect(ZcxWinnerListView.prototype, "game.mod.activity.ZcxWinnerListView");
            var ZcxWinnerItem = /** @class */ (function (_super) {
                __extends(ZcxWinnerItem, _super);
                function ZcxWinnerItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = 'skins.activity.ZCXWinnerItemSkin';
                    return _this;
                }
                ZcxWinnerItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("27" /* Activity */, 211 /* Zhaocaixian */);
                };
                ZcxWinnerItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.lb_name.text = this.data.name;
                    this.lb_num.text = "" + this._proxy.getSixLuckNum(this.data.value.toNumber());
                };
                return ZcxWinnerItem;
            }(mod.BaseListenerRenderer));
            activity.ZcxWinnerItem = ZcxWinnerItem;
            __reflect(ZcxWinnerItem.prototype, "game.mod.activity.ZcxWinnerItem");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var ZcxBuyTipsMdr = /** @class */ (function (_super) {
                __extends(ZcxBuyTipsMdr, _super);
                function ZcxBuyTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.ZcxBuyTipsView);
                    _this._leftCnt = 0;
                    _this._cost = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                ZcxBuyTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list_cost.itemRenderer = activity.ZcxCoinItem;
                    this._view.list_cost.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZcxBuyTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_buy, TouchEvent.TOUCH_TAP, this.onClickBuy, this);
                    addEventListener(this._view.list_cost, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_btn_buy_cnt_post" /* ON_BTN_BUY_CNT_POST */, this.onUpdateBuyCnt, this);
                };
                ZcxBuyTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                ZcxBuyTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZcxBuyTipsMdr.prototype.updateView = function () {
                    var cfg = this._showArgs;
                    this._view.icon.data = cfg.rewards[0];
                    var idx = cfg.rewards[0][0];
                    var propCfg = game.GameConfig.getPropConfigById(idx);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(propCfg.name, game.ColorUtil.getColorByQuality1(propCfg.quality)));
                    this._view.lb_own.text = game.getLanById("have" /* have */) + '：' + mod.BagUtil.getPropCntByIdx(idx);
                    this._leftCnt = this._proxy.getExchangeLeftCnt(cfg.index);
                    this._view.btnView.setMaxCnt(this._leftCnt);
                    this._view.lb_stock.text = game.getLanById("zcx_tips21" /* zcx_tips21 */) + ("\uFF1A" + this._leftCnt + "/" + cfg.count);
                    this.updateCost(cfg.costs.concat());
                };
                ZcxBuyTipsMdr.prototype.updateCost = function (ary) {
                    this._listData.replaceAll(ary);
                    this._cost = ary;
                };
                ZcxBuyTipsMdr.prototype.onUpdateBuyCnt = function (n) {
                    var cnt = n.body;
                    this.setCnt(cnt);
                };
                ZcxBuyTipsMdr.prototype.setCnt = function (cnt) {
                    var ary = [];
                    for (var _i = 0, _a = this._showArgs.costs; _i < _a.length; _i++) {
                        var cost = _a[_i];
                        ary.push([cost[0], cost[1] * cnt]);
                    }
                    this.updateCost(ary);
                };
                ZcxBuyTipsMdr.prototype.onClickBuy = function () {
                    for (var _i = 0, _a = this._cost; _i < _a.length; _i++) {
                        var cost = _a[_i];
                        if (!mod.BagUtil.checkPropCnt(cost[0], cost[1], 1 /* Dialog */)) {
                            return;
                        }
                    }
                    this._proxy.c2s_zcx_exchange_button(this._showArgs.index, this._view.btnView.getCnt());
                    this.hide();
                };
                ZcxBuyTipsMdr.prototype.onClickList = function (e) {
                    var data = e.item;
                    if (data && data[0]) {
                        mod.ViewMgr.getIns().showPropTips(data[0]);
                    }
                };
                return ZcxBuyTipsMdr;
            }(game.MdrBase));
            activity.ZcxBuyTipsMdr = ZcxBuyTipsMdr;
            __reflect(ZcxBuyTipsMdr.prototype, "game.mod.activity.ZcxBuyTipsMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var ZcxFirstMdr = /** @class */ (function (_super) {
                __extends(ZcxFirstMdr, _super);
                function ZcxFirstMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ZcxFirstView);
                    _this._curIdx = 0;
                    return _this;
                }
                ZcxFirstMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = activity.ZcxFirstItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_act.setImage("1yuanjihuo");
                };
                ZcxFirstMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClick, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_first_recharge_info" /* ON_UPDATE_FIRST_RECHARGE_INFO */, this.onUpdateByFirstCharge, this);
                };
                ZcxFirstMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateList();
                    this._view.list.selectedIndex = 0;
                };
                ZcxFirstMdr.prototype.updateList = function () {
                    var list = [];
                    for (var i = 0; i < 4; i++) {
                        list.push({
                            index: i + 1,
                            isSel: i == this._curIdx
                        });
                    }
                    this._listData.replaceAll(list);
                };
                ZcxFirstMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                //todo
                ZcxFirstMdr.prototype.onClick = function () {
                    // facade.showView(ModName.Activity, MainActivityViewType.FirstCharge);
                    mod.ViewMgr.getIns().showSecondPop("27" /* Activity */, "49" /* FirstCharge */);
                };
                ZcxFirstMdr.prototype.onClickList = function (e) {
                    if (e.itemIndex == this._curIdx) {
                        return;
                    }
                    this._curIdx = e.itemIndex;
                    this.updateList();
                };
                //首充后打开另一个界面
                ZcxFirstMdr.prototype.onUpdateByFirstCharge = function () {
                    if (!this._proxy.isOpen()) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "42" /* ZcxMain */);
                };
                return ZcxFirstMdr;
            }(game.MdrBase));
            activity.ZcxFirstMdr = ZcxFirstMdr;
            __reflect(ZcxFirstMdr.prototype, "game.mod.activity.ZcxFirstMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxFuliMdr = /** @class */ (function (_super) {
                __extends(ZcxFuliMdr, _super);
                function ZcxFuliMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.BaseRewardView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ZcxFuliMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZcxFuliMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_get, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_zcx_fund_box_show" /* ON_ZCX_FUND_BOX_SHOW */, this.updateView, this);
                };
                ZcxFuliMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._type = this._showArgs;
                    this._view.secondPop.updateTitleStr(game.getLanById("zcx_tips13" /* zcx_tips13 */));
                    this._proxy.c2s_zcx_fund_box_show(this._type);
                };
                ZcxFuliMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZcxFuliMdr.prototype.updateView = function () {
                    var rewards = this._proxy.getFundBoxReward(this._type);
                    this._listData.replaceAll(rewards);
                    var boughtNum = this._proxy.getBoughtNum(this._type);
                    var targetNum = this._proxy.getFundTargetNum(this._type);
                    var str = game.TextUtil.addColor(boughtNum + '/' + targetNum, 2330156 /* GREEN */);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("zcx_tips14" /* zcx_tips14 */), [str]));
                    this._view.lb_desc.visible = true;
                    var status = this._proxy.getBoxStatus(this._type);
                    this._view.img_state.visible = status == 2 /* Draw */;
                    this._view.btn_get.visible = !this._view.img_state.visible;
                    this._view.img_state.source = "lvseyilingqu";
                    this._view.btn_get.setHint(status == 1 /* Finish */);
                };
                ZcxFuliMdr.prototype.onClick = function () {
                    var status = this._proxy.getBoxStatus(this._type);
                    if (status == 1 /* Finish */) {
                        this._proxy.c2s_zcx_fund_box_reward(this._type);
                    }
                    else {
                        game.PromptBox.getIns().show(game.getLanById("tiaojianbuzu" /* tiaojianbuzu */));
                    }
                };
                return ZcxFuliMdr;
            }(game.MdrBase));
            activity.ZcxFuliMdr = ZcxFuliMdr;
            __reflect(ZcxFuliMdr.prototype, "game.mod.activity.ZcxFuliMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TimeMgr = base.TimeMgr;
            var delayCall = base.delayCall;
            var Handler = base.Handler;
            var clearDelay = base.clearDelay;
            var ZcxMdr1 = /** @class */ (function (_super) {
                __extends(ZcxMdr1, _super);
                function ZcxMdr1() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ZcxView1);
                    _this._firstShowX = false;
                    _this._directShowX = false; //第二次点击，过滤掉数字切换动画
                    _this._onClickX = false;
                    _this._numSize = 6; //幸运数字长度
                    _this._luckNumAry = [];
                    _this._delayIdAry = [];
                    _this._cntAry = [];
                    _this._timeAry = [6, 5, 4, 3, 2, 1];
                    return _this;
                }
                ZcxMdr1.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = activity.ZcxItem1;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn_get.setImage("lingqu");
                };
                ZcxMdr1.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_get, egret.TouchEvent.TOUCH_TAP, this.onClickGet, this);
                    addEventListener(this._view.btn_winner, egret.TouchEvent.TOUCH_TAP, this.onClickWinner, this);
                    addEventListener(this._view.gr_num, egret.TouchEvent.TOUCH_TAP, this.onClickNum, this);
                    this.onNt("on_zcx_luck_num_update" /* ON_ZCX_LUCK_NUM_UPDATE */, this.updateView, this);
                };
                ZcxMdr1.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                    var list = game.getConfigListByName("zcx_luck_number.json" /* ZcxLuckNumber */);
                    this._listData.replaceAll(list.slice(0, 3));
                };
                ZcxMdr1.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._luckNumAry = [];
                    this._delayIdAry = [];
                    this._cntAry = [];
                };
                ZcxMdr1.prototype.updateLbNum = function (num, idx) {
                    var lb = this._view["lb" + idx];
                    if (!lb) {
                        return;
                    }
                    lb.text = num + '';
                };
                ZcxMdr1.prototype.updateLuckNumView = function () {
                    var luck_num = this._proxy.model.luck_num;
                    this._view.redPoint.visible = this._proxy.canGetLuckNum();
                    if (!luck_num) {
                        this._firstShowX = true;
                        this._directShowX = true;
                        for (var i = 0; i < this._numSize; i++) {
                            this.updateLbNum('X', i);
                        }
                        return;
                    }
                    if (this._firstShowX && this._onClickX) {
                        this._firstShowX = this._onClickX = false;
                        for (var i = 0; i < this._numSize; i++) {
                            this.doTween(this._view["lb" + i], i);
                        }
                    }
                    else {
                        for (var i = 0; i < this._numSize; i++) {
                            this.updateLbNum(this.getLuckNum(i), i);
                        }
                    }
                };
                //直接展示幸运数字，不播放动画
                ZcxMdr1.prototype.showLuckNumDirect = function () {
                    for (var t = 0; t < this._numSize; t++) {
                        if (this._delayIdAry[t]) {
                            clearDelay(this._delayIdAry[t]);
                        }
                        this._view["lb" + t].text = '';
                    }
                    for (var i = 0; i < this._numSize; i++) {
                        this.updateLbNum(this.getLuckNum(i), i);
                    }
                };
                ZcxMdr1.prototype.doTween = function (lab, i) {
                    if (i === void 0) { i = 0; }
                    if (!this._directShowX) {
                        this.showLuckNumDirect();
                        return;
                    }
                    if (this._luckNumAry[i] == null) {
                        this._luckNumAry[i] = 0;
                    }
                    var num = this._luckNumAry[i] + 1;
                    if (num > 9) {
                        num = 0;
                        this._cntAry[i] = (this._cntAry[i] || 0) + 1;
                    }
                    if (this._delayIdAry[i]) {
                        clearDelay(this._delayIdAry[i]);
                    }
                    if (this._cntAry[i] >= this._timeAry[i] && num == Number(this.getLuckNum(i))) {
                        this.updateLbNum(this.getLuckNum(i), i);
                        return;
                    }
                    this._luckNumAry[i] = num;
                    this.updateLbNum(num + '', i);
                    this._delayIdAry[i] = delayCall(Handler.alloc(this, this.doTween, [lab, i]), 40);
                };
                //服务端返回的可能是小于6位的，不足6位则前面补0
                ZcxMdr1.prototype.getLuckNum = function (i) {
                    var num = this._proxy.model.luck_num || 0;
                    var numStr = this._proxy.getSixLuckNum(num);
                    if (num && numStr[i] != null) {
                        return numStr[i];
                    }
                    return '0';
                };
                ZcxMdr1.prototype.updateView = function () {
                    this.updateLuckNumView();
                    var rank_num = this._proxy.model.rank_num;
                    if (!rank_num) {
                        var cfg = game.GameConfig.getParamConfigById('zcx_luncky_time');
                        var val = cfg.value;
                        var timeStr = val[0] + ':' + (val[1] < 10 ? '0' + val[1] : val[1]);
                        var str = game.StringUtil.substitute(game.getLanById("zcx_tips24" /* zcx_tips24 */), [game.TextUtil.addColor(timeStr, 2330156 /* GREEN */)]);
                        this._view.lb_rank.textFlow = game.TextUtil.parseHtml(str);
                    }
                    else {
                        var txt = rank_num >= 4 ? game.getLanById("zcx_tips25" /* zcx_tips25 */) : game.StringUtil.substitute(game.getLanById("zcx_tips26" /* zcx_tips26 */), [game.StringUtil.ChineseNum[rank_num]]);
                        this._view.lb_rank.textFlow = game.TextUtil.parseHtml(game.getLanById("zcx_tips27" /* zcx_tips27 */) + txt);
                    }
                    var status = this._proxy.model.status;
                    this._view.btn_get.visible = status == 1;
                    this._view.btn_get.setHint(status == 1);
                };
                ZcxMdr1.prototype.onClickGet = function () {
                    if (this._proxy.model.status == 1) {
                        this._proxy.c2s_get_zcx_luck_number(2);
                    }
                };
                //只能在20点-24点打开
                ZcxMdr1.prototype.onClickWinner = function () {
                    var date = new Date(TimeMgr.time.serverTime);
                    if (date.getHours() < 20) {
                        game.PromptBox.getIns().show(game.getLanById("zcx_tips28" /* zcx_tips28 */));
                        return;
                    }
                    this.showView("43" /* ZcxWinnerList */);
                };
                // 判断是否充钱
                ZcxMdr1.prototype.onClickNum = function () {
                    var luck_num = this._proxy.model.luck_num;
                    if (luck_num) {
                        //再次点击直接展示幸运数字
                        if (this._directShowX) {
                            this._directShowX = false;
                            this.showLuckNumDirect();
                        }
                        return;
                    }
                    // 第一次点击获取幸运数字
                    this._onClickX = true;
                    this._proxy.c2s_get_zcx_luck_number(1);
                };
                return ZcxMdr1;
            }(game.MdrBase));
            activity.ZcxMdr1 = ZcxMdr1;
            __reflect(ZcxMdr1.prototype, "game.mod.activity.ZcxMdr1");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var Handler = base.Handler;
            var ZcxMdr2 = /** @class */ (function (_super) {
                __extends(ZcxMdr2, _super);
                function ZcxMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ZcxView2);
                    _this._saveCnt = 0; //存取仙玉数额
                    _this._endTime = 0;
                    return _this;
                }
                ZcxMdr2.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                    var cfg = game.GameConfig.getParamConfigById('zcx_access_money');
                    this._saveCnt = cfg.value;
                    this._view.btn_get.setBlue();
                    this._view.btn_get.setCost([1450000002 /* Xianyu */, this._saveCnt], game.getLanById("zcx_tips37" /* zcx_tips37 */));
                    this._view.btn_save.setCost([1450000002 /* Xianyu */, this._saveCnt], game.getLanById("zcx_tips38" /* zcx_tips38 */));
                };
                ZcxMdr2.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_get, TouchEvent.TOUCH_TAP, this.onClickGet, this);
                    addEventListener(this._view.btn_save, TouchEvent.TOUCH_TAP, this.onClickSave, this);
                    addEventListener(this._view.btn_receive, TouchEvent.TOUCH_TAP, this.onClickReceive, this);
                    this.onNt("on_zcx_coins_bank_update" /* ON_ZCX_COINS_BANK_UPDATE */, this.updateView, this);
                };
                ZcxMdr2.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var cfg = game.GameConfig.getParamConfigById('zcx_reward_time_max');
                    var str = game.StringUtil.substitute(game.getLanById("zcx_tips29" /* zcx_tips29 */), [cfg.value]);
                    this._view.lb_interest.textFlow = game.TextUtil.parseHtml(str);
                    this.updateView();
                };
                ZcxMdr2.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                ZcxMdr2.prototype.updateView = function () {
                    var model = this._proxy.model;
                    var value = model.value.toNumber();
                    this.addBmpFont(game.StringUtil.getPowerNumStr(value, 1, "", 6), game.BmpTextCfg[214 /* XianYu1 */], this._view.gr_xianyu, true, 1, false, 0, true);
                    var cfg = game.getConfigByNameId("zcx_coins_bank.json" /* ZcxCoinsBank */, 1); //配置第一条
                    if (model.item_list && model.item_list.length) {
                        this._listData.source = model.item_list.concat();
                    }
                    else {
                        var reward = this._proxy.getBankReward(value);
                        this._listData.source = reward;
                    }
                    this.updateTimeView();
                    this._view.gr.visible = !value;
                    if (!value) {
                        var str = game.getLanById("zcx_tips30" /* zcx_tips30 */);
                        var propCfg = game.GameConfig.getPropConfigById(cfg.rewards[0]);
                        if (propCfg) {
                            str += cfg.rewards[1] + propCfg.name;
                        }
                        propCfg = game.GameConfig.getPropConfigById(cfg.rewards2[0]);
                        if (propCfg) {
                            str += cfg.rewards2[1] + propCfg.name;
                        }
                        this._view.lb_saveDesc.text = str;
                    }
                };
                ZcxMdr2.prototype.updateTimeView = function () {
                    var model = this._proxy.model;
                    var value = model.value.toNumber();
                    if (!value && !this._proxy.canGetBankInterest()) {
                        this._view.lb_time.text = game.getLanById("zcx_tips36" /* zcx_tips36 */);
                        TimeMgr.removeUpdateItem(this);
                        this._view.lb_time.visible = true;
                        this._view.btn_receive.visible = this._view.timeItem.visible = false;
                        return;
                    }
                    this._endTime = this._proxy.getBankEndTime();
                    if (TimeMgr.time.serverTimeSecond < this._endTime) {
                        this.updateTimeLb();
                        TimeMgr.addUpdateItem(this, 1000);
                        this._view.timeItem.visible = true;
                        this._view.lb_time.visible = this._view.btn_receive.visible = false;
                        return;
                    }
                    TimeMgr.removeUpdateItem(this);
                    this._view.lb_time.visible = this._view.timeItem.visible = false;
                    this._view.btn_receive.visible = true;
                    this._view.btn_receive.setHint(this._proxy.canGetBankInterest());
                };
                ZcxMdr2.prototype.onClickGet = function () {
                    var val = this._proxy.model.value.toNumber();
                    if (val > this._saveCnt) {
                        this._proxy.c2s_zcx_coins_bank_button(2);
                        return;
                    }
                    if (val == this._saveCnt) {
                        mod.ViewMgr.getIns().showConfirm(game.getLanById("zcx_tips31" /* zcx_tips31 */), Handler.alloc(this, this.onGetConfirmFunc));
                        return;
                    }
                    game.PromptBox.getIns().show(game.getLanById("zcx_tips35" /* zcx_tips35 */));
                };
                ZcxMdr2.prototype.onGetConfirmFunc = function () {
                    this._proxy.c2s_zcx_coins_bank_button(2);
                };
                ZcxMdr2.prototype.onClickSave = function () {
                    if (this._proxy.isMaxBankSave()) {
                        game.PromptBox.getIns().show(game.getLanById("zcx_tips32" /* zcx_tips32 */));
                        return;
                    }
                    if (mod.BagUtil.checkPropCnt(1450000002 /* Xianyu */, this._saveCnt)) {
                        this._proxy.c2s_zcx_coins_bank_button(1);
                        return;
                    }
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("zcx_tips33" /* zcx_tips33 */), Handler.alloc(this, this.onConfirmFunc));
                };
                ZcxMdr2.prototype.onConfirmFunc = function () {
                    mod.ViewMgr.getIns().openCommonRechargeView();
                };
                ZcxMdr2.prototype.onClickReceive = function () {
                    if (this._proxy.canGetBankInterest()) {
                        this._proxy.c2s_zcx_coins_bank_get_rewards();
                    }
                    else {
                        game.PromptBox.getIns().show(game.getLanById("zcx_tips34" /* zcx_tips34 */));
                    }
                };
                ZcxMdr2.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        this.updateTimeView();
                        return;
                    }
                    this.updateTimeLb();
                };
                ZcxMdr2.prototype.updateTimeLb = function () {
                    this._view.timeItem.updateTime(this._endTime);
                };
                return ZcxMdr2;
            }(game.EffectMdrBase));
            activity.ZcxMdr2 = ZcxMdr2;
            __reflect(ZcxMdr2.prototype, "game.mod.activity.ZcxMdr2", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var Tween = base.Tween;
            var Pool = base.Pool;
            var Handler = base.Handler;
            var ZcxMdr3 = /** @class */ (function (_super) {
                __extends(ZcxMdr3, _super);
                function ZcxMdr3() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ZcxView3);
                    _this._endTime = 0;
                    /**==============================跑马灯==============================*/
                    _this._initCnt = 10; //初始化数量
                    _this._initMax = 30;
                    _this._curIdx = 0; //当前选择
                    return _this;
                }
                ZcxMdr3.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.gr.mask = Pool.alloc(egret.Rectangle).setTo(0, 0, 170, 320);
                };
                ZcxMdr3.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_challenge, TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_zcx_raid_info_update" /* ON_ZCX_RAID_INFO_UPDATE */, this.updateView, this);
                };
                ZcxMdr3.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var cfg = this._proxy.getCurFubenCfg();
                    this._listData.replaceAll(cfg.show_rewards);
                    this.updateView();
                    this.initGrView();
                };
                ZcxMdr3.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                    var size = this._view.gr.numChildren;
                    for (var i = 0; i < size; i++) {
                        var item = this._view.gr.getChildAt(i);
                        if (item) {
                            Tween.remove(item);
                            Pool.release(item);
                        }
                    }
                    this._view.gr.removeChildren();
                    this._curIdx = 0;
                };
                ZcxMdr3.prototype.updateView = function () {
                    var canChallenge = this._proxy.canChallenge();
                    this._view.btn_challenge.visible = canChallenge;
                    this._view.timeItem.visible = !this._view.btn_challenge.visible;
                    this._view.btn_challenge.setHint(canChallenge);
                    if (canChallenge) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._endTime = game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false, 1);
                    this.update(TimeMgr.time);
                };
                ZcxMdr3.prototype.onClick = function () {
                    if (this._proxy.canChallenge()) {
                        this._proxy.c2s_zcx_raid_challenge();
                    }
                };
                ZcxMdr3.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime < 1) {
                        TimeMgr.removeUpdateItem(this);
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                ZcxMdr3.prototype.initGrView = function () {
                    for (var i = 0; i < this._initCnt; i++) {
                        this.doAddItem();
                    }
                };
                ZcxMdr3.prototype.getItemY = function () {
                    var size = this._view.gr.numChildren;
                    if (!size) {
                        return 10;
                    }
                    var lastItem = this._view.gr.getChildAt(size - 1);
                    return lastItem.y + lastItem.height + 20;
                };
                ZcxMdr3.prototype.doAddItem = function () {
                    var item = Pool.alloc(activity.ZcxItem3);
                    item.name = "item" + this._curIdx;
                    item.updateView(this._proxy.getRecordTips(this._curIdx));
                    item.x = 0;
                    item.y = this.getItemY();
                    this._view.gr.addChild(item);
                    this.doItemTween(item);
                    this._curIdx++;
                    if (this._curIdx > this._initMax - 1) {
                        this._curIdx = 0;
                    }
                };
                ZcxMdr3.prototype.doItemTween = function (item) {
                    if (item.y + item.height < -20) {
                        Tween.remove(item);
                        Pool.release(item);
                        this._view.gr.removeChild(item);
                        this.doAddItem();
                        return;
                    }
                    Tween.get(item)
                        .to({ y: item.y - 10 }, 500)
                        .exec(Handler.alloc(this, this.doItemTween, [item]));
                };
                return ZcxMdr3;
            }(game.MdrBase));
            activity.ZcxMdr3 = ZcxMdr3;
            __reflect(ZcxMdr3.prototype, "game.mod.activity.ZcxMdr3", ["base.UpdateItem"]);
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxMdr4 = /** @class */ (function (_super) {
                __extends(ZcxMdr4, _super);
                function ZcxMdr4() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", activity.ZcxView4);
                    return _this;
                }
                ZcxMdr4.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = activity.ZcxItem4;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZcxMdr4.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_zcx_exchange_update" /* ON_ZCX_EXCHANGE_UPDATE */, this.updateView, this);
                };
                ZcxMdr4.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                    this.updateBigReward();
                };
                ZcxMdr4.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZcxMdr4.prototype.updateView = function () {
                    this._listData.replaceAll(game.getConfigListByName("zcx_exchange.json" /* ZcxExchange */));
                };
                ZcxMdr4.prototype.updateBigReward = function () {
                    var cfg = game.getConfigByNameId("zcx_exchange.json" /* ZcxExchange */, 1);
                    this._view.icon_bigReward.data = cfg.rewards[0];
                };
                return ZcxMdr4;
            }(game.MdrBase));
            activity.ZcxMdr4 = ZcxMdr4;
            __reflect(ZcxMdr4.prototype, "game.mod.activity.ZcxMdr4");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var CarnivalRankView = /** @class */ (function (_super) {
                __extends(CarnivalRankView, _super);
                function CarnivalRankView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.activity.CarnivalRankSkin";
                    return _this;
                }
                return CarnivalRankView;
            }(eui.Component));
            activity.CarnivalRankView = CarnivalRankView;
            __reflect(CarnivalRankView.prototype, "game.mod.activity.CarnivalRankView");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxMdr6 = /** @class */ (function (_super) {
                __extends(ZcxMdr6, _super);
                function ZcxMdr6() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._gameOrderType = 8 /* Zhizunlicai */;
                    return _this;
                }
                ZcxMdr6.prototype.onUpdateView = function () {
                    _super.prototype.onUpdateView.call(this);
                    var time = this._proxy.getValueByType(this._gameOrderType);
                    var timeStr;
                    if (time >= game.Second.Day) {
                        timeStr = game.TimeUtil.formatSecond(time, 'd天H时');
                    }
                    else {
                        timeStr = game.TimeUtil.formatSecond(time, 'H时m分');
                    }
                    var str = game.GameOrderTypeStr[this._gameOrderType] + game.TextUtil.addColor(timeStr, 8585074 /* GREEN */);
                    this._view.lab_cur.textFlow = game.TextUtil.parseHtml(str);
                };
                return ZcxMdr6;
            }(activity.ZcxMdr5));
            activity.ZcxMdr6 = ZcxMdr6;
            __reflect(ZcxMdr6.prototype, "game.mod.activity.ZcxMdr6");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var facade = base.facade;
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var CarnivalRender = /** @class */ (function (_super) {
                __extends(CarnivalRender, _super);
                function CarnivalRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CarnivalRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("27" /* Activity */).retProxy(50 /* Activity */);
                    this._carnivalProxy = facade.retMod("27" /* Activity */).retProxy(252 /* Carnival */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_draw, this.onClickDraw, this);
                };
                CarnivalRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    //条件1：召唤次数
                    var limitScore = data.cond_1 && data.cond_1[0] || 0;
                    var score = this._carnivalProxy.getScore(actInfo.act_id);
                    var descStr = game.StringUtil.substitute(game.getLanById("carnival_tips3" /* carnival_tips3 */), [limitScore])
                        + game.TextUtil.addColor("(" + score + "/" + limitScore + ")", score >= limitScore ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    this._rewardList.source = data.rewards.slice(0, 3);
                    var hasDraw = this._carnivalProxy.hasCarnivalDraw(actInfo.act_id, data);
                    this.btn_draw.visible = !hasDraw;
                    this.img_draw.visible = hasDraw;
                    if (this.btn_draw.visible) {
                        var canDraw = this._carnivalProxy.canCarnivalDraw(actInfo.act_id, data);
                        this._canDraw = canDraw;
                        this.btn_draw.redPoint.visible = canDraw;
                        if (canDraw) {
                            this.btn_draw.labelDisplay.text = game.getLanById("tishi_29" /* tishi_29 */);
                            this.btn_draw.setYellow();
                        }
                        else {
                            this.btn_draw.labelDisplay.text = game.getLanById("chengshen_goto1" /* chengshen_goto1 */);
                            this.btn_draw.setBlue();
                        }
                    }
                };
                CarnivalRender.prototype.onClickDraw = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var actInfo = this._proxy.curOpenAct;
                    if (this._canDraw) {
                        this._carnivalProxy.c2s_activity_kuanghuan_geren_zhaohuan_get_reward(actInfo.act_id);
                        return;
                    }
                    //前往召唤
                    mod.ViewMgr.getIns().showViewByID(29 /* Summon */, undefined, false);
                };
                return CarnivalRender;
            }(mod.BaseListenerRenderer));
            activity.CarnivalRender = CarnivalRender;
            __reflect(CarnivalRender.prototype, "game.mod.activity.CarnivalRender");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ZcxMdr8 = /** @class */ (function (_super) {
                __extends(ZcxMdr8, _super);
                function ZcxMdr8() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 2 /* Chaoji */;
                    return _this;
                }
                return ZcxMdr8;
            }(activity.ZcxMdr7));
            activity.ZcxMdr8 = ZcxMdr8;
            __reflect(ZcxMdr8.prototype, "game.mod.activity.ZcxMdr8");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var ZcxUnlockMdr = /** @class */ (function (_super) {
                __extends(ZcxUnlockMdr, _super);
                function ZcxUnlockMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.GameOrderUnlockView);
                    _this._listData = new ArrayCollection();
                    _this._listItemData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                ZcxUnlockMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_item.itemRenderer = mod.Icon;
                    this._view.list_item.dataProvider = this._listItemData;
                };
                ZcxUnlockMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClick);
                    this.onNt("on_zcx_fund_reward_show" /* ON_ZCX_FUND_REWARD_SHOW */, this.updateView, this);
                };
                ZcxUnlockMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._type = this._showArgs;
                    this._view.secondPop.updateTitleStr(game.getLanById("zcx_tips17" /* zcx_tips17 */));
                    this._view.lab_title.textFlow = game.TextUtil.parseHtml(game.getLanById("zcx_tips18" /* zcx_tips18 */));
                    this._proxy.c2s_zcx_fund_reward_show(this._type);
                };
                ZcxUnlockMdr.prototype.updateView = function () {
                    //购买后累计可领取
                    this._listData.source = this._proxy.getAllRewards(this._type);
                    //现在购买立即领取
                    this._listItemData.source = this._proxy.getRewardsAfterPay(this._type);
                    var payId = this._proxy.getFundProductId(this._type);
                    var rmb = mod.PayUtil.getRmbValue(payId);
                    var fakeRmb = mod.PayUtil.getFakeRmbValue(payId);
                    if (fakeRmb) {
                        this._view.btn.setTwoPrice(rmb, fakeRmb);
                    }
                    else {
                        this._view.btn.setFontPrice(rmb);
                    }
                    this.addEftByParentScale(this._view.btn.group_eft);
                };
                ZcxUnlockMdr.prototype.onClick = function () {
                    var payId = this._proxy.getFundProductId(this._type);
                    mod.PayUtil.pay(payId);
                    this.hide();
                };
                return ZcxUnlockMdr;
            }(game.EffectMdrBase));
            activity.ZcxUnlockMdr = ZcxUnlockMdr;
            __reflect(ZcxUnlockMdr.prototype, "game.mod.activity.ZcxUnlockMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var activity;
        (function (activity) {
            var TouchEvent = egret.TouchEvent;
            var ZcxWinnerListMdr = /** @class */ (function (_super) {
                __extends(ZcxWinnerListMdr, _super);
                function ZcxWinnerListMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", activity.ZcxWinnerListView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ZcxWinnerListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(211 /* Zhaocaixian */);
                    this._view.list.itemRenderer = activity.ZcxWinnerItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZcxWinnerListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide, this);
                    this.onNt("on_zcx_luck_num_update" /* ON_ZCX_LUCK_NUM_UPDATE */, this.updateView, this);
                };
                ZcxWinnerListMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.c2s_get_zcx_luck_number(3);
                };
                ZcxWinnerListMdr.prototype.updateView = function () {
                    var list = this._proxy.model.list;
                    var top = list[0];
                    if (top) {
                        this._view.headVip.updateShow(top.head, top.head_frame, top.sex, top.vip);
                        this._view.lb_top.text = top.name + "\n" + game.getLanById("zcx_tips22" /* zcx_tips22 */) + ":" + this._proxy.getSixLuckNum(top.value.toNumber());
                    }
                    else {
                        this._view.headVip.defaultHeadShow();
                        this._view.lb_top.text = '';
                    }
                    this._listData.replaceAll(list.slice(1));
                };
                ZcxWinnerListMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return ZcxWinnerListMdr;
            }(game.MdrBase));
            activity.ZcxWinnerListMdr = ZcxWinnerListMdr;
            __reflect(ZcxWinnerListMdr.prototype, "game.mod.activity.ZcxWinnerListMdr");
        })(activity = mod.activity || (mod.activity = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
//# sourceMappingURL=activity.js.map