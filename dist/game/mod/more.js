var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var FengmoRankMdr = /** @class */ (function (_super) {
                __extends(FengmoRankMdr, _super);
                function FengmoRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    _this._type = 1 /* Guild */;
                    _this._tips = false;
                    return _this;
                }
                FengmoRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(257 /* Fengmo */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._itemList;
                    this._view.btn_god.visible = false;
                    this._view.timeItem.visible = true;
                    this._view.img_type2.source = "fengmojifen";
                    this._view.img_type3.source = "paimingjiangli";
                };
                FengmoRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_fengmo_rank" /* ON_UPDATE_FENGMO_RANK */, this.onUpdateView, this);
                };
                FengmoRankMdr.prototype.onShow = function () {
                    this._proxy.c2s_guild_fengmo_get_rank(this._type);
                    _super.prototype.onShow.call(this);
                    this.onUpdateTime();
                };
                FengmoRankMdr.prototype.onUpdateTime = function () {
                    this._endTime = game.TimeUtil.getNextWeekTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                FengmoRankMdr.prototype.onUpdateView = function () {
                    var list = this._proxy.getRanks(this._type);
                    var topInfo = list && list[0];
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                        if (this._type == 1 /* Guild */) {
                            this._view.masterItem.visible = true;
                            this._view.masterItem.updateShow(topInfo.guild_name);
                        }
                    }
                    var infos = this._proxy.getRankList(this._type);
                    this._itemList.replaceAll(infos);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._type));
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr(this._type));
                    this.onUpdateTips();
                };
                FengmoRankMdr.prototype.onUpdateTips = function () {
                    if (this._tips) {
                        return;
                    }
                    if (this._type == 1 /* Guild */) {
                        var list = this._proxy.props;
                        if (list && list.length) {
                            this._tips = true;
                            mod.ViewMgr.getIns().showUnionRankTips(4 /* Fengmo */);
                        }
                    }
                };
                FengmoRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                    this._tips = false;
                };
                FengmoRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                FengmoRankMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this._endTime = game.TimeUtil.getNextWeekTime();
                        this._proxy.c2s_guild_fengmo_get_rank(this._type);
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                return FengmoRankMdr;
            }(game.EffectMdrBase));
            more.FengmoRankMdr = FengmoRankMdr;
            __reflect(FengmoRankMdr.prototype, "game.mod.more.FengmoRankMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var XiandiRankMdr = /** @class */ (function (_super) {
                __extends(XiandiRankMdr, _super);
                function XiandiRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    _this._type = 1 /* Person */;
                    return _this;
                }
                XiandiRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(260 /* Xiandi */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._itemList;
                    this._view.btn_god.visible = false;
                    this._view.timeItem.visible = true;
                    this._view.img_type2.source = "xingshu";
                    this._view.img_type3.source = "paimingjiangli";
                };
                XiandiRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_xiandi_rank" /* ON_UPDATE_XIANDI_RANK */, this.onUpdateView, this);
                };
                XiandiRankMdr.prototype.onShow = function () {
                    // this._view.updateImgTypeHorizontal(this._type == XiandiRankType.Guild);
                    this._proxy.c2s_xiandi_zhengba_oper(2, this._type);
                    _super.prototype.onShow.call(this);
                    this.onUpdateTime();
                };
                XiandiRankMdr.prototype.onUpdateTime = function () {
                    this._endTime = game.TimeUtil.getNextDayTime(base.TimeMgr.time.serverTimeSecond, false, 1);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                XiandiRankMdr.prototype.onUpdateView = function () {
                    var list = this._proxy.getRanks(this._type);
                    var topInfo = list && list[0];
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                        if (this._type == 2 /* Guild */) {
                            this._view.masterItem.visible = true;
                            this._view.masterItem.updateShow(topInfo.guild_name);
                        }
                    }
                    var infos = this._proxy.getRankList(this._type);
                    this._itemList.replaceAll(infos);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._type));
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr(this._type));
                };
                XiandiRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                XiandiRankMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                XiandiRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                return XiandiRankMdr;
            }(game.EffectMdrBase));
            more.XiandiRankMdr = XiandiRankMdr;
            __reflect(XiandiRankMdr.prototype, "game.mod.more.XiandiRankMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var Handler = base.Handler;
            var XianmaiItemTipsMdr = /** @class */ (function (_super) {
                __extends(XianmaiItemTipsMdr, _super);
                function XianmaiItemTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiItemTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiItemTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._view.secondPop.updateBgSrc(game.ResUtil.getUiJpg("wodexianmai_bg"));
                };
                XianmaiItemTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClickBtndo, this);
                    this.onNt("on_update_xianmai_my_show" /* ON_UPDATE_XIANMAI_MY_SHOW */, this.onUpdateMyShow, this);
                    this.onNt("on_update_xianmai_stage_show" /* ON_UPDATE_XIANMAI_STAGE_SHOW */, this.onUpdateStageShow, this);
                    this.onNt("on_xianmai_view_close" /* ON_XIANMAI_VIEW_CLOSE */, this.hide, this);
                };
                XianmaiItemTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                XianmaiItemTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._stage = null;
                    this._index = null;
                };
                //占领某个位置后，马上弹出我的仙脉弹窗 todo 整合两个tips
                XianmaiItemTipsMdr.prototype.onUpdateMyShow = function () {
                    // if (this._stage && this._index) {
                    //     let myData = this._proxy.my_data;
                    //     if (myData && myData.stage == this._stage && myData.index == this._index) {
                    //         ViewMgr.getIns().showSecondPop(ModName.More, MoreViewType.XianmaiItemTipsMine);
                    //         this.hide();
                    //     }
                    // }
                };
                XianmaiItemTipsMdr.prototype.onUpdateStageShow = function () {
                    this.updateCoolTime();
                };
                XianmaiItemTipsMdr.prototype.updateView = function () {
                    if (this._showArgs && Array.isArray(this._showArgs)) {
                        this._stage = this._showArgs[0];
                        this._index = this._showArgs[1];
                    }
                    var title = this._proxy.getSecondPopTitle(this._stage);
                    this._view.secondPop.updateTitleStr(title);
                    this._view.lb_title.text = game.getLanById("xianmaizhengduo_tips13" /* xianmaizhengduo_tips13 */);
                    var info = this._proxy.getStageInfo(this._index);
                    if (!info) {
                        this.updateNotoneView();
                    }
                    else {
                        this.updateDefendView();
                    }
                    this.updateTime();
                };
                XianmaiItemTipsMdr.prototype.onClickBtndo = function () {
                    var info = this._proxy.getStageInfo(this._index);
                    if (info && info.data) {
                        var guildId = mod.RoleUtil.getGuildId();
                        var roleGuildId = info.data.guild_id;
                        //该位置已被占领，还去争夺同宗门的，就需要弹出确定弹窗
                        if (info.data.role_id.notEquals(Long.ZERO) && guildId && guildId == roleGuildId) {
                            mod.ViewMgr.getIns().showConfirm(game.getLanById("xianmaizhengduo_tips5" /* xianmaizhengduo_tips5 */), Handler.alloc(this, this.dealFunc));
                            return;
                        }
                    }
                    this.dealFunc();
                };
                XianmaiItemTipsMdr.prototype.dealFunc = function () {
                    //我还没有占领，直接占领即可
                    var info = this._proxy.getStageInfo(this._index);
                    if (!this._proxy.my_data) {
                        var oper = info ? 3 /* Oper3 */ : 4 /* Oper4 */;
                        this._proxy.c2s_xianmai_pvp_oper(oper, this._stage, this._index);
                        this.hide(); //todo
                        return;
                    }
                    //打开选择界面
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "105" /* XianmaiSelect */, [this._stage, this._index]);
                    this.hide(); //todo
                };
                //有守护者
                XianmaiItemTipsMdr.prototype.updateDefendView = function () {
                    this._view.currentState = 'defender';
                    var info = this._proxy.getStageInfo(this._index);
                    this._view.infoItem.updateRoleView(info);
                    var isRobot = info && info.data && info.data.role_id.eq(Long.ZERO); //role_id为0就是机器人
                    if (isRobot) {
                        this._view.img_defender.source = this._proxy.getBossIcon();
                        this._view.headVip.visible = false;
                        this._view.img_defender.visible = true;
                        var bossNames = this._proxy.getBossNames();
                        this._view.lb_name.text = bossNames[0];
                        this._view.lb_guild.text = bossNames[1];
                        var layerIdx = this._proxy.getLayerIdx(this._stage);
                        this._view.powerLabel.setPowerValue(this._proxy.getBossPower(layerIdx));
                    }
                    else {
                        this._view.headVip.visible = true;
                        this._view.img_defender.visible = false;
                        var role = info.data;
                        this._view.headVip.updateShow(role.head, role.head_frame, role.sex, role.vip);
                        this._view.lb_name.text = role.name;
                        this._view.lb_guild.text = role.guild_name ? (game.getLanById("zongmen" /* zongmen */) + '：' + role.guild_name) : '';
                        this._view.powerLabel.setPowerValue(info && info.data ? info.data.showpower : 0);
                    }
                    var defendTime = info.defend_time || 0;
                    var defendLeftTime = defendTime - TimeMgr.time.serverTimeSecond;
                    this._view.btn_do.visible = defendLeftTime <= 0;
                };
                //无人占领
                XianmaiItemTipsMdr.prototype.updateNotoneView = function () {
                    this._view.currentState = 'notone';
                    this._view.btn_do.visible = true;
                    this._view.infoItem.updateDefaultView(this._stage, this._index);
                };
                //冷却时间处理，冷却时间组件和占领按钮
                XianmaiItemTipsMdr.prototype.updateCoolTime = function () {
                    var isLarge = this._proxy.isCoolTimeLarge();
                    this._view.btn_do.visible = !isLarge;
                    if (isLarge) {
                        this._view.coolTimeItem.y = 840;
                    }
                    else {
                        this._view.coolTimeItem.y = 870;
                    }
                    this._view.coolTimeItem.updateShow();
                };
                XianmaiItemTipsMdr.prototype.updateTime = function () {
                    this.updateCoolTime();
                    var info = this._proxy.getStageInfo(this._index);
                    if (info) {
                        this._view.infoItem.updateRoleView(info);
                    }
                    var leftCoolTime = this._proxy.getLeftCoolTime();
                    var addTime = leftCoolTime > 0 || info != null;
                    if (addTime) {
                        if (!TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.addUpdateItem(this, 1000);
                        }
                    }
                    else {
                        TimeMgr.removeUpdateItem(this);
                    }
                };
                XianmaiItemTipsMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                return XianmaiItemTipsMdr;
            }(game.MdrBase));
            more.XianmaiItemTipsMdr = XianmaiItemTipsMdr;
            __reflect(XianmaiItemTipsMdr.prototype, "game.mod.more.XianmaiItemTipsMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var XianmaiRankMdr = /** @class */ (function (_super) {
                __extends(XianmaiRankMdr, _super);
                function XianmaiRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    _this._type = 2;
                    return _this;
                }
                XianmaiRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._itemList;
                    this._view.btn_god.visible = false;
                    this._view.timeItem.visible = true;
                    this._view.img_type2.source = "xianmaijifen";
                    this._view.img_type3.source = "paimingjiangli";
                };
                XianmaiRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_xianmai_rank_show" /* ON_UPDATE_XIANMAI_RANK_SHOW */, this.onUpdateView, this);
                };
                XianmaiRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateTime();
                    this.onUpdateView();
                    this.onCount();
                };
                XianmaiRankMdr.prototype.onCount = function () {
                    var cfgArr = game.getConfigByNameId("xianmai_rank_reward.json" /* XianmaiRankReward */, this._type);
                    var start = cfgArr[1].rank_no[0];
                    var end = cfgArr[Object.keys(cfgArr).length].rank_no[0] - 1;
                    this._proxy.c2s_xianmai_rank_show(this._type, start, end);
                };
                XianmaiRankMdr.prototype.onUpdateTime = function () {
                    this._endTime = game.TimeUtil.getNextWeekTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                XianmaiRankMdr.prototype.onUpdateView = function () {
                    var list = this._proxy.getRanks(this._type);
                    var topInfo = list && list[0];
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    var infos = this._proxy.getRankList(this._type);
                    this._itemList.replaceAll(infos);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._type));
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr(this._type));
                };
                XianmaiRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                XianmaiRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                XianmaiRankMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this._endTime = game.TimeUtil.getNextWeekTime();
                        this.onCount();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                return XianmaiRankMdr;
            }(game.EffectMdrBase));
            more.XianmaiRankMdr = XianmaiRankMdr;
            __reflect(XianmaiRankMdr.prototype, "game.mod.more.XianmaiRankMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningResultFailView = /** @class */ (function (_super) {
                __extends(MiningResultFailView, _super);
                function MiningResultFailView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningResultFailSkin";
                    return _this;
                }
                return MiningResultFailView;
            }(eui.Component));
            more.MiningResultFailView = MiningResultFailView;
            __reflect(MiningResultFailView.prototype, "game.mod.more.MiningResultFailView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongHuashenMdr = /** @class */ (function (_super) {
                __extends(ZhenrongHuashenMdr, _super);
                function ZhenrongHuashenMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhenrongHuashenView);
                    /**类型*/
                    _this._legionType = 2 /* Huashen */;
                    /**上阵个数*/
                    _this._maxCnt = 0;
                    return _this;
                }
                ZhenrongHuashenMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = mod.AvatarIconLongPress;
                    this._view.list.dataProvider = this._listAvatar = new eui.ArrayCollection();
                    this._view.list_model.itemRenderer = more.ZhenrongItem;
                    this._view.list_model.dataProvider = this._listModel = new eui.ArrayCollection();
                    this._maxCnt = game.LegionTypeCnt[this._legionType];
                };
                ZhenrongHuashenMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_oneKey, egret.TouchEvent.TOUCH_TAP, this.onClickOneKey, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    addEventListener(this._view.list_model, eui.ItemTapEvent.ITEM_TAP, this.onClickListModel, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.onUpdateView, this);
                };
                ZhenrongHuashenMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initList();
                    this.updateView();
                };
                ZhenrongHuashenMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.finallyShangzhen();
                    this._seledList = null;
                    this._actedList = null;
                };
                ZhenrongHuashenMdr.prototype.initList = function () {
                    this._seledList = [];
                    var info = this._proxy.getShangzhenInfo(this._legionType);
                    if (info && info.unitlist) {
                        var list = [];
                        for (var _i = 0, _a = info.unitlist; _i < _a.length; _i++) {
                            var id = _a[_i];
                            list.push(id.toNumber());
                        }
                        this._seledList = list;
                    }
                };
                ZhenrongHuashenMdr.prototype.onUpdateView = function () {
                    this.initList();
                    this.updateView();
                };
                ZhenrongHuashenMdr.prototype.updateView = function () {
                    this.updateListAvatar();
                    this.updateListModel();
                };
                ZhenrongHuashenMdr.prototype.updateListAvatar = function () {
                    var list = this.getList();
                    var listData = [];
                    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
                        var item = list_1[_i];
                        var surfacePorxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                        var info = surfacePorxy.getSurfacePerInfo(item.index);
                        listData.push({
                            cfg: game.getConfigByNameId("huashen.json" /* Huashen */, item.index),
                            showHint: false,
                            isBattle: item.isBattle,
                            star: info && info.star || 0
                        });
                    }
                    this._listAvatar.replaceAll(listData);
                };
                ZhenrongHuashenMdr.prototype.getList = function () {
                    if (!this._actedList) {
                        //获取已激活的化神数据
                        var cfgs = game.getConfigListByName("huashen.json" /* Huashen */);
                        var actedList = [];
                        var surfacePorxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                        for (var _i = 0, cfgs_1 = cfgs; _i < cfgs_1.length; _i++) {
                            var cfg = cfgs_1[_i];
                            var info = surfacePorxy.getSurfacePerInfo(cfg.index);
                            if (info && info.star) {
                                actedList.push(cfg.index);
                            }
                        }
                        this._actedList = actedList;
                    }
                    var list = [];
                    var battleList = [];
                    for (var _a = 0, _b = this._actedList; _a < _b.length; _a++) {
                        var id = _b[_a];
                        var data = {
                            index: id,
                            isBattle: false
                        };
                        if (this.isBattle(id)) {
                            data.isBattle = true;
                            battleList.push(data);
                        }
                        else {
                            list.push(data);
                        }
                    }
                    return battleList.concat(list);
                };
                //是否上阵
                ZhenrongHuashenMdr.prototype.isBattle = function (index) {
                    return this._seledList.indexOf(index) > -1;
                };
                ZhenrongHuashenMdr.prototype.updateListModel = function () {
                    var list = this._seledList.concat();
                    list.length = this._maxCnt;
                    this._listModel.replaceAll(list);
                };
                //一键
                ZhenrongHuashenMdr.prototype.onClickOneKey = function () {
                    this._proxy.sendShangzhen(this._legionType, 2);
                };
                //点击上阵
                ZhenrongHuashenMdr.prototype.onClickList = function (e) {
                    //上阵个数限制
                    if (this._seledList.length >= this._maxCnt) {
                        game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips12" /* xujietansuo_tips12 */));
                        return;
                    }
                    var data = e.item;
                    if (this._seledList.indexOf(data.cfg.index) > -1) {
                        game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips24" /* xujietansuo_tips24 */));
                        return;
                    }
                    data.isBattle = true;
                    this._listAvatar.itemUpdated(data);
                    this._seledList.push(data.cfg.index);
                    game.PromptBox.getIns().show(game.getLanById("shenling_tips14" /* shenling_tips14 */));
                    this.updateView();
                };
                //点击下阵
                ZhenrongHuashenMdr.prototype.onClickListModel = function (e) {
                    var index = e.item;
                    if (!index) {
                        return;
                    }
                    var idx = this._seledList.indexOf(index);
                    if (idx > -1) {
                        this._seledList.splice(idx, 1); //下阵
                    }
                    this.updateView();
                };
                //关闭界面最终上阵处理 todo
                ZhenrongHuashenMdr.prototype.finallyShangzhen = function () {
                    var map = new Map();
                    var info = this._proxy.getShangzhenInfo(this._legionType);
                    if (info && info.unitlist) {
                        //后端真上阵数据
                        info.unitlist.forEach(function (item) {
                            map.set(item.toNumber(), true);
                        });
                    }
                    var seledSize = this._seledList.length;
                    var sameCnt = 0;
                    if (map.size == seledSize) {
                        //前端假上阵数据
                        this._seledList.forEach(function (item) {
                            if (map.get(item)) {
                                sameCnt++;
                            }
                        });
                    }
                    if (map.size != seledSize || sameCnt != seledSize) {
                        this._proxy.sendShangzhen(this._legionType, 3, this._seledList);
                    }
                };
                return ZhenrongHuashenMdr;
            }(game.MdrBase));
            more.ZhenrongHuashenMdr = ZhenrongHuashenMdr;
            __reflect(ZhenrongHuashenMdr.prototype, "game.mod.more.ZhenrongHuashenMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouZhanbaoMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouZhanbaoMdr, _super);
                function XianjieLuandouZhanbaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianjieLuandouZhanbaoView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouZhanbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list.itemRenderer = more.XianjieLuandouZhanbaoItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.onNt("on_xianjie_pvp_battle_report_update" /* ON_XIANJIE_PVP_BATTLE_REPORT_UPDATE */, this.updateView, this);
                };
                XianjieLuandouZhanbaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XianjieLuandouZhanbaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.c2s_xianjie_pvp_oper(6 /* Oper6 */);
                };
                XianjieLuandouZhanbaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouZhanbaoMdr.prototype.updateView = function () {
                    this._listData.replaceAll(this._proxy.report_list);
                };
                return XianjieLuandouZhanbaoMdr;
            }(game.MdrBase));
            more.XianjieLuandouZhanbaoMdr = XianjieLuandouZhanbaoMdr;
            __reflect(XianjieLuandouZhanbaoMdr.prototype, "game.mod.more.XianjieLuandouZhanbaoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HonourItem = /** @class */ (function (_super) {
                __extends(HonourItem, _super);
                function HonourItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HonourItemSkin";
                    return _this;
                }
                HonourItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = base.facade.retMod("61" /* More */).retProxy(270 /* Honour */);
                };
                HonourItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                HonourItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data.cfg;
                    this.lb_limitcnt.text = game.StringUtil.substitute(game.getLanById("honour_tips2" /* honour_tips2 */), [cfg.person_limit]);
                    var taskId = cfg.target;
                    var taskData = mod.TaskUtil.getTask(taskId);
                    var taskDesc = mod.TaskUtil.getTaskDescNotSchedule(taskData);
                    this.lb_taskdef.textFlow = game.TextUtil.parseHtml(taskDesc);
                    this.icon.data = cfg.rewards[0];
                    this.redPoint.visible = this._proxy.getHintByTypeIndex(data.type, cfg.index);
                    var hasDraw = mod.TaskUtil.hasRewardDraw(taskData);
                    if (hasDraw) {
                        //已领取
                        this.img_status.visible = true;
                        this.img_status.source = 'lvseyilingqu';
                        this.lb_status.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(game.getLanById("maid_cue16" /* maid_cue16 */), 2330156 /* GREEN */));
                    }
                    else {
                        //未完成，已领完
                        var isFinish = data.info && data.info.is_finish == 1;
                        this.img_status.visible = isFinish;
                        this.img_status.source = isFinish ? 'hongseyilingwan' : '';
                        this.lb_status.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(game.getLanById("maid_cue17" /* maid_cue17 */), 16719376 /* RED */));
                    }
                };
                return HonourItem;
            }(mod.BaseListenerRenderer));
            more.HonourItem = HonourItem;
            __reflect(HonourItem.prototype, "game.mod.more.HonourItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HonourView = /** @class */ (function (_super) {
                __extends(HonourView, _super);
                function HonourView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HonourSkin";
                    return _this;
                }
                return HonourView;
            }(eui.Component));
            more.HonourView = HonourView;
            __reflect(HonourView.prototype, "game.mod.more.HonourView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var AchieveMainMdr = /** @class */ (function (_super) {
                __extends(AchieveMainMdr, _super);
                function AchieveMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Achieve */,
                            icon: "achieve_tab",
                            mdr: more.AchieveMdr,
                            title: "achieve_tips" /* achieve_tips */,
                            bg: "achieve_bg",
                            hintTypes: ["61" /* More */, "01" /* AchieveMain */, "01" /* Achieve */],
                        },
                        {
                            btnType: "02" /* Honour */,
                            icon: "rongyaobiaoqiantubiao",
                            mdr: more.HonourMdr,
                            title: "honour_tips1" /* honour_tips1 */,
                            bg: "honour_bg",
                            hintTypes: ["61" /* More */, "01" /* AchieveMain */, "02" /* Honour */],
                        }
                    ];
                    return _this;
                }
                return AchieveMainMdr;
            }(mod.WndBaseMdr));
            more.AchieveMainMdr = AchieveMainMdr;
            __reflect(AchieveMainMdr.prototype, "game.mod.more.AchieveMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var Tween = base.Tween;
            var AchieveMdr = /** @class */ (function (_super) {
                __extends(AchieveMdr, _super);
                function AchieveMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.AchieveView);
                    return _this;
                }
                AchieveMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(240 /* Achieve */);
                    this._taskList = new ArrayCollection();
                    this._view.list_task.itemRenderer = more.AchieveTaskRender;
                    this._view.list_task.dataProvider = this._taskList;
                };
                AchieveMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_draw, TouchEvent.TOUCH_TAP, this.onClickDraw);
                    addEventListener(this._view.icon, TouchEvent.TOUCH_TAP, this.onClickIcon);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                    this.onNt("on_achieve_info_update" /* ON_ACHIEVE_INFO_UPDATE */, this.onInfoUpdate, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this);
                };
                //子类重写，调用setAddEft()
                AchieveMdr.prototype.updateAddEft = function (n) {
                    var btn = n.body;
                    _super.prototype.setAddEft.call(this, this._view, btn.group_eft, this._view.group_eft1);
                };
                AchieveMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateTaskList();
                    this.updateView();
                };
                AchieveMdr.prototype.onHide = function () {
                    this._cfg = null;
                    this.removeTween();
                    _super.prototype.onHide.call(this);
                };
                AchieveMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(39 /* Achieve */) > -1) {
                        this.updateTaskList();
                    }
                };
                AchieveMdr.prototype.onInfoUpdate = function () {
                    this.updateView();
                };
                AchieveMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("chengjiu_jifen" /* chengjiu_jifen */) >= 0) {
                        this.updateView();
                    }
                };
                AchieveMdr.prototype.onClickDraw = function () {
                    if (!this._canAllDraw) {
                        game.PromptBox.getIns().show(game.getLanById("reward_tips" /* reward_tips */));
                        return;
                    }
                    mod.TaskUtil.drawRewardByType(39 /* Achieve */);
                };
                AchieveMdr.prototype.onClickIcon = function () {
                    if (this._canDraw) {
                        this._proxy.c2s_achievement_get_big_rewards();
                        return;
                    }
                    var data = this._view.icon.data;
                    mod.ViewMgr.getIns().showPropTips(data[0]);
                };
                AchieveMdr.prototype.updateTaskList = function () {
                    var tasks = mod.TaskUtil.getTaskList(39 /* Achieve */, true, true);
                    if (this._taskList.source.length > 0) {
                        this._taskList.replaceAll(tasks);
                    }
                    else {
                        this._taskList.source = tasks;
                    }
                    this._canAllDraw = false;
                    for (var _i = 0, tasks_1 = tasks; _i < tasks_1.length; _i++) {
                        var task = tasks_1[_i];
                        if (task.status == 1 /* Finish */) {
                            this._canAllDraw = true;
                            break;
                        }
                    }
                    this._view.btn_draw.redPoint.visible = this._canAllDraw;
                };
                AchieveMdr.prototype.updateView = function () {
                    var lv = this._proxy.lv;
                    var status = this._proxy.status;
                    this._view.lab_lv.text = lv + game.getLanById("lv" /* lv */);
                    var cfg = game.getConfigByNameId("achievement.json" /* Achievement */, lv);
                    if (!cfg || !cfg.value) {
                        //取不到配置，取上一等级的配置
                        cfg = game.getConfigByNameId("achievement.json" /* Achievement */, lv - 1);
                    }
                    if (!this._cfg || this._cfg.order_level != cfg.order_level) {
                        //配置不一致时候
                        var reward = cfg.rewards[0];
                        var index = reward[0];
                        this._view.icon.setData(reward, 3 /* NotTips */);
                        this.removeEftTitle();
                        this._eftId_title = this.addEftByParent(game.ResUtil.getTitleSrc(index), this._view.grp_title);
                        this.removeTween();
                        this._view.grp_title.y = 190;
                        Tween.get(this._view.grp_title, { loop: true })
                            .to({ y: 220 }, 800)
                            .to({ y: 190 }, 800);
                    }
                    this._cfg = cfg;
                    var curVal = game.RoleVo.ins.getValueByKey("chengjiu_jifen" /* chengjiu_jifen */); //成就积分
                    var maxVal = cfg && cfg.value || 0;
                    this._view.bar.show(curVal, maxVal, false, 0, false);
                    var hasDraw = status == 2 /* Draw */;
                    this._canDraw = !hasDraw && curVal >= maxVal;
                    this._view.icon.setHint(this._canDraw); //可领取时候
                    this._view.img_draw.visible = hasDraw;
                };
                AchieveMdr.prototype.removeTween = function () {
                    Tween.remove(this._view.grp_title);
                };
                AchieveMdr.prototype.removeEftTitle = function () {
                    if (this._eftId_title) {
                        this.removeEffect(this._eftId_title);
                        this._eftId_title = null;
                    }
                };
                return AchieveMdr;
            }(game.EffectMdrBase));
            more.AchieveMdr = AchieveMdr;
            __reflect(AchieveMdr.prototype, "game.mod.more.AchieveMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HonourMdr = /** @class */ (function (_super) {
                __extends(HonourMdr, _super);
                function HonourMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HonourView);
                    /**荣耀类型*/
                    _this._type = 1 /* Honour */;
                    return _this;
                }
                HonourMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(270 /* Honour */);
                    this._view.list.itemRenderer = more.HonourItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                HonourMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_go, egret.TouchEvent.TOUCH_TAP, this.onClickBtnGo, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_honour_info" /* ON_UPDATE_HONOUR_INFO */, this.updateView, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onUpdateTaskInfo, this);
                };
                HonourMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.c2s_honour_get_info(this._type);
                    this.updateView();
                };
                HonourMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = null;
                    this._selCfg = null;
                };
                HonourMdr.prototype.onUpdateTaskInfo = function (n) {
                    var types = n.body;
                    if (types.indexOf(55 /* Honour */) > -1) {
                        this.updateView();
                    }
                };
                HonourMdr.prototype.updateView = function () {
                    this.updateListData();
                    this.updateSelectInfo();
                };
                HonourMdr.prototype.updateListData = function () {
                    var listData = this._proxy.getListData(this._type);
                    this._listData.replaceAll(listData);
                    var selIdx = this._selIdx || 0;
                    this._view.list.selectedIndex = this._selIdx = selIdx;
                    this._selCfg = listData[selIdx].cfg;
                };
                //更新下方选中的信息
                HonourMdr.prototype.updateSelectInfo = function () {
                    if (!this._selCfg) {
                        return;
                    }
                    var taskId = this._selCfg.target;
                    var taskData = mod.TaskUtil.getTask(taskId);
                    //首个达成者信息
                    var taskDesc = mod.TaskUtil.getTaskDescNotSchedule(taskData);
                    var info = this._proxy.getInfoByTypeIndex(this._type, this._selCfg.index);
                    var satisfyCnt = info && info.count || 0;
                    var valStr = game.TextUtil.addColor(satisfyCnt + "/" + this._selCfg.person_limit, 2330156 /* GREEN */);
                    var limitStr = game.StringUtil.substitute(game.getLanById("honour_tips3" /* honour_tips3 */), [valStr]);
                    this._view.lb_limitcnt.textFlow = game.TextUtil.parseHtml(limitStr);
                    var mate = info && info.owner_info || null;
                    if (mate) {
                        this._view.head.updateHeadShow(mate.head, mate.head_frame, mate.sex, mate.role_id, mate.server_id);
                        var timeSec = mate.value && mate.value.toNumber() || 0;
                        this._view.lb_date.text = game.TimeUtil.formatTime(timeSec * 1000, 'yyyy年MM月dd日');
                        var str = game.TextUtil.addColor(mate.name, 3496307 /* DEFAULT */) + game.TextUtil.addColor(game.getLanById("honour_tips4" /* honour_tips4 */), 2330156 /* GREEN */) + taskDesc;
                        this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    }
                    else {
                        this._view.head.defaultHeadShow();
                        this._view.lb_date.text = game.getLanById("tishi_2" /* tishi_2 */);
                        this._view.lb_desc.textFlow = game.TextUtil.parseHtml(taskDesc);
                    }
                    //任务信息
                    this._view.icon.data = this._selCfg.rewards[0];
                    this._view.lb_taskdesc.textFlow = game.TextUtil.parseHtml(mod.TaskUtil.getTaskDesc(taskData));
                    var schedule = taskData && taskData.schedule || 0;
                    var target = taskData && taskData.target || 0;
                    this._view.bar.show(schedule, target, false, null, false, 1 /* Value */);
                    var hasDraw = mod.TaskUtil.hasRewardDraw(taskData);
                    if (hasDraw) {
                        //已领取
                        this._view.img_status.visible = true;
                        this._view.img_status.source = 'lvseyilingqu';
                        this._view.btn_go.visible = false;
                    }
                    else {
                        //未完成，已领完
                        var isFinish = info && info.is_finish == 1;
                        this._view.img_status.visible = isFinish;
                        this._view.img_status.source = isFinish ? 'hongseyilingwan' : '';
                        this._view.btn_go.visible = !isFinish;
                        var canDraw = mod.TaskUtil.canRewardDraw(taskData);
                        this._view.btn_go.setHint(canDraw);
                        if (canDraw) {
                            this._view.btn_go.label = game.getLanById("lingqu" /* lingqu */);
                            this._view.btn_go.setYellow();
                        }
                        else {
                            this._view.btn_go.label = game.getLanById("goto" /* goto */);
                            this._view.btn_go.setBlue();
                        }
                    }
                };
                HonourMdr.prototype.onClickBtnGo = function () {
                    if (!this._selCfg) {
                        return;
                    }
                    var taskId = this._selCfg.target;
                    var taskData = mod.TaskUtil.getTask(taskId);
                    mod.TaskUtil.clickTask(taskData);
                };
                HonourMdr.prototype.onClickList = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIdx;
                    this._selCfg = e.item.cfg;
                    this.updateSelectInfo();
                };
                return HonourMdr;
            }(game.MdrBase));
            more.HonourMdr = HonourMdr;
            __reflect(HonourMdr.prototype, "game.mod.more.HonourMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var s2c_guild_pk_enter = msg.s2c_guild_pk_enter;
            var s2c_guild_pk_update_buff = msg.s2c_guild_pk_update_buff;
            var c2s_guild_pk_use_skill = msg.c2s_guild_pk_use_skill;
            var s2c_guild_pk_update_reward = msg.s2c_guild_pk_update_reward;
            var s2c_guild_pk_use_skill = msg.s2c_guild_pk_use_skill;
            var CrossUnionFightProxy = /** @class */ (function (_super) {
                __extends(CrossUnionFightProxy, _super);
                function CrossUnionFightProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionFightProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.CrossUnionModel();
                    this.onProto(s2c_guild_pk_enter, this.s2c_guild_pk_enter, this);
                    // this.onProto(s2c_guild_pk_update_injur, this.s2c_guild_pk_update_injur, this);
                    this.onProto(s2c_guild_pk_update_buff, this.s2c_guild_pk_update_buff, this);
                    // this.onProto(s2c_guild_pk_update_dead, this.s2c_guild_pk_update_dead, this);
                    this.onProto(s2c_guild_pk_update_reward, this.s2c_guild_pk_update_reward, this);
                    this.onProto(s2c_guild_pk_use_skill, this.s2c_guild_pk_use_skill, this);
                };
                CrossUnionFightProxy.prototype.c2s_guild_pk_use_skill = function (index) {
                    var msg = new c2s_guild_pk_use_skill();
                    msg.skill_id = index;
                    this.sendProto(msg);
                };
                CrossUnionFightProxy.prototype.s2c_guild_pk_update_reward = function (n) {
                    var msg = n.body;
                    this._model.reward_status = msg.reward_status || 0;
                    this._model.reward_num = msg.reward_num || 0;
                    this.sendNt("on_update_cuf_reward_info" /* ON_UPDATE_CUF_REWARD_INFO */);
                };
                CrossUnionFightProxy.prototype.s2c_guild_pk_enter = function (n) {
                    var msg = n.body;
                    if (msg.my_base) {
                        this._model.my_base = msg.my_base;
                    }
                    if (msg.target_base) {
                        this._model.target_base = msg.target_base;
                    }
                    this._model.reward_status = msg.reward_status || 0;
                    this._model.reward_num = msg.reward_num || 0;
                    if (msg.skill_cd_list) {
                        this._model.skill_cd_list = msg.skill_cd_list;
                    }
                    if (msg.list) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var data = _a[_i];
                            var index = data.team_index;
                            if (data.target) {
                                this._model.fight_list.set(index, data.target);
                            }
                            if (data.role) {
                                index = index + 4;
                                this._model.fight_list.set(index, data.role);
                            }
                        }
                    }
                    // this.sendNt(CUFigthEvent.ON_UPDATE_FIGHT_ENTER);
                    // ViewMgr.getIns().saveLast();
                    // ViewMgr.getIns().showMain();
                    // ViewMgr.getIns().showView(ModName.More, MoreViewType.CrossUnionScene);
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "166" /* CrossUnionScene */);
                };
                // private s2c_guild_pk_update_injur(n: GameNT): void {
                //     let msg: s2c_guild_pk_update_injur = n.body;
                //     this._model.fight_step.push({ list: msg.list });
                // }
                CrossUnionFightProxy.prototype.s2c_guild_pk_update_buff = function (n) {
                    var msg = n.body;
                    var type = msg.type || 0;
                    if (msg.list) {
                        this._model.fight_step.push({ type: type, list: msg.list });
                    }
                    if (msg.dead_list) {
                        this._model.fight_step.push({ is_dead: true, list_dead: msg.dead_list });
                    }
                };
                CrossUnionFightProxy.prototype.s2c_guild_pk_use_skill = function (n) {
                    var msg = n.body;
                    if (msg.skill_id) {
                        game.PromptBox.getIns().show("使用成功");
                    }
                };
                // private s2c_guild_pk_update_dead(n: GameNT): void {
                //     let msg: s2c_guild_pk_update_dead = n.body;
                //     if (msg.list) {
                //         this._model.fight_step.push({ is_dead: true, list_dead: msg.list })
                //     }
                //     // this._model.fight_step.push({ dead_id: msg.dead_id, supply_data: msg.supply_data });
                // }
                // public onEnterScene(): void {
                //     this.sendNt(SceneEvent.ON_SCENE_READY, SceneType.Abyss);
                // }
                /**播放表现完成 更新数据 */
                CrossUnionFightProxy.prototype.onUpdateData = function (step) {
                    if (step.is_dead) {
                        for (var _i = 0, _a = step.list_dead; _i < _a.length; _i++) {
                            var data = _a[_i];
                            this.setRole(data.dead_id, data.supply_data);
                        }
                        return;
                    }
                    for (var _b = 0, _c = step.list; _b < _c.length; _b++) {
                        var info = _c[_b];
                        if (!info.target_id || +info.target_id === 0) {
                            this.updateBeast(info.type, info.hp);
                            continue;
                        }
                        this.updateRole(info.target_id, info.hp);
                    }
                    this.sendNt("on_update_fight_info" /* ON_UPDATE_FIGHT_INFO */);
                };
                /**战斗步骤数据 */
                CrossUnionFightProxy.prototype.getStepData = function (index) {
                    return this._model.fight_step[index];
                };
                CrossUnionFightProxy.prototype.setRole = function (dead_id, role) {
                    var keys = Array.from(this._model.fight_list.keys());
                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                        var key = keys_1[_i];
                        var info = this.getRoleInfo(key);
                        if (!info || !info.role_id.eq(dead_id)) {
                            continue;
                        }
                        if (!role) {
                            this._model.fight_list.delete(key);
                        }
                        else {
                            this._model.fight_list.set(key, role);
                        }
                        this.sendNt("on_update_fight_pos_info" /* ON_UPDATE_FIGHT_POS_INFO */, key);
                        return;
                    }
                };
                CrossUnionFightProxy.prototype.updateRole = function (target_id, value) {
                    var keys = Array.from(this._model.fight_list.keys());
                    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
                        var key = keys_2[_i];
                        var info = this.getRoleInfo(key);
                        if (!info || !info.role_id.eq(target_id)) {
                            continue;
                        }
                        info.value = Long.fromInt(value);
                        this._model.fight_list.set(key, info);
                        return;
                    }
                };
                CrossUnionFightProxy.prototype.updateBeast = function (type, value) {
                    if (type == 1 /* Own */) {
                        this._model.my_base.hp = value;
                    }
                    else {
                        this._model.target_base.hp = value;
                    }
                    this.sendNt("on_update_beast_info" /* ON_UPDATE_BEAST_INFO */);
                };
                CrossUnionFightProxy.prototype.getRoleInfo = function (index) {
                    return this._model.fight_list.get(index);
                };
                CrossUnionFightProxy.prototype.getRoleIndex = function (role_id) {
                    if (!role_id) {
                        return 0;
                    }
                    var keys = Array.from(this._model.fight_list.keys());
                    for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
                        var key = keys_3[_i];
                        var role = this.getRoleInfo(key);
                        if (role && role.role_id.eq(role_id)) {
                            return key;
                        }
                    }
                    return 0;
                };
                /**根据传入的index获取对位index */
                CrossUnionFightProxy.prototype.getFightIndex = function (index) {
                    if (index > 4) {
                        return index - 4;
                    }
                    return index + 4;
                };
                Object.defineProperty(CrossUnionFightProxy.prototype, "my_base", {
                    get: function () {
                        return this._model.my_base;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionFightProxy.prototype, "target_base", {
                    get: function () {
                        return this._model.target_base;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionFightProxy.prototype, "reward_num", {
                    get: function () {
                        return this._model.reward_num || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionFightProxy.prototype, "reward_status", {
                    get: function () {
                        return this._model.reward_status || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                CrossUnionFightProxy.prototype.onExit = function () {
                    this._model.fight_list.clear();
                    this._model.fight_step.length = 0;
                };
                return CrossUnionFightProxy;
            }(game.ProxyBase));
            more.CrossUnionFightProxy = CrossUnionFightProxy;
            __reflect(CrossUnionFightProxy.prototype, "game.mod.more.CrossUnionFightProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionModel = /** @class */ (function () {
                function CrossUnionModel() {
                    /**是否报名 */
                    this.is_join = false;
                    /**胜负奖励 1.可领取2.已领取(胜败奖励) */
                    this.status = 0;
                    /**战斗结果 1.成功2.失败(战斗结果) */
                    this.ret = 0;
                    /**敌方队伍数据 */
                    this.list_emeny = new Map();
                    /**队伍数据 用于滑动列表展示外显 */
                    this.list = new Map();
                    /**队伍数据 用于调整阵型 */
                    this.team_list = new Map();
                    /**开启日期 */
                    // public readonly openDays: number[] = [3, 6];
                    /**开启时间 */
                    this.openHours = 20;
                    /**选择阵营 1本方2敌方 */
                    this.camp = 0;
                    this.fight_infos = new Map();
                    this.fight_list = new Map();
                    this.skill_cd_list = [];
                    this.fight_step = [];
                    /**-------------------战斗--------------------- */
                }
                return CrossUnionModel;
            }());
            more.CrossUnionModel = CrossUnionModel;
            __reflect(CrossUnionModel.prototype, "game.mod.more.CrossUnionModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            // import LanDef = game.localization.LanDef;
            var TimeMgr = base.TimeMgr;
            var c2s_guild_pk_root = msg.c2s_guild_pk_root;
            var c2s_guild_pk_team_show = msg.c2s_guild_pk_team_show;
            var s2c_guild_pk_root = msg.s2c_guild_pk_root;
            var s2c_guild_pk_team_show = msg.s2c_guild_pk_team_show;
            var c2s_guild_pk_team_slide = msg.c2s_guild_pk_team_slide;
            var s2c_guild_pk_team_slide = msg.s2c_guild_pk_team_slide;
            var c2s_guild_pk_lineup_show = msg.c2s_guild_pk_lineup_show;
            var c2s_guild_pk_zhanbao = msg.c2s_guild_pk_zhanbao;
            var s2c_guild_pk_zhanbao = msg.s2c_guild_pk_zhanbao;
            var c2s_guild_pk_oper = msg.c2s_guild_pk_oper;
            var s2c_guild_pk_oper = msg.s2c_guild_pk_oper;
            var s2c_guild_pk_lineup_show = msg.s2c_guild_pk_lineup_show;
            var c2s_guild_pk_fight_show = msg.c2s_guild_pk_fight_show;
            var s2c_guild_pk_fight_show = msg.s2c_guild_pk_fight_show;
            var s2c_guild_pk_ret = msg.s2c_guild_pk_ret;
            var CrossUnionProxy = /** @class */ (function (_super) {
                __extends(CrossUnionProxy, _super);
                function CrossUnionProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.CrossUnionModel();
                    this.onProto(s2c_guild_pk_root, this.s2c_guild_pk_root, this);
                    this.onProto(s2c_guild_pk_team_show, this.s2c_guild_pk_team_show, this);
                    this.onProto(s2c_guild_pk_team_slide, this.s2c_guild_pk_team_slide, this);
                    this.onProto(s2c_guild_pk_zhanbao, this.s2c_guild_pk_zhanbao, this);
                    this.onProto(s2c_guild_pk_oper, this.s2c_guild_pk_oper, this);
                    this.onProto(s2c_guild_pk_lineup_show, this.s2c_guild_pk_lineup_show, this);
                    this.onProto(s2c_guild_pk_fight_show, this.s2c_guild_pk_fight_show, this);
                    this.onProto(s2c_guild_pk_ret, this.s2c_guild_pk_ret, this);
                };
                /**------------------------协议------------------------- */
                CrossUnionProxy.prototype.c2s_guild_pk_root = function () {
                    var msg = new c2s_guild_pk_root();
                    this.sendProto(msg);
                };
                CrossUnionProxy.prototype.c2s_guild_pk_team_show = function (type) {
                    var msg = new c2s_guild_pk_team_show();
                    msg.type = type;
                    this.sendProto(msg);
                };
                CrossUnionProxy.prototype.c2s_guild_pk_team_slide = function (type, start_pos, end_pos) {
                    var msg = new c2s_guild_pk_team_slide();
                    msg.type = type;
                    msg.start_pos = start_pos;
                    msg.end_pos = end_pos;
                    this.sendProto(msg);
                };
                CrossUnionProxy.prototype.c2s_guild_pk_lineup_show = function () {
                    var msg = new c2s_guild_pk_lineup_show();
                    this.sendProto(msg);
                };
                CrossUnionProxy.prototype.c2s_guild_pk_zhanbao = function () {
                    var msg = new c2s_guild_pk_zhanbao();
                    this.sendProto(msg);
                };
                /**1.报名2.加入队伍3.调整位置4.领取奖励(胜败奖励)5.领取观战奖励6.进入战斗场景 */
                CrossUnionProxy.prototype.c2s_guild_pk_oper = function (oper, index, start_id, end_id) {
                    var msg = new c2s_guild_pk_oper();
                    msg.oper = oper;
                    if (index !== null) {
                        msg.index = index;
                    }
                    if (start_id !== null) {
                        msg.start_id = start_id;
                    }
                    if (end_id !== null) {
                        msg.end_id = end_id;
                    }
                    this.sendProto(msg);
                };
                CrossUnionProxy.prototype.c2s_guild_pk_fight_show = function (team_index) {
                    var msg = new c2s_guild_pk_fight_show();
                    msg.team_index = team_index;
                    this.sendProto(msg);
                };
                CrossUnionProxy.prototype.s2c_guild_pk_root = function (n) {
                    var msg = n.body;
                    this._model.is_join = msg.is_join || false;
                    // this._model.status = msg.status || 0;
                    // this._model.ret = msg.ret || 0;
                    this.resetResult(msg.status, msg.ret);
                    if (msg.hasOwnProperty("is_guild_join")) {
                        this._model.is_guild_join = msg.is_guild_join;
                    }
                    var openView = this.openView;
                    if (openView != "161" /* CrossUnionReady */) {
                        mod.ViewMgr.getIns().showView("61" /* More */, openView, null, false);
                    }
                    this.sendNt("on_update_cross_union_ready_info" /* ON_UPDATE_CROSS_UNION_READY_INFO */);
                };
                /**备战界面 显示外显列表 */
                CrossUnionProxy.prototype.s2c_guild_pk_team_show = function (n) {
                    var msg = n.body;
                    if (msg.my_base) {
                        this._model.my_base = msg.my_base;
                    }
                    if (msg.target_base) {
                        this._model.target_base = msg.target_base;
                    }
                    // if (msg.status) {
                    //     this._model.status = msg.status;
                    // }
                    // if (msg.ret) {
                    //     this._model.ret = msg.ret;
                    // }
                    this.resetResult(msg.status, msg.ret);
                    this.sendNt("on_update_cross_union_info" /* ON_UPDATE_CROSS_UNION_INFO */);
                    if (msg.team_list) {
                        var list = this.getMap(msg.type);
                        for (var _i = 0, _a = msg.team_list; _i < _a.length; _i++) {
                            var team = _a[_i];
                            var team_index = team.team_index;
                            var map = list.get(team_index);
                            if (map) {
                                map.clear();
                            }
                            else {
                                map = new Map();
                            }
                            for (var _b = 0, _c = team.list; _b < _c.length; _b++) {
                                var info = _c[_b];
                                map.set(info.index, info);
                            }
                            list.set(team_index, map);
                        }
                        this.sendNt("on_update_cross_union_list_reset_info" /* ON_UPDATE_CROSS_UNION_LIST_RESET_INFO */, msg.type);
                    }
                };
                /**调整阵型主界面显示 */
                CrossUnionProxy.prototype.s2c_guild_pk_lineup_show = function (n) {
                    var msg = n.body;
                    if (msg.team_list) {
                        for (var _i = 0, _a = msg.team_list; _i < _a.length; _i++) {
                            var team_list = _a[_i];
                            this._model.team_list.set(team_list.team_index, team_list);
                        }
                    }
                    this.sendNt("on_update_cross_union_team_list_info" /* ON_UPDATE_CROSS_UNION_TEAM_LIST_INFO */);
                };
                /**滑动加载 */
                CrossUnionProxy.prototype.s2c_guild_pk_team_slide = function (n) {
                    var msg = n.body;
                    if (msg.team_list) {
                        var list = this.getMap(msg.type);
                        for (var _i = 0, _a = msg.team_list; _i < _a.length; _i++) {
                            var team = _a[_i];
                            var team_index = team.team_index;
                            var map = list.get(team_index);
                            if (!map) {
                                map = new Map();
                            }
                            for (var _b = 0, _c = team.list; _b < _c.length; _b++) {
                                var info = _c[_b];
                                map.set(info.index, info);
                            }
                        }
                    }
                    this.sendNt("on_update_cross_union_list_info" /* ON_UPDATE_CROSS_UNION_LIST_INFO */, msg.type);
                };
                CrossUnionProxy.prototype.s2c_guild_pk_zhanbao = function (n) {
                    var msg = n.body;
                    if (msg.list) {
                        this._model.zhanbao = msg.list;
                    }
                    this.sendNt("on_update_cross_union_zhanbao_info" /* ON_UPDATE_CROSS_UNION_ZHANBAO_INFO */);
                };
                CrossUnionProxy.prototype.s2c_guild_pk_oper = function (n) {
                    var msg = n.body;
                    switch (msg.oper) {
                        case 1:
                            this._model.is_join = true;
                            // this.sendNt(MoreEvent.ON_UPDATE_CROSS_UNION_READY_INFO);
                            this.sendNt("on_update_cross_union_over_view" /* ON_UPDATE_CROSS_UNION_OVER_VIEW */);
                            break;
                        case 2:
                            if (this.camp == 1 /* Own */) {
                                this.c2s_guild_pk_team_show(1 /* Own */);
                            }
                            break;
                        case 3:
                            var team_index = msg.lineup_list.team_index;
                            if (this._model.team_list.has(team_index)) {
                                this._model.team_list.delete(team_index);
                            }
                            this._model.team_list.set(team_index, msg.lineup_list);
                            this.sendNt("on_update_cross_union_team_list_info" /* ON_UPDATE_CROSS_UNION_TEAM_LIST_INFO */);
                            break;
                        case 4:
                            // this._model.status = msg.status;
                            // if (this.openState == CrossUnionOpenState.Ready) {
                            //     this._model.ret = 0;
                            // }
                            this.resetResult(msg.status);
                            this.sendNt("on_update_cross_union_ready_info" /* ON_UPDATE_CROSS_UNION_READY_INFO */);
                            break;
                        // case 5:
                        //     // TODO:观看奖励
                        //     break;
                        case 7:
                            break;
                    }
                };
                CrossUnionProxy.prototype.s2c_guild_pk_fight_show = function (n) {
                    var msg = n.body;
                    this._model.fight_infos.set(msg.team_index, msg);
                    this.sendNt("on_update_cross_union_fight_info" /* ON_UPDATE_CROSS_UNION_FIGHT_INFO */);
                };
                CrossUnionProxy.prototype.s2c_guild_pk_ret = function (n) {
                    var msg = n.body;
                    this._model.ret = msg.is_win ? 1 : 2;
                    this.sendNt("on_update_cross_union_over_view" /* ON_UPDATE_CROSS_UNION_OVER_VIEW */, msg);
                };
                /**------------------------协议------------------------- */
                /**-----------------------数据逻辑---------------------- */
                CrossUnionProxy.prototype.getFightInfos = function (index) {
                    return this._model.fight_infos.get(index) || null;
                };
                CrossUnionProxy.prototype.getTeamInfo = function (type) {
                    if (type == 1 /* Own */) {
                        return this._model.my_base;
                    }
                    else {
                        return this._model.target_base;
                    }
                };
                CrossUnionProxy.prototype.getTeamList = function (index) {
                    var list = [];
                    if (!index) {
                        var team_lists = Array.from(this._model.team_list.values());
                        for (var _i = 0, team_lists_1 = team_lists; _i < team_lists_1.length; _i++) {
                            var team_list = team_lists_1[_i];
                            // list.concat(team_list.members);
                            for (var _a = 0, _b = team_list.members; _a < _b.length; _a++) {
                                var info = _b[_a];
                                list.push({ team: index, info: info });
                            }
                        }
                        return list;
                    }
                    if (this._model.team_list.has(index)) {
                        var infos = this._model.team_list.get(index);
                        for (var _c = 0, _d = infos.members; _c < _d.length; _c++) {
                            var info = _d[_c];
                            list.push({ team: index, info: info });
                        }
                        return list;
                    }
                    return list;
                };
                /**全部队伍的列表 */
                CrossUnionProxy.prototype.getList = function (type) {
                    var list = [];
                    var map = this.getMap(type);
                    var teams = 4;
                    for (var i = 1; i <= teams; i++) {
                        var map_list = map.get(i) || new Map();
                        var keys = Array.from(map_list.keys());
                        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {
                            var key = keys_4[_i];
                            var info = map_list.get(key);
                            /**获取索引 */
                            var pos = (key - 1) * 4 + (i - 1);
                            list[pos] = info;
                        }
                    }
                    return list;
                };
                Object.defineProperty(CrossUnionProxy.prototype, "team_list_data", {
                    get: function () {
                        var list = [];
                        var team_lists = Array.from(this._model.team_list.values());
                        var teams = 4;
                        // for (let team_list of teams) {
                        for (var i = 0; i < teams; i++) {
                            var team_list = team_lists[i];
                            var power = 0;
                            var count = 0;
                            if (team_list) {
                                for (var _i = 0, _a = team_list.members; _i < _a.length; _i++) {
                                    var info = _a[_i];
                                    power += info.power.toNumber();
                                    count++;
                                }
                            }
                            list.push({ team_index: i + 1, power: power, count: count });
                        }
                        return list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "openHours", {
                    get: function () {
                        return this._model.openHours;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "openDays", {
                    get: function () {
                        // return this._model.openDays;
                        var list = [];
                        for (var _i = 0, _a = this.guild_pk_open; _i < _a.length; _i++) {
                            var data = _a[_i];
                            list.push(data[0]);
                        }
                        return list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "openState", {
                    get: function () {
                        var ms = TimeMgr.time.serverTimeSecond * 1000;
                        var day = game.TimeUtil.formatWeekday(ms);
                        //开启阶段
                        if (this.openDays.indexOf(day) > -1) {
                            var hour = game.TimeUtil.formatHours(ms);
                            if (hour >= this.openHours) {
                                return 3 /* Open */;
                            }
                            return 2 /* Match */;
                        }
                        //非开启阶段
                        // for (let openDay of this.openDays) {
                        //     if (openDay - 1 == day) {
                        //         return CrossUnionOpenState.Match;
                        //     }
                        // }
                        var len = this.openDays.length;
                        for (var i = 0; i < len; i++) {
                            if (day >= this.guild_mate_time[i] && day <= this.openDays[i] - 1) {
                                return 2 /* Match */;
                            }
                        }
                        return 1 /* Ready */;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "openView", {
                    /**判断开启界面 */
                    get: function () {
                        if (!this.is_join) { //没有报名
                            return "161" /* CrossUnionReady */;
                        }
                        if (this.ret) { //报名了战斗结束
                            return "161" /* CrossUnionReady */;
                        }
                        return "160" /* CrossUnion */;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "matchTime", {
                    /**匹配开始时间 */
                    get: function () {
                        if (this.openState == 1 /* Ready */) {
                            var ms = TimeMgr.time.serverTimeSecond * 1000;
                            var day = game.TimeUtil.formatWeekday(ms);
                            for (var _i = 0, _a = this.openDays; _i < _a.length; _i++) {
                                var openDay = _a[_i];
                                if (day < openDay) {
                                    return game.TimeUtil.getNextDayTime(ms, true, openDay - 1 - day);
                                }
                            }
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "openTime", {
                    /**战斗开始时间 */
                    get: function () {
                        if (this.openState != 3 /* Open */) {
                            var ms = TimeMgr.time.serverTimeSecond * 1000;
                            var day = game.TimeUtil.formatWeekday(ms);
                            for (var _i = 0, _a = this.openDays; _i < _a.length; _i++) {
                                var openDay = _a[_i];
                                if (day < openDay) {
                                    return game.TimeUtil.getNextDayTime(ms, true, openDay - day) + this.openHours * game.Second.Hour;
                                }
                                else if (day == openDay) {
                                    return game.TimeUtil.getNextDayTime(ms, true, 1) - 4 * game.Second.Hour;
                                }
                            }
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "select", {
                    get: function () {
                        return this._model.select || 0;
                    },
                    set: function (v) {
                        this._model.select = v;
                        if (this._model.select) {
                            this.sendNt("on_update_cross_union_select_info" /* ON_UPDATE_CROSS_UNION_SELECT_INFO */);
                        }
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "is_join", {
                    get: function () {
                        return this._model.is_join;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "status", {
                    get: function () {
                        return this._model.status || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "ret", {
                    get: function () {
                        return this._model.ret || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "is_guild_join", {
                    get: function () {
                        return this._model.is_guild_join;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "camp", {
                    get: function () {
                        return this._model.camp;
                    },
                    set: function (v) {
                        this._model.camp = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                CrossUnionProxy.prototype.getMap = function (type) {
                    if (type == 1 /* Own */) {
                        return this._model.list;
                    }
                    else {
                        return this._model.list_emeny;
                    }
                };
                Object.defineProperty(CrossUnionProxy.prototype, "team_oper", {
                    get: function () {
                        var cfg = game.getConfigByNameId("guild_job_data.json" /* GuildJobData */, mod.RoleUtil.getGuildJob());
                        return cfg && !!cfg.guild_pk;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "zhanbao", {
                    get: function () {
                        return this._model.zhanbao || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                CrossUnionProxy.prototype.resetResult = function (status, ret) {
                    if (ret === void 0) { ret = 0; }
                    this._model.status = status || 0;
                    switch (this.openState) {
                        case 1 /* Ready */:
                        case 2 /* Match */:
                            this._model.ret = status == 2 ? 0 : ret;
                            break;
                        default:
                            this._model.ret = ret;
                            break;
                    }
                };
                /**-----------------------数据逻辑---------------------- */
                /**-------------------------参数表配置------------------------ */
                CrossUnionProxy.prototype.getRewards = function (ret) {
                    if (ret == 1) {
                        return this.guild_pk_win_rewar;
                    }
                    else {
                        return this.guild_pk_lose;
                    }
                };
                Object.defineProperty(CrossUnionProxy.prototype, "guild_pk_win_rewar", {
                    get: function () {
                        if (!this._model.guild_pk_win_rewar) {
                            var param = game.GameConfig.getParamConfigById("guild_pk_win_rewar");
                            this._model.guild_pk_win_rewar = param.value;
                        }
                        return this._model.guild_pk_win_rewar;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "guild_pk_lose", {
                    get: function () {
                        if (!this._model.guild_pk_lose) {
                            var param = game.GameConfig.getParamConfigById("guild_pk_lose");
                            this._model.guild_pk_lose = param.value;
                        }
                        return this._model.guild_pk_lose;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "guild_pk_show", {
                    get: function () {
                        if (!this._model.guild_pk_show) {
                            var param = game.GameConfig.getParamConfigById("guild_pk_show");
                            this._model.guild_pk_show = param.value;
                        }
                        return this._model.guild_pk_show;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "guild_pk_see_reward", {
                    get: function () {
                        if (!this._model.guild_pk_see_reward) {
                            var param = game.GameConfig.getParamConfigById("guild_pk_see_reward");
                            this._model.guild_pk_see_reward = param.value;
                        }
                        return this._model.guild_pk_see_reward;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "guild_pk_open", {
                    get: function () {
                        if (!this._model.guild_pk_open) {
                            var param = game.GameConfig.getParamConfigById("guild_pk_open");
                            this._model.guild_pk_open = param.value;
                        }
                        return this._model.guild_pk_open;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CrossUnionProxy.prototype, "guild_mate_time", {
                    get: function () {
                        if (!this._model.guild_mate_time) {
                            var param = game.GameConfig.getParamConfigById("guild_mate_time");
                            this._model.guild_mate_time = param.value;
                        }
                        return this._model.guild_mate_time;
                    },
                    enumerable: true,
                    configurable: true
                });
                return CrossUnionProxy;
            }(game.ProxyBase));
            more.CrossUnionProxy = CrossUnionProxy;
            __reflect(CrossUnionProxy.prototype, "game.mod.more.CrossUnionProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var CrossUnionFormatItem = /** @class */ (function (_super) {
                __extends(CrossUnionFormatItem, _super);
                function CrossUnionFormatItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionFormatItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 265 /* CrossUnion */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn, this.onClickBtn, this);
                };
                CrossUnionFormatItem.prototype.dataChanged = function () {
                    this._idx = this.itemIndex + 1;
                    this.btn.visible = !!this.data.team;
                    if (this.btn.visible) {
                        this.btn.icon = !!this._proxy.select ? "quxiao2" : "xuanze2";
                    }
                    this.lab_pos.text = "" + this._idx;
                    var info = this.data.info;
                    this.lab_name.text = "" + (info.name || "");
                    this.lab_job.text = "" + game.UnionJobStr[info.guild_job || 4];
                    this.powerLab.setPowerValue(info.power || 0);
                };
                CrossUnionFormatItem.prototype.onClickBtn = function () {
                    if (!this._proxy.team_oper) {
                        game.PromptBox.getIns().show("暂无权限");
                        return;
                    }
                    var role_id = this.data.info && this.data.info.role_id;
                    if (!role_id) {
                        DEBUG && console.error("role_id is undefined");
                        return;
                    }
                    if (!this._proxy.select) {
                        this._proxy.select = role_id;
                        return;
                    }
                    var select = this._proxy.select;
                    this._proxy.c2s_guild_pk_oper(3, null, select, role_id);
                };
                return CrossUnionFormatItem;
            }(mod.BaseRenderer));
            more.CrossUnionFormatItem = CrossUnionFormatItem;
            __reflect(CrossUnionFormatItem.prototype, "game.mod.more.CrossUnionFormatItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionFormatView = /** @class */ (function (_super) {
                __extends(CrossUnionFormatView, _super);
                function CrossUnionFormatView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionFormatSkin";
                    return _this;
                }
                return CrossUnionFormatView;
            }(eui.Component));
            more.CrossUnionFormatView = CrossUnionFormatView;
            __reflect(CrossUnionFormatView.prototype, "game.mod.more.CrossUnionFormatView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionPlayerItem = /** @class */ (function (_super) {
                __extends(CrossUnionPlayerItem, _super);
                function CrossUnionPlayerItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionPlayerItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    // this._proxy = getProxy(ModName.More, ProxyType.CrossUnion);
                };
                CrossUnionPlayerItem.prototype.dataChanged = function () {
                    this._idx = this.itemIndex + 1;
                    if (!this.data) {
                        this.removeAllEffects();
                        this.currentState = "1";
                    }
                    else {
                        this.currentState = "2";
                        this.updateRankUIRole(this.grp_eft, this.data, 0.5);
                        this.lab_name.text = this.data.name;
                    }
                    this.title.visible = this.itemIndex < 4;
                    if (this.title.visible) {
                        this.title.setData(this._idx);
                    }
                };
                return CrossUnionPlayerItem;
            }(mod.BaseRenderer));
            more.CrossUnionPlayerItem = CrossUnionPlayerItem;
            __reflect(CrossUnionPlayerItem.prototype, "game.mod.more.CrossUnionPlayerItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionReadyView = /** @class */ (function (_super) {
                __extends(CrossUnionReadyView, _super);
                function CrossUnionReadyView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionReadySkin";
                    return _this;
                }
                return CrossUnionReadyView;
            }(eui.Component));
            more.CrossUnionReadyView = CrossUnionReadyView;
            __reflect(CrossUnionReadyView.prototype, "game.mod.more.CrossUnionReadyView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionRewardView = /** @class */ (function (_super) {
                __extends(CrossUnionRewardView, _super);
                function CrossUnionRewardView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionRewardSkin";
                    return _this;
                }
                return CrossUnionRewardView;
            }(eui.Component));
            more.CrossUnionRewardView = CrossUnionRewardView;
            __reflect(CrossUnionRewardView.prototype, "game.mod.more.CrossUnionRewardView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionSetTeamItem = /** @class */ (function (_super) {
                __extends(CrossUnionSetTeamItem, _super);
                function CrossUnionSetTeamItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                // private _type: number;
                CrossUnionSetTeamItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    // this._proxy = getProxy(ModName.More, ProxyType.CrossUnion);
                };
                CrossUnionSetTeamItem.prototype.dataChanged = function () {
                    // if (!this.data) {
                    //     return;
                    // }
                    var info = this.data;
                    // let info: guild_pk_base = this._proxy.getTeamInfo(this.data);
                    this.lab_name.text = info && info.guild_name || "尚未匹配仙宗";
                    this.lab_num.text = "" + (info && info.num || 0);
                    this.lab_level.text = (info && info.level || 0) + "\u7EA7";
                    var hp = info && info.hp || 100;
                    this.bar.show(hp, 100, false, 0, false, 0 /* Percent */);
                };
                CrossUnionSetTeamItem.prototype.setData = function (data) {
                    // if (this._type != type) {
                    //     this._type = type;
                    //     this.currentState = `${type}`;
                    // }
                    this.data = data;
                };
                Object.defineProperty(CrossUnionSetTeamItem.prototype, "isSelect", {
                    set: function (v) {
                        this.img_sel.visible = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                return CrossUnionSetTeamItem;
            }(mod.BaseRenderer));
            more.CrossUnionSetTeamItem = CrossUnionSetTeamItem;
            __reflect(CrossUnionSetTeamItem.prototype, "game.mod.more.CrossUnionSetTeamItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionTeamItem = /** @class */ (function (_super) {
                __extends(CrossUnionTeamItem, _super);
                function CrossUnionTeamItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionTeamItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    // this._proxy = getProxy(ModName.More, ProxyType.CrossUnion);
                };
                CrossUnionTeamItem.prototype.dataChanged = function () {
                    this._idx = this.itemIndex + 1;
                    this.title.setData(this._idx);
                    this.lab_cnt.text = "" + this.data.count;
                    this.powerLab.setPowerValue(this.data.power);
                };
                return CrossUnionTeamItem;
            }(mod.BaseRenderer));
            more.CrossUnionTeamItem = CrossUnionTeamItem;
            __reflect(CrossUnionTeamItem.prototype, "game.mod.more.CrossUnionTeamItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionTeamTitle = /** @class */ (function (_super) {
                __extends(CrossUnionTeamTitle, _super);
                function CrossUnionTeamTitle() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionTeamTitle.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_check, this.onClickBtn, this);
                };
                CrossUnionTeamTitle.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.lab_team.text = game.StringUtil.ChineseNum[this.data] + "\u961F";
                };
                CrossUnionTeamTitle.prototype.setData = function (index) {
                    this.data = index;
                };
                CrossUnionTeamTitle.prototype.onClickBtn = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "163" /* CrossUnionFormat */, this.data);
                };
                return CrossUnionTeamTitle;
            }(mod.BaseRenderer));
            more.CrossUnionTeamTitle = CrossUnionTeamTitle;
            __reflect(CrossUnionTeamTitle.prototype, "game.mod.more.CrossUnionTeamTitle");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionTeamView = /** @class */ (function (_super) {
                __extends(CrossUnionTeamView, _super);
                function CrossUnionTeamView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionTeamSkin";
                    return _this;
                }
                return CrossUnionTeamView;
            }(eui.Component));
            more.CrossUnionTeamView = CrossUnionTeamView;
            __reflect(CrossUnionTeamView.prototype, "game.mod.more.CrossUnionTeamView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionView = /** @class */ (function (_super) {
                __extends(CrossUnionView, _super);
                function CrossUnionView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionSkin";
                    return _this;
                }
                return CrossUnionView;
            }(eui.Component));
            more.CrossUnionView = CrossUnionView;
            __reflect(CrossUnionView.prototype, "game.mod.more.CrossUnionView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionZhanbaoItem = /** @class */ (function (_super) {
                __extends(CrossUnionZhanbaoItem, _super);
                function CrossUnionZhanbaoItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionZhanbaoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    // this._proxy = getProxy(ModName.More, ProxyType.CrossUnion);
                };
                CrossUnionZhanbaoItem.prototype.dataChanged = function () {
                    this.lab_union1.text = this.data.my_guild_name;
                    this.lab_union2.text = this.data.target_name;
                    this.powerLab1.setPowerValue(this.data.my_num);
                    this.powerLab2.setPowerValue(this.data.target_num);
                    this.img_win.source = this.data.ret ? "sheng" : "bai";
                    this.lab_time.text = game.TimeUtil.formatTime(this.data.time * 1000, "yyyy年MM月dd日");
                };
                return CrossUnionZhanbaoItem;
            }(mod.BaseRenderer));
            more.CrossUnionZhanbaoItem = CrossUnionZhanbaoItem;
            __reflect(CrossUnionZhanbaoItem.prototype, "game.mod.more.CrossUnionZhanbaoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionZhanbaoView = /** @class */ (function (_super) {
                __extends(CrossUnionZhanbaoView, _super);
                function CrossUnionZhanbaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionZhanbaoSkin";
                    return _this;
                }
                return CrossUnionZhanbaoView;
            }(eui.Component));
            more.CrossUnionZhanbaoView = CrossUnionZhanbaoView;
            __reflect(CrossUnionZhanbaoView.prototype, "game.mod.more.CrossUnionZhanbaoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionBeastItem = /** @class */ (function (_super) {
                __extends(CrossUnionBeastItem, _super);
                function CrossUnionBeastItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionBeastItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.addAnimate(this.data.src, this.grp_eft);
                };
                // TODO:scale
                CrossUnionBeastItem.prototype.setData = function (src, scale) {
                    if (scale === void 0) { scale = 1; }
                    this.data = { src: src, scale: scale };
                };
                return CrossUnionBeastItem;
            }(mod.BaseRenderer));
            more.CrossUnionBeastItem = CrossUnionBeastItem;
            __reflect(CrossUnionBeastItem.prototype, "game.mod.more.CrossUnionBeastItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionResultItem = /** @class */ (function (_super) {
                __extends(CrossUnionResultItem, _super);
                function CrossUnionResultItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionResultItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var own = this.data.own;
                    this.lab_debuff1.visible = this.powerLab1.visible = this.img_dead1.visible = this.lab_name1.visible = !!own;
                    if (own) {
                        this.lab_name1.text = own.name;
                        this.img_dead1.visible = own.is_dead;
                        this.powerLab1.setPowerValue(own.power);
                        this.lab_debuff1.text = own.buff_lv ? own.buff_lv + "\u7EA7\u75B2\u52B3\uFF1A\u6218\u529B-" + own.buff_lv * 10 + "%" : "";
                    }
                    var target = this.data.target;
                    this.lab_debuff2.visible = this.powerLab2.visible = this.img_dead2.visible = this.lab_name2.visible = !!target;
                    if (target) {
                        this.lab_name2.text = target.name;
                        this.img_dead2.visible = target.is_dead;
                        this.powerLab2.setPowerValue(target.power);
                        this.lab_debuff2.text = target.buff_lv ? target.buff_lv + "\u7EA7\u75B2\u52B3\uFF1A\u6218\u529B-" + target.buff_lv * 10 + "%" : "";
                    }
                };
                return CrossUnionResultItem;
            }(mod.BaseRenderer));
            more.CrossUnionResultItem = CrossUnionResultItem;
            __reflect(CrossUnionResultItem.prototype, "game.mod.more.CrossUnionResultItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionResultView = /** @class */ (function (_super) {
                __extends(CrossUnionResultView, _super);
                function CrossUnionResultView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionResultSkin";
                    return _this;
                }
                return CrossUnionResultView;
            }(eui.Component));
            more.CrossUnionResultView = CrossUnionResultView;
            __reflect(CrossUnionResultView.prototype, "game.mod.more.CrossUnionResultView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionRole = /** @class */ (function (_super) {
                __extends(CrossUnionRole, _super);
                function CrossUnionRole() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionRole.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                CrossUnionRole.prototype.dataChanged = function () {
                    this.removeEft();
                    if (!this.data || !this.data.info) {
                        return;
                    }
                    var info = this.data.info;
                    this.lab_name.text = info.name;
                    var hp = info && info.value && info.value.toNumber() || 0;
                    this.bar.show(hp, 100, false, 0, false, 2 /* NoValue */);
                    this.onUpdateEft("atk" /* ATTACK */);
                };
                CrossUnionRole.prototype.setData = function (index, info) {
                    this.data = { index: index, info: info };
                };
                /**单独更新血量 */
                CrossUnionRole.prototype.onUpdateHp = function (info) {
                    var hp = info && info.value && info.value.toNumber() || 0;
                    this.bar.show(hp, 100, false, 0, false, 2 /* NoValue */);
                };
                CrossUnionRole.prototype.onUpdateEft = function (act) {
                    var dir = this.data.index < 5 ? 6 /* LEFT_DOWN */ : 2 /* RIGHT_UP */;
                    var info = this.data.info;
                    this.updateUIRole(this.grp_eft, info.fashion, info.weapon, info.wing, info.sex, 1, dir, act + "1", false);
                    // if (act !== ActionName.ATTACK) {
                    //     return;
                    // }
                    // this.updateUIRoleAtr(true, Handler.alloc(this, () => {
                    //     this.onUpdateEft(ActionName.STAND);
                    // }))
                };
                return CrossUnionRole;
            }(mod.BaseRenderer));
            more.CrossUnionRole = CrossUnionRole;
            __reflect(CrossUnionRole.prototype, "game.mod.more.CrossUnionRole");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionSceneView = /** @class */ (function (_super) {
                __extends(CrossUnionSceneView, _super);
                function CrossUnionSceneView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionSceneSkin";
                    return _this;
                }
                return CrossUnionSceneView;
            }(eui.Component));
            more.CrossUnionSceneView = CrossUnionSceneView;
            __reflect(CrossUnionSceneView.prototype, "game.mod.more.CrossUnionSceneView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionSkillItem = /** @class */ (function (_super) {
                __extends(CrossUnionSkillItem, _super);
                function CrossUnionSkillItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionSkillItem.prototype.dataChanged = function () {
                    var skill = game.getConfigByNameId("battle_skill.json" /* Skill */, this.data.skill_id);
                    this.lab_name.text = skill.name;
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(skill.describe);
                    this.item.setIcon(skill.icon);
                    var strs = [["冷却", this.data.cd + "\u79D2"], ["消耗", "" + this.data.cost[0]]];
                    this.attrList.updateAttr(strs);
                };
                return CrossUnionSkillItem;
            }(mod.BaseRenderer));
            more.CrossUnionSkillItem = CrossUnionSkillItem;
            __reflect(CrossUnionSkillItem.prototype, "game.mod.more.CrossUnionSkillItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionSkillTipsView = /** @class */ (function (_super) {
                __extends(CrossUnionSkillTipsView, _super);
                function CrossUnionSkillTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionSkillTipsSkin";
                    return _this;
                }
                return CrossUnionSkillTipsView;
            }(eui.Component));
            more.CrossUnionSkillTipsView = CrossUnionSkillTipsView;
            __reflect(CrossUnionSkillTipsView.prototype, "game.mod.more.CrossUnionSkillTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionWinItem = /** @class */ (function (_super) {
                __extends(CrossUnionWinItem, _super);
                function CrossUnionWinItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CrossUnionWinItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.lab_name.textColor = this.data.type == 1 ? 0x48deff : 0xff4545;
                    this.lab_rank.text = "" + (this.itemIndex + 1);
                    this.lab_kill.text = "" + this.data.kill_num;
                    this.img_mvp.visible = !this.itemIndex;
                };
                return CrossUnionWinItem;
            }(mod.BaseRenderer));
            more.CrossUnionWinItem = CrossUnionWinItem;
            __reflect(CrossUnionWinItem.prototype, "game.mod.more.CrossUnionWinItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionWinView = /** @class */ (function (_super) {
                __extends(CrossUnionWinView, _super);
                function CrossUnionWinView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.CrossUnionWinSkin";
                    return _this;
                }
                return CrossUnionWinView;
            }(eui.Component));
            more.CrossUnionWinView = CrossUnionWinView;
            __reflect(CrossUnionWinView.prototype, "game.mod.more.CrossUnionWinView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ItemTapEvent = eui.ItemTapEvent;
            var ArrayCollection = eui.ArrayCollection;
            var CrossUnionFormatMdr = /** @class */ (function (_super) {
                __extends(CrossUnionFormatMdr, _super);
                function CrossUnionFormatMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionFormatView);
                    _this._listData = new ArrayCollection();
                    _this._tabData = new ArrayCollection();
                    _this._tabList = [
                        { name: "全部" },
                        { name: "一队" },
                        { name: "二队" },
                        { name: "三队" },
                        { name: "四队" }
                    ];
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionFormatMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list.itemRenderer = more.CrossUnionFormatItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_type.itemRenderer = mod.BtnTabItem;
                    this._view.list_type.dataProvider = this._tabData;
                };
                CrossUnionFormatMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onClickTab, this);
                    this.onNt("on_update_cross_union_select_info" /* ON_UPDATE_CROSS_UNION_SELECT_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_cross_union_team_list_info" /* ON_UPDATE_CROSS_UNION_TEAM_LIST_INFO */, this.onInitView, this);
                };
                CrossUnionFormatMdr.prototype.onShow = function () {
                    this._proxy.c2s_guild_pk_lineup_show();
                    _super.prototype.onShow.call(this);
                    this.onUpdateTab();
                    this._view.list_type.selectedIndex = +this._showArgs || 0;
                    // this.onUpdateView();
                };
                CrossUnionFormatMdr.prototype.onUpdateTab = function () {
                    // let list: BtnTabItemData[] = [
                    //     { name: "全部" },
                    //     { name: "一队" },
                    //     { name: "二队" },
                    //     { name: "三队" },
                    //     { name: "四队" }
                    // ];
                    this._tabData.source = this._tabList;
                };
                CrossUnionFormatMdr.prototype.onInitView = function () {
                    this._proxy.select = 0;
                    // this._view.list_type.selectedIndex = e.itemIndex;
                    this._view.list.scrollV = 0;
                    this.onUpdateView();
                };
                CrossUnionFormatMdr.prototype.onUpdateView = function () {
                    // TODO: getLanById(LanDef)
                    var str = this._tabList[this._view.list_type.selectedIndex].name;
                    this._view.secondPop.updateTitleStr(str);
                    this._view.lab_tips.text = !!this._proxy.select ? game.getLanById("kuafuxianzong_tips6" /* kuafuxianzong_tips6 */) : game.getLanById("kuafuxianzong_tips5" /* kuafuxianzong_tips5 */);
                    var index = this._view.list_type.selectedIndex;
                    var list = this._proxy.getTeamList(index);
                    this._listData.replaceAll(list);
                };
                CrossUnionFormatMdr.prototype.onClickTab = function (e) {
                    // this._proxy.select = 0;
                    // // this._view.list_type.selectedIndex = e.itemIndex;
                    // this._view.list.scrollV = 0;
                    // this.onUpdateView();
                    this.onInitView();
                };
                CrossUnionFormatMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return CrossUnionFormatMdr;
            }(game.MdrBase));
            more.CrossUnionFormatMdr = CrossUnionFormatMdr;
            __reflect(CrossUnionFormatMdr.prototype, "game.mod.more.CrossUnionFormatMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionMainMdr = /** @class */ (function (_super) {
                __extends(CrossUnionMainMdr, _super);
                function CrossUnionMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "kuafuxianzongzhan",
                            mdr: more.CrossUnionMdr,
                            title: "kuafuxianzong_tips3" /* kuafuxianzong_tips3 */,
                            bg: "kuafuxianzongzhan2_bg",
                            openIdx: 1041670262 /* CrossUnion */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "160" /* CrossUnion */]
                        }
                    ];
                    return _this;
                }
                return CrossUnionMainMdr;
            }(mod.WndBaseMdr));
            more.CrossUnionMainMdr = CrossUnionMainMdr;
            __reflect(CrossUnionMainMdr.prototype, "game.mod.more.CrossUnionMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var Event = egret.Event;
            var CrossUnionMdr = /** @class */ (function (_super) {
                __extends(CrossUnionMdr, _super);
                function CrossUnionMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.CrossUnionView);
                    _this._listData = new eui.ArrayCollection();
                    _this._listLen = 12;
                    //滑动加载参数
                    _this._delayIdx = 0;
                    return _this;
                }
                CrossUnionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list_item.itemRenderer = more.CrossUnionPlayerItem;
                    this._view.list_item.dataProvider = this._listData;
                };
                CrossUnionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.item_1, TouchEvent.TOUCH_TAP, this.onClickTeam);
                    addEventListener(this._view.item_2, TouchEvent.TOUCH_TAP, this.onClickTeam);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.btn_formation, TouchEvent.TOUCH_TAP, this.onClickFormat);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickExplain);
                    addEventListener(this._view.btn_tips, TouchEvent.TOUCH_TAP, this.onClickZhanbao);
                    addEventListener(this._view.scroller, Event.CHANGE, this.onUpdateChange);
                    this.onNt("on_update_cross_union_info" /* ON_UPDATE_CROSS_UNION_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_cross_union_list_info" /* ON_UPDATE_CROSS_UNION_LIST_INFO */, this.onUpdateList, this);
                    this.onNt("on_update_cross_union_list_reset_info" /* ON_UPDATE_CROSS_UNION_LIST_RESET_INFO */, this.onUpdateList, this);
                    this.onNt("on_update_cross_union_over_view" /* ON_UPDATE_CROSS_UNION_OVER_VIEW */, this.onChangeView, this);
                };
                CrossUnionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.onUpdateTime();
                    this.select = 1 /* Own */;
                    // this.onUpdateView();
                };
                CrossUnionMdr.prototype.onChangeView = function () {
                    var openView = this._proxy.openView;
                    if (openView == "160" /* CrossUnion */) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, openView, null, false);
                };
                CrossUnionMdr.prototype.onUpdateView = function () {
                    this._view.item_1.setData(this._proxy.getTeamInfo(1 /* Own */));
                    this._enemy = this._proxy.getTeamInfo(2 /* Target */);
                    this._view.item_2.setData(this._enemy);
                    this._view.btn.label = this._openState == 3 /* Open */ ? "进入战斗" : "调整阵型";
                    this.onUpdateList();
                };
                CrossUnionMdr.prototype.onUpdateList = function (n) {
                    var type = n && n.body;
                    if (type && type != this._proxy.camp) {
                        return;
                    }
                    var event = n && n.type;
                    if (event == "on_update_cross_union_list_reset_info" /* ON_UPDATE_CROSS_UNION_LIST_RESET_INFO */) {
                        this._view.list_item.scrollV = 0;
                    }
                    var list = this._proxy.getList(this._proxy.camp);
                    if (list.length < 12) {
                        list.length = 12;
                    }
                    this._listData.replaceAll(list);
                };
                CrossUnionMdr.prototype.onUpdateTime = function () {
                    this._openState = this._proxy.openState;
                    if (this._openState == 1 /* Ready */) {
                        this._endTime = this._proxy.matchTime;
                        this._timeTips = "后开始匹配";
                    }
                    else if (this._openState == 2 /* Match */) {
                        this._endTime = this._proxy.openTime;
                        this._timeTips = "后开始战斗";
                    }
                    else {
                        this._endTime = 0;
                        TimeMgr.removeUpdateItem(this);
                        // this.onUpdateView();
                        this._view.btn.label = this._openState == 3 /* Open */ ? "进入战斗" : "调整阵型";
                    }
                    // this.updateTime();
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, this._timeTips, game.getLanById("relic33" /* relic33 */));
                };
                CrossUnionMdr.prototype.onClickBtn = function () {
                    //test
                    // if (DEBUG) {
                    //     this._proxy.c2s_guild_pk_oper(6);
                    //     return;
                    // }
                    if (this._openState == 3 /* Open */) {
                        if (!this._proxy.ret) {
                            this._proxy.c2s_guild_pk_oper(6);
                        }
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "162" /* CrossUnionTeam */);
                };
                CrossUnionMdr.prototype.onClickTeam = function (e) {
                    if (e.currentTarget == this._view.item_1) {
                        this.select = 1 /* Own */;
                    }
                    else {
                        if (!this._enemy) {
                            game.PromptBox.getIns().show("尚未匹配仙宗");
                            return;
                        }
                        this.select = 2 /* Target */;
                    }
                };
                CrossUnionMdr.prototype.onClickReward = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "165" /* CrossUnionReward */);
                };
                CrossUnionMdr.prototype.onClickFormat = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "163" /* CrossUnionFormat */);
                };
                CrossUnionMdr.prototype.onClickExplain = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("kuafuxianzong_tips9" /* kuafuxianzong_tips9 */));
                };
                CrossUnionMdr.prototype.onClickZhanbao = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "169" /* CrossUnionZhanbao */);
                };
                CrossUnionMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                    this._proxy.camp = this._start = this._end = 0;
                };
                CrossUnionMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CrossUnionMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this.onUpdateTime();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, this._timeTips, game.getLanById("relic33" /* relic33 */));
                };
                Object.defineProperty(CrossUnionMdr.prototype, "select", {
                    set: function (v) {
                        if (this._proxy.camp == v) {
                            return;
                        }
                        this._proxy.camp = v;
                        this._proxy.c2s_guild_pk_team_show(v);
                        this._view.item_1.isSelect = v == 1 /* Own */;
                        this._view.item_2.isSelect = v == 2 /* Target */;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**-----------------滑动加载-------------------- */
                CrossUnionMdr.prototype.onUpdateChange = function (e) {
                    var scrollV = this._view.scroller.viewport.scrollV;
                    var itemHeight = 260 + 6;
                    //滑动容器高度
                    var height = 744;
                    //获取列表高度
                    var contentHeight = this._view.scroller.viewport.contentHeight;
                    if (scrollV < 0) {
                        this.onRequest(1, 4);
                        return;
                    }
                    if (scrollV >= contentHeight - height) {
                        var len = this._listData.source.length;
                        this.onRequest(len + 1, len + 5);
                        return;
                    }
                    var showHeight = scrollV + height;
                    /**后端1开始判断 需要加1 */
                    var start = Math.floor(scrollV / itemHeight) + 1;
                    var end = Math.ceil(showHeight / itemHeight);
                    this.onRequest(start, end);
                };
                CrossUnionMdr.prototype.onRequest = function (start, end) {
                    var _this = this;
                    //不做重复更新
                    if (this._start == start || this._end == end) {
                        return;
                    }
                    this._start = start;
                    this._end = end;
                    if (this._delayIdx) {
                        base.clearDelay(this._delayIdx);
                    }
                    this._delayIdx = base.delayCall(base.Handler.alloc(this, function () {
                        // console.error(start, end);
                        _this._proxy.c2s_guild_pk_team_slide(_this._proxy.camp, start, end);
                    }), 500);
                };
                return CrossUnionMdr;
            }(game.MdrBase));
            more.CrossUnionMdr = CrossUnionMdr;
            __reflect(CrossUnionMdr.prototype, "game.mod.more.CrossUnionMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionReadyMainMdr = /** @class */ (function (_super) {
                __extends(CrossUnionReadyMainMdr, _super);
                function CrossUnionReadyMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "kuafuxianzongzhan",
                            mdr: more.CrossUnionReadyMdr,
                            title: "kuafuxianzong_tips1" /* kuafuxianzong_tips1 */,
                            bg: "kuafuxianzongzhan3_bg",
                            openIdx: 1041670262 /* CrossUnion */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "160" /* CrossUnion */]
                        }
                    ];
                    return _this;
                }
                return CrossUnionReadyMainMdr;
            }(mod.WndBaseMdr));
            more.CrossUnionReadyMainMdr = CrossUnionReadyMainMdr;
            __reflect(CrossUnionReadyMainMdr.prototype, "game.mod.more.CrossUnionReadyMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var CrossUnionReadyMdr = /** @class */ (function (_super) {
                __extends(CrossUnionReadyMdr, _super);
                function CrossUnionReadyMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.CrossUnionReadyView);
                    _this._listData = new eui.ArrayCollection();
                    return _this;
                }
                CrossUnionReadyMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData;
                };
                CrossUnionReadyMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    this.onNt("on_update_cross_union_ready_info" /* ON_UPDATE_CROSS_UNION_READY_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_cross_union_over_view" /* ON_UPDATE_CROSS_UNION_OVER_VIEW */, this.onChangeView, this);
                };
                CrossUnionReadyMdr.prototype.onShow = function () {
                    this._proxy.c2s_guild_pk_root();
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.onUpdateTime();
                    this.onUpdateView();
                };
                CrossUnionReadyMdr.prototype.onChangeView = function () {
                    var openView = this._proxy.openView;
                    if (openView == "161" /* CrossUnionReady */) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, openView, null, false);
                };
                CrossUnionReadyMdr.prototype.onUpdateView = function () {
                    if (this._proxy.status == 1) {
                        this._listData.replaceAll(this._proxy.getRewards(this._proxy.ret));
                        this.setBtn(true, "领取奖励");
                        this._state = 2;
                        return;
                    }
                    if (this._openState != 3 /* Open */) {
                        this._listData.replaceAll(this._proxy.guild_pk_show);
                        this.setBtn(true, "报名");
                        this._state = 1;
                        return;
                    }
                    if (this._proxy.ret) {
                        this._listData.replaceAll(this._proxy.getRewards(this._proxy.ret));
                        if (this._proxy.is_join) {
                            if (this._proxy.status == 1) {
                                this.setBtn(true, "领取奖励");
                                this._state = 2;
                            }
                            else {
                                this.setBtn(false, "lvseyilingqu");
                            }
                        }
                        else {
                            this.setBtn(false, "hongseyijieshu");
                        }
                        return;
                    }
                    this._listData.replaceAll(this._proxy.guild_pk_show);
                    if (this._proxy.is_guild_join === false) {
                        this.setBtn(false, "hongseyijieshu");
                        return;
                    }
                    this.setBtn(true, "进入战斗");
                    this._state = 3;
                };
                CrossUnionReadyMdr.prototype.onUpdateTime = function () {
                    this._openState = this._proxy.openState;
                    if (this._openState == 1 /* Ready */) {
                        this._endTime = this._proxy.matchTime;
                        this._timeTips = "后开始匹配";
                    }
                    else if (this._openState == 2 /* Match */) {
                        this._endTime = this._proxy.openTime;
                        this._timeTips = "后开始战斗";
                    }
                    else {
                        this._endTime = 0;
                        TimeMgr.removeUpdateItem(this);
                    }
                    // this.updateTime();
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, this._timeTips, game.getLanById("relic33" /* relic33 */));
                };
                CrossUnionReadyMdr.prototype.onClickBtn = function () {
                    if (!this._state) {
                        return;
                    }
                    switch (this._state) {
                        case 1:
                            // if (this._openState == CrossUnionOpenState.Match && !this._proxy.is_guild_join) {
                            //     PromptBox.getIns().show("报名阶段已结束");
                            //     return;
                            // }
                            this._proxy.c2s_guild_pk_oper(1);
                            break;
                        case 2:
                            this._proxy.c2s_guild_pk_oper(4);
                            break;
                        case 3:
                            this._proxy.c2s_guild_pk_oper(6);
                            break;
                    }
                };
                CrossUnionReadyMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                CrossUnionReadyMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                CrossUnionReadyMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this.onUpdateTime();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, this._timeTips, game.getLanById("relic33" /* relic33 */));
                };
                CrossUnionReadyMdr.prototype.setBtn = function (v, str) {
                    this._view.btn.visible = v;
                    if (this._view.btn.visible) {
                        this._view.btn.label = str;
                    }
                    this._view.img_end.visible = !v;
                    if (this._view.img_end.visible) {
                        this._view.img_end.source = str;
                    }
                };
                return CrossUnionReadyMdr;
            }(game.MdrBase));
            more.CrossUnionReadyMdr = CrossUnionReadyMdr;
            __reflect(CrossUnionReadyMdr.prototype, "game.mod.more.CrossUnionReadyMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var CrossUnionRewardMdr = /** @class */ (function (_super) {
                __extends(CrossUnionRewardMdr, _super);
                function CrossUnionRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionRewardView);
                    _this._listReward = new eui.ArrayCollection();
                    _this._listLose = new eui.ArrayCollection();
                    _this._listLook = new eui.ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list_win.itemRenderer = mod.Icon;
                    this._view.list_win.dataProvider = this._listReward;
                    this._view.list_lose.itemRenderer = mod.Icon;
                    this._view.list_lose.dataProvider = this._listLose;
                    this._view.list_look.itemRenderer = mod.Icon;
                    this._view.list_look.dataProvider = this._listLook;
                };
                CrossUnionRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                CrossUnionRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                CrossUnionRewardMdr.prototype.onUpdateView = function () {
                    this._listReward.replaceAll(this._proxy.guild_pk_win_rewar);
                    this._listLose.replaceAll(this._proxy.guild_pk_lose);
                    this._listLook.replaceAll(this._proxy.guild_pk_see_reward);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(game.getLanById("kuafuxianzong_tips4" /* kuafuxianzong_tips4 */));
                };
                CrossUnionRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return CrossUnionRewardMdr;
            }(game.MdrBase));
            more.CrossUnionRewardMdr = CrossUnionRewardMdr;
            __reflect(CrossUnionRewardMdr.prototype, "game.mod.more.CrossUnionRewardMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ItemTapEvent = eui.ItemTapEvent;
            var TouchEvent = egret.TouchEvent;
            var CrossUnionTeamMdr = /** @class */ (function (_super) {
                __extends(CrossUnionTeamMdr, _super);
                function CrossUnionTeamMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionTeamView);
                    _this._listData = new eui.ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionTeamMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list.itemRenderer = more.CrossUnionTeamItem;
                    this._view.list.dataProvider = this._listData;
                };
                CrossUnionTeamMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list, ItemTapEvent.ITEM_TAP, this.onClickList);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    this.onNt("on_update_cross_union_team_list_info" /* ON_UPDATE_CROSS_UNION_TEAM_LIST_INFO */, this.onUpdateView, this);
                };
                CrossUnionTeamMdr.prototype.onShow = function () {
                    this._proxy.c2s_guild_pk_lineup_show();
                    _super.prototype.onShow.call(this);
                    // this.onUpdateView();
                };
                CrossUnionTeamMdr.prototype.onUpdateView = function () {
                    // let index: number = this._proxy.team_index;
                    this._listData.replaceAll(this._proxy.team_list_data);
                    this._view.list.selectedIndex = 0;
                };
                CrossUnionTeamMdr.prototype.onClickList = function (e) {
                    if (this._view.list.selectedIndex == e.itemIndex) {
                        return;
                    }
                    this._view.list.selectedIndex = e.itemIndex;
                };
                CrossUnionTeamMdr.prototype.onClickBtn = function () {
                    var index = this._view.list.selectedIndex + 1;
                    this._proxy.c2s_guild_pk_oper(2, index);
                };
                CrossUnionTeamMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return CrossUnionTeamMdr;
            }(game.MdrBase));
            more.CrossUnionTeamMdr = CrossUnionTeamMdr;
            __reflect(CrossUnionTeamMdr.prototype, "game.mod.more.CrossUnionTeamMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var CrossUnionZhanbaoMdr = /** @class */ (function (_super) {
                __extends(CrossUnionZhanbaoMdr, _super);
                function CrossUnionZhanbaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionZhanbaoView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionZhanbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list.itemRenderer = more.CrossUnionZhanbaoItem;
                    this._view.list.dataProvider = this._listData;
                };
                CrossUnionZhanbaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_cross_union_zhanbao_info" /* ON_UPDATE_CROSS_UNION_ZHANBAO_INFO */, this.onUpdateView, this);
                };
                CrossUnionZhanbaoMdr.prototype.onShow = function () {
                    this._proxy.c2s_guild_pk_zhanbao();
                    _super.prototype.onShow.call(this);
                };
                CrossUnionZhanbaoMdr.prototype.onUpdateView = function () {
                    this._listData.replaceAll(this._proxy.zhanbao);
                };
                CrossUnionZhanbaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return CrossUnionZhanbaoMdr;
            }(game.MdrBase));
            more.CrossUnionZhanbaoMdr = CrossUnionZhanbaoMdr;
            __reflect(CrossUnionZhanbaoMdr.prototype, "game.mod.more.CrossUnionZhanbaoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ItemTapEvent = eui.ItemTapEvent;
            var CrossUnionResultMdr = /** @class */ (function (_super) {
                __extends(CrossUnionResultMdr, _super);
                function CrossUnionResultMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionResultView);
                    // private _fight: CrossUnionFightProxy;
                    _this._listData = new eui.ArrayCollection();
                    _this._tabData = new eui.ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionResultMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list_type.itemRenderer = mod.BtnTabItem;
                    this._view.list_type.dataProvider = this._tabData;
                    this._view.list.itemRenderer = more.CrossUnionResultItem;
                    this._view.list.dataProvider = this._listData;
                };
                CrossUnionResultMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onClickTab, this);
                    this.onNt("on_update_cross_union_fight_info" /* ON_UPDATE_CROSS_UNION_FIGHT_INFO */, this.onUpdateView, this);
                };
                CrossUnionResultMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateTab();
                    this.selectIndex = 0;
                    // this.onUpdateView();
                };
                CrossUnionResultMdr.prototype.onUpdateTab = function () {
                    var list = [
                        { name: "一队" },
                        { name: "二队" },
                        { name: "三队" },
                        { name: "四队" }
                    ];
                    this._tabData.source = list;
                };
                CrossUnionResultMdr.prototype.onUpdateView = function () {
                    var info = this._proxy.getFightInfos(this.selectIndex);
                    var list = [];
                    if (!info || !info.enemy_list && !info.my_list) {
                        this._listData.replaceAll(list);
                        return;
                    }
                    info.my_list && info.my_list.sort(this.onSort);
                    info.enemy_list && info.enemy_list.sort(this.onSort);
                    var len1 = info.my_list && info.my_list.length || 0;
                    var len2 = info.enemy_list && info.enemy_list.length || 0;
                    var len = len1 > len2 ? len1 : len2;
                    for (var i = 0; i < len; i++) {
                        var own = info.my_list[i] || null;
                        var target = info.enemy_list[i] || null;
                        list.push({ own: own, target: target });
                    }
                    this._listData.replaceAll(list);
                };
                CrossUnionResultMdr.prototype.onClickTab = function (e) {
                    // this._view.list_type.selectedIndex = e.itemIndex;
                    // this.onUpdateView();
                    this.selectIndex = e.itemIndex;
                };
                CrossUnionResultMdr.prototype.onSort = function (a, b) {
                    if (a.buff_lv != b.buff_lv) {
                        return b.buff_lv - a.buff_lv;
                    }
                    return b.power.toNumber() - a.power.toNumber();
                };
                CrossUnionResultMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                Object.defineProperty(CrossUnionResultMdr.prototype, "selectIndex", {
                    get: function () {
                        return this._view.list_type.selectedIndex + 1;
                    },
                    set: function (v) {
                        if (this._view.list_type.selectedIndex != v) {
                            this._view.list_type.selectedIndex = v;
                        }
                        this._proxy.c2s_guild_pk_fight_show(v + 1);
                    },
                    enumerable: true,
                    configurable: true
                });
                return CrossUnionResultMdr;
            }(game.EffectMdrBase));
            more.CrossUnionResultMdr = CrossUnionResultMdr;
            __reflect(CrossUnionResultMdr.prototype, "game.mod.more.CrossUnionResultMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var ItemTapEvent = eui.ItemTapEvent;
            var TouchEvent = egret.TouchEvent;
            var CrossUnionSceneMdr = /** @class */ (function (_super) {
                __extends(CrossUnionSceneMdr, _super);
                function CrossUnionSceneMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionSceneView);
                    _this._len = 8;
                    _this._listData = new eui.ArrayCollection();
                    return _this;
                }
                CrossUnionSceneMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._fight = this.retProxy(267 /* CrossUnionFight */);
                    this._view.list.itemRenderer = mod.SkillItemRender; //
                    this._view.list.dataProvider = this._listData;
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(this._view.lab_tips.text, this._view.lab_tips.textColor));
                    this._view.lab_info.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(this._view.lab_info.text, this._view.lab_info.textColor));
                };
                CrossUnionSceneMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list, ItemTapEvent.ITEM_TAP, this.onClickSkill, this);
                    addEventListener(this._view.lab_tips, TouchEvent.TOUCH_TAP, this.onClickTips, this);
                    addEventListener(this._view.lab_info, TouchEvent.TOUCH_TAP, this.onClickInfo, this);
                    addEventListener(this._view.icon, TouchEvent.TOUCH_TAP, this.onClickReward, this);
                    addEventListener(this._view.btn_exit, TouchEvent.TOUCH_TAP, this.hide, this);
                    // this.onNt(CUFigthEvent.ON_UPDATE_FIGHT_ENTER, this.onEnter, this);
                    this.onNt("on_update_beast_info" /* ON_UPDATE_BEAST_INFO */, this.onUpdateBeast, this);
                    this.onNt("on_update_fight_pos_info" /* ON_UPDATE_FIGHT_POS_INFO */, this.onUpdateRoleByIndex, this);
                    this.onNt("on_update_fight_info" /* ON_UPDATE_FIGHT_INFO */, this.onUpdateRole, this);
                    this.onNt("on_update_cuf_reward_info" /* ON_UPDATE_CUF_REWARD_INFO */, this.onUpdateReward, this);
                    this.onNt("on_update_cuf_exit" /* ON_UPDATE_CUF_EXIT */, this.hide, this);
                    // this.onNt(MoreEvent.ON_UPDATE_CROSS_UNION_OVER_VIEW, this.hide, this);
                    this.onNt("on_update_cross_union_over_view" /* ON_UPDATE_CROSS_UNION_OVER_VIEW */, this.onUpdateResult, this);
                };
                CrossUnionSceneMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._step = 0;
                    this.onEnter();
                    // Layer.main.setChildIndex(this._view, 0);
                };
                CrossUnionSceneMdr.prototype.onEnter = function () {
                    this.onInitBeast();
                    this.onUpdateRole();
                    this.onUpdateBeast();
                    this.onUpdateSkill();
                    this.onUpdateReward();
                    TimeMgr.addUpdateItem(this);
                };
                CrossUnionSceneMdr.prototype.onInitBeast = function () {
                    this.removeAllEffects();
                    var param = game.GameConfig.getParamConfigById("guild_xianshou_model");
                    // this.addAnimate(param.value, this._view.grp_own, Direction.UP);
                    // this.addAnimate(param.value, this._view.grp_target, Direction.DOWN);
                    this._view.grp_own.setData(param.value);
                    this._view.grp_target.setData(param.value);
                };
                CrossUnionSceneMdr.prototype.onUpdateReward = function () {
                    this._view.icon.setData(this._proxy.guild_pk_see_reward[0], 3 /* NotTips */);
                    this._view.lab_cnt.text = "" + this._fight.reward_num;
                    this._view.img_got.visible = this._fight.reward_status == 2;
                };
                /**更新阵营血量 */
                CrossUnionSceneMdr.prototype.onUpdateBeast = function () {
                    // let own = this._proxy.getTeamInfo(CrossUnionType.Own);
                    this._view.item_1.setData(this._fight.my_base);
                    // let target = this._proxy.getTeamInfo(CrossUnionType.Target);
                    this._view.item_2.setData(this._fight.target_base);
                };
                /**死亡时更新单个数据 */
                CrossUnionSceneMdr.prototype.onUpdateRoleByIndex = function (n) {
                    var i = n.body;
                    var role = this._view["role_" + i];
                    if (!role) {
                        return;
                    }
                    var info = this._fight.getRoleInfo(i);
                    role.visible = !!info;
                    role.setData(i, info);
                };
                /**更新全部角色的数据 */
                CrossUnionSceneMdr.prototype.onUpdateRole = function () {
                    for (var i = 1; i <= this._len; i++) {
                        var role = this._view["role_" + i];
                        if (!role) {
                            return;
                        }
                        var info = this._fight.getRoleInfo(i);
                        role.visible = !!info;
                        role.setData(i, info);
                    }
                };
                CrossUnionSceneMdr.prototype.onUpdateSkill = function () {
                    var cfgArr = game.getConfigListByName("guild_pk_skill.json" /* GuildPkSkill */);
                    var list = [];
                    for (var _i = 0, cfgArr_1 = cfgArr; _i < cfgArr_1.length; _i++) {
                        var cfg = cfgArr_1[_i];
                        list.push({ skillId: cfg.skill_id });
                    }
                    this._listData.replaceAll(list);
                };
                CrossUnionSceneMdr.prototype.onClickSkill = function (e) {
                    var index = e.itemIndex + 1;
                    var cfg = game.getConfigByNameId("guild_pk_skill.json" /* GuildPkSkill */, index);
                    if (!mod.BagUtil.checkPropCnt(cfg.cost[0][0], cfg.cost[0][1], 1 /* Dialog */)) {
                        return;
                    }
                    this._fight.c2s_guild_pk_use_skill(e.itemIndex + 1);
                };
                CrossUnionSceneMdr.prototype.onClickTips = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "164" /* CrossUnionSkill */);
                };
                CrossUnionSceneMdr.prototype.onClickInfo = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "167" /* CrossUnionInfo */);
                };
                CrossUnionSceneMdr.prototype.onClickReward = function () {
                    if (this._fight.reward_num) {
                        this._proxy.c2s_guild_pk_oper(5);
                    }
                };
                CrossUnionSceneMdr.prototype.onUpdateResult = function (n) {
                    var msg = n.body;
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "168" /* CrossUnionWin */, msg);
                };
                CrossUnionSceneMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                    this._proxy.c2s_guild_pk_oper(7);
                    this._fight.onExit();
                };
                CrossUnionSceneMdr.prototype.update = function (time) {
                    this.onUpdateStep();
                };
                CrossUnionSceneMdr.prototype.onUpdateStep = function () {
                    this._stepData = this._fight.getStepData(this._step);
                    if (!this._stepData) {
                        return;
                    }
                    this._step++;
                    if (this._stepData.is_dead) {
                        this._fight.onUpdateData(this._stepData);
                        this.onUpdateStep();
                        return;
                    }
                    if (this._stepData.type == 2) {
                        // TODO:治疗
                    }
                    else {
                        //发动天雷技能
                        if (this._stepData.type == 1) {
                            // TODO:播放特效
                        }
                        for (var _i = 0, _a = this._stepData.list; _i < _a.length; _i++) {
                            var info = _a[_i];
                            var index = this._fight.getRoleIndex(info.target_id);
                            var value = info.value.toNumber();
                            if (!index) {
                                if (info.type == 1 /* Own */) {
                                    more.TBSTxtMgr.getIns().show("" + value, this._view.grp_own);
                                }
                                else {
                                    more.TBSTxtMgr.getIns().show("" + value, this._view.grp_target);
                                }
                                continue;
                            }
                            var fightIndex = this._fight.getFightIndex(index);
                            var roleFight = this._view["role_" + fightIndex];
                            roleFight.onUpdateEft("atk" /* ATTACK */);
                            var roleHurt = this._view["role_" + index];
                            more.TBSTxtMgr.getIns().show("" + value, roleHurt);
                        }
                    }
                    this._fight.onUpdateData(this._stepData);
                };
                return CrossUnionSceneMdr;
            }(game.EffectMdrBase));
            more.CrossUnionSceneMdr = CrossUnionSceneMdr;
            __reflect(CrossUnionSceneMdr.prototype, "game.mod.more.CrossUnionSceneMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var CrossUnionSkillTipsMdr = /** @class */ (function (_super) {
                __extends(CrossUnionSkillTipsMdr, _super);
                function CrossUnionSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionSkillTipsView);
                    // private _proxy: CrossUnionProxy;
                    _this._listData = new eui.ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.list.itemRenderer = more.CrossUnionSkillItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.horizontalCenter = this._view.verticalCenter = 0;
                };
                CrossUnionSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.clsoeTips, TouchEvent.TOUCH_TAP, this.hide);
                };
                CrossUnionSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                CrossUnionSkillTipsMdr.prototype.onUpdateView = function () {
                    var cfgArr = game.getConfigListByName("guild_pk_skill.json" /* GuildPkSkill */);
                    this._listData.replaceAll(cfgArr);
                };
                CrossUnionSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return CrossUnionSkillTipsMdr;
            }(game.EffectMdrBase));
            more.CrossUnionSkillTipsMdr = CrossUnionSkillTipsMdr;
            __reflect(CrossUnionSkillTipsMdr.prototype, "game.mod.more.CrossUnionSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var CrossUnionWinMdr = /** @class */ (function (_super) {
                __extends(CrossUnionWinMdr, _super);
                function CrossUnionWinMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.CrossUnionWinView);
                    _this._listData = new eui.ArrayCollection();
                    _this._rewardData = new eui.ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                CrossUnionWinMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(265 /* CrossUnion */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._rewardData;
                    this._view.list.itemRenderer = more.CrossUnionWinItem;
                    this._view.list.dataProvider = this._listData;
                };
                CrossUnionWinMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.closeTips, TouchEvent.TOUCH_TAP, this.hide);
                };
                CrossUnionWinMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                CrossUnionWinMdr.prototype.onUpdateView = function () {
                    var ret = this._showArgs.is_win ? 1 : 2;
                    this._view.currentState = "" + ret;
                    var lsit = this._showArgs.list.sort(function (a, b) {
                        return b.kill_num - a.kill_num;
                    });
                    this._listData.replaceAll(lsit);
                    this._rewardData.replaceAll(this._proxy.getRewards(ret));
                    this._view.closeTips.visible = true;
                    this._view.closeTips.updateShow(10, base.Handler.alloc(this, this.hide));
                };
                CrossUnionWinMdr.prototype.onHide = function () {
                    this.sendNt("on_update_cuf_exit" /* ON_UPDATE_CUF_EXIT */);
                    _super.prototype.onHide.call(this);
                };
                return CrossUnionWinMdr;
            }(game.EffectMdrBase));
            more.CrossUnionWinMdr = CrossUnionWinMdr;
            __reflect(CrossUnionWinMdr.prototype, "game.mod.more.CrossUnionWinMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessRecordModel = /** @class */ (function () {
                function GoddessRecordModel() {
                    var _a;
                    this.event_index = 1; ///事件索引
                    this.event_stage = 0; ///事件阶段
                    this.talk_level = 1; ///对话等级
                    this.is_finish = false; ///当前对话等级，对话是否完成
                    this.level = 0; ///创世女神亲密度等级
                    this.prop_list = [];
                    /** 累计加速时间 */
                    this.total_speed_time = 0;
                    this.hint = ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                        "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "01" /* TabBtnType01 */]; //加多一个MdrTabBtnType.TabBtnType01
                    this.hunkaType = 1 /* Yaohun1 */;
                    this.hunkaBagOpenType = 1 /* Wear */;
                    this.hunkaSelPos = 1;
                    this.hunkaList = {};
                    this.hunkaScoreCfgList = {};
                    this.hunkaComposeList = {}; //合成选中
                    this.hunkaComposeSelPos = 0;
                    this.hunkaHint = ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                        "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */]; //魂卡入口
                    this.hunkaHintTypeList = (_a = {},
                        _a[1 /* Yaohun1 */] = ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                            "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */,
                            "01" /* TabBtnType01 */, "01" /* TabBtnType01 */],
                        _a[2 /* Xianhun2 */] = ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                            "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */,
                            "01" /* TabBtnType01 */, "02" /* TabBtnType02 */],
                        _a[3 /* Shenhun3 */] = ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                            "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */,
                            "01" /* TabBtnType01 */, "03" /* TabBtnType03 */],
                        _a);
                    this.hunkaComposeHintType = ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                        "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */,
                        "02" /* TabBtnType02 */]; //合成分页红点
                }
                return GoddessRecordModel;
            }());
            more.GoddessRecordModel = GoddessRecordModel;
            __reflect(GoddessRecordModel.prototype, "game.mod.more.GoddessRecordModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var s2c_chuang_shi_nv_shen_base_info = msg.s2c_chuang_shi_nv_shen_base_info;
            var c2s_chuang_shi_nv_shen_system_click = msg.c2s_chuang_shi_nv_shen_system_click;
            var s2c_chuang_shi_nv_shen_gongfeng_info = msg.s2c_chuang_shi_nv_shen_gongfeng_info;
            var TimeMgr = base.TimeMgr;
            var c2s_chuang_shi_nv_shen_hun_ka_click = msg.c2s_chuang_shi_nv_shen_hun_ka_click;
            var s2c_chuang_shi_nv_shen_hun_ka_info = msg.s2c_chuang_shi_nv_shen_hun_ka_info;
            var s2c_chuang_shi_nv_shen_hun_ka_compose_viewer = msg.s2c_chuang_shi_nv_shen_hun_ka_compose_viewer;
            var facade = base.facade;
            var GoddessRecordProxy = /** @class */ (function (_super) {
                __extends(GoddessRecordProxy, _super);
                function GoddessRecordProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GoddessRecordProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.GoddessRecordModel();
                    this.onProto(s2c_chuang_shi_nv_shen_base_info, this.s2c_chuang_shi_nv_shen_base_info, this);
                    this.onProto(s2c_chuang_shi_nv_shen_gongfeng_info, this.s2c_chuang_shi_nv_shen_gongfeng_info, this);
                    this.onProto(s2c_chuang_shi_nv_shen_hun_ka_info, this.s2c_chuang_shi_nv_shen_hun_ka_info, this);
                    this.onProto(s2c_chuang_shi_nv_shen_hun_ka_compose_viewer, this.s2c_chuang_shi_nv_shen_hun_ka_compose_viewer, this);
                };
                GoddessRecordProxy.prototype.c2s_chuang_shi_nv_shen_system_click = function (type, pos, idxs) {
                    var msg = new c2s_chuang_shi_nv_shen_system_click();
                    msg.button_type = type;
                    msg.pos = pos;
                    msg.idxs = idxs;
                    this.sendProto(msg);
                };
                GoddessRecordProxy.prototype.s2c_chuang_shi_nv_shen_base_info = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    for (var k in msg) {
                        this._model[k] = msg[k];
                    }
                    if (msg.event_index != undefined || msg.event_stage != undefined) {
                        this.sendNt("on_update_time_goddess_event_info" /* ON_UPDATE_TIME_GODDESS_EVENT_INFO */);
                    }
                    if (msg.talk_level != undefined || msg.is_finish != undefined) {
                        this.sendNt("on_update_time_goddess_chat_info" /* ON_UPDATE_TIME_GODDESS_CHAT_INFO */);
                    }
                    if (msg.level != undefined) {
                        this.sendNt("on_update_time_goddess_lv_info" /* ON_UPDATE_TIME_GODDESS_LV_INFO */);
                    }
                    this.updateGoddessHint();
                };
                /**女神激活数量*/
                GoddessRecordProxy.prototype.getActNum = function () {
                    var num = 0;
                    var cfgList = game.getConfigListByName("nvshen_index.json" /* NvshenIndex */);
                    for (var _i = 0, cfgList_1 = cfgList; _i < cfgList_1.length; _i++) {
                        var cfg = cfgList_1[_i];
                        if (this.isAct(cfg.index)) {
                            num++;
                        }
                    }
                    return num;
                };
                /**女神是否激活*/
                GoddessRecordProxy.prototype.isAct = function (index) {
                    if (index == 1 /* TimeGoddess */) {
                        return true; //默认激活
                    }
                    return false; //todo
                };
                /**女神红点*/
                GoddessRecordProxy.prototype.getHint = function (index) {
                    if (index == 1 /* TimeGoddess */) {
                        var hintType = this._model.hint;
                        return mod.HintMgr.getHint(hintType);
                    }
                    return false; //todo
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "lv", {
                    get: function () {
                        return this._model.level; //默认返回0级
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(GoddessRecordProxy.prototype, "chatLv", {
                    //当前对话的index
                    get: function () {
                        return this._model.talk_level;
                    },
                    enumerable: true,
                    configurable: true
                });
                GoddessRecordProxy.prototype.isChatFinish = function () {
                    return this._model.is_finish;
                };
                //当前开启到的对话index
                GoddessRecordProxy.prototype.getChatOpenLv = function () {
                    var lv = 0;
                    var cfgList = game.getConfigListByName("nvshen_duihua_level.json" /* NvshenDuihuaLevel */);
                    for (var _i = 0, cfgList_2 = cfgList; _i < cfgList_2.length; _i++) {
                        var cfg = cfgList_2[_i];
                        if (this.isEventFinishByStage(cfg.index, cfg.stage)) {
                            lv = cfg.level; //事件已通过
                        }
                    }
                    return lv;
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "chatMaxLv", {
                    //是否可以继续对话
                    get: function () {
                        if (!this._model.maxChatLv) {
                            var cfgList = game.getConfigListByName("nvshen_duihua.json" /* NvshenDuihua */);
                            var cfg = cfgList[cfgList.length - 1][1];
                            this._model.maxChatLv = cfg["level"];
                        }
                        return this._model.maxChatLv;
                    },
                    enumerable: true,
                    configurable: true
                });
                /***************************事件************************************/
                GoddessRecordProxy.prototype.getEventStage = function (index) {
                    if (index == this._model.event_index) {
                        return this._model.event_stage;
                    }
                    else if (index > this._model.event_index) {
                        return 0;
                    }
                    else {
                        return this.getEventMaxStage(index);
                    }
                };
                GoddessRecordProxy.prototype.getEventMaxStage = function (index) {
                    var maxStage = 0;
                    var cfgList = game.getConfigByNameId("nvshen_shijian.json" /* NvshenShijian */, index);
                    for (var k in cfgList) {
                        var cfg = cfgList[k];
                        if (cfg.stage > maxStage) {
                            maxStage = cfg.stage;
                        }
                    }
                    return maxStage;
                };
                GoddessRecordProxy.prototype.isEventOpen = function (index) {
                    var lastIndex = index - 1;
                    if (lastIndex <= 0) {
                        return true;
                    }
                    return this.isEventFinish(lastIndex);
                };
                GoddessRecordProxy.prototype.isEventFinish = function (index) {
                    var stage = this.getEventStage(index);
                    if (stage <= 0) {
                        return false;
                    }
                    var maxStage = this.getEventMaxStage(index);
                    return stage >= maxStage;
                };
                GoddessRecordProxy.prototype.isEventFinishByStage = function (index, stage) {
                    if (this._model.event_index > index) {
                        return true;
                    }
                    else if (this._model.event_index == index) {
                        return this._model.event_stage >= stage; //事件已通过
                    }
                    return false;
                };
                GoddessRecordProxy.prototype.checkChatHint = function () {
                    var isFinish = this.isChatFinish();
                    if (isFinish) {
                        return true; //已完成，可以领取奖励
                    }
                    var openLv = this.getChatOpenLv();
                    var chatLv = this.chatLv;
                    var maxChatLv = this.chatMaxLv;
                    return openLv >= chatLv && chatLv <= maxChatLv;
                };
                GoddessRecordProxy.prototype.checkEventHint = function () {
                    var cfgList = game.getConfigListByName("nvshen_shijian_type.json" /* NvshenShijianType */);
                    for (var i = 0; i < cfgList.length; ++i) {
                        var cfg = cfgList[i];
                        if (this.checkEventPerHint(cfg.index)) {
                            return true;
                        }
                    }
                    return false;
                };
                GoddessRecordProxy.prototype.checkEventPerHint = function (index) {
                    var isOpen = this.isEventOpen(index);
                    if (!isOpen) {
                        return false;
                    }
                    var isFinish = this.isEventFinish(index);
                    if (isFinish) {
                        return false;
                    }
                    var canChallenge = mod.ViewMgr.getIns().checkZhenrong();
                    if (!canChallenge) {
                        return false;
                    }
                    var stage = this.getEventStage(index);
                    var curStage = stage + 1;
                    var cfgList = game.getConfigByNameId("nvshen_shijian.json" /* NvshenShijian */, index);
                    var cfg = cfgList[curStage];
                    if (!cfg) {
                        return false;
                    }
                    return mod.ViewMgr.getIns().checkZhenrongGod(cfg.god);
                };
                /***************************供奉************************************/
                GoddessRecordProxy.prototype.s2c_chuang_shi_nv_shen_gongfeng_info = function (n) {
                    var msg = n.body;
                    this._model.prop_list = msg.prop_list || [];
                    this._model.total_speed_time = msg.total_speed_time ? msg.total_speed_time.toNumber() : 0;
                    game.RoleVo.ins.setValueByKey("cs_nvshen_total_speed_time" /* cs_nvshen_total_speed_time */, this._model.total_speed_time); //设置到角色身上，用于mdr顶部道具变化
                    this.sendNt("on_update_time_goddess_gongfeng_info" /* ON_UPDATE_TIME_GODDESS_GONGFENG_INFO */);
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "prop_list", {
                    //供奉数据
                    get: function () {
                        return this._model.prop_list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(GoddessRecordProxy.prototype, "total_speed_time", {
                    //累计加速时间
                    get: function () {
                        return this._model.total_speed_time;
                    },
                    enumerable: true,
                    configurable: true
                });
                GoddessRecordProxy.prototype.canIconDraw = function (info) {
                    var curTime = TimeMgr.time.serverTimeSecond;
                    var endTime = info && info.endtime && info.endtime.toNumber();
                    return endTime && endTime <= curTime;
                };
                GoddessRecordProxy.prototype.canIconAdd = function (info) {
                    if (info) {
                        return false;
                    }
                    var bags = mod.BagUtil.getBagsByTypeAndPropSubType(10 /* TimeGoddess */, 2 /* Jipin */);
                    return !!bags.length;
                };
                GoddessRecordProxy.prototype.gongfenging = function (info) {
                    var curTime = TimeMgr.time.serverTimeSecond;
                    return info && info.endtime && info.endtime.toNumber() > curTime;
                };
                //有正在献祭的道具否
                GoddessRecordProxy.prototype.getGongfengInfo = function () {
                    for (var _i = 0, _a = this.prop_list; _i < _a.length; _i++) {
                        var info = _a[_i];
                        if (this.gongfenging(info)) {
                            return info;
                        }
                    }
                    return null;
                };
                //献祭完毕所有，所需时间
                GoddessRecordProxy.prototype.getTotalPropTime = function () {
                    var propList = this.prop_list;
                    if (!propList || !propList.length) {
                        return 0;
                    }
                    var rst = 0;
                    propList.forEach(function (a) {
                        var endTime = a.endtime.toNumber();
                        if (endTime == 0) {
                            //为0表示正在排队的，读配置时间
                            var propCfg = game.GameConfig.getPropConfigById(a.idx.toNumber());
                            if (propCfg && propCfg.param1) {
                                var second = propCfg.param1[0][0];
                                rst += second;
                            }
                        }
                        else {
                            var dis = Math.max(0, endTime - TimeMgr.time.serverTimeSecond);
                            rst += dis;
                        }
                    });
                    return rst;
                };
                /**获取空格数量 */
                GoddessRecordProxy.prototype.getSpaceCount = function () {
                    var num = this.prop_list.length;
                    return game.TimeGoddessGongfengCnt - num;
                };
                GoddessRecordProxy.prototype.checkGongfengHint = function () {
                    var propList = this.prop_list;
                    for (var i = 0; i < game.TimeGoddessGongfengCnt; i++) {
                        var info = i < propList.length ? propList[i] : null;
                        if (this.checkIconHint(info)) {
                            return true;
                        }
                    }
                    return false;
                };
                GoddessRecordProxy.prototype.checkIconHint = function (info) {
                    var canDraw = this.canIconDraw(info); //可领奖
                    if (canDraw) {
                        return true;
                    }
                    return this.canIconAdd(info);
                };
                /***************************抽奖************************************/
                GoddessRecordProxy.prototype.getMinVal = function () {
                    if (!this._model.minVal) {
                        var cfgList = game.getConfigListByName("nvshen_choujiang.json" /* NvshenChoujiang */);
                        for (var _i = 0, cfgList_3 = cfgList; _i < cfgList_3.length; _i++) {
                            var cfg = cfgList_3[_i];
                            var cnt = cfg.costs[0][1];
                            if (!this._model.minVal || cnt < this._model.minVal) {
                                this._model.minVal = cnt;
                            }
                        }
                    }
                    return this._model.minVal;
                };
                GoddessRecordProxy.prototype.isOpenSummon = function () {
                    var hasPrivilege = mod.RoleUtil.hasPrivilege("cs_nvshen_open" /* cs_nvshen_open */);
                    return hasPrivilege;
                };
                GoddessRecordProxy.prototype.checkSummonHint = function () {
                    var isOpen = this.isOpenSummon();
                    if (!isOpen) {
                        return false;
                    }
                    var costCnt = this.getMinVal();
                    var curCnt = mod.BagUtil.getPropCntByIdx(1450100174 /* Chuangshinengliang */);
                    return curCnt >= costCnt;
                };
                GoddessRecordProxy.prototype.getSummonRewards = function () {
                    if (!this._model.rewards) {
                        this._model.rewards = [];
                        var cfgList = game.getConfigListByName("nvshen_choujiang.json" /* NvshenChoujiang */);
                        for (var i = cfgList.length - 1; i >= 0; --i) {
                            var cfg = cfgList[i];
                            var award = [];
                            for (var _i = 0, _a = cfg.rewards; _i < _a.length; _i++) {
                                var r = _a[_i];
                                //权重（万分比）_奖励道具_奖励数量
                                award.push([r[1], r[2]]);
                            }
                            var descStr = cfg.name;
                            var data = {
                                award: award,
                                descStr: descStr
                            };
                            this._model.rewards.push(data);
                        }
                    }
                    return this._model.rewards;
                };
                /***************************红点************************************/
                GoddessRecordProxy.prototype.updateGoddessHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670239 /* GoddessRecord */)) {
                        return; //功能未开启
                    }
                    var hint = this.checkHint();
                    var hintType = this._model.hint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                GoddessRecordProxy.prototype.checkHint = function () {
                    if (this.checkChatHint()) {
                        return true;
                    }
                    if (this.checkEventHint()) {
                        return true;
                    }
                    if (this.checkGongfengHint()) {
                        return true;
                    }
                    if (this.checkSummonHint()) {
                        return true;
                    }
                    return false;
                };
                GoddessRecordProxy.prototype.onUpdateZhenrongInfo = function (n) {
                    this.updateGoddessHint();
                };
                GoddessRecordProxy.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(10 /* TimeGoddess */) > -1) {
                        this.updateGoddessHint();
                    }
                    if (types.indexOf(11 /* Hunka */) > -1) {
                        //魂卡变更时
                        this.updateHunkaHint();
                        this.updateHunkaComposeHint();
                    }
                };
                GoddessRecordProxy.prototype.onRolePrivilegeUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("cs_nvshen_open" /* cs_nvshen_open */) >= 0) {
                        this.updateGoddessHint();
                    }
                };
                GoddessRecordProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("god" /* god */) >= 0) {
                        this.updateHunkaHint(); //仙力变更时刷新魂卡部位开启红点
                    }
                };
                /***************************魂卡************************************/
                GoddessRecordProxy.prototype.c2s_chuang_shi_nv_shen_hun_ka_click = function (buttonType, type, pos, id, ids) {
                    var msg = new c2s_chuang_shi_nv_shen_hun_ka_click();
                    msg.button_type = buttonType;
                    msg.type = type;
                    msg.pos = pos;
                    msg.id = id;
                    msg.ids = ids;
                    this.sendProto(msg);
                };
                GoddessRecordProxy.prototype.s2c_chuang_shi_nv_shen_hun_ka_info = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.list) {
                        return;
                    }
                    for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                        var info = _a[_i];
                        var oldInfo = this.getHunkaTypeInfo(info.type);
                        if (!oldInfo) {
                            this._model.hunkaList[info.type] = info;
                            continue;
                        }
                        //更新
                        if (info.lv != undefined) {
                            oldInfo.lv = info.lv;
                        }
                        if (info.ka_list) {
                            if (!oldInfo.ka_list) {
                                oldInfo.ka_list = info.ka_list;
                                continue;
                            }
                            for (var _b = 0, _c = info.ka_list; _b < _c.length; _b++) {
                                var posInfo = _c[_b];
                                var pos = this.getInfoPos(posInfo.pos, oldInfo.ka_list);
                                if (pos >= 0) {
                                    oldInfo.ka_list[pos] = posInfo;
                                }
                                else {
                                    oldInfo.ka_list.push(posInfo);
                                }
                            }
                        }
                    }
                    this.updateHunkaHint();
                    this.sendNt("on_update_hunka_info" /* ON_UPDATE_HUNKA_INFO */);
                };
                GoddessRecordProxy.prototype.getInfoPos = function (pos, infos) {
                    var len = infos.length;
                    for (var i = 0; i < len; ++i) {
                        var info = infos[i];
                        if (info.pos == pos) {
                            return i;
                        }
                    }
                    return -1;
                };
                GoddessRecordProxy.prototype.getHunkaTypeInfo = function (type) {
                    return this._model.hunkaList[type] || null;
                };
                GoddessRecordProxy.prototype.getHunkaLv = function (type) {
                    var info = this.getHunkaTypeInfo(type);
                    return info && info.lv || 0;
                };
                GoddessRecordProxy.prototype.getHunkaPosInfo = function (type, pos) {
                    var info = this.getHunkaTypeInfo(type);
                    if (!info || !info.ka_list) {
                        return null;
                    }
                    for (var _i = 0, _a = info.ka_list; _i < _a.length; _i++) {
                        var posInfo = _a[_i];
                        if (posInfo.pos == pos) {
                            return posInfo;
                        }
                    }
                    return null;
                };
                //魂卡部位是否解锁
                GoddessRecordProxy.prototype.isPosOpen = function (type, pos) {
                    var posInfo = this.getHunkaPosInfo(type, pos);
                    return !!posInfo; //取到表示解锁
                };
                //魂卡部位是否解锁限制
                GoddessRecordProxy.prototype.isPosLimitOpen = function (type, pos, showTips) {
                    var cfgList = game.getConfigByNameId("nvshen_hunka.json" /* NvshenHunka */, type);
                    var cfg = cfgList[pos];
                    var god = game.RoleVo.ins.getValueByKey("god" /* god */);
                    var isOpen = god >= cfg.god;
                    if (!isOpen && showTips) {
                        var tips = game.StringUtil.substitute(game.getLanById("hunka_tips8" /* hunka_tips8 */), [cfg.god]);
                        game.PromptBox.getIns().show(tips);
                    }
                    return isOpen;
                };
                //魂卡可解锁最低部位
                GoddessRecordProxy.prototype.getMinPos = function (type) {
                    for (var i = 0; i < game.HunkaPosCnt; ++i) {
                        var pos = i + 1;
                        if (!this.isPosOpen(type, pos)) {
                            return pos;
                        }
                    }
                    return 1;
                };
                GoddessRecordProxy.prototype.getHunkaTotalScore = function (type) {
                    var totalScore = 0;
                    for (var i = 0; i < game.HunkaPosCnt; ++i) {
                        var pos = i + 1;
                        var posInfo = this.getHunkaPosInfo(type, pos);
                        if (!posInfo || !posInfo.hunka || !posInfo.hunka.index) {
                            continue;
                        }
                        totalScore += posInfo.hunka.pingfen || 0; //取评分
                    }
                    return totalScore;
                };
                GoddessRecordProxy.prototype.getHunkaNeedScore = function (type, lv) {
                    var cfgList = game.getConfigByNameId("nvshen_hunka_score.json" /* NvshenHunkaScore */, type);
                    var nextLv = lv + 1;
                    var cfg = cfgList[nextLv];
                    if (!cfg) {
                        cfg = cfgList[lv];
                    }
                    return cfg.score;
                };
                //魂卡共鸣最大等级
                GoddessRecordProxy.prototype.isHunkaMaxLv = function (type) {
                    var lv = this.getHunkaLv(type);
                    var cfgList = game.getConfigByNameId("nvshen_hunka_score.json" /* NvshenHunkaScore */, type);
                    var nextLv = lv + 1;
                    var cfg = cfgList[nextLv];
                    return !cfg;
                };
                GoddessRecordProxy.prototype.getHunkaScoreCfgList = function (type) {
                    if (!this._model.hunkaScoreCfgList[type]) {
                        this._model.hunkaScoreCfgList[type] = [];
                        var cfgList = game.getConfigByNameId("nvshen_hunka_score.json" /* NvshenHunkaScore */, type);
                        for (var k in cfgList) {
                            var cfg = cfgList[k];
                            this._model.hunkaScoreCfgList[type].push(cfg);
                        }
                    }
                    return this._model.hunkaScoreCfgList[type];
                };
                GoddessRecordProxy.prototype.getPosOpenCost = function (type, pos) {
                    var cfgList = game.getConfigByNameId("nvshen_hunka.json" /* NvshenHunka */, type);
                    var cfg = cfgList[pos];
                    return cfg.costs && cfg.costs[0] || null;
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaType", {
                    get: function () {
                        return this._model.hunkaType;
                    },
                    set: function (type) {
                        this._model.hunkaType = type;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaBagOpenType", {
                    get: function () {
                        return this._model.hunkaBagOpenType;
                    },
                    set: function (type) {
                        this._model.hunkaBagOpenType = type;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaSelPos", {
                    get: function () {
                        return this._model.hunkaSelPos;
                    },
                    set: function (pos) {
                        this._model.hunkaSelPos = pos;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaHint", {
                    get: function () {
                        return this._model.hunkaHint;
                    },
                    enumerable: true,
                    configurable: true
                });
                //是否可以一键附魂
                GoddessRecordProxy.prototype.canHuankaOneKeyWear = function (type) {
                    var infos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type);
                    if (infos.length <= 0) {
                        return false; //没有魂卡时
                    }
                    for (var pos = 1; pos <= game.HunkaPosCnt; ++pos) {
                        if (this.getHunkaPosHint(type, pos, infos, true)) {
                            return true;
                        }
                    }
                    return false;
                };
                //是否可以免费激活魂卡部位
                GoddessRecordProxy.prototype.canHuankaPosAct = function (type) {
                    for (var pos = 1; pos <= game.HunkaPosCnt; ++pos) {
                        if (this.canPosOpen(type, pos)) {
                            return true;
                        }
                    }
                    return false;
                };
                GoddessRecordProxy.prototype.canPosOpen = function (type, pos) {
                    if (!this.isPosLimitOpen(type, pos)) {
                        //未达到限制要求
                        return false;
                    }
                    if (!this.isPosOpen(type, pos)) {
                        //未解锁
                        var cost = this.getPosOpenCost(type, pos);
                        return !cost; //没有配置仙玉消耗的，提示解锁红点
                    }
                    return false;
                };
                //部位红点，可穿戴，可解锁，notCalcOpen：不计算解锁消耗逻辑，一键附魂用
                GoddessRecordProxy.prototype.getHunkaPosHint = function (type, pos, infos, notCalcOpen) {
                    if (!this.isPosLimitOpen(type, pos)) {
                        //未达到限制要求
                        return false;
                    }
                    if (!this.isPosOpen(type, pos)) {
                        //未解锁
                        if (notCalcOpen) {
                            return false; //不计算解锁消耗
                        }
                        var cost = this.getPosOpenCost(type, pos);
                        if (cost) {
                            var costIndex = cost[0];
                            var costCnt = cost[1];
                            return mod.BagUtil.checkPropCnt(costIndex, costCnt);
                        }
                        return true; //没有配置仙玉消耗的，提示解锁红点
                    }
                    if (!infos) {
                        infos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type);
                    }
                    //可穿戴
                    for (var _i = 0, infos_1 = infos; _i < infos_1.length; _i++) {
                        var prop = infos_1[_i];
                        if (this.checkBestHunka(type, pos, prop)) {
                            return true;
                        }
                    }
                    return false;
                };
                //是否可以激活
                GoddessRecordProxy.prototype.canHuankaGongmingAct = function (type) {
                    var isMax = this.isHunkaMaxLv(type);
                    if (isMax) {
                        return false;
                    }
                    var lv = this.getHunkaLv(type);
                    var needScore = this.getHunkaNeedScore(type, lv);
                    var totalScore = this.getHunkaTotalScore(type);
                    var leftScore = needScore - totalScore; //所需积分-当前总积分
                    return leftScore <= 0;
                };
                //是否可穿戴更好的魂卡
                GoddessRecordProxy.prototype.checkBestHunka = function (type, pos, prop) {
                    var posInfo = this.getHunkaPosInfo(type, pos);
                    if (!posInfo || !posInfo.hunka || !posInfo.hunka.index) {
                        return true;
                    }
                    return prop.pingfen >= posInfo.hunka.pingfen;
                };
                /***************************魂卡合成************************************/
                GoddessRecordProxy.prototype.s2c_chuang_shi_nv_shen_hun_ka_compose_viewer = function (n) {
                    var msg = n.body;
                    if (!msg || !msg.button_type) {
                        return;
                    }
                    if (msg.button_type == 5 /* Preview */) {
                        //魂卡预览
                        this._model.hunkaPreview = msg;
                        this.sendNt("on_update_hunka_preview" /* ON_UPDATE_HUNKA_PREVIEW */);
                    }
                    else {
                        //合成成功
                        facade.showView("61" /* More */, "96" /* HunkaComposeTips */, msg.hunka);
                        this.clearComposeList(); //合成成功后清除合成选择
                        if (msg.button_type == 6 /* Compose */) {
                            //合成成功后继续选中新的魂卡
                            var prop = game.PropData.fromData(msg.hunka);
                            this.setComposeSel(prop, 0);
                        }
                        this.sendNt("on_update_hunka_compose" /* ON_UPDATE_HUNKA_COMPOSE */);
                    }
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaPreview", {
                    get: function () {
                        return this._model.hunkaPreview;
                    },
                    enumerable: true,
                    configurable: true
                });
                GoddessRecordProxy.prototype.clearComposeList = function () {
                    this._model.hunkaComposeList = {};
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "composeList", {
                    get: function () {
                        return this._model.hunkaComposeList;
                    },
                    enumerable: true,
                    configurable: true
                });
                //返回选中的其中一个魂卡
                GoddessRecordProxy.prototype.getComposeSel = function () {
                    for (var k in this._model.hunkaComposeList) {
                        var prop = this._model.hunkaComposeList[k];
                        return prop;
                    }
                    return null;
                };
                //返回可能是空的数据
                GoddessRecordProxy.prototype.getComposeSelByPos = function (pos) {
                    return this._model.hunkaComposeList[pos] || null;
                };
                //选中的魂卡数量
                GoddessRecordProxy.prototype.getComposeSelNum = function () {
                    var num = 0;
                    for (var k in this._model.hunkaComposeList) {
                        num++;
                    }
                    return num;
                };
                GoddessRecordProxy.prototype.setComposeSel = function (propData, pos) {
                    this._model.hunkaComposeList[pos] = propData;
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaComposeSelPos", {
                    get: function () {
                        return this._model.hunkaComposeSelPos;
                    },
                    set: function (pos) {
                        this._model.hunkaComposeSelPos = pos;
                    },
                    enumerable: true,
                    configurable: true
                });
                GoddessRecordProxy.prototype.canSelCompose = function () {
                    var composeProp = this.getComposeSel();
                    if (composeProp) {
                        var type = composeProp.propSubType;
                        var infos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type);
                        return infos.length > 1;
                    }
                    return this.canCompose();
                };
                Object.defineProperty(GoddessRecordProxy.prototype, "hunkaSelQuality", {
                    get: function () {
                        return this._model.hunkaSelQuality;
                    },
                    set: function (quality) {
                        this._model.hunkaSelQuality = quality;
                    },
                    enumerable: true,
                    configurable: true
                });
                GoddessRecordProxy.prototype.getHunkaSelList = function (type, quality) {
                    var infos;
                    if (!type) {
                        //0表示全部
                        infos = mod.BagUtil.getBagsByType(11 /* Hunka */, true);
                    }
                    else {
                        infos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type, true);
                    }
                    return infos.filter(function (v) {
                        return v.quality == quality;
                    });
                };
                GoddessRecordProxy.prototype.canCompose = function () {
                    var _a;
                    //是否有可合成魂卡，同类型的魂卡有两个即可合成
                    var infos = mod.BagUtil.getBagsByType(11 /* Hunka */);
                    var cntList = (_a = {},
                        _a[1 /* Yaohun1 */] = 0,
                        _a[2 /* Xianhun2 */] = 0,
                        _a[3 /* Shenhun3 */] = 0,
                        _a);
                    for (var _i = 0, infos_2 = infos; _i < infos_2.length; _i++) {
                        var i = infos_2[_i];
                        cntList[i.propSubType] += i.count;
                        if (cntList[i.propSubType] >= 2) {
                            return true;
                        }
                    }
                    return false;
                };
                /***************************魂卡红点************************************/
                GoddessRecordProxy.prototype.updateHunkaHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670239 /* GoddessRecord */)) {
                        return; //功能未开启
                    }
                    for (var type = 1; type <= 3 /* Shenhun3 */; ++type) {
                        var hint = this.checkHunkaTypeHint(type);
                        var hintType = this.getHunkaHintType(type);
                        mod.HintMgr.setHint(hint, hintType);
                    }
                };
                GoddessRecordProxy.prototype.getHunkaHintType = function (type) {
                    return this._model.hunkaHintTypeList[type];
                };
                GoddessRecordProxy.prototype.checkHunkaTypeHint = function (type) {
                    if (this.canHuankaGongmingAct(type)) {
                        return true;
                    }
                    if (this.canHuankaPosAct(type)) {
                        return true;
                    }
                    return this.canHuankaOneKeyWear(type);
                };
                GoddessRecordProxy.prototype.updateHunkaComposeHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670239 /* GoddessRecord */)) {
                        return; //功能未开启
                    }
                    var hint = this.canCompose();
                    var hintType = this._model.hunkaComposeHintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                return GoddessRecordProxy;
            }(game.ProxyBase));
            more.GoddessRecordProxy = GoddessRecordProxy;
            __reflect(GoddessRecordProxy.prototype, "game.mod.more.GoddessRecordProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var GoddessRecordRender = /** @class */ (function (_super) {
                __extends(GoddessRecordRender, _super);
                function GoddessRecordRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GoddessRecordRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                GoddessRecordRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.index;
                    this.img_bg.source = game.ResUtil.getUiPng("goddessRecord_card" + index);
                    this.img_text.source = "goddessRecord_text" + index;
                    //todo
                    if (data.index == 3 || data.index == 4) {
                        this.img_text.visible = false;
                    }
                    var isAct = this._proxy.isAct(index);
                    this._isAct = isAct;
                    this.img_mask.visible = !isAct;
                    this.redPoint.visible = this._proxy.getHint(index);
                    this.removeEft();
                    this.addEftByParent("nvshenlu" /* Nvshenlu */, this.group_eft);
                };
                GoddessRecordRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    //暂时屏蔽其他三个
                    if (data.index != 1) {
                        game.PromptBox.getIns().show("\u656C\u8BF7\u671F\u5F85\uFF01");
                        return;
                    }
                    if (!this._isAct) {
                        //todo,可激活
                        var costIndex = data.active_cost[0][0];
                        mod.ViewMgr.getIns().showGainWaysTips(costIndex);
                        return;
                    }
                    var index = data.index;
                    if (index == 1 /* TimeGoddess */) {
                        mod.ViewMgr.getIns().showView("61" /* More */, "71" /* TimeGoddessMain */);
                    }
                    //todo
                };
                return GoddessRecordRender;
            }(mod.BaseRenderer));
            more.GoddessRecordRender = GoddessRecordRender;
            __reflect(GoddessRecordRender.prototype, "game.mod.more.GoddessRecordRender");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessRecordView = /** @class */ (function (_super) {
                __extends(GoddessRecordView, _super);
                function GoddessRecordView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessRecordSkin";
                    return _this;
                }
                return GoddessRecordView;
            }(eui.Component));
            more.GoddessRecordView = GoddessRecordView;
            __reflect(GoddessRecordView.prototype, "game.mod.more.GoddessRecordView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaAttrItem = /** @class */ (function (_super) {
                __extends(HunkaAttrItem, _super);
                function HunkaAttrItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaAttrItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var info = this.data;
                    var cfg = game.getConfigByNameId("nvshen_attr.json" /* NvshenAttr */, info.itype);
                    var typeStr = cfg.type_name + info.level;
                    this.lab_type.text = typeStr;
                    var attrStr = game.TextUtil.getAttrTextAdd(info.attr, 8585074 /* GREEN */);
                    this.lab_attr.textFlow = game.TextUtil.parseHtml(attrStr);
                    var rate = info.rate;
                    this.img_up.visible = this.lab_up.visible = !!rate;
                    if (this.lab_up.visible) {
                        var showRate = Math.max(1, Math.floor(rate / 100));
                        var upStr = showRate + "%" + game.getLanById("hunka_tips18" /* hunka_tips18 */);
                        this.lab_up.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(upStr, 8585074 /* GREEN */));
                    }
                };
                return HunkaAttrItem;
            }(eui.ItemRenderer));
            more.HunkaAttrItem = HunkaAttrItem;
            __reflect(HunkaAttrItem.prototype, "game.mod.more.HunkaAttrItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Event = egret.Event;
            var ArrayCollection = eui.ArrayCollection;
            var HunkaAttrListView = /** @class */ (function (_super) {
                __extends(HunkaAttrListView, _super);
                function HunkaAttrListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaAttrListSkin";
                    _this.addEventListener(Event.ADDED_TO_STAGE, _this.onAddToStage, _this);
                    return _this;
                }
                HunkaAttrListView.prototype.onAddToStage = function () {
                    this.addEventListener(Event.REMOVED_FROM_STAGE, this.onRemove, this);
                    this.initAttrList();
                };
                HunkaAttrListView.prototype.onRemove = function () {
                };
                HunkaAttrListView.prototype.initAttrList = function () {
                    if (!this._attrList) {
                        this._attrList = new ArrayCollection();
                    }
                    this.list_attr.itemRenderer = more.HunkaAttrItem;
                    this.list_attr.dataProvider = this._attrList;
                };
                HunkaAttrListView.prototype.updateShow = function (infos, isSort) {
                    if (!this._attrList) {
                        this.initAttrList();
                    }
                    if (isSort) {
                        infos.sort(function (v1, v2) {
                            var rate1 = v1.rate ? 1 : 0;
                            var rate2 = v2.rate ? 1 : 0;
                            return rate2 - rate1;
                        });
                    }
                    // if (this._attrList.source.length > 0) {
                    //     this._attrList.replaceAll(infos);
                    // } else {
                    //     this._attrList.source = infos;
                    // }
                    this._attrList.replaceAll(infos);
                };
                return HunkaAttrListView;
            }(eui.Component));
            more.HunkaAttrListView = HunkaAttrListView;
            __reflect(HunkaAttrListView.prototype, "game.mod.more.HunkaAttrListView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var delayCall = base.delayCall;
            var clearDelay = base.clearDelay;
            var Handler = base.Handler;
            var facade = base.facade;
            var HunkaBagIcon = /** @class */ (function (_super) {
                __extends(HunkaBagIcon, _super);
                function HunkaBagIcon() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._selectShow = false; //长按奖励时候提示
                    return _this;
                }
                HunkaBagIcon.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(TouchEvent.TOUCH_BEGIN, this.icon, this.onClickBegin, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_END, this.icon, this.onClickEnd, this);
                    this.icon.setClickHandler(Handler.alloc(this, this.onClickTap));
                };
                HunkaBagIcon.prototype.onRemoveFromStage = function () {
                    this.clearDelayProp();
                    _super.prototype.onRemoveFromStage.call(this);
                };
                HunkaBagIcon.prototype.onClickBegin = function () {
                    this._delayProp = delayCall(Handler.alloc(this, this.showPropTips), 2000);
                };
                HunkaBagIcon.prototype.onClickEnd = function () {
                    this.clearDelayProp();
                };
                HunkaBagIcon.prototype.onClickTap = function () {
                    if (this._selectShow) {
                        //长按提示奖励时候不选中
                        this._selectShow = false;
                        return;
                    }
                    var openType = this._proxy.hunkaBagOpenType;
                    if (openType == 1 /* Wear */) {
                        //穿戴
                        var type = this._proxy.hunkaType;
                        var pos = this._proxy.hunkaSelPos;
                        var id = this.data.prop_id;
                        this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(2 /* Wear */, type, pos, id);
                    }
                    else if (openType == 2 /* Compose */) {
                        //合成选择
                        var pos = this._proxy.hunkaComposeSelPos;
                        this._proxy.setComposeSel(this.data, pos);
                    }
                    facade.sendNt("on_update_hunka_select" /* ON_UPDATE_HUNKA_SELECT */);
                };
                HunkaBagIcon.prototype.clearDelayProp = function () {
                    if (this._delayProp) {
                        clearDelay(this._delayProp);
                    }
                };
                HunkaBagIcon.prototype.showPropTips = function () {
                    if (!this.data) {
                        return;
                    }
                    this._delayProp = 0;
                    this._selectShow = true;
                    facade.showView("61" /* More */, "94" /* HunkaTips */, this.data);
                };
                HunkaBagIcon.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.icon.setData(this.data);
                    var star = this.data.hunka_star;
                    this.starListFuView.updateStar(star, -10);
                    var openType = this._proxy.hunkaBagOpenType;
                    if (openType == 1 /* Wear */) {
                        //穿戴
                        this.currentState = "up";
                        var type = this._proxy.hunkaType;
                        var pos = this._proxy.hunkaSelPos;
                        var isBest = this._proxy.checkBestHunka(type, pos, this.data);
                        this.img_up.source = isBest ? "jiantou_lvse" : "jiantou_hongse";
                    }
                    else if (openType == 2 /* Compose */) {
                        //合成
                        this.currentState = "default";
                    }
                };
                return HunkaBagIcon;
            }(mod.BaseRenderer));
            more.HunkaBagIcon = HunkaBagIcon;
            __reflect(HunkaBagIcon.prototype, "game.mod.more.HunkaBagIcon");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaBagView = /** @class */ (function (_super) {
                __extends(HunkaBagView, _super);
                function HunkaBagView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaBagSkin";
                    return _this;
                }
                return HunkaBagView;
            }(eui.Component));
            more.HunkaBagView = HunkaBagView;
            __reflect(HunkaBagView.prototype, "game.mod.more.HunkaBagView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HunkaComposeItem = /** @class */ (function (_super) {
                __extends(HunkaComposeItem, _super);
                function HunkaComposeItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaComposeItem.prototype.onAddToStage = function () {
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                HunkaComposeItem.prototype.dataChanged = function () {
                    if (this.data == null) {
                        return;
                    }
                    var pos = this.data;
                    var prop = this._proxy.getComposeSelByPos(pos);
                    var hasProp = !!prop;
                    this.currentState = hasProp ? "select" : "add";
                    if (hasProp) {
                        //显示选中的魂卡
                        var cfg = prop.cfg;
                        this.lab_name.text = cfg.name;
                        this.img_icon.source = game.ResUtil.getBigIcon(cfg.icon);
                        this.hunkaScore.setData(prop.pingfen);
                        var star = prop.hunka_star;
                        this.starListView.updateNewStar(star, star);
                        this.hunkaAttrListView.updateShow(prop.shuiji);
                    }
                    else {
                        this.lab_name.text = game.getLanById("hunka_tips12" /* hunka_tips12 */);
                        this.redPoint.visible = this._proxy.canSelCompose();
                    }
                };
                HunkaComposeItem.prototype.onClick = function () {
                    if (this.data == null) {
                        return;
                    }
                    var pos = this.data;
                    this._proxy.hunkaComposeSelPos = pos; //魂卡合成选中部位
                    this._proxy.hunkaBagOpenType = 2 /* Compose */;
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "93" /* HunkaBag */);
                };
                HunkaComposeItem.prototype.setData = function (pos) {
                    this.data = pos;
                };
                return HunkaComposeItem;
            }(mod.BaseRenderer));
            more.HunkaComposeItem = HunkaComposeItem;
            __reflect(HunkaComposeItem.prototype, "game.mod.more.HunkaComposeItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaComposeTipsView = /** @class */ (function (_super) {
                __extends(HunkaComposeTipsView, _super);
                function HunkaComposeTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaComposeTipsSkin";
                    return _this;
                }
                return HunkaComposeTipsView;
            }(eui.Component));
            more.HunkaComposeTipsView = HunkaComposeTipsView;
            __reflect(HunkaComposeTipsView.prototype, "game.mod.more.HunkaComposeTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaComposeView = /** @class */ (function (_super) {
                __extends(HunkaComposeView, _super);
                function HunkaComposeView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaComposeSkin";
                    return _this;
                }
                return HunkaComposeView;
            }(eui.Component));
            more.HunkaComposeView = HunkaComposeView;
            __reflect(HunkaComposeView.prototype, "game.mod.more.HunkaComposeView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HunkaGongmingItem = /** @class */ (function (_super) {
                __extends(HunkaGongmingItem, _super);
                function HunkaGongmingItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaGongmingItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data;
                    var type = cfg["index"];
                    var cfgLv = cfg.lv;
                    var _proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    var lv = _proxy.getHunkaLv(type);
                    var isAct = lv >= cfgLv;
                    var pingjiaStr = isAct ? "pingjia1" : "pingjia0";
                    this.img_pingjia.source = pingjiaStr;
                    var lvStr = "hunka_score" + cfgLv;
                    if (!isAct) {
                        lvStr += "_0";
                    }
                    this.img_lv.source = lvStr;
                    var descStr = game.TextUtil.addColor(cfg.desc, isAct ? 8585074 /* GREEN */ : 7835024 /* GRAY */);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                };
                return HunkaGongmingItem;
            }(eui.ItemRenderer));
            more.HunkaGongmingItem = HunkaGongmingItem;
            __reflect(HunkaGongmingItem.prototype, "game.mod.more.HunkaGongmingItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaGongmingView = /** @class */ (function (_super) {
                __extends(HunkaGongmingView, _super);
                function HunkaGongmingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaGongmingSkin";
                    return _this;
                }
                return HunkaGongmingView;
            }(eui.Component));
            more.HunkaGongmingView = HunkaGongmingView;
            __reflect(HunkaGongmingView.prototype, "game.mod.more.HunkaGongmingView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaIcon = /** @class */ (function (_super) {
                __extends(HunkaIcon, _super);
                function HunkaIcon() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaIcon.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                };
                return HunkaIcon;
            }(eui.ItemRenderer));
            more.HunkaIcon = HunkaIcon;
            __reflect(HunkaIcon.prototype, "game.mod.more.HunkaIcon");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HunkaItem = /** @class */ (function (_super) {
                __extends(HunkaItem, _super);
                function HunkaItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaItem.prototype.onAddToStage = function () {
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_gongming, this.onClickGongming, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.img_bg, this.onClick, this);
                };
                HunkaItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var type = this.data;
                    var bgStr = "hunka_" + type;
                    this.img_bg.source = game.ResUtil.getUiPng(bgStr);
                    this.btn_gongming.icon = "hunka_gongming" + type;
                    var hintType = this._proxy.getHunkaHintType(type);
                    this.redPoint.visible = mod.HintMgr.getHint(hintType);
                    this.btn_gongming.redPoint.visible = this._proxy.canHuankaGongmingAct(type);
                    this.item.setData(type);
                };
                HunkaItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "91" /* HunkaTypeMain */, data);
                };
                HunkaItem.prototype.onClickGongming = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    facade.showView("61" /* More */, "92" /* HunkaGongming */, data);
                };
                return HunkaItem;
            }(mod.BaseRenderer));
            more.HunkaItem = HunkaItem;
            __reflect(HunkaItem.prototype, "game.mod.more.HunkaItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Event = egret.Event;
            var TextEvent = egret.TextEvent;
            var HunkaNoneView = /** @class */ (function (_super) {
                __extends(HunkaNoneView, _super);
                function HunkaNoneView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaNoneSkin";
                    _this.addEventListener(Event.ADDED_TO_STAGE, _this.onAddToStage, _this);
                    return _this;
                }
                HunkaNoneView.prototype.onAddToStage = function () {
                    this.addEventListener(Event.REMOVED_FROM_STAGE, this.onRemove, this);
                    this.lab_go.addEventListener(TextEvent.LINK, this.onClickGo, this);
                    var textStr = this.lab_go.text;
                    var textColor = this.lab_go.textColor;
                    this.lab_go.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(textStr, textColor, ""));
                };
                HunkaNoneView.prototype.onRemove = function () {
                    this.lab_go.removeEventListener(TextEvent.LINK, this.onClickGo, this);
                };
                HunkaNoneView.prototype.onClickGo = function () {
                    if (this._clickHandler) {
                        this._clickHandler.exec();
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "71" /* TimeGoddessMain */);
                };
                HunkaNoneView.prototype.updateHunkaNoneView = function (clickHandler) {
                    this._clickHandler = clickHandler;
                };
                return HunkaNoneView;
            }(eui.Component));
            more.HunkaNoneView = HunkaNoneView;
            __reflect(HunkaNoneView.prototype, "game.mod.more.HunkaNoneView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaOneKeyComposeView = /** @class */ (function (_super) {
                __extends(HunkaOneKeyComposeView, _super);
                function HunkaOneKeyComposeView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaOneKeyComposeSkin";
                    return _this;
                }
                return HunkaOneKeyComposeView;
            }(eui.Component));
            more.HunkaOneKeyComposeView = HunkaOneKeyComposeView;
            __reflect(HunkaOneKeyComposeView.prototype, "game.mod.more.HunkaOneKeyComposeView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var Tween = base.Tween;
            var Handler = base.Handler;
            var HunkaPosItem = /** @class */ (function (_super) {
                __extends(HunkaPosItem, _super);
                function HunkaPosItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._posY = 0;
                    return _this;
                }
                HunkaPosItem.prototype.onAddToStage = function () {
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                HunkaPosItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var pos = this.data;
                    var type = this._proxy.hunkaType;
                    var posInfo = this._proxy.getHunkaPosInfo(type, pos);
                    this._isLock = !posInfo; //取不到表示未解锁
                    if (this._isLock) {
                        this.currentState = "lock";
                    }
                    else {
                        var prop = posInfo && posInfo.hunka;
                        this._prop = prop;
                        this._isAdd = !prop || !prop.index; //没有穿戴
                        if (this._isAdd) {
                            this.currentState = "add";
                            this.removeTween();
                        }
                        else {
                            this.currentState = "icon";
                            var propData = game.PropData.fromData(prop);
                            var cfg = propData.cfg;
                            this.img_icon.source = game.ResUtil.getBigIcon(cfg.icon);
                            this.playTween();
                        }
                    }
                    this.redPoint.visible = this._proxy.getHunkaPosHint(type, pos);
                };
                HunkaPosItem.prototype.onClick = function () {
                    var _this = this;
                    if (!this.data) {
                        return;
                    }
                    var type = this._proxy.hunkaType;
                    if (this._isLock) {
                        var minPos_1 = this._proxy.getMinPos(type);
                        //未解锁
                        if (!this._proxy.isPosLimitOpen(type, minPos_1, true)) {
                            return;
                        }
                        var cost = this._proxy.getPosOpenCost(type, minPos_1);
                        if (!cost) {
                            this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(1 /* Open */, type, minPos_1); //没有配置消耗的，直接解锁
                            return;
                        }
                        var costIndex = cost[0];
                        var costCnt = cost[1];
                        var costCfg = game.GameConfig.getPropConfigById(costIndex);
                        var costStr = game.TextUtil.addColor(costCnt + costCfg.name, 2330156 /* GREEN */);
                        var tips = game.StringUtil.substitute(game.getLanById("hunka_tips9" /* hunka_tips9 */), [costStr]);
                        //解锁提示
                        mod.ViewMgr.getIns().showConfirm(tips, Handler.alloc(this, function () {
                            _this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(1 /* Open */, type, minPos_1);
                        }));
                    }
                    else {
                        var pos = this.data;
                        this._proxy.hunkaSelPos = pos;
                        if (this._isAdd) {
                            this._proxy.hunkaBagOpenType = 1 /* Wear */;
                            mod.ViewMgr.getIns().showSecondPop("61" /* More */, "93" /* HunkaBag */, type);
                        }
                        else {
                            facade.showView("61" /* More */, "94" /* HunkaTips */, this._prop);
                        }
                    }
                };
                HunkaPosItem.prototype.playTween = function () {
                    this.removeTween();
                    this.img_icon.y = this._posY;
                    Tween.get(this.img_icon, { loop: true })
                        .to({ y: this._posY - 15 }, 1000)
                        .to({ y: this._posY }, 1000);
                };
                HunkaPosItem.prototype.removeTween = function () {
                    Tween.remove(this.img_icon);
                };
                HunkaPosItem.prototype.setData = function (pos) {
                    this.data = pos;
                };
                return HunkaPosItem;
            }(mod.BaseRenderer));
            more.HunkaPosItem = HunkaPosItem;
            __reflect(HunkaPosItem.prototype, "game.mod.more.HunkaPosItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaPreviewItem = /** @class */ (function (_super) {
                __extends(HunkaPreviewItem, _super);
                function HunkaPreviewItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaPreviewItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var countDown = this.data.attr_count_down;
                    var countUp = this.data.attr_count_up;
                    var countStr = game.TextUtil.addColor(countDown == countUp ? countUp + "" : countDown + "-" + countUp, 2330156 /* GREEN */);
                    var tipsStr = game.StringUtil.substitute(game.getLanById("hunka_tips17" /* hunka_tips17 */), [countStr]);
                    this.lab_tips.textFlow = game.TextUtil.parseHtml(tipsStr);
                    var prop = this.data.hunka;
                    this.hunkaAttrListView.updateShow(prop.shuiji, true);
                };
                HunkaPreviewItem.prototype.setData = function (data) {
                    this.data = data;
                };
                return HunkaPreviewItem;
            }(eui.ItemRenderer));
            more.HunkaPreviewItem = HunkaPreviewItem;
            __reflect(HunkaPreviewItem.prototype, "game.mod.more.HunkaPreviewItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaScore = /** @class */ (function (_super) {
                __extends(HunkaScore, _super);
                function HunkaScore() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaScore.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var type = this.data.type;
                    this.currentState = type == 1 /* Score */ ? "score" : "all";
                    var fontStr = this.data.score + "";
                    this.addBmpFont(fontStr, game.BmpTextCfg[100 /* CommonPower */], this.grp_score, true, 1, false, 0, true);
                };
                HunkaScore.prototype.setData = function (score, type) {
                    if (type === void 0) { type = 1 /* Score */; }
                    this.data = { score: score, type: type };
                };
                return HunkaScore;
            }(mod.BaseRenderer));
            more.HunkaScore = HunkaScore;
            __reflect(HunkaScore.prototype, "game.mod.more.HunkaScore");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HunkaScoreItem = /** @class */ (function (_super) {
                __extends(HunkaScoreItem, _super);
                function HunkaScoreItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaScoreItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var type = this.data.type;
                    var totalScore = this.data.totalScore;
                    var _proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    var lv = _proxy.getHunkaLv(type);
                    var lvStr = "hunka_score" + lv;
                    this.img_lv.source = lvStr;
                    if (totalScore == undefined) {
                        totalScore = _proxy.getHunkaTotalScore(type);
                    }
                    var needScore = _proxy.getHunkaNeedScore(type, lv);
                    this.bar.show(totalScore, needScore, false, 0, false, 0 /* Percent */);
                };
                HunkaScoreItem.prototype.setData = function (type, totalScore) {
                    this.data = { type: type, totalScore: totalScore };
                };
                return HunkaScoreItem;
            }(eui.ItemRenderer));
            more.HunkaScoreItem = HunkaScoreItem;
            __reflect(HunkaScoreItem.prototype, "game.mod.more.HunkaScoreItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var facade = base.facade;
            var HunkaSelIcon = /** @class */ (function (_super) {
                __extends(HunkaSelIcon, _super);
                function HunkaSelIcon() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaSelIcon.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.icon.setClickHandler(Handler.alloc(this, this.onClickTap));
                };
                HunkaSelIcon.prototype.onClickTap = function () {
                    if (!this.data) {
                        return;
                    }
                    facade.showView("61" /* More */, "94" /* HunkaTips */, this.data);
                };
                HunkaSelIcon.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.icon.setData(this.data);
                    var star = this.data.hunka_star;
                    this.starListFuView.updateStar(star, -10);
                    var selQulity = this._proxy.hunkaSelQuality;
                    this.currentState = selQulity == this.data.quality ? "selected" : "default";
                };
                return HunkaSelIcon;
            }(mod.BaseRenderer));
            more.HunkaSelIcon = HunkaSelIcon;
            __reflect(HunkaSelIcon.prototype, "game.mod.more.HunkaSelIcon");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaTipsView = /** @class */ (function (_super) {
                __extends(HunkaTipsView, _super);
                function HunkaTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaTipsSkin";
                    return _this;
                }
                return HunkaTipsView;
            }(eui.Component));
            more.HunkaTipsView = HunkaTipsView;
            __reflect(HunkaTipsView.prototype, "game.mod.more.HunkaTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaTypeView = /** @class */ (function (_super) {
                __extends(HunkaTypeView, _super);
                function HunkaTypeView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaTypeSkin";
                    return _this;
                }
                return HunkaTypeView;
            }(eui.Component));
            more.HunkaTypeView = HunkaTypeView;
            __reflect(HunkaTypeView.prototype, "game.mod.more.HunkaTypeView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaView = /** @class */ (function (_super) {
                __extends(HunkaView, _super);
                function HunkaView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HunkaSkin";
                    return _this;
                }
                return HunkaView;
            }(eui.Component));
            more.HunkaView = HunkaView;
            __reflect(HunkaView.prototype, "game.mod.more.HunkaView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessChatView = /** @class */ (function (_super) {
                __extends(TimeGoddessChatView, _super);
                function TimeGoddessChatView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.TimeGoddessChatSkin";
                    return _this;
                }
                return TimeGoddessChatView;
            }(eui.Component));
            more.TimeGoddessChatView = TimeGoddessChatView;
            __reflect(TimeGoddessChatView.prototype, "game.mod.more.TimeGoddessChatView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var TimeGoddessEventItem = /** @class */ (function (_super) {
                __extends(TimeGoddessEventItem, _super);
                function TimeGoddessEventItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeGoddessEventItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_item, this.onClick, this);
                };
                TimeGoddessEventItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.index;
                    this._isOpen = this._proxy.isEventOpen(index);
                    this._isFinish = this._proxy.isEventFinish(index);
                    var nameStr = data.name;
                    if (this._isFinish) {
                        nameStr += game.TextUtil.addColor("（" + game.getLanById("task7" /* task7 */) + "）", 8585074 /* GREEN */);
                    }
                    else if (this._isOpen) {
                        var stage = this._proxy.getEventStage(index);
                        var maxStage = this._proxy.getEventMaxStage(index);
                        nameStr += game.TextUtil.addColor("（" + stage + "/" + maxStage + "）", 16731212 /* RED */);
                    }
                    this.lab_name.textFlow = game.TextUtil.parseHtml(nameStr);
                    this.btn_item.icon = "timegoddess_event" + index;
                    this.updateHint();
                };
                TimeGoddessEventItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (!this._isOpen) {
                        game.PromptBox.getIns().show(game.getLanById("huanggu_nvshen_tips15" /* huanggu_nvshen_tips15 */));
                        return;
                    }
                    if (this._isFinish) {
                        game.PromptBox.getIns().show(game.getLanById("huanggu_nvshen_tips14" /* huanggu_nvshen_tips14 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "73" /* TimeGoddessEventChallenge */, data);
                };
                TimeGoddessEventItem.prototype.updateHint = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.index;
                    this.btn_item.redPoint.visible = this._proxy.checkEventPerHint(index);
                };
                return TimeGoddessEventItem;
            }(mod.BaseListenerRenderer));
            more.TimeGoddessEventItem = TimeGoddessEventItem;
            __reflect(TimeGoddessEventItem.prototype, "game.mod.more.TimeGoddessEventItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessEventView = /** @class */ (function (_super) {
                __extends(TimeGoddessEventView, _super);
                function TimeGoddessEventView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.TimeGoddessEventSkin";
                    return _this;
                }
                return TimeGoddessEventView;
            }(eui.Component));
            more.TimeGoddessEventView = TimeGoddessEventView;
            __reflect(TimeGoddessEventView.prototype, "game.mod.more.TimeGoddessEventView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessExp = /** @class */ (function (_super) {
                __extends(TimeGoddessExp, _super);
                function TimeGoddessExp() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeGoddessExp.prototype.updateShow = function (max, hint) {
                    if (hint === void 0) { hint = false; }
                    var index = 1450100174 /* Chuangshinengliang */;
                    var val = mod.BagUtil.getPropCntByIdx(index);
                    this.upStarEft.updateCost(val, max, true);
                    this.coinItem.setData(index, false);
                    this.upStarEft.setHint(hint);
                };
                return TimeGoddessExp;
            }(mod.Btn));
            more.TimeGoddessExp = TimeGoddessExp;
            __reflect(TimeGoddessExp.prototype, "game.mod.more.TimeGoddessExp");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TimeGoddessIcon = /** @class */ (function (_super) {
                __extends(TimeGoddessIcon, _super);
                function TimeGoddessIcon() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeGoddessIcon.prototype.onAddToStage = function () {
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.lab_tips.text = "炼化中";
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_reward, this.onClickReward, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_add, this.onClickAdd, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.icon, this.onClickIcon, this);
                };
                TimeGoddessIcon.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var info = data.info;
                    var hasInfo = !!info; //是否供奉
                    this.btn_add.visible = !hasInfo; //没有供奉
                    var canDraw = this._proxy.canIconDraw(info); //可领奖
                    this.btn_reward.visible = canDraw;
                    this.icon.visible = hasInfo && !canDraw; //供奉且不可领奖
                    var propData = hasInfo ? game.PropData.create(info.idx) : null;
                    if (this.icon.visible) {
                        this.icon.setData(propData, 3 /* NotTips */);
                    }
                    this.grp_name.visible = !!propData;
                    if (this.grp_name.visible) {
                        this.lab_name.textFlow = propData.getPropName(false);
                    }
                    var gongfenging = this._proxy.gongfenging(info);
                    this.grp_tips.visible = gongfenging;
                    this.redPoint.visible = canDraw || this._proxy.canIconAdd(info);
                };
                TimeGoddessIcon.prototype.onClickReward = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    //不传pos，一键领取
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(15 /* GongfengReward */);
                };
                TimeGoddessIcon.prototype.onClickAdd = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (!this.redPoint.visible) {
                        mod.ViewMgr.getIns().showGainWaysTips(1453702001 /* Jipin */);
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "76" /* TimeGoddessShelf */);
                };
                TimeGoddessIcon.prototype.onClickIcon = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (this.grp_tips.visible) {
                        mod.ViewMgr.getIns().showPropTips(data.info.idx.toNumber());
                        return;
                    }
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(11 /* GongfengDel */, data.pos);
                };
                return TimeGoddessIcon;
            }(mod.BaseRenderer));
            more.TimeGoddessIcon = TimeGoddessIcon;
            __reflect(TimeGoddessIcon.prototype, "game.mod.more.TimeGoddessIcon");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var TimeGoddessShelfItem = /** @class */ (function (_super) {
                __extends(TimeGoddessShelfItem, _super);
                function TimeGoddessShelfItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeGoddessShelfItem.prototype.onAddToStage = function () {
                    this.lab_score.text = "";
                    this.lab_name.y = 57;
                    this._proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListener(TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                TimeGoddessShelfItem.prototype.dataChanged = function () {
                    if (this.data == null) {
                        return;
                    }
                    this.icon.setData(this.data);
                    this.lab_name.textFlow = this.icon.getPropName();
                    var cfg = this.data.cfg;
                    var seconds = cfg.param1[0][0];
                    this.addBmpFont(game.TimeUtil.getConsecrateTime(seconds), game.BmpTextCfg[104 /* MainVip */], this.grp_time);
                };
                //外部指引调用
                TimeGoddessShelfItem.prototype.onClick = function () {
                    var idx = Long.fromValue(this.data.index);
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(10 /* Gongfeng */, null, [idx]);
                    facade.sendNt("on_close_consecrate_shelf" /* ON_CLOSE_CONSECRATE_SHELF */);
                };
                return TimeGoddessShelfItem;
            }(mod.BaseRenderer));
            more.TimeGoddessShelfItem = TimeGoddessShelfItem;
            __reflect(TimeGoddessShelfItem.prototype, "game.mod.more.TimeGoddessShelfItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessShelfView = /** @class */ (function (_super) {
                __extends(TimeGoddessShelfView, _super);
                function TimeGoddessShelfView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.consecrate.ConsecrateShelfSkin";
                    return _this;
                }
                return TimeGoddessShelfView;
            }(eui.Component));
            more.TimeGoddessShelfView = TimeGoddessShelfView;
            __reflect(TimeGoddessShelfView.prototype, "game.mod.more.TimeGoddessShelfView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessSpeedUpView = /** @class */ (function (_super) {
                __extends(TimeGoddessSpeedUpView, _super);
                function TimeGoddessSpeedUpView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.consecrate.ConsecrateSpeedUpSkin";
                    return _this;
                }
                return TimeGoddessSpeedUpView;
            }(eui.Component));
            more.TimeGoddessSpeedUpView = TimeGoddessSpeedUpView;
            __reflect(TimeGoddessSpeedUpView.prototype, "game.mod.more.TimeGoddessSpeedUpView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TimeGoddessSummonItem = /** @class */ (function (_super) {
                __extends(TimeGoddessSummonItem, _super);
                function TimeGoddessSummonItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeGoddessSummonItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_icon.source = "sl_type_" + data.index;
                    this.coinItem.initIcon(1450100174 /* Chuangshinengliang */, false);
                    var curCnt = mod.BagUtil.getPropCntByIdx(1450100174 /* Chuangshinengliang */);
                    var costCnt = data.costs[0][1];
                    var isEnough = curCnt >= costCnt;
                    var cntStr = game.TextUtil.addColor(costCnt + "", isEnough ? 8585074 /* GREEN */ : 16731212 /* RED */);
                    this.coinItem.lab_cost.textFlow = game.TextUtil.parseHtml(cntStr);
                    var proxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.redPoint.visible = isEnough && proxy.isOpenSummon();
                };
                return TimeGoddessSummonItem;
            }(eui.ItemRenderer));
            more.TimeGoddessSummonItem = TimeGoddessSummonItem;
            __reflect(TimeGoddessSummonItem.prototype, "game.mod.more.TimeGoddessSummonItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessSummonView = /** @class */ (function (_super) {
                __extends(TimeGoddessSummonView, _super);
                function TimeGoddessSummonView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.TimeGoddessSummonSkin";
                    return _this;
                }
                return TimeGoddessSummonView;
            }(eui.Component));
            more.TimeGoddessSummonView = TimeGoddessSummonView;
            __reflect(TimeGoddessSummonView.prototype, "game.mod.more.TimeGoddessSummonView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessView = /** @class */ (function (_super) {
                __extends(TimeGoddessView, _super);
                function TimeGoddessView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.TimeGoddessSkin";
                    return _this;
                }
                return TimeGoddessView;
            }(eui.Component));
            more.TimeGoddessView = TimeGoddessView;
            __reflect(TimeGoddessView.prototype, "game.mod.more.TimeGoddessView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessRecordMainMdr = /** @class */ (function (_super) {
                __extends(GoddessRecordMainMdr, _super);
                function GoddessRecordMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* GoddessRecord */,
                            icon: "goddessRecord_tab",
                            mdr: more.GoddessRecordMdr,
                            bg: "goddessRecord_bg",
                            hintTypes: ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */],
                        }
                    ];
                    return _this;
                }
                return GoddessRecordMainMdr;
            }(mod.WndBaseNewMdr));
            more.GoddessRecordMainMdr = GoddessRecordMainMdr;
            __reflect(GoddessRecordMainMdr.prototype, "game.mod.more.GoddessRecordMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var GoddessRecordMdr = /** @class */ (function (_super) {
                __extends(GoddessRecordMdr, _super);
                function GoddessRecordMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.GoddessRecordView);
                    return _this;
                }
                GoddessRecordMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = more.GoddessRecordRender;
                    this._view.list_item.dataProvider = this._itemList;
                };
                GoddessRecordMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_goddess, TouchEvent.TOUCH_TAP, this.onClickGoddess);
                };
                GoddessRecordMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                GoddessRecordMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessRecordMdr.prototype.onClickGoddess = function () {
                    //todo
                    game.PromptBox.getIns().show("激活四位女神");
                };
                GoddessRecordMdr.prototype.updateView = function () {
                    var infos = game.getConfigListByName("nvshen_index.json" /* NvshenIndex */);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                    var num = this._proxy.getActNum();
                    var maxNum = infos.length;
                    var numStr = game.TextUtil.addColor("（" + num + "/" + maxNum + "）", num >= maxNum ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    var tipsStr = game.StringUtil.substitute(game.getLanById("nvshenlu_tips" /* nvshenlu_tips */), [numStr]);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(tipsStr);
                };
                return GoddessRecordMdr;
            }(game.EffectMdrBase));
            more.GoddessRecordMdr = GoddessRecordMdr;
            __reflect(GoddessRecordMdr.prototype, "game.mod.more.GoddessRecordMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var HunkaBagMdr = /** @class */ (function (_super) {
                __extends(HunkaBagMdr, _super);
                function HunkaBagMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HunkaBagView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HunkaBagMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = more.HunkaBagIcon;
                    this._view.list_item.dataProvider = this._itemList;
                };
                HunkaBagMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_update_hunka_select" /* ON_UPDATE_HUNKA_SELECT */, this.hide, this);
                };
                HunkaBagMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateItemList();
                };
                HunkaBagMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HunkaBagMdr.prototype.updateItemList = function () {
                    var infos;
                    var openType = this._proxy.hunkaBagOpenType;
                    if (openType == 1 /* Wear */) {
                        //穿戴
                        var type = this._showArgs;
                        infos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type, true);
                    }
                    else if (openType == 2 /* Compose */) {
                        //合成
                        var selNum = this._proxy.getComposeSelNum();
                        if (selNum <= 0) {
                            //未选中时候，显示全部魂卡
                            infos = mod.BagUtil.getBagsByType(11 /* Hunka */, true);
                        }
                        else {
                            var tmpInfos = void 0;
                            var composeList_1 = this._proxy.composeList;
                            var selPos = this._proxy.hunkaComposeSelPos;
                            var selProp_1 = composeList_1[selPos];
                            if (selNum == 1 && selProp_1) {
                                //如果选中一个，且重新打开时候，需要显示除了已选中的其他魂卡
                                tmpInfos = mod.BagUtil.getBagsByType(11 /* Hunka */, true);
                                infos = tmpInfos.filter(function (v) {
                                    return v.prop_id.neq(selProp_1.prop_id);
                                });
                            }
                            else {
                                //过滤可合成的魂卡，同一类型的魂卡可以合成
                                var composeProp = this._proxy.getComposeSel(); //当前要合成的魂卡
                                var type = composeProp.propSubType;
                                tmpInfos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type, true);
                                infos = tmpInfos.filter(function (v) {
                                    var hasR = false;
                                    for (var k in composeList_1) {
                                        if (composeList_1[k].prop_id.eq(v.prop_id)) {
                                            hasR = true;
                                            break;
                                        }
                                    }
                                    return !hasR;
                                });
                            }
                        }
                    }
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                    var isShow = infos.length <= 0;
                    this._view.hunkaNone.visible = isShow;
                    if (isShow) {
                        this._view.hunkaNone.updateHunkaNoneView(Handler.alloc(this, this.hide));
                    }
                };
                return HunkaBagMdr;
            }(game.MdrBase));
            more.HunkaBagMdr = HunkaBagMdr;
            __reflect(HunkaBagMdr.prototype, "game.mod.more.HunkaBagMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var HunkaComposeMdr = /** @class */ (function (_super) {
                __extends(HunkaComposeMdr, _super);
                function HunkaComposeMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HunkaComposeView);
                    return _this;
                }
                HunkaComposeMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                HunkaComposeMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_preview, TouchEvent.TOUCH_TAP, this.onClickPreview);
                    addEventListener(this._view.btn_compose, TouchEvent.TOUCH_TAP, this.onClickCompose);
                    addEventListener(this._view.btn_oneKey, TouchEvent.TOUCH_TAP, this.onClickOneKey);
                    this.onNt("on_update_hunka_select" /* ON_UPDATE_HUNKA_SELECT */, this.updateSel, this);
                    this.onNt("on_update_hunka_compose" /* ON_UPDATE_HUNKA_COMPOSE */, this.updateSel, this);
                    this.onNt("on_update_hunka_preview" /* ON_UPDATE_HUNKA_PREVIEW */, this.updatePreview, this);
                };
                HunkaComposeMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateSel();
                    this.setPreview(false);
                };
                HunkaComposeMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HunkaComposeMdr.prototype.onClickPreview = function () {
                    var show = !this._showingPreview;
                    this.setPreview(show);
                    //请求数据
                    this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(5 /* Preview */, undefined, undefined, undefined, this._ids);
                };
                HunkaComposeMdr.prototype.onClickCompose = function () {
                    if (!this._canCompose) {
                        game.PromptBox.getIns().show(game.getLanById("hunka_tips20" /* hunka_tips20 */));
                        return;
                    }
                    this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(6 /* Compose */, undefined, undefined, undefined, this._ids);
                };
                HunkaComposeMdr.prototype.onClickOneKey = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "95" /* HunkaOneKeyCompose */);
                };
                HunkaComposeMdr.prototype.updateSel = function () {
                    this._view.item0.setData(0);
                    this._view.item1.setData(1);
                    this._ids = [];
                    var composeList = this._proxy.composeList;
                    for (var k in composeList) {
                        var prop = composeList[k];
                        if (prop) {
                            this._ids.push(prop.prop_id);
                        }
                    }
                    this._canCompose = this._ids.length >= 2;
                    this._view.btn_preview.visible = this._canCompose;
                };
                HunkaComposeMdr.prototype.setPreview = function (show) {
                    this._showingPreview = show;
                    var btnStr = show ? game.getLanById("hunka_tips16" /* hunka_tips16 */) : game.getLanById("hunka_tips15" /* hunka_tips15 */);
                    this._view.btn_preview.labelDisplay.text = btnStr;
                    this._view.item0.visible = this._view.item1.visible = !show;
                    this._view.item_preview.visible = show;
                };
                HunkaComposeMdr.prototype.updatePreview = function () {
                    var data = this._proxy.hunkaPreview;
                    this._view.item_preview.setData(data);
                };
                return HunkaComposeMdr;
            }(game.MdrBase));
            more.HunkaComposeMdr = HunkaComposeMdr;
            __reflect(HunkaComposeMdr.prototype, "game.mod.more.HunkaComposeMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Tween = base.Tween;
            var Sine = base.Sine;
            var Handler = base.Handler;
            var HunkaComposeTipsMdr = /** @class */ (function (_super) {
                __extends(HunkaComposeTipsMdr, _super);
                function HunkaComposeTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HunkaComposeTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HunkaComposeTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                };
                HunkaComposeTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                HunkaComposeTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateShow();
                    this.showTypeTween();
                    this.showNameTween();
                    this.showSuccessTween();
                    this.showEffect();
                    mod.ViewMgr.getIns().shakeUI(this._view);
                };
                HunkaComposeTipsMdr.prototype.onHide = function () {
                    this.removeTypeTween();
                    this.removeNameTween();
                    this.removeSuccessTween();
                    Tween.remove(this._view);
                    _super.prototype.onHide.call(this);
                };
                HunkaComposeTipsMdr.prototype.updateShow = function () {
                    var propData = game.PropData.fromData(this._showArgs);
                    var cfg = propData.cfg;
                    this._view.img_icon.source = game.ResUtil.getBigIcon(cfg.icon);
                    this._view.lab_name.textFlow = propData.getPropName(false);
                    var star = propData.hunka_star;
                    this._view.starListView.updateNewStar(star, star);
                    this._view.hunkaScore.setData(propData.pingfen);
                    this._view.hunkaAttrListView.updateShow(propData.shuiji);
                };
                HunkaComposeTipsMdr.prototype.showTypeTween = function () {
                    var _this = this;
                    this.removeTypeTween();
                    this._view.grp_type.visible = false;
                    this._view.grp_type.scaleX = this._view.grp_type.scaleY = 0.1;
                    Tween.get(this._view.grp_type)
                        .delay(500)
                        .exec(Handler.alloc(this, function () {
                        _this._view.grp_type.visible = true;
                    }))
                        .to({ scaleX: 1, scaleY: 1 }, 300, null, Sine.easeIn);
                };
                HunkaComposeTipsMdr.prototype.removeTypeTween = function () {
                    Tween.remove(this._view.grp_type);
                };
                HunkaComposeTipsMdr.prototype.showNameTween = function () {
                    var _this = this;
                    this.removeNameTween();
                    this._view.grp_name.visible = false;
                    this._view.grp_name.y = 410;
                    Tween.get(this._view.grp_name)
                        .delay(500)
                        .exec(Handler.alloc(this, function () {
                        _this._view.grp_name.visible = true;
                    }))
                        .to({ y: 479 }, 300, null, Sine.easeIn);
                };
                HunkaComposeTipsMdr.prototype.removeNameTween = function () {
                    Tween.remove(this._view.grp_name);
                };
                HunkaComposeTipsMdr.prototype.showSuccessTween = function () {
                    this.removeSuccessTween();
                    this._view.img_success.y = 622;
                    this._view.img_success.alpha = 1;
                    Tween.get(this._view.img_success)
                        .to({ y: 500, alpha: 0 }, 1000);
                };
                HunkaComposeTipsMdr.prototype.removeSuccessTween = function () {
                    Tween.remove(this._view.img_success);
                };
                HunkaComposeTipsMdr.prototype.showEffect = function () {
                    this.removeEft();
                    this.addEftByParent("jihuo" /* SurfaceTips */, this._view.grp_eft2, 0, 0, 0, null, 1, 2);
                };
                return HunkaComposeTipsMdr;
            }(game.EffectMdrBase));
            more.HunkaComposeTipsMdr = HunkaComposeTipsMdr;
            __reflect(HunkaComposeTipsMdr.prototype, "game.mod.more.HunkaComposeTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var HunkaGongmingMdr = /** @class */ (function (_super) {
                __extends(HunkaGongmingMdr, _super);
                function HunkaGongmingMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HunkaGongmingView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HunkaGongmingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = more.HunkaGongmingItem;
                    this._view.list_item.dataProvider = this._itemList;
                };
                HunkaGongmingMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClickAct);
                    this.onNt("on_update_hunka_info" /* ON_UPDATE_HUNKA_INFO */, this.updateView, this);
                };
                HunkaGongmingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._type = this._showArgs;
                    this.initShow();
                    this.updateView();
                };
                HunkaGongmingMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HunkaGongmingMdr.prototype.onClickAct = function () {
                    var type = this._type;
                    if (!this._canAct) {
                        game.PromptBox.getIns().show(game.getLanById("hunka_tips5" /* hunka_tips5 */));
                        return;
                    }
                    this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(4 /* Act */, type);
                };
                HunkaGongmingMdr.prototype.initShow = function () {
                    var type = this._type;
                    this._view.baseQualityTips.updateShow(4 /* RED */);
                    this._view.img_icon.source = "hunka_gongming" + type;
                    var nameStr = "hunka_tips" + type;
                    this._view.lab_name.text = game.getLanById(nameStr);
                    this._view.baseNameItem.setTitle(game.getLanById("sp_tips1" /* sp_tips1 */));
                };
                HunkaGongmingMdr.prototype.updateView = function () {
                    var type = this._type;
                    var infos = this._proxy.getHunkaScoreCfgList(type);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                    var totalScore = this._proxy.getHunkaTotalScore(type);
                    this._view.item.setData(type, totalScore);
                    var isMax = this._proxy.isHunkaMaxLv(type);
                    this._view.currentState = isMax ? "max" : "default";
                    if (!isMax) {
                        var lv = this._proxy.getHunkaLv(type);
                        var needScore = this._proxy.getHunkaNeedScore(type, lv);
                        var leftScore = needScore - totalScore; //所需积分-当前总积分
                        var canAct = leftScore <= 0;
                        this._canAct = canAct;
                        this._view.btn_act.redPoint.visible = canAct;
                        var tipsStr = "";
                        if (!canAct) {
                            var scoreStr = leftScore + "";
                            var nextLv = lv + 1;
                            var lvStr = game.getLanById("hunka_score" + nextLv);
                            tipsStr = game.StringUtil.substitute(game.getLanById("hunka_tips6" /* hunka_tips6 */), [scoreStr, lvStr]);
                        }
                        this._view.lab_tips.text = tipsStr;
                    }
                };
                return HunkaGongmingMdr;
            }(game.MdrBase));
            more.HunkaGongmingMdr = HunkaGongmingMdr;
            __reflect(HunkaGongmingMdr.prototype, "game.mod.more.HunkaGongmingMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaMainMdr = /** @class */ (function (_super) {
                __extends(HunkaMainMdr, _super);
                function HunkaMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "hunka_tab",
                            mdr: more.HunkaSecondMdr,
                            title: "hunka_tips" /* hunka_tips */,
                            hintTypes: ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                                "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */],
                        }
                    ];
                    return _this;
                }
                HunkaMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                HunkaMainMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._proxy.clearComposeList(); //清除魂卡合成选中
                };
                return HunkaMainMdr;
            }(mod.WndBaseMdr));
            more.HunkaMainMdr = HunkaMainMdr;
            __reflect(HunkaMainMdr.prototype, "game.mod.more.HunkaMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var HunkaMdr = /** @class */ (function (_super) {
                __extends(HunkaMdr, _super);
                function HunkaMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HunkaView);
                    return _this;
                }
                HunkaMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = more.HunkaItem;
                    this._view.list_item.dataProvider = this._itemList;
                };
                HunkaMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_hunka_info" /* ON_UPDATE_HUNKA_INFO */, this.updateItemList, this);
                };
                HunkaMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateItemList();
                };
                HunkaMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HunkaMdr.prototype.updateItemList = function () {
                    var infos = [1 /* Yaohun1 */, 2 /* Xianhun2 */, 3 /* Shenhun3 */];
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                };
                return HunkaMdr;
            }(game.MdrBase));
            more.HunkaMdr = HunkaMdr;
            __reflect(HunkaMdr.prototype, "game.mod.more.HunkaMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var ItemTapEvent = eui.ItemTapEvent;
            var Handler = base.Handler;
            var HunkaOneKeyComposeMdr = /** @class */ (function (_super) {
                __extends(HunkaOneKeyComposeMdr, _super);
                function HunkaOneKeyComposeMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HunkaOneKeyComposeView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HunkaOneKeyComposeMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._itemList = new ArrayCollection();
                    this._view.list_item.itemRenderer = more.HunkaSelIcon;
                    this._view.list_item.dataProvider = this._itemList;
                    this._btnList = new ArrayCollection();
                    this._view.list_type.dataProvider = this._btnList;
                    this._view.list_type.itemRenderer = mod.BtnTabItem;
                };
                HunkaOneKeyComposeMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onClickType);
                    addEventListener(this._view.btn_compose, TouchEvent.TOUCH_TAP, this.onClickCompose);
                    this.onNt("on_update_hunka_compose" /* ON_UPDATE_HUNKA_COMPOSE */, this.updateSel, this);
                };
                HunkaOneKeyComposeMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initTypeList();
                    this.initCheckGrp();
                    this.updateSel();
                };
                HunkaOneKeyComposeMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HunkaOneKeyComposeMdr.prototype.onClickCompose = function () {
                    if (this._ids.length < 2) {
                        game.PromptBox.getIns().show(game.getLanById("hunka_tips20" /* hunka_tips20 */));
                        return;
                    }
                    this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(7 /* OneKeyCompose */, undefined, undefined, undefined, this._ids);
                };
                HunkaOneKeyComposeMdr.prototype.onClickType = function (e) {
                    var type = e.itemIndex;
                    if (type == this._selType) {
                        return;
                    }
                    this._selType = type;
                    this.updateSel();
                };
                HunkaOneKeyComposeMdr.prototype.initTypeList = function () {
                    var datas = [];
                    for (var i = 0; i <= 3 /* Shenhun3 */; ++i) {
                        var name = game.getLanById("hunka_tips" + i);
                        datas.push({ name: name });
                    }
                    this._btnList.source = datas;
                    this._selType = 0;
                    this._view.list_type.selectedIndex = this._selType;
                };
                HunkaOneKeyComposeMdr.prototype.initCheckGrp = function () {
                    var addEventListener = this.onEgret.bind(this);
                    var radioGroup = new eui.RadioButtonGroup();
                    addEventListener(radioGroup, eui.UIEvent.CHANGE, this.radioChangeHandler);
                    for (var i = 0; i < 5; ++i) {
                        var selItem = this._view["sel" + i];
                        selItem.group = radioGroup;
                        var quality = 3 /* ORANGE */ + i;
                        selItem.value = quality;
                        var label = selItem.labelDisplay;
                        var labelStr = game.TextUtil.addColor(label.text, game.ColorUtil.getColorByQuality1(quality));
                        label.textFlow = game.TextUtil.parseHtml(labelStr);
                        label.stroke = 1;
                        label.strokeColor = 0x000000;
                    }
                    this._view.sel0.selected = true; //默认选中第一个
                    this._proxy.hunkaSelQuality = 3 /* ORANGE */;
                };
                HunkaOneKeyComposeMdr.prototype.radioChangeHandler = function (evt) {
                    var radioGroup = evt.target;
                    this._proxy.hunkaSelQuality = radioGroup.selectedValue;
                    this.updateItemListSel();
                    this.updateTips();
                };
                HunkaOneKeyComposeMdr.prototype.updateSel = function () {
                    this.updateItemList();
                    this.updateTips();
                };
                HunkaOneKeyComposeMdr.prototype.updateItemList = function () {
                    var type = this._selType;
                    var infos;
                    if (!type) {
                        infos = mod.BagUtil.getBagsByType(11 /* Hunka */, true);
                    }
                    else {
                        infos = mod.BagUtil.getBagsByTypeAndPropSubType(11 /* Hunka */, type, true);
                    }
                    this._infos = infos.concat(); //缓存数据
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                    var isShow = infos.length <= 0;
                    this._view.hunkaNone.visible = isShow;
                    if (isShow) {
                        this._view.hunkaNone.updateHunkaNoneView(Handler.alloc(this, this.hide));
                    }
                };
                HunkaOneKeyComposeMdr.prototype.updateTips = function () {
                    this._ids = [];
                    for (var _i = 0, _a = this._infos; _i < _a.length; _i++) {
                        var prop = _a[_i];
                        if (prop.quality == this._proxy.hunkaSelQuality) {
                            this._ids.push(prop.prop_id);
                        }
                    }
                    var selNum = this._ids.length;
                    var cntStr = game.TextUtil.addColor("(" + selNum + ")", 2330156 /* GREEN */);
                    var tipStr = game.StringUtil.substitute(game.getLanById("hunka_tips13" /* hunka_tips13 */), [cntStr]);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(tipStr);
                };
                HunkaOneKeyComposeMdr.prototype.updateItemListSel = function () {
                    this._itemList.replaceAll(this._itemList.source);
                };
                return HunkaOneKeyComposeMdr;
            }(game.MdrBase));
            more.HunkaOneKeyComposeMdr = HunkaOneKeyComposeMdr;
            __reflect(HunkaOneKeyComposeMdr.prototype, "game.mod.more.HunkaOneKeyComposeMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaSecondMdr = /** @class */ (function (_super) {
                __extends(HunkaSecondMdr, _super);
                function HunkaSecondMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: 'hunka_fazhen',
                            mdr: more.HunkaMdr,
                            bg: "",
                            hintTypes: ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                                "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */,
                                "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: 'huanka_hecheng',
                            mdr: more.HunkaComposeMdr,
                            bg: "hunka_hecheng_bg",
                            hintTypes: ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                                "71" /* TimeGoddessMain */, "01" /* TimeGoddess */, "90" /* HunkaMain */, "01" /* TabBtnType01 */,
                                "02" /* TabBtnType02 */]
                        }
                    ];
                    return _this;
                }
                return HunkaSecondMdr;
            }(mod.WndSecondMdr));
            more.HunkaSecondMdr = HunkaSecondMdr;
            __reflect(HunkaSecondMdr.prototype, "game.mod.more.HunkaSecondMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var prop_attributes = msg.prop_attributes;
            var HunkaTipsMdr = /** @class */ (function (_super) {
                __extends(HunkaTipsMdr, _super);
                function HunkaTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HunkaTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HunkaTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                HunkaTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_remove, TouchEvent.TOUCH_TAP, this.onClickRemove);
                    addEventListener(this._view.btn_wear, TouchEvent.TOUCH_TAP, this.onClickWear);
                };
                HunkaTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                HunkaTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HunkaTipsMdr.prototype.onClickRemove = function () {
                    var type = this._proxy.hunkaType;
                    var pos = this._proxy.hunkaSelPos;
                    this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(3 /* Remove */, type, pos);
                    this.hide();
                };
                HunkaTipsMdr.prototype.onClickWear = function () {
                    //替换，打开背包
                    var type = this._proxy.hunkaType;
                    this._proxy.hunkaBagOpenType = 1 /* Wear */;
                    this.hide();
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "93" /* HunkaBag */, type);
                };
                HunkaTipsMdr.prototype.updateView = function () {
                    if (this._showArgs instanceof prop_attributes) {
                        //部位点击进来的
                        this._propData = game.PropData.fromData(this._showArgs);
                        this._view.currentState = "wear";
                    }
                    else {
                        this._propData = this._showArgs;
                        this._view.currentState = "default";
                    }
                    this._view.basePropTips.updateShow(this._propData);
                    var star = this._propData.hunka_star;
                    this._view.starListView.updateStar(star, star);
                    this._view.hunkaScore.setData(this._propData.pingfen);
                    var title1 = game.getLanById("hunka_tips19" /* hunka_tips19 */);
                    var desc1 = title1 + " +" + this._propData.hunka_zizhi;
                    this._view.baseDescItem1.updateShow(desc1, title1);
                    var title2 = game.getLanById("hunka_tips10" /* hunka_tips10 */);
                    var guding = this._propData.guding;
                    var cfg = game.getConfigByNameId("nvshen_guding_attr.json" /* NvshenGudingAttr */, guding.itype);
                    var desc2 = cfg.type_name + game.TextUtil.getAttrTextAdd(guding.attr, 8585074 /* GREEN */);
                    this._view.baseDescItem2.updateShow(desc2, title2);
                    var desc3 = game.getLanById("hunka_tips11" /* hunka_tips11 */);
                    this._view.baseNameItem.setTitle(desc3);
                    this._view.hunkaAttrListView.updateShow(this._propData.shuiji);
                };
                return HunkaTipsMdr;
            }(game.EffectMdrBase));
            more.HunkaTipsMdr = HunkaTipsMdr;
            __reflect(HunkaTipsMdr.prototype, "game.mod.more.HunkaTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HunkaTypeMainMdr = /** @class */ (function (_super) {
                __extends(HunkaTypeMainMdr, _super);
                function HunkaTypeMainMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HunkaTypeMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                HunkaTypeMainMdr.prototype.onShow = function () {
                    this.initBtnList();
                    _super.prototype.onShow.call(this);
                };
                HunkaTypeMainMdr.prototype.initBtnList = function () {
                    if (this._showArgs) {
                        var type = void 0;
                        if (Array.isArray(this._showArgs)) {
                            type = this._showArgs.shift();
                        }
                        else {
                            type = this._showArgs;
                        }
                        this._proxy.hunkaType = parseInt(type);
                    }
                    var hunkaType = this._proxy.hunkaType;
                    var btnType = "0" + hunkaType;
                    var icon = "hunka_tab" + hunkaType + "_";
                    var title = "hunka_type_tips" + hunkaType;
                    var hintType = this._proxy.getHunkaHintType(hunkaType);
                    this._btnData = [
                        {
                            btnType: btnType,
                            icon: icon,
                            mdr: more.HunkaTypeMdr,
                            title: title,
                            bg: "hunka_bg",
                            hintTypes: hintType,
                        }
                    ];
                };
                return HunkaTypeMainMdr;
            }(mod.WndBaseMdr));
            more.HunkaTypeMainMdr = HunkaTypeMainMdr;
            __reflect(HunkaTypeMainMdr.prototype, "game.mod.more.HunkaTypeMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var HunkaTypeMdr = /** @class */ (function (_super) {
                __extends(HunkaTypeMdr, _super);
                function HunkaTypeMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HunkaTypeView);
                    _this._itemList = [];
                    return _this;
                }
                HunkaTypeMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                HunkaTypeMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rule, TouchEvent.TOUCH_TAP, this.onClickRule);
                    addEventListener(this._view.btn_gongming, TouchEvent.TOUCH_TAP, this.onClickGongming);
                    addEventListener(this._view.btn_oneKey, TouchEvent.TOUCH_TAP, this.onClickOneKey);
                    this.onNt("on_update_hunka_info" /* ON_UPDATE_HUNKA_INFO */, this.onInfoUpdate, this);
                    this.onNt("on_bag_update_by_bag_type" /* ON_BAG_UPDATE_BY_BAG_TYPE */, this.onBagUpdate, this);
                };
                HunkaTypeMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.onInfoUpdate();
                };
                HunkaTypeMdr.prototype.onHide = function () {
                    this.removeTween();
                    _super.prototype.onHide.call(this);
                };
                HunkaTypeMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("hunka_rule_tips" /* hunka_rule_tips */));
                };
                HunkaTypeMdr.prototype.onClickGongming = function () {
                    var type = this._proxy.hunkaType;
                    facade.showView("61" /* More */, "92" /* HunkaGongming */, type);
                };
                HunkaTypeMdr.prototype.onClickOneKey = function () {
                    if (!this._canOneKey) {
                        game.PromptBox.getIns().show(game.getLanById("hunka_tips7" /* hunka_tips7 */));
                        return;
                    }
                    var type = this._proxy.hunkaType;
                    this._proxy.c2s_chuang_shi_nv_shen_hun_ka_click(2 /* Wear */, type);
                };
                HunkaTypeMdr.prototype.onInfoUpdate = function () {
                    this.updateItemList();
                    this.updateScore();
                    this.updateGongmingHint();
                    this.updateOneKeyHint();
                };
                /** 通用背包事件监听 */
                HunkaTypeMdr.prototype.onBagUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(11 /* Hunka */) < 0) {
                        return;
                    }
                    this.updateItemList();
                    this.updateOneKeyHint();
                };
                HunkaTypeMdr.prototype.initShow = function () {
                    this._itemList = [
                        this._view.item0,
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4,
                        this._view.item5,
                        this._view.item6
                    ];
                    var type = this._proxy.hunkaType;
                    this._view.btn_gongming.icon = "hunka_gongming" + type;
                };
                HunkaTypeMdr.prototype.updateItemList = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var pos = i + 1;
                        item.setData(pos);
                    }
                };
                HunkaTypeMdr.prototype.updateScore = function () {
                    var type = this._proxy.hunkaType;
                    var totalScore = this._proxy.getHunkaTotalScore(type);
                    this._view.item.setData(type, totalScore);
                    this._view.hunkaScore.setData(totalScore, 2 /* Total */);
                };
                HunkaTypeMdr.prototype.updateGongmingHint = function () {
                    var type = this._proxy.hunkaType;
                    this._view.btn_gongming.redPoint.visible = this._proxy.canHuankaGongmingAct(type);
                };
                HunkaTypeMdr.prototype.updateOneKeyHint = function () {
                    var type = this._proxy.hunkaType;
                    this._canOneKey = this._proxy.canHuankaOneKeyWear(type);
                    this._view.btn_oneKey.redPoint.visible = this._canOneKey;
                };
                HunkaTypeMdr.prototype.removeTween = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        item.removeTween();
                    }
                };
                return HunkaTypeMdr;
            }(game.EffectMdrBase));
            more.HunkaTypeMdr = HunkaTypeMdr;
            __reflect(HunkaTypeMdr.prototype, "game.mod.more.HunkaTypeMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var nvshen_chat = msg.nvshen_chat;
            var delayCall = base.delayCall;
            var Handler = base.Handler;
            var TextEvent = egret.TextEvent;
            var clearDelay = base.clearDelay;
            var TimeGoddessChatMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessChatMdr, _super);
                function TimeGoddessChatMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.TimeGoddessChatView);
                    _this.ITEM_H = 124; //item高度
                    _this.ITEM_N = 5; //item显示的数量
                    _this.SCR_H = 681; //滚动区域高度
                    _this.ITEM_N_CHAT = 3; //item显示的数量，正在对话的时候
                    _this.SCR_H_CHAT = 420; //滚动区域高度，正在对话的时候
                    _this._index = 0; //当前对话的index
                    _this._chatList = [];
                    _this.content = "";
                    _this.contentLen = -1;
                    _this.startContent = false;
                    _this.isEasyHide = false;
                    return _this;
                }
                TimeGoddessChatMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._huangguProxy = this.retProxy(255 /* Huanggu */);
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = more.CommonChatRender;
                    this._view.list.dataProvider = this._itemList;
                    this._selList = new ArrayCollection();
                    this._view.list_sel.itemRenderer = more.CommonChatSelRender;
                    this._view.list_sel.dataProvider = this._selList;
                };
                TimeGoddessChatMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view, TouchEvent.TOUCH_TAP, this.jumpChat);
                    addEventListener(this._view.lab_go, TextEvent.LINK, this.onClickGo);
                    this.onNt("on_update_time_goddess_chat_info" /* ON_UPDATE_TIME_GODDESS_CHAT_INFO */, this.onInfoUpdate, this);
                    this.onNt("on_goddess_chat_sel" /* ON_GODDESS_CHAT_SEL */, this.onChatSel, this);
                };
                TimeGoddessChatMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._huangguProxy.curChatType = 2 /* TimeGoddess */;
                    this.setListSel(false);
                    this._view.scr.viewport.scrollV = 0;
                    this._view.lab_go.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(this._view.lab_go.text, 0xFFF000, ""));
                    this._view.avatarNameItem.updateShow(game.getLanById("time_nvshen_tips" /* time_nvshen_tips */));
                    this.updateView();
                };
                TimeGoddessChatMdr.prototype.onHide = function () {
                    this._index = 0;
                    this._chatList = [];
                    this._itemList.removeAll();
                    this.resetData();
                    this.clearDelay();
                    _super.prototype.onHide.call(this);
                };
                TimeGoddessChatMdr.prototype.resetData = function () {
                    this.content = "";
                    this.contentLen = -1;
                    this.startContent = false;
                    this._view.scr.scrollPolicyV = "on";
                    TimeMgr.removeUpdateItem(this);
                };
                TimeGoddessChatMdr.prototype.onClickGo = function () {
                    this.hide();
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "72" /* TimeGoddessEvent */);
                };
                TimeGoddessChatMdr.prototype.onInfoUpdate = function () {
                    this.updateView();
                };
                TimeGoddessChatMdr.prototype.onChatSel = function (n) {
                    var data = n.body;
                    var info = data.info;
                    var desc = data.desc;
                    //去重
                    for (var _i = 0, _a = this._chatList; _i < _a.length; _i++) {
                        var i = _a[_i];
                        if (i.index == info.index && i.level == info.level) {
                            return;
                        }
                    }
                    this.setListSel(false);
                    this._chatList.push(info);
                    var infoData = { type: 2 /* Self */, desc: desc };
                    this.addItemList(infoData);
                    this.nextChat();
                };
                TimeGoddessChatMdr.prototype.updateView = function () {
                    var openLv = this._proxy.getChatOpenLv();
                    var chatLv = this._proxy.chatLv;
                    var maxChatLv = this._proxy.chatMaxLv;
                    var isFinish = this._proxy.isChatFinish();
                    var canChat = !isFinish && openLv >= chatLv && chatLv <= maxChatLv; //当前好感index大于对话index，且当前对话未完成时，且不超过对话等级上限
                    if (canChat) {
                        //开始对话，定位到对应的位置
                        if (chatLv > 1) {
                            //存在已完成的对话
                            var curLv = chatLv - 1;
                            var infos = this.getInfos(curLv);
                            this.updateItemList(infos);
                        }
                        this.startChat(); //开始对话
                        this.setLabAct(false);
                    }
                    else {
                        //刷新列表
                        var curLv = Math.min(openLv, chatLv, maxChatLv);
                        var infos = this.getInfos(curLv, isFinish);
                        this.updateItemList(infos, true);
                        this.setLabAct(true);
                    }
                };
                //curLv：已经完成对话的等级
                TimeGoddessChatMdr.prototype.getInfos = function (curLv, isFinish) {
                    var infos = [];
                    for (var i = 0; i < curLv; ++i) {
                        var startLv = i + 1;
                        var cfgList = game.getConfigByNameId("nvshen_duihua.json" /* NvshenDuihua */, startLv);
                        for (var k in cfgList) {
                            var cfg = cfgList[k];
                            var infoData = { type: cfg.type };
                            if (cfg.type == 1 /* Goddess */) {
                                //女神对话
                                infoData.desc = cfg.desc;
                            }
                            else {
                                //自己对话，取保存选择的对话信息
                                infoData.desc = this._huangguProxy.getSelfChat(cfg, 2 /* TimeGoddess */);
                            }
                            infos.push(infoData);
                        }
                        var rewardCfg = game.getConfigByNameId("nvshen_duihua_level.json" /* NvshenDuihuaLevel */, startLv);
                        var status = isFinish ? 1 /* Finish */ : 2 /* Draw */;
                        var rewardData = { type: 1 /* Goddess */, reward: rewardCfg.reward, status: status }; //最后显示奖励
                        infos.push(rewardData);
                    }
                    return infos;
                };
                //isFinish是否完成对话
                TimeGoddessChatMdr.prototype.updateItemList = function (infos, isFinish) {
                    this._view.scr.stopAnimation();
                    this._view.scr.height = isFinish ? this.SCR_H : this.SCR_H_CHAT;
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                    this.updateItemListPos(isFinish);
                };
                TimeGoddessChatMdr.prototype.updateItemListPos = function (isFinish) {
                    var _this = this;
                    var infos = this._itemList.source;
                    var pos = infos.length - 1;
                    var itemN = isFinish ? this.ITEM_N : this.ITEM_N_CHAT;
                    if (pos >= itemN) {
                        egret.callLater(function () {
                            mod.ScrollUtil.moveVToAssign(_this._view.scr, pos, _this.ITEM_H, 10, 0, true);
                        }, this);
                    }
                };
                TimeGoddessChatMdr.prototype.addItemList = function (item) {
                    this._itemList.addItem(item);
                    this.updateItemListPos();
                };
                TimeGoddessChatMdr.prototype.setLabAct = function (visible) {
                    this._view.grp_act.visible = visible;
                };
                TimeGoddessChatMdr.prototype.setListSel = function (visible, infoList) {
                    this._view.list_sel.visible = this._view.lab_tips.visible = visible;
                    if (visible) {
                        this._selList.source = infoList;
                    }
                };
                TimeGoddessChatMdr.prototype.startChat = function () {
                    this._index++;
                    var chatLv = this._proxy.chatLv;
                    var cfgList = game.getConfigByNameId("nvshen_duihua.json" /* NvshenDuihua */, chatLv);
                    var cfg = cfgList[this._index];
                    if (!cfg) {
                        //对话已经结束，展示对话奖励
                        var rewardCfg = game.getConfigByNameId("nvshen_duihua_level.json" /* NvshenDuihuaLevel */, chatLv);
                        var status = 1 /* Finish */;
                        var rewardData = { type: 1 /* Goddess */, reward: rewardCfg.reward, status: status }; //最后显示奖励
                        this.addItemList(rewardData);
                        this.endChat();
                    }
                    else {
                        if (cfg.type == 1 /* Goddess */) {
                            //女神对话
                            var infoData = { type: cfg.type, desc: cfg.desc, notShowDesc: true };
                            this.addItemList(infoData);
                            this.startContent = true;
                            this.content = cfg.desc;
                            this._view.scr.scrollPolicyV = "off";
                            this.updateContent();
                            TimeMgr.addUpdateItem(this, 25); //用于对话文本表现
                        }
                        else {
                            //自己对话时候，提示选择对话
                            var infoList = [];
                            var descList = this._huangguProxy.getDescList(cfg.desc);
                            for (var pos = 0; pos < descList.length; pos++) {
                                var desc = descList[pos];
                                var info = new nvshen_chat();
                                info.pos = pos;
                                info.level = cfg["level"];
                                info.index = cfg.index;
                                infoList.push({ desc: desc, info: info });
                            }
                            this.setListSel(true, infoList);
                        }
                    }
                };
                TimeGoddessChatMdr.prototype.nextChat = function () {
                    var _this = this;
                    //进行下一对话，延迟执行
                    this.clearDelay();
                    this._delay = delayCall(Handler.alloc(this, function () {
                        _this.startChat();
                    }), 500);
                };
                TimeGoddessChatMdr.prototype.clearDelay = function () {
                    if (this._delay) {
                        clearDelay(this._delay);
                    }
                };
                //当前等级的对话结束的时候会调用
                TimeGoddessChatMdr.prototype.endChat = function () {
                    this._index = 0;
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(1 /* Chat */);
                    if (this._chatList.length) {
                        var list = this._chatList.concat();
                        this._huangguProxy.c2s_nvshen_save_chat(2 /* TimeGoddess */, list);
                        this._chatList = [];
                    }
                };
                TimeGoddessChatMdr.prototype.updateChatTxt = function (desc) {
                    var list = this._itemList.source;
                    var chatData = list[list.length - 1];
                    chatData.desc = desc;
                    this._itemList.itemUpdated(chatData);
                };
                TimeGoddessChatMdr.prototype.jumpChat = function () {
                    if (this.startContent) {
                        this.contentLen = this.content.length;
                        this.updateChatTxt(this.content);
                    }
                };
                TimeGoddessChatMdr.prototype.update = function (time) {
                    this.updateContent();
                };
                TimeGoddessChatMdr.prototype.updateContent = function () {
                    if (this.contentLen == this.content.length) {
                        this.resetData();
                        this.nextChat();
                    }
                    else {
                        this.contentLen++;
                        var tmpContent = this.content.substring(0, this.contentLen);
                        this.updateChatTxt(tmpContent);
                    }
                };
                return TimeGoddessChatMdr;
            }(game.MdrBase));
            more.TimeGoddessChatMdr = TimeGoddessChatMdr;
            __reflect(TimeGoddessChatMdr.prototype, "game.mod.more.TimeGoddessChatMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var Handler = base.Handler;
            var TimeGoddessEventChallengeMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessEventChallengeMdr, _super);
                function TimeGoddessEventChallengeMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoBossGridView);
                    _this.isEasyHide = true;
                    return _this;
                }
                TimeGoddessEventChallengeMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._itemList;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._view.btn_zhenrong.visible = true;
                    this._view.btn_zhanbao.visible = false;
                };
                TimeGoddessEventChallengeMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_zhenrong, TouchEvent.TOUCH_TAP, this.onClickZhenrong);
                    addEventListener(this._view.btn_challenge, TouchEvent.TOUCH_TAP, this.onClickChallenge);
                    this.onNt("on_update_time_goddess_event_info" /* ON_UPDATE_TIME_GODDESS_EVENT_INFO */, this.updateView, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.updateBtn, this);
                };
                TimeGoddessEventChallengeMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                TimeGoddessEventChallengeMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                TimeGoddessEventChallengeMdr.prototype.onClickZhenrong = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "66" /* Zhenrong */);
                };
                TimeGoddessEventChallengeMdr.prototype.onClickChallenge = function () {
                    if (!mod.ViewMgr.getIns().checkZhenrong(true)) {
                        return;
                    }
                    if (!this._cfg) {
                        return;
                    }
                    mod.ViewMgr.getIns().checkZhenrongGod(this._cfg.god, Handler.alloc(this._proxy, this._proxy.c2s_chuang_shi_nv_shen_system_click, [3 /* Event */]));
                };
                TimeGoddessEventChallengeMdr.prototype.updateView = function () {
                    this._view.secondPop.updateTitleStr(this._showArgs.name);
                    var index = this._showArgs.index;
                    this._index = index;
                    var stage = this._proxy.getEventStage(index);
                    if (stage <= 0) {
                        var pCfg = game.GameConfig.getParamConfigById("chuangshi_nvshen_touxiang");
                        var systemInfo = pCfg && pCfg.value; //头像ID、相框ID、性别1男2女
                        var data = { desc: this._showArgs.desc, systemInfo: systemInfo };
                        facade.showView("61" /* More */, "29" /* EventChat */, data);
                    }
                    var curStage = stage + 1;
                    var maxStage = this._proxy.getEventMaxStage(index);
                    if (curStage > maxStage) {
                        this.hide();
                        return;
                    }
                    var cfgList = game.getConfigByNameId("nvshen_shijian.json" /* NvshenShijian */, index);
                    var cfg = cfgList[curStage];
                    this._cfg = cfg;
                    this.addBmpFont(cfg.god + "", game.BmpTextCfg[222 /* XujietansuoTbs */], this._view.gr_power, true, 1, false, 0, true);
                    this._itemList.source = cfg.show_reward;
                    this._view.bar.show(100, 100, false, 0, false, 0 /* Percent */);
                    var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, cfg.bossId);
                    this._view.nameItem.updateShow(monsterCfg.name);
                    this.updateBtn();
                    //todo，背景
                };
                TimeGoddessEventChallengeMdr.prototype.updateBtn = function () {
                    var canChallenge = mod.ViewMgr.getIns().checkZhenrong();
                    this._view.btn_challenge.labelDisplay.text = canChallenge ? game.getLanById("tishi_14" /* tishi_14 */) : game.getLanById("huanggu_nvshen_tips25" /* huanggu_nvshen_tips25 */);
                    this._view.btn_challenge.redPoint.visible = this._proxy.checkEventPerHint(this._index);
                };
                return TimeGoddessEventChallengeMdr;
            }(game.EffectMdrBase));
            more.TimeGoddessEventChallengeMdr = TimeGoddessEventChallengeMdr;
            __reflect(TimeGoddessEventChallengeMdr.prototype, "game.mod.more.TimeGoddessEventChallengeMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var TimeGoddessEventMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessEventMdr, _super);
                function TimeGoddessEventMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.TimeGoddessEventView);
                    _this._itemList = [];
                    _this._lineList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                TimeGoddessEventMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                };
                TimeGoddessEventMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.updateHint, this);
                    this.onNt("on_update_time_goddess_event_info" /* ON_UPDATE_TIME_GODDESS_EVENT_INFO */, this.updateView, this);
                };
                TimeGoddessEventMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateView();
                };
                TimeGoddessEventMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                TimeGoddessEventMdr.prototype.initShow = function () {
                    this._lineList = [
                        this._view.img_line1,
                        this._view.img_line2,
                        this._view.img_line3,
                        this._view.img_line4,
                        this._view.img_line5
                    ];
                    this._itemList = [
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4,
                        this._view.item5,
                        this._view.item6
                    ];
                };
                TimeGoddessEventMdr.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("nvshen_shijian_type.json" /* NvshenShijianType */);
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var line = i > 0 ? this._lineList[i - 1] : null;
                        var cfg = i < cfgList.length ? cfgList[i] : null;
                        var isShow = !!cfg;
                        item.visible = isShow;
                        if (line) {
                            line.visible = isShow;
                        }
                        if (isShow) {
                            item.data = cfg;
                        }
                    }
                };
                TimeGoddessEventMdr.prototype.updateHint = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        item.updateHint();
                    }
                };
                return TimeGoddessEventMdr;
            }(game.MdrBase));
            more.TimeGoddessEventMdr = TimeGoddessEventMdr;
            __reflect(TimeGoddessEventMdr.prototype, "game.mod.more.TimeGoddessEventMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeGoddessMainMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessMainMdr, _super);
                function TimeGoddessMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TimeGoddess */,
                            icon: "timeGoddess_tab",
                            mdr: more.TimeGoddessMdr,
                            title: "time_nvshen_tips" /* time_nvshen_tips */,
                            bg: "timeGoddess_bg",
                            hintTypes: ["61" /* More */, "70" /* GoddessRecordMain */, "01" /* GoddessRecord */,
                                "71" /* TimeGoddessMain */, "01" /* TimeGoddess */],
                        }
                    ];
                    return _this;
                }
                return TimeGoddessMainMdr;
            }(mod.WndBaseNewMdr));
            more.TimeGoddessMainMdr = TimeGoddessMainMdr;
            __reflect(TimeGoddessMainMdr.prototype, "game.mod.more.TimeGoddessMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var TimeGoddessMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessMdr, _super);
                function TimeGoddessMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.TimeGoddessView);
                    _this._endTime = 0;
                    return _this;
                }
                TimeGoddessMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._huangguProxy = this.retProxy(255 /* Huanggu */);
                };
                TimeGoddessMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_exp, TouchEvent.TOUCH_TAP, this.onClickExp);
                    addEventListener(this._view.btn_chat, TouchEvent.TOUCH_TAP, this.onClickChat);
                    addEventListener(this._view.btn_event, TouchEvent.TOUCH_TAP, this.onClickEvent);
                    addEventListener(this._view.btn_speedup, TouchEvent.TOUCH_TAP, this.onClickSpeedup);
                    addEventListener(this._view.grp_speedup, TouchEvent.TOUCH_TAP, this.onClickSpeedup);
                    addEventListener(this._view.btn_card, TouchEvent.TOUCH_TAP, this.onClickCard);
                    this.onNt("on_update_time_goddess_chat_info" /* ON_UPDATE_TIME_GODDESS_CHAT_INFO */, this.updateChatHint, this);
                    this.onNt("on_update_time_goddess_event_info" /* ON_UPDATE_TIME_GODDESS_EVENT_INFO */, this.onEventUpdate, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.updateEventHint, this);
                    this.onNt("on_update_time_goddess_lv_info" /* ON_UPDATE_TIME_GODDESS_LV_INFO */, this.updateLv, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this); //属性刷新，有货币
                    this.onNt("on_update_time_goddess_gongfeng_info" /* ON_UPDATE_TIME_GODDESS_GONGFENG_INFO */, this.updateGongfeng, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                TimeGoddessMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateLv();
                    this.updateSummon();
                    this.updateHint();
                    this.updateGongfeng();
                    this.reqInfo();
                    this._huangguProxy.c2s_nvshen_get_chat(2 /* TimeGoddess */); //请求对话信息
                };
                TimeGoddessMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                TimeGoddessMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("cs_nvshen_qinmi" /* cs_nvshen_qinmi */) >= 0) {
                        this.updateLv();
                    }
                };
                TimeGoddessMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var prop_index = 1450100174;
                    if (indexs.indexOf(prop_index) > -1) {
                        this.updateSummon();
                    }
                };
                TimeGoddessMdr.prototype.onClickExp = function () {
                    facade.showView("61" /* More */, "77" /* TimeGoddessSummon */);
                };
                TimeGoddessMdr.prototype.onClickChat = function () {
                    facade.showView("61" /* More */, "74" /* TimeGoddessChat */);
                };
                TimeGoddessMdr.prototype.onClickEvent = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "72" /* TimeGoddessEvent */);
                };
                TimeGoddessMdr.prototype.onClickSpeedup = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "75" /* TimeGoddessSpeedUp */);
                };
                TimeGoddessMdr.prototype.onClickCard = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "90" /* HunkaMain */);
                };
                TimeGoddessMdr.prototype.initShow = function () {
                    this._view.btn_gift.updateGift(201401 /* Id201401 */);
                };
                TimeGoddessMdr.prototype.updateLv = function () {
                    var lv = this._proxy.lv;
                    var exp = game.RoleVo.ins.getValueByKey("cs_nvshen_qinmi" /* cs_nvshen_qinmi */);
                    var fontStr = lv + "";
                    this.addBmpFont(fontStr, game.BmpTextCfg[221 /* GoddessFont */], this._view.grp_lv, true, 1, true);
                    var nextLv = lv + 1;
                    var cfg = game.getConfigByNameId("nvshen_level.json" /* NvshenLevel */, nextLv);
                    if (!cfg) {
                        cfg = game.getConfigByNameId("nvshen_level.json" /* NvshenLevel */, lv);
                    }
                    this._view.bar.show(exp, cfg.exp, false, 0, false);
                };
                TimeGoddessMdr.prototype.updateSummon = function () {
                    var val = this._proxy.getMinVal();
                    var hint = this._proxy.checkSummonHint();
                    this._view.btn_exp.updateShow(val, hint);
                };
                TimeGoddessMdr.prototype.onEventUpdate = function () {
                    this.updateChatHint();
                    this.updateEventHint();
                };
                /** 通用红点事件监听 */
                TimeGoddessMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(this._proxy.hunkaHint)) {
                        this.updateHunkaHint(data.value);
                    }
                };
                TimeGoddessMdr.prototype.updateHint = function () {
                    this.updateChatHint();
                    this.updateEventHint();
                    this.updateHunkaHint(mod.HintMgr.getHint(this._proxy.hunkaHint));
                };
                TimeGoddessMdr.prototype.updateChatHint = function () {
                    this._view.btn_chat.redPoint.visible = this._proxy.checkChatHint();
                };
                TimeGoddessMdr.prototype.updateEventHint = function () {
                    this._view.btn_event.redPoint.visible = this._proxy.checkEventHint();
                };
                TimeGoddessMdr.prototype.updateHunkaHint = function (hint) {
                    this._view.btn_card.redPoint.visible = hint;
                };
                TimeGoddessMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                TimeGoddessMdr.prototype.updateGongfeng = function () {
                    var propList = this._proxy.prop_list;
                    var curInfo;
                    for (var i = 0; i < game.TimeGoddessGongfengCnt; i++) {
                        var pos = i + 1;
                        var info = i < propList.length ? propList[i] : null;
                        if (!curInfo && this._proxy.gongfenging(info)) {
                            curInfo = info;
                        }
                        var data = { info: info, pos: pos };
                        this._view["item" + i].data = data;
                    }
                    this._view.grp_speedup.visible = !!curInfo;
                    if (curInfo) {
                        TimeMgr.addUpdateItem(this, 1000);
                        var cfg = game.GameConfig.getPropConfigById(curInfo.idx.toNumber());
                        this._view.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name, game.ColorUtil.getColorByQuality1(cfg.quality)));
                        this._endTime = curInfo.endtime.toNumber();
                        this.updateTime();
                    }
                    else {
                        TimeMgr.removeUpdateItem(this);
                    }
                };
                TimeGoddessMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime == 0) {
                        this.reqInfo();
                    }
                    this._view.lab_time.text = game.TimeUtil.formatSecond(leftTime, "d天H时", true);
                };
                TimeGoddessMdr.prototype.reqInfo = function () {
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(14 /* GongfengInfo */); //正在献祭的完成了，请求数据
                };
                return TimeGoddessMdr;
            }(game.EffectMdrBase));
            more.TimeGoddessMdr = TimeGoddessMdr;
            __reflect(TimeGoddessMdr.prototype, "game.mod.more.TimeGoddessMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var TimeGoddessShelfMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessShelfMdr, _super);
                function TimeGoddessShelfMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.TimeGoddessShelfView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                TimeGoddessShelfMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                    this._view.list.itemRenderer = more.TimeGoddessShelfItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.secondPop.updateTitleStr("祭品");
                };
                TimeGoddessShelfMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_close_consecrate_shelf" /* ON_CLOSE_CONSECRATE_SHELF */, this.hide, this);
                };
                TimeGoddessShelfMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                TimeGoddessShelfMdr.prototype.onUpdateView = function () {
                    this._list = mod.BagUtil.getBagsByTypeAndPropSubType(10 /* TimeGoddess */, 2 /* Jipin */);
                    this._listData.replaceAll(this._list);
                };
                TimeGoddessShelfMdr.prototype.onClick = function () {
                    var num = this._proxy.getSpaceCount();
                    var idxs = [];
                    for (var i = 0; i < this._list.length; i++) {
                        if (num <= 0) {
                            break;
                        }
                        var info = this._list[i];
                        var len = num > info.count ? info.count : num;
                        for (var i_1 = 0; i_1 < len; i_1++) {
                            idxs.push(Long.fromValue(info.index));
                        }
                        num -= info.count;
                    }
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(10 /* Gongfeng */, null, idxs);
                    this.hide();
                };
                TimeGoddessShelfMdr.prototype.onHide = function () {
                    this._listData.removeAll();
                    _super.prototype.onHide.call(this);
                };
                return TimeGoddessShelfMdr;
            }(game.MdrBase));
            more.TimeGoddessShelfMdr = TimeGoddessShelfMdr;
            __reflect(TimeGoddessShelfMdr.prototype, "game.mod.more.TimeGoddessShelfMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var TimeGoddessSpeedUpMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessSpeedUpMdr, _super);
                function TimeGoddessSpeedUpMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.TimeGoddessSpeedUpView);
                    return _this;
                }
                TimeGoddessSpeedUpMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                TimeGoddessSpeedUpMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.grp_tips, TouchEvent.TOUCH_TAP, this.onClickSpeedUp, this);
                    addEventListener(this._view.grp_all, TouchEvent.TOUCH_TAP, this.onClickAllSpeedUp, this);
                    this.onNt("on_update_time_goddess_gongfeng_info" /* ON_UPDATE_TIME_GODDESS_GONGFENG_INFO */, this.updateView, this);
                };
                TimeGoddessSpeedUpMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("xujiejitan_tips5" /* xujiejitan_tips5 */));
                    this._view.secondPop.updateBgSrc(game.ResUtil.getUiJpg("gongfeng_bg3")); //todo
                    this.updateView();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                TimeGoddessSpeedUpMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._leftTimeSingle = 0;
                    this._leftTimeTotal = 0;
                    this._prop = null;
                    TimeMgr.removeUpdateItem(this);
                };
                TimeGoddessSpeedUpMdr.prototype.updateView = function () {
                    var sacrificeInfo = this._proxy.getGongfengInfo();
                    if (!sacrificeInfo) {
                        return;
                    }
                    this._leftTimeSingle = sacrificeInfo.endtime.toNumber() - TimeMgr.time.serverTimeSecond;
                    this._leftTimeTotal = this._proxy.getTotalPropTime();
                    this._prop = game.PropData.create(sacrificeInfo.idx);
                    this._view.icon.setData(this._prop);
                    this._view.lab_name.textFlow = this._view.icon.getPropName();
                    var time = this._proxy.total_speed_time;
                    var str = game.TimeUtil.formatSecond(time, time > game.Second.Day ? "d天HH时" : "HH时mm分");
                    this._view.lab_havetime.text = "" + str;
                };
                TimeGoddessSpeedUpMdr.prototype.onClickSpeedUp = function () {
                    if (!this._proxy.total_speed_time) {
                        mod.ViewMgr.getIns().showGainWaysTips(1453701001 /* NvshenJiasu */);
                        return;
                    }
                    var time = Math.min(this._leftTimeSingle, this._proxy.total_speed_time);
                    var str = "\u662F\u5426\u6D88\u8017" + game.TextUtil.addColor(game.TimeUtil.formatSecond(time, time > game.Second.Day ? "d天HH时" : "HH时mm分"), 1022764 /* GREEN */) + "\u5FEB\u901F\u732E\u796D";
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.sendSpeedUp, [12 /* GongfengSpeedup */]));
                };
                TimeGoddessSpeedUpMdr.prototype.onClickAllSpeedUp = function () {
                    if (!this._proxy.total_speed_time) {
                        mod.ViewMgr.getIns().showGainWaysTips(1453701001 /* NvshenJiasu */);
                        return;
                    }
                    var time = Math.min(this._leftTimeTotal, this._proxy.total_speed_time);
                    var str = "\u662F\u5426\u6D88\u8017" + game.TextUtil.addColor(game.TimeUtil.formatSecond(time, time > game.Second.Day ? "d天HH时" : "HH时mm分"), 1022764 /* GREEN */) + "\u5FEB\u901F\u732E\u796D";
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.sendSpeedUp, [13 /* GongfengSpeedupAll */]));
                };
                //单个加速，全部加速
                TimeGoddessSpeedUpMdr.prototype.sendSpeedUp = function (type) {
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(type);
                    this.hide();
                };
                TimeGoddessSpeedUpMdr.prototype.update = function (time) {
                    this.onUpdateTime();
                };
                TimeGoddessSpeedUpMdr.prototype.onUpdateTime = function () {
                    if (!this._prop) {
                        return;
                    }
                    this._leftTimeSingle--;
                    if (this._leftTimeSingle < 0) {
                        this._leftTimeSingle = 0;
                    }
                    this._view.lab_time.text = game.TimeUtil.formatSecond(this._leftTimeSingle, this._leftTimeSingle > game.Second.Day ? "d天HH时" : "HH时mm分");
                    this._leftTimeTotal--;
                    if (this._leftTimeTotal < 0) {
                        this._leftTimeTotal = 0;
                    }
                    this._view.lab_alltime.text = game.TimeUtil.formatSecond(this._leftTimeTotal, this._leftTimeTotal > game.Second.Day ? "d天HH时" : "HH时mm分");
                };
                return TimeGoddessSpeedUpMdr;
            }(game.MdrBase));
            more.TimeGoddessSpeedUpMdr = TimeGoddessSpeedUpMdr;
            __reflect(TimeGoddessSpeedUpMdr.prototype, "game.mod.more.TimeGoddessSpeedUpMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var TimeGoddessSummonMdr = /** @class */ (function (_super) {
                __extends(TimeGoddessSummonMdr, _super);
                function TimeGoddessSummonMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.TimeGoddessSummonView);
                    _this._itemList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                TimeGoddessSummonMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(259 /* GoddessRecord */);
                };
                TimeGoddessSummonMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_exp, TouchEvent.TOUCH_TAP, this.onClickExp);
                    addEventListener(this._view.btn_summon, TouchEvent.TOUCH_TAP, this.onClickSummon);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    // this.onNt(RoleEvent.ON_ROLE_UPDATE, this.onRoleUpdate, this);//属性刷新，有货币
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                TimeGoddessSummonMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateAct();
                    this.updateItemList();
                    this.indexUpdateInfo();
                };
                TimeGoddessSummonMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                TimeGoddessSummonMdr.prototype.onClickExp = function () {
                    mod.ViewMgr.getIns().showPropTips(1450100174 /* Chuangshinengliang */);
                };
                TimeGoddessSummonMdr.prototype.onClickSummon = function () {
                    var isOpen = this._proxy.isOpenSummon();
                    if (!isOpen) {
                        game.PromptBox.getIns().show(game.getLanById("time_nvshen_tips2" /* time_nvshen_tips2 */));
                        return;
                    }
                    if (!this._selCfg) {
                        return;
                    }
                    var val = this._selCfg.costs[0][1];
                    if (!mod.BagUtil.checkPropCntUp(1450100174 /* Chuangshinengliang */, val)) {
                        return;
                    }
                    var pos = this._selIndex + 1;
                    this._proxy.c2s_chuang_shi_nv_shen_system_click(20 /* Summon */, pos);
                };
                TimeGoddessSummonMdr.prototype.onClickReward = function () {
                    var rewards = this._proxy.getSummonRewards();
                    mod.ViewMgr.getIns().openPreviewReward(rewards);
                };
                // private onRoleUpdate(n: base.GameNT): void {
                //     let keys: string[] = n.body;
                //     if (keys.indexOf(RolePropertyKey.cs_nvshen_nengliang) >= 0) {
                //         this.updateItemList();
                //         this.updateExp();
                //     }
                // }
                TimeGoddessSummonMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var prop_index = 1450100174;
                    if (indexs.indexOf(prop_index) > -1) {
                        this.updateItemList();
                        this.updateExp();
                    }
                };
                TimeGoddessSummonMdr.prototype.onClickIcon = function (e) {
                    var img = e.target;
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        if (item.img_icon != img) {
                            continue;
                        }
                        if (this._selIndex == i) {
                            return;
                        }
                        this._selIndex = i;
                        this.indexUpdateInfo();
                        break;
                    }
                };
                TimeGoddessSummonMdr.prototype.initShow = function () {
                    this.addEftByParent("nvshentexiao" /* Nvshentexiao */, this._view.grp_eft);
                    var addEventListener = this.onEgret.bind(this);
                    this._itemList = [
                        this._view.item0,
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4
                    ];
                    for (var _i = 0, _a = this._itemList; _i < _a.length; _i++) {
                        var item = _a[_i];
                        addEventListener(item, TouchEvent.TOUCH_TAP, this.onClickIcon);
                    }
                    this._selIndex = 0;
                };
                TimeGoddessSummonMdr.prototype.updateAct = function () {
                    var isOpen = this._proxy.isOpenSummon();
                    var actStr = isOpen ? "" : game.getLanById("time_nvshen_tips3" /* time_nvshen_tips3 */);
                    this._view.lab_act.text = actStr;
                };
                TimeGoddessSummonMdr.prototype.updateItemList = function () {
                    var cfgList = game.getConfigListByName("nvshen_choujiang.json" /* NvshenChoujiang */);
                    for (var i = 0; i < this._itemList.length && i < cfgList.length; ++i) {
                        var item = this._itemList[i];
                        var data = cfgList[i];
                        item.data = data;
                    }
                };
                TimeGoddessSummonMdr.prototype.indexUpdateInfo = function () {
                    var cfgList = game.getConfigListByName("nvshen_choujiang.json" /* NvshenChoujiang */);
                    this._selCfg = cfgList[this._selIndex];
                    if (!this._selCfg) {
                        return;
                    }
                    this.updateItemSel();
                    this.updateExp();
                };
                TimeGoddessSummonMdr.prototype.updateItemSel = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var sel = this._selIndex == i;
                        item.img_sel.visible = sel;
                    }
                };
                TimeGoddessSummonMdr.prototype.updateExp = function () {
                    var val = this._selCfg.costs[0][1];
                    this._view.btn_exp.updateShow(val);
                    this._view.img_type.source = "nvshen_choujiang_" + this._selCfg.index;
                };
                return TimeGoddessSummonMdr;
            }(game.EffectMdrBase));
            more.TimeGoddessSummonMdr = TimeGoddessSummonMdr;
            __reflect(TimeGoddessSummonMdr.prototype, "game.mod.more.TimeGoddessSummonMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoModel = /** @class */ (function () {
                function FengmoModel() {
                    this.times = 0;
                    this.buy_times = 0;
                    this.total_times = 0;
                    this.damage_indexs = [];
                    this.times_indexs = [];
                    this.reward = [];
                }
                return FengmoModel;
            }());
            more.FengmoModel = FengmoModel;
            __reflect(FengmoModel.prototype, "game.mod.more.FengmoModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more_1) {
            var c2s_guild_fengmo_battle = msg.c2s_guild_fengmo_battle;
            var c2s_guild_fengmo_get_reward = msg.c2s_guild_fengmo_get_reward;
            var c2s_guild_fengmo_get_info = msg.c2s_guild_fengmo_get_info;
            var s2c_guild_fengmo_info = msg.s2c_guild_fengmo_info;
            var s2c_guild_type_rank_list = msg.s2c_guild_type_rank_list;
            var c2s_guild_fengmo_get_rank = msg.c2s_guild_fengmo_get_rank;
            var c2s_buy_fengmo_tiaozhan_times = msg.c2s_buy_fengmo_tiaozhan_times;
            var Handler = base.Handler;
            var facade = base.facade;
            var FengmoProxy = /** @class */ (function (_super) {
                __extends(FengmoProxy, _super);
                function FengmoProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FengmoProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more_1.FengmoModel();
                    this.onProto(s2c_guild_fengmo_info, this.s2c_guild_fengmo_info, this);
                    this.onProto(s2c_guild_type_rank_list, this.s2c_guild_type_rank_list, this);
                    //仙宗id变化
                    facade.onNt("on_update_in_union" /* ON_UPDATE_IN_UNION */, this.onUpdateUnionInfo, this);
                };
                /**------------------------协议------------------------- */
                FengmoProxy.prototype.c2s_guild_fengmo_battle = function (type, param) {
                    var msg = new c2s_guild_fengmo_battle();
                    msg.type = type;
                    if (param) {
                        msg.param = param;
                    }
                    this.sendProto(msg);
                };
                FengmoProxy.prototype.c2s_guild_fengmo_get_reward = function (type, index) {
                    var msg = new c2s_guild_fengmo_get_reward();
                    msg.type = type;
                    msg.index = index;
                    this.sendProto(msg);
                };
                FengmoProxy.prototype.c2s_guild_fengmo_get_info = function () {
                    var msg = new c2s_guild_fengmo_get_info();
                    this.sendProto(msg);
                };
                FengmoProxy.prototype.c2s_guild_fengmo_get_rank = function (type) {
                    var msg = new c2s_guild_fengmo_get_rank();
                    msg.type = type;
                    this.sendProto(msg);
                };
                FengmoProxy.prototype.c2s_buy_fengmo_tiaozhan_times = function (buy_times) {
                    var msg = new c2s_buy_fengmo_tiaozhan_times();
                    msg.buy_times = buy_times;
                    this.sendProto(msg);
                };
                FengmoProxy.prototype.s2c_guild_fengmo_info = function (n) {
                    var msg = n.body;
                    if (msg.param == 1) {
                        //更新全部 缺省赋予默认值
                        this._model.my_max_damage = msg.my_max_damage && msg.my_max_damage.toNumber() || 0;
                        this._model.damage_value = msg.damage_value && msg.damage_value.toNumber() || 0;
                        this._model.buy_times = msg.buy_times || 0;
                        this._model.times = msg.times || 0;
                        this._model.total_times = msg.total_times || 0;
                        this._model.mvp_info = msg.mvp_info || null;
                        this._model.times_indexs = msg.cishu_index || [];
                        this._model.damage_indexs = msg.damage_index || [];
                        this._model.reward = msg.reward || [];
                    }
                    else {
                        if (msg.my_max_damage) {
                            this._model.my_max_damage = msg.my_max_damage.toNumber();
                        }
                        if (msg.damage_value) {
                            this._model.damage_value = msg.damage_value.toNumber();
                        }
                        if (msg.buy_times) {
                            this._model.buy_times = msg.buy_times;
                        }
                        if (msg.times) {
                            this._model.times = msg.times;
                        }
                        if (msg.total_times) {
                            this._model.total_times = msg.total_times;
                        }
                        if (msg.mvp_info) {
                            this._model.mvp_info = msg.mvp_info;
                        }
                        if (msg.cishu_index) {
                            this._model.times_indexs = msg.cishu_index;
                        }
                        if (msg.damage_index) {
                            this._model.damage_indexs = msg.damage_index;
                        }
                        if (msg.reward) {
                            this._model.reward = msg.reward;
                        }
                    }
                    this.onUpdateHint();
                    this.checkAutoChallengeFengmo();
                    this.sendNt("on_update_fengmo_info" /* ON_UPDATE_FENGMO_INFO */);
                };
                // private s2c_guild_fengmo_rank(n: GameNT): void {
                //     let msg: s2c_guild_fengmo_rank = n.body;
                //     if (msg.type == 1) {
                //         if (msg.my_info) {
                //             this._model.my_rank = msg.my_info;
                //         }
                //         if (msg.hurtlist) {
                //             this._model.person_ranks = msg.hurtlist;
                //         }
                //     } else {
                //         if (msg.my_info) {
                //             this._model.my_guild_rank = msg.my_info;
                //         }
                //         if (msg.hurtlist) {
                //             this._model.guild_ranks = msg.hurtlist;
                //         }
                //     }
                //     this.sendNt(HuangguEvent.ON_UPDATE_FENGMO_RANK);
                // }
                FengmoProxy.prototype.s2c_guild_type_rank_list = function (n) {
                    var msg = n.body;
                    if (msg.rank_type !== 4 /* Fengmo */) {
                        return;
                    }
                    var isGuild = msg.button_type == 1 /* Guild */;
                    if (isGuild) {
                        this._model.guild_ranks = msg.all_ranks;
                        this._model.my_guild_rank = msg.my_rank;
                    }
                    else {
                        this._model.person_ranks = msg.all_ranks;
                        this._model.my_rank = msg.my_rank;
                    }
                    this.sendNt("on_update_fengmo_rank" /* ON_UPDATE_FENGMO_RANK */);
                    this._model.last_rank_num = msg.last_rank_num || 0;
                    this._model.props = msg.props || [];
                    if (msg.last_rank_num && msg.props) {
                        mod.HintMgr.setHint(true, ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "82" /* Fengmo */, "140" /* UnionRank */]);
                    }
                    else {
                        mod.HintMgr.setHint(false, ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "82" /* Fengmo */, "140" /* UnionRank */]);
                    }
                };
                Object.defineProperty(FengmoProxy.prototype, "mvp_info", {
                    /**------------------------协议------------------------- */
                    get: function () {
                        return this._model.mvp_info;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "times", {
                    /**剩余次数 */
                    get: function () {
                        if (!this._model.times) {
                            return this.guild_fengmo_meiricishu;
                        }
                        return this.guild_fengmo_meiricishu - this._model.times + this.buy_times;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "my_max_damage", {
                    get: function () {
                        return this._model.my_max_damage || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "damage_value", {
                    get: function () {
                        return this._model.damage_value || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "damage_indexs", {
                    get: function () {
                        return this._model.damage_indexs || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "times_indexs", {
                    get: function () {
                        return this._model.times_indexs || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "total_times", {
                    get: function () {
                        return this._model.total_times || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "buy_times", {
                    get: function () {
                        return this._model.buy_times || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "reward", {
                    get: function () {
                        return this._model.reward || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "last_rank_num", {
                    get: function () {
                        return this._model.last_rank_num || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "props", {
                    get: function () {
                        return this._model.props || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                FengmoProxy.prototype.getRanks = function (type) {
                    if (type == 2 /* Person */) {
                        return this._model.person_ranks;
                    }
                    else {
                        return this._model.guild_ranks;
                    }
                };
                FengmoProxy.prototype.getRankName = function (item, type) {
                    if (!item) {
                        return game.getLanById("tishi_2" /* tishi_2 */);
                    }
                    if (type == 1 /* Guild */) {
                        var content = game.getLanById("guild_tips15" /* guild_tips15 */);
                        return game.StringUtil.substitute(content, [item.guild_name, item.name]);
                    }
                    else {
                        return item.name;
                    }
                };
                FengmoProxy.prototype.getRankList = function (type) {
                    var ranks = this.getRanks(type);
                    var cfgArr = game.getConfigByNameId("fengmo_rank.json" /* FengmoRank */, type);
                    var list = [];
                    var _loop_1 = function (k) {
                        var cfg = cfgArr[k];
                        var start = cfg.rank_no[0];
                        var end = cfg.rank_no[1];
                        if (start == end) {
                            var item = ranks && ranks[start - 1];
                            var name = this_1.getRankName(item, type);
                            list.push({
                                rank: start,
                                name: name,
                                hurtStr: item && item.value.toString() || "",
                                reward: cfg.awards
                            });
                        }
                        else {
                            // let str: string = TextUtil.addLinkHtmlTxt(getLanById(LanDef.tongtiange_tips12), WhiteColor.DEFAULT, "");
                            var more_2 = start > game.MAX_RANK_NUM;
                            var rank_1 = more_2 ? start - 1 + "+" : start + "-" + end;
                            var lookHandler = Handler.alloc(this_1, function () {
                                mod.ViewMgr.getIns().showSecondPop("61" /* More */, "83" /* FengmoRankTips */, { rank: rank_1, type: type });
                            });
                            list.push({
                                rank: rank_1,
                                name: "",
                                reward: cfg.awards,
                                lookHandler: !more_2 && lookHandler
                            });
                        }
                    };
                    var this_1 = this;
                    for (var k in cfgArr) {
                        _loop_1(k);
                    }
                    return list;
                };
                FengmoProxy.prototype.getRankInfo = function (type) {
                    if (type == 2 /* Person */) {
                        return this._model.my_rank;
                    }
                    return this._model.my_guild_rank;
                };
                FengmoProxy.prototype.getRankStr = function (type) {
                    var info = this.getRankInfo(type);
                    if (info && info.rank_num) {
                        var str = game.TextUtil.addColor("" + info.rank_num, 2330156 /* GREEN */);
                        var lan = type == 2 /* Person */ ? game.getLanById("compete_mars_4" /* compete_mars_4 */) : game.getLanById("xianzong_tips8" /* xianzong_tips8 */);
                        return game.StringUtil.substitute(lan, [str]);
                    }
                    else {
                        var param = game.GameConfig.getParamConfigById("guild_fengmo_shangbang" + type);
                        return game.StringUtil.substitute(game.getLanById("xianzong_tips9" /* xianzong_tips9 */), [param.value]);
                    }
                };
                FengmoProxy.prototype.getRankCountStr = function (type) {
                    var info = this.getRankInfo(type);
                    var str = game.TextUtil.addColor("" + (info && info.value || 0), 2330156 /* GREEN */);
                    return game.StringUtil.substitute(game.getLanById("xianzong_tips10" /* xianzong_tips10 */), [str]);
                };
                /**获取区间排行榜列表 参数为排名 需要-1转换索引 */
                FengmoProxy.prototype.getRankSection = function (rank, type) {
                    var strArr = rank.split("-");
                    var start = +strArr[0];
                    var end = +strArr[1];
                    var ranks = this.getRanks(type);
                    var list = [];
                    for (var i = start - 1; i < end; i++) {
                        var item = ranks && ranks[i];
                        var name = this.getRankName(item, type);
                        if (item) {
                            list.push({ rank: item.rank_num, name: name, value: +item.value });
                        }
                        else {
                            list.push({ rank: i + 1, name: name, value: 0 });
                        }
                    }
                    return list;
                };
                Object.defineProperty(FengmoProxy.prototype, "hurt_cfg", {
                    get: function () {
                        var cfgArr = game.getConfigListByName("fengmo_damage_reward.json" /* FengmoDamageReward */);
                        for (var _i = 0, cfgArr_2 = cfgArr; _i < cfgArr_2.length; _i++) {
                            var cfg = cfgArr_2[_i];
                            if (cfg.damage_value > this.damage_value / 10000) {
                                return cfg;
                            }
                        }
                        return cfgArr[cfgArr.length - 1];
                    },
                    enumerable: true,
                    configurable: true
                });
                FengmoProxy.prototype.getRewardState = function (cfg) {
                    var indexs = this.times_indexs;
                    if (indexs.indexOf(cfg.index) > -1) {
                        return 2 /* Done */;
                    }
                    else {
                        return +(this.total_times >= cfg.tiaozhan_times);
                    }
                };
                Object.defineProperty(FengmoProxy.prototype, "guild_fengmo_model", {
                    /**-------------------------参数表配置------------------------ */
                    get: function () {
                        if (!this._model.guild_fengmo_model) {
                            var param = game.GameConfig.getParamConfigById("guild_fengmo_model");
                            this._model.guild_fengmo_model = param.value;
                        }
                        return this._model.guild_fengmo_model;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "guild_fengmo_meiricishu", {
                    get: function () {
                        if (!this._model.guild_fengmo_meiricishu) {
                            var param = game.GameConfig.getParamConfigById("guild_fengmo_meiricishu");
                            this._model.guild_fengmo_meiricishu = param.value;
                        }
                        return this._model.guild_fengmo_meiricishu;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "guild_fengmo_meirixiangou", {
                    get: function () {
                        if (!this._model.guild_fengmo_meirixiangou) {
                            var param = game.GameConfig.getParamConfigById("guild_fengmo_meirixiangou");
                            this._model.guild_fengmo_meirixiangou = param.value;
                        }
                        return this._model.guild_fengmo_meirixiangou;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(FengmoProxy.prototype, "guild_fengmo_time", {
                    get: function () {
                        if (!this._model.guild_fengmo_time) {
                            var param = game.GameConfig.getParamConfigById("guild_fengmo_time");
                            this._model.guild_fengmo_time = param.value;
                        }
                        return this._model.guild_fengmo_time;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**------------------------红点-------------------------*/
                FengmoProxy.prototype.onUpdateHint = function () {
                    var root = ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "82" /* Fengmo */];
                    if (this.times) {
                        mod.HintMgr.setHint(true, root);
                        return;
                    }
                    var bool_times = this.getTimesHint();
                    if (bool_times) {
                        mod.HintMgr.setHint(true, root);
                        return;
                    }
                    var bool = this.getDamageHint();
                    if (bool) {
                        mod.HintMgr.setHint(true, root);
                        return;
                    }
                    mod.HintMgr.setHint(false, root);
                };
                FengmoProxy.prototype.getTimesHint = function () {
                    if (!mod.RoleUtil.isInUnion()) {
                        return false;
                    }
                    var cfgArr = game.getConfigListByName("fengmo_tiaozhan_reward.json" /* FengmoTiaozhanReward */);
                    for (var _i = 0, cfgArr_3 = cfgArr; _i < cfgArr_3.length; _i++) {
                        var cfg = cfgArr_3[_i];
                        if (this.times_indexs.indexOf(cfg.index) > -1) {
                            continue;
                        }
                        if (this.total_times >= cfg.tiaozhan_times) {
                            return true;
                        }
                    }
                    return false;
                };
                FengmoProxy.prototype.getDamageHint = function () {
                    if (!mod.RoleUtil.isInUnion()) {
                        return false;
                    }
                    var cfgArr = game.getConfigListByName("fengmo_damage_reward.json" /* FengmoDamageReward */);
                    for (var _i = 0, cfgArr_4 = cfgArr; _i < cfgArr_4.length; _i++) {
                        var cfg = cfgArr_4[_i];
                        if (this.damage_indexs.indexOf(cfg.index) > -1) {
                            continue;
                        }
                        if (this.damage_value >= cfg.damage_value * 10000) {
                            return true;
                        }
                    }
                    return false;
                };
                /**============== 修仙女仆自动挂机 ==============*/
                //加入宗门，每日三次挑战
                FengmoProxy.prototype.canAutoChallenge = function () {
                    if (!mod.RoleUtil.getGuildId() || !mod.ViewMgr.getIns().checkViewOpen(1041670241 /* Fengmo */)) {
                        return false;
                    }
                    return this._model.times < this.guild_fengmo_meiricishu && this.times > 0;
                };
                FengmoProxy.prototype.sendAutoChallenge = function () {
                    if (!this.canAutoChallenge()) {
                        mod.RoleUtil.removeAutoChallengeEvent(8 /* Xianzongfengmo */);
                        return;
                    }
                    var type = 1;
                    var cnt;
                    if (this.my_max_damage) {
                        type = 2; //扫荡
                        cnt = Math.max(0, this.guild_fengmo_meiricishu - this._model.times); //扫荡次数
                    }
                    this.c2s_guild_fengmo_battle(type, cnt);
                };
                FengmoProxy.prototype.checkAutoChallengeFengmo = function () {
                    //退出仙宗
                    if (!mod.RoleUtil.getGuildId()) {
                        mod.RoleUtil.removeAutoChallengeEvent(8 /* Xianzongfengmo */, true);
                        return;
                    }
                    if (this.canAutoChallenge()) {
                        mod.RoleUtil.addAutoChallengeEvent(8 /* Xianzongfengmo */, Handler.alloc(this, this.sendAutoChallenge));
                    }
                    else {
                        //扫荡处理的
                        mod.RoleUtil.removeAutoChallengeEvent(8 /* Xianzongfengmo */);
                    }
                };
                FengmoProxy.prototype.onUpdateUnionInfo = function () {
                    this.checkAutoChallengeFengmo();
                };
                return FengmoProxy;
            }(game.ProxyBase));
            more_1.FengmoProxy = FengmoProxy;
            __reflect(FengmoProxy.prototype, "game.mod.more.FengmoProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuangguModel = /** @class */ (function () {
                function HuangguModel() {
                    this.goddessHint = ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "31" /* GoddessMain */, "01" /* Goddess */, "01" /* TabBtnType01 */];
                    this.targetHint = ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "31" /* GoddessMain */, "01" /* Goddess */, "37" /* GoddessTargetMain */, "01" /* Target */];
                    this.chatList = {};
                }
                return HuangguModel;
            }());
            more.HuangguModel = HuangguModel;
            __reflect(HuangguModel.prototype, "game.mod.more.HuangguModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_huanggu_nvshen_op = msg.c2s_huanggu_nvshen_op;
            var s2c_huanggu_nvshen_info = msg.s2c_huanggu_nvshen_info;
            var c2s_nvshen_get_chat = msg.c2s_nvshen_get_chat;
            var c2s_nvshen_save_chat = msg.c2s_nvshen_save_chat;
            var s2c_nvshen_chat = msg.s2c_nvshen_chat;
            var HuangguProxy = /** @class */ (function (_super) {
                __extends(HuangguProxy, _super);
                function HuangguProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuangguProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.HuangguModel();
                    this.onProto(s2c_huanggu_nvshen_info, this.s2c_huanggu_nvshen_info, this);
                    this.onProto(s2c_nvshen_chat, this.s2c_nvshen_chat, this);
                };
                HuangguProxy.prototype.c2s_huanggu_nvshen_op = function (type, index, param) {
                    var msg = new c2s_huanggu_nvshen_op();
                    msg.type = type;
                    msg.index = index;
                    msg.param = param;
                    this.sendProto(msg);
                };
                HuangguProxy.prototype.c2s_nvshen_get_chat = function (type) {
                    var msg = new c2s_nvshen_get_chat();
                    msg.type = type;
                    this.sendProto(msg);
                };
                HuangguProxy.prototype.c2s_nvshen_save_chat = function (type, list) {
                    this.saveChat(type, list);
                    var msg = new c2s_nvshen_save_chat();
                    msg.type = type;
                    msg.list = list;
                    this.sendProto(msg);
                };
                HuangguProxy.prototype.s2c_huanggu_nvshen_info = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    if (msg.gongfeng != undefined) {
                        if (!this._model.consecrateInfo) {
                            this._model.consecrateInfo = msg.gongfeng;
                        }
                        else {
                            for (var k in msg.gongfeng) {
                                this._model.consecrateInfo[k] = msg.gongfeng[k];
                            }
                        }
                        this.sendNt("on_update_goddess_consecrate_info" /* ON_UPDATE_GODDESS_CONSECRATE_INFO */);
                    }
                    if (msg.hudong != undefined) {
                        if (!this._model.chatInfo) {
                            this._model.chatInfo = msg.hudong;
                        }
                        else {
                            for (var k in msg.hudong) {
                                this._model.chatInfo[k] = msg.hudong[k];
                            }
                        }
                        this.sendNt("on_update_goddess_chat_info" /* ON_UPDATE_GODDESS_CHAT_INFO */);
                    }
                    if (msg.shijian != undefined) {
                        if (!this._model.eventList) {
                            this._model.eventList = msg.shijian;
                        }
                        else {
                            for (var _i = 0, _a = msg.shijian; _i < _a.length; _i++) {
                                var info = _a[_i];
                                var pos = this.getInfoPos(info.index);
                                if (pos >= 0) {
                                    this._model.eventList[pos] = info;
                                }
                                else {
                                    this._model.eventList.push(info);
                                }
                            }
                        }
                        this.sendNt("on_update_goddess_event_info" /* ON_UPDATE_GODDESS_EVENT_INFO */);
                    }
                    if (msg.gift != undefined) {
                        if (!this._model.targetInfo) {
                            this._model.targetInfo = msg.gift;
                        }
                        else {
                            for (var k in msg.gift) {
                                this._model.targetInfo[k] = msg.gift[k];
                            }
                        }
                        this.sendNt("on_update_goddess_target_info" /* ON_UPDATE_GODDESS_TARGET_INFO */);
                    }
                    this.updateHint();
                };
                HuangguProxy.prototype.getInfoPos = function (index) {
                    if (!this._model.eventList || !this._model.eventList.length) {
                        return -1;
                    }
                    var len = this._model.eventList.length;
                    for (var i = 0; i < len; ++i) {
                        var info = this._model.eventList[i];
                        if (info.index == index) {
                            return i;
                        }
                    }
                    return -1;
                };
                HuangguProxy.prototype.s2c_nvshen_chat = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    this._model.chatList[msg.type] = msg.list || [];
                };
                Object.defineProperty(HuangguProxy.prototype, "lv", {
                    get: function () {
                        if (this._model.consecrateInfo) {
                            return this._model.consecrateInfo.level;
                        }
                        return 1; //默认返回1级
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuangguProxy.prototype, "exp", {
                    get: function () {
                        if (this._model.consecrateInfo) {
                            return this._model.consecrateInfo.exp;
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuangguProxy.prototype, "cnt", {
                    //计算供奉次数
                    get: function () {
                        // let cnt = 0;
                        // let lv = this.lv;
                        // while (lv > 0){
                        //     lv--;
                        //     let cfg: HuangguGongfengConfig = getConfigByNameId(ConfigName.HuangguGongfeng, lv);
                        //     if(!cfg){
                        //         break;
                        //     }
                        //     cnt += cfg.exp;
                        // }
                        // cnt += this.exp;
                        // return cnt;
                        if (this._model.consecrateInfo) {
                            return this._model.consecrateInfo.times;
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuangguProxy.prototype, "haoganLv", {
                    get: function () {
                        if (this._model.consecrateInfo) {
                            return this._model.consecrateInfo.haogan_level;
                        }
                        return 1; //默认返回1级
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuangguProxy.prototype, "haoganExp", {
                    get: function () {
                        if (this._model.consecrateInfo) {
                            return this._model.consecrateInfo.haogan_exp;
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.getSpecialAttrId = function () {
                    var cfg = game.GameConfig.getParamConfigById("huanggu_nvshen_qiyueshuxing");
                    var attrId = cfg && cfg.value;
                    return attrId;
                };
                Object.defineProperty(HuangguProxy.prototype, "isAct", {
                    // public get attr(): attributes {
                    //     // if(this._model.consecrateInfo){
                    //     //     return this._model.consecrateInfo.attr;
                    //     // }
                    //     let cfg: ParamConfig = GameConfig.getParamConfigById("huanggu_qiyue");
                    //     let attrId = cfg && cfg.value && cfg.value[2];//属性ID
                    //     let attr = RoleUtil.getAttr(attrId);
                    //     if (attr) {
                    //         return TextUtil.calcAttr(attr, this.lv);
                    //     }
                    //     return null;
                    // }
                    get: function () {
                        return this._model.consecrateInfo && this._model.consecrateInfo.is_act;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.getRewards = function () {
                    var _a;
                    if (!this._model.rewards) {
                        this._model.rewards = [];
                        var cfgList = game.getConfigListByName("huanggu_reward.json" /* HuangguReward */);
                        for (var _i = 0, cfgList_4 = cfgList; _i < cfgList_4.length; _i++) {
                            var cfgs = cfgList_4[_i];
                            for (var k in cfgs) {
                                var cfg = cfgs[k];
                                (_a = this._model.rewards).push.apply(_a, cfg.item);
                            }
                        }
                        // for (let cfg of cfgList) {
                        //     for (let item of cfg.item) {
                        //         this._model.rewards.push(item);
                        //     }
                        // }
                    }
                    return this._model.rewards;
                };
                HuangguProxy.prototype.getSummonRewards = function () {
                    if (!this._model.summonRewards) {
                        this._model.summonRewards = [];
                        var cfgList = game.getConfigListByName("huanggu_shuijing.json" /* HuangguShuijing */);
                        for (var _i = 0, cfgList_5 = cfgList; _i < cfgList_5.length; _i++) {
                            var cfg = cfgList_5[_i];
                            this._model.summonRewards = this._model.summonRewards.concat(cfg.item);
                        }
                    }
                    return this._model.summonRewards;
                };
                HuangguProxy.prototype.getSummonCost = function () {
                    var cfg = game.GameConfig.getParamConfigById("huanggu_shuijing");
                    return cfg && cfg.value;
                };
                HuangguProxy.prototype.isOpenSummon = function () {
                    var hasPrivilege = mod.RoleUtil.hasPrivilege("huanggu_shuijing" /* huanggu_shuijing */);
                    return hasPrivilege;
                };
                HuangguProxy.prototype.hasFreeDraw = function (index) {
                    return this._model.targetInfo && this._model.targetInfo.free_reward && this._model.targetInfo.free_reward.indexOf(index) > -1;
                };
                HuangguProxy.prototype.hasBuyDraw = function (index) {
                    return this._model.targetInfo && this._model.targetInfo.buy_reward && this._model.targetInfo.buy_reward.indexOf(index) > -1;
                };
                HuangguProxy.prototype.canDraw = function (cfg) {
                    return this.cnt > cfg.times;
                };
                Object.defineProperty(HuangguProxy.prototype, "chatLv", {
                    //当前对话的好感index
                    get: function () {
                        if (this._model.chatInfo) {
                            return this._model.chatInfo.level;
                        }
                        return 1; //默认返回1级
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.isChatFinish = function () {
                    return this._model.chatInfo && this._model.chatInfo.is_finish;
                };
                HuangguProxy.prototype.saveChat = function (type, chatList) {
                    if (!this._model.chatList[type]) {
                        this._model.chatList[type] = [];
                    }
                    this._model.chatList[type] = this._model.chatList[type].concat(chatList);
                };
                HuangguProxy.prototype.getSelfChat = function (cfg, type) {
                    if (type === void 0) { type = 1 /* Goddess */; }
                    var level = cfg["level"];
                    var index = cfg.index;
                    var descList = this.getDescList(cfg.desc);
                    var chatList = this._model.chatList[type];
                    for (var _i = 0, chatList_1 = chatList; _i < chatList_1.length; _i++) {
                        var i = chatList_1[_i];
                        if (i.level == level && i.index == index) {
                            return descList[i.pos];
                        }
                    }
                    return "";
                };
                HuangguProxy.prototype.getDescList = function (desc) {
                    return desc.split("#N");
                };
                Object.defineProperty(HuangguProxy.prototype, "chatMaxLv", {
                    //是否可以继续对话
                    get: function () {
                        if (!this._model.maxChatLv) {
                            var cfgList = game.getConfigListByName("huanggu_haogan_duihua.json" /* HuangguHaoganDuihua */);
                            var cfg = cfgList[cfgList.length - 1][1];
                            this._model.maxChatLv = cfg["level"];
                        }
                        return this._model.maxChatLv;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuangguProxy.prototype, "curChatType", {
                    get: function () {
                        return this._model.curChatType;
                    },
                    set: function (type) {
                        this._model.curChatType = type;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.getEventStage = function (index) {
                    var pos = this.getInfoPos(index);
                    if (pos >= 0) {
                        return this._model.eventList[pos].stage;
                    }
                    return 0;
                };
                HuangguProxy.prototype.getEventMaxStage = function (index) {
                    var maxStage = 0;
                    var cfgList = game.getConfigByNameId("huanggu_shijian.json" /* HuangguShijian */, index);
                    for (var k in cfgList) {
                        var cfg = cfgList[k];
                        if (cfg.stage > maxStage) {
                            maxStage = cfg.stage;
                        }
                    }
                    return maxStage;
                };
                HuangguProxy.prototype.isEventOpen = function (index) {
                    var lastIndex = index - 1;
                    if (lastIndex <= 0) {
                        return true;
                    }
                    return this.isEventFinish(lastIndex);
                };
                HuangguProxy.prototype.isEventFinish = function (index) {
                    var stage = this.getEventStage(index);
                    if (stage <= 0) {
                        return false;
                    }
                    var maxStage = this.getEventMaxStage(index);
                    return stage >= maxStage;
                };
                HuangguProxy.prototype.updateHint = function () {
                    this.updateGoddessHint();
                    this.updateTargetHint();
                };
                HuangguProxy.prototype.updateGoddessHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670233 /* Goddess */)) {
                        return; //功能未开启
                    }
                    var hint = this.checkGoddessHint();
                    var hintType = this._model.goddessHint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                HuangguProxy.prototype.checkGoddessHint = function () {
                    if (this.checkTargetHint()) {
                        return true;
                    }
                    if (this.checkConsecrateHint()) {
                        return true;
                    }
                    if (this.checkChatHint()) {
                        return true;
                    }
                    if (this.checkEventHint()) {
                        return true;
                    }
                    if (this.checkActHint()) {
                        return true;
                    }
                    if (this.checkSummonHint()) {
                        return true;
                    }
                    return false;
                };
                Object.defineProperty(HuangguProxy.prototype, "costIndex", {
                    get: function () {
                        if (!this._model.costIndex) {
                            var cfg = game.GameConfig.getParamConfigById("huanggu_gongfeng_xiaohao");
                            var cost = cfg.value;
                            this._model.costIndex = cost[0];
                        }
                        return this._model.costIndex;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.checkConsecrateHint = function () {
                    var cfg = game.GameConfig.getParamConfigById("huanggu_gongfeng_xiaohao");
                    var cost = cfg.value;
                    var costIndex = cost[0];
                    var costCnt = cost[1];
                    var curCnt = mod.BagUtil.getPropCntByIdx(costIndex);
                    return curCnt >= costCnt;
                };
                HuangguProxy.prototype.checkChatHint = function () {
                    var isFinish = this.isChatFinish();
                    if (isFinish) {
                        return true; //已完成，可以领取奖励
                    }
                    var haoganLv = this.haoganLv;
                    var chatLv = this.chatLv;
                    var maxChatLv = this.chatMaxLv;
                    return haoganLv >= chatLv && chatLv <= maxChatLv;
                };
                HuangguProxy.prototype.checkEventHint = function () {
                    var cfgList = game.getConfigListByName("huanggu_shijian_type.json" /* HuangguShijianType */);
                    for (var i = 0; i < cfgList.length; ++i) {
                        var cfg = cfgList[i];
                        if (this.checkEventPerHint(cfg.index)) {
                            return true;
                        }
                    }
                    return false;
                };
                HuangguProxy.prototype.checkEventPerHint = function (index) {
                    var isOpen = this.isEventOpen(index);
                    if (!isOpen) {
                        return false;
                    }
                    var isFinish = this.isEventFinish(index);
                    if (isFinish) {
                        return false;
                    }
                    var canChallenge = mod.ViewMgr.getIns().checkZhenrong();
                    if (!canChallenge) {
                        return false;
                    }
                    var stage = this.getEventStage(index);
                    var curStage = stage + 1;
                    var cfgList = game.getConfigByNameId("huanggu_shijian.json" /* HuangguShijian */, index);
                    var cfg = cfgList[curStage];
                    if (!cfg) {
                        return false;
                    }
                    return mod.ViewMgr.getIns().checkZhenrongGod(cfg.god);
                };
                Object.defineProperty(HuangguProxy.prototype, "actIndex", {
                    get: function () {
                        if (!this._model.actIndex) {
                            var cfg = game.GameConfig.getParamConfigById("huanggu_qiyue");
                            var index = cfg && cfg.value && cfg.value[0];
                            this._model.actIndex = index;
                        }
                        return this._model.actIndex;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.checkActHint = function () {
                    if (this.isAct) {
                        return false;
                    }
                    var cfg = game.GameConfig.getParamConfigById("huanggu_qiyue");
                    var index = cfg && cfg.value && cfg.value[0];
                    var costCnt = cfg && cfg.value && cfg.value[1];
                    return mod.BagUtil.checkPropCnt(index, costCnt);
                };
                Object.defineProperty(HuangguProxy.prototype, "summonIndex", {
                    get: function () {
                        if (!this._model.summonIndex) {
                            var cost = this.getSummonCost(); //荒古水晶
                            var costIndex = cost[0];
                            this._model.summonIndex = costIndex;
                        }
                        return this._model.summonIndex;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.checkSummonHint = function () {
                    var isOpen = this.isOpenSummon();
                    if (!isOpen) {
                        return false;
                    }
                    var cost = this.getSummonCost(); //荒古水晶
                    var costIndex = cost[0];
                    var costCnt = cost[1];
                    var curCnt = mod.BagUtil.getPropCntByIdx(costIndex);
                    return curCnt >= costCnt;
                };
                Object.defineProperty(HuangguProxy.prototype, "targetHint", {
                    get: function () {
                        return this._model.targetHint;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuangguProxy.prototype.updateTargetHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670233 /* Goddess */)) {
                        return; //功能未开启
                    }
                    var hint = this.checkTargetHint();
                    var hintType = this._model.targetHint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                HuangguProxy.prototype.checkTargetHint = function () {
                    var cfgList = game.getConfigListByName("huanggu_gift.json" /* HuangguGift */);
                    for (var _i = 0, cfgList_6 = cfgList; _i < cfgList_6.length; _i++) {
                        var cfg = cfgList_6[_i];
                        var needCnt = cfg.times;
                        if (this.cnt < needCnt) {
                            continue;
                        }
                        var index = cfg.index;
                        if (!this.hasFreeDraw(index)) {
                            return true;
                        }
                        var hasBuyDraw = this.hasBuyDraw(index);
                        if (hasBuyDraw) {
                            continue;
                        }
                        if (!cfg.gift_id) {
                            //消耗购买
                            var cost = cfg.cost[0];
                            if (mod.BagUtil.checkPropCnt(cost[0], cost[1])) {
                                return true;
                            }
                        }
                    }
                    return false;
                };
                HuangguProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("diamond" /* diamond */) >= 0) {
                        /**写死仙玉变更时候刷新，需要其他道具时再做支持*/
                        this.updateTargetHint();
                    }
                };
                HuangguProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(this.costIndex) > -1 || indexs.indexOf(this.actIndex) > -1 || indexs.indexOf(this.summonIndex) > -1) {
                        this.updateGoddessHint();
                    }
                };
                HuangguProxy.prototype.onRolePrivilegeUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("huanggu_shuijing" /* huanggu_shuijing */) >= 0) {
                        this.updateGoddessHint();
                    }
                };
                HuangguProxy.prototype.onUpdateZhenrongInfo = function (n) {
                    this.updateGoddessHint();
                };
                return HuangguProxy;
            }(game.ProxyBase));
            more.HuangguProxy = HuangguProxy;
            __reflect(HuangguProxy.prototype, "game.mod.more.HuangguProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiModel = /** @class */ (function () {
                function XiandiModel() {
                    this.open_day = 0;
                    /** ---------------------二期-------------------- */
                    /**消费数量 */
                    this.count = 0;
                    /**仙帝武器幻化 */
                    this.is_huanhua = false;
                    /**是否激活 */
                    this.is_activa = false;
                    /**试炼奖励 1.可领取2.已领取 */
                    this.reward_status = 0;
                    this.shops = new Map();
                }
                return XiandiModel;
            }());
            more.XiandiModel = XiandiModel;
            __reflect(XiandiModel.prototype, "game.mod.more.XiandiModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_xiandi_zhengba_oper = msg.c2s_xiandi_zhengba_oper;
            var c2s_tiandi_zhengba_ui_info = msg.c2s_tiandi_zhengba_ui_info;
            var s2c_xiandi_zhengba_rank = msg.s2c_xiandi_zhengba_rank;
            var s2c_xiandi_zhanshi_info = msg.s2c_xiandi_zhanshi_info;
            var s2c_tiandi_zhengba_ui_info = msg.s2c_tiandi_zhengba_ui_info;
            var s2c_xiandi_zhengba_challenge_info = msg.s2c_xiandi_zhengba_challenge_info;
            var c2s_tiandi_box_challenge = msg.c2s_tiandi_box_challenge;
            var c2s_tiandi_box_oper = msg.c2s_tiandi_box_oper;
            var s2c_tiandi_box_update = msg.s2c_tiandi_box_update;
            var TimeMgr = base.TimeMgr;
            var XiandiProxy = /** @class */ (function (_super) {
                __extends(XiandiProxy, _super);
                function XiandiProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.XiandiModel();
                    this.onProto(s2c_xiandi_zhengba_rank, this.s2c_xiandi_zhengba_rank, this);
                    this.onProto(s2c_xiandi_zhanshi_info, this.s2c_xiandi_zhanshi_info, this);
                    this.onProto(s2c_tiandi_zhengba_ui_info, this.s2c_tiandi_zhengba_ui_info, this);
                    this.onProto(s2c_xiandi_zhengba_challenge_info, this.s2c_xiandi_zhengba_challenge_info, this);
                    this.onProto(s2c_tiandi_box_update, this.s2c_tiandi_box_update, this);
                };
                /**------------------------协议------------------------- */
                XiandiProxy.prototype.c2s_xiandi_zhengba_oper = function (oper_type, params, role_id) {
                    var msg = new c2s_xiandi_zhengba_oper();
                    msg.oper_type = oper_type;
                    if (params) {
                        msg.params = params;
                    }
                    if (role_id) {
                        msg.role_id = role_id;
                    }
                    this.sendProto(msg);
                };
                XiandiProxy.prototype.c2s_tiandi_zhengba_ui_info = function () {
                    var msg = new c2s_tiandi_zhengba_ui_info();
                    this.sendProto(msg);
                };
                XiandiProxy.prototype.s2c_xiandi_zhengba_rank = function (n) {
                    var msg = n.body;
                    this._model.free_times = msg.free_times || 0;
                    if (msg.geren_ranks) {
                        this._model.geren_ranks = msg.geren_ranks;
                    }
                    if (msg.guild_ranks) {
                        this._model.guild_ranks = msg.guild_ranks;
                    }
                    if (msg.my_guild_rank) {
                        this._model.my_guild_rank = msg.my_guild_rank;
                    }
                    if (msg.my_rank) {
                        this._model.my_rank = msg.my_rank;
                    }
                    this.onUpdateActIcon();
                    this.onUpdateHint();
                    this.sendNt("on_update_xiandi_rank" /* ON_UPDATE_XIANDI_RANK */);
                };
                /** */
                XiandiProxy.prototype.s2c_xiandi_zhanshi_info = function (n) {
                    var msg = n.body;
                    if (msg.param == 1) {
                        this._model.click_count = msg.click_count || 0;
                        this._model.is_click = msg.is_click || false;
                        this._model.skill_lv = msg.skill_lv || 0;
                        this._model.tiandi_info = msg.tiandi_info || null;
                        this._model.tianwang_info = msg.tianwang_info || [];
                        this._model.hongyan_info = msg.hongyan_info || null;
                        this._model.xianhou_info = msg.xianhou_info || null;
                        this._model.is_gongfeng = msg.is_gongfeng || false;
                    }
                    else {
                        if (msg.click_count) {
                            this._model.click_count = msg.click_count;
                        }
                        if (msg.is_click) {
                            this._model.is_click = msg.is_click;
                        }
                        if (msg.skill_lv) {
                            this._model.skill_lv = msg.skill_lv;
                        }
                        if (msg.tiandi_info) {
                            this._model.tiandi_info = msg.tiandi_info;
                        }
                        if (msg.tianwang_info) {
                            this._model.tianwang_info = msg.tianwang_info;
                        }
                        if (msg.hongyan_info) {
                            this._model.hongyan_info = msg.hongyan_info;
                        }
                        if (msg.xianhou_info) {
                            this._model.xianhou_info = msg.xianhou_info;
                        }
                        this._model.is_gongfeng = msg.is_gongfeng || false;
                    }
                    this.onUpdateActIcon();
                    this.onUpdateHint();
                    this.sendNt("on_update_xiandi_info" /* ON_UPDATE_XIANDI_INFO */);
                };
                XiandiProxy.prototype.s2c_tiandi_zhengba_ui_info = function (n) {
                    var msg = n.body;
                    if (msg.flag) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "124" /* XiandiTips */, msg.flag);
                    }
                };
                XiandiProxy.prototype.s2c_xiandi_zhengba_challenge_info = function (n) {
                    var _this = this;
                    var msg = n.body;
                    if (msg.player_info) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "131" /* CommonMatch */, {
                            type: 1,
                            players: [{ name: game.RoleVo.ins.name, sex: game.RoleVo.ins.sex, showpower: game.RoleVo.ins.showpower }],
                            enemys: [msg.player_info],
                            handler: base.Handler.alloc(this, function () {
                                _this.c2s_xiandi_zhengba_oper(1);
                            })
                        });
                    }
                };
                Object.defineProperty(XiandiProxy.prototype, "is_tiandi", {
                    /**------------------------协议------------------------- */
                    /**------------------------数据------------------------- */
                    get: function () {
                        return this.tiandi_info && this.tiandi_info.role_id.eq(game.RoleVo.ins.role_id) || false;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "is_king", {
                    get: function () {
                        var king = this._model.tianwang_info && this._model.tianwang_info.find(function (v) { return v.role_id.eq(game.RoleVo.ins.role_id); });
                        return !!king;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "free_times", {
                    get: function () {
                        return this._model.free_times || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "is_gongfeng", {
                    get: function () {
                        return this._model.is_gongfeng || false;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "geren_ranks", {
                    get: function () {
                        return this._model.geren_ranks || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "guild_ranks", {
                    get: function () {
                        return this._model.guild_ranks || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "is_job", {
                    get: function () {
                        return this.is_tiandi || this.is_king;
                    },
                    enumerable: true,
                    configurable: true
                });
                XiandiProxy.prototype.checkJob = function (role_id) {
                    var king = this._model.tianwang_info && this._model.tianwang_info.find(function (v) { return v.role_id.eq(role_id); });
                    if (king) {
                        return true;
                    }
                    return this.tiandi_info && this.tiandi_info.role_id.eq(role_id);
                };
                XiandiProxy.prototype.getRanks = function (type) {
                    if (type == 2 /* Guild */) {
                        return this.guild_ranks;
                    }
                    else {
                        return this.geren_ranks;
                    }
                };
                XiandiProxy.prototype.getRankList = function (type) {
                    var ranks = this.getRanks(type);
                    var cfgArr = game.getConfigByNameId("xiandi_rank.json" /* XiandiRank */, type);
                    var list = [];
                    var _loop_2 = function (k) {
                        var cfg = cfgArr[k];
                        var start = cfg.rank_no[0];
                        var end = cfg.rank_no[1];
                        if (start == end) {
                            var item = ranks && ranks[start - 1];
                            var name = this_2.getRankItemName(item, type);
                            list.push({
                                rank: start,
                                name: name,
                                hurtStr: item && item.value.toString() || "",
                                reward: cfg.awards
                            });
                        }
                        else {
                            // let str: string = TextUtil.addLinkHtmlTxt(getLanById(LanDef.tongtiange_tips12), WhiteColor.DEFAULT, "");
                            var rank_2 = start > game.MAX_RANK_NUM ? start - 1 + "+" : start + "-" + end;
                            list.push({
                                rank: rank_2,
                                name: "",
                                reward: cfg.awards,
                                lookHandler: base.Handler.alloc(this_2, function () {
                                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "129" /* XiandiSection */, { rank: rank_2, type: type });
                                })
                            });
                        }
                    };
                    var this_2 = this;
                    for (var k in cfgArr) {
                        _loop_2(k);
                    }
                    return list;
                };
                XiandiProxy.prototype.getRankItemName = function (item, type) {
                    if (!item) {
                        return game.getLanById("tishi_2" /* tishi_2 */);
                    }
                    if (type == 2 /* Guild */) {
                        return "\u4ED9\u5B97:" + item.guild_name + "\n\u5B97\u4E3B:" + item.name;
                    }
                    else {
                        return item.name;
                    }
                };
                XiandiProxy.prototype.getRankInfo = function (type) {
                    return type == 2 /* Guild */ ? this._model.my_guild_rank : this._model.my_rank;
                };
                XiandiProxy.prototype.getRankStr = function (type) {
                    var info = this.getRankInfo(type);
                    // let str: string = "";
                    // if (info && info.rank_num) {
                    //     str = TextUtil.addColor(`${info.rank_num}`, WhiteColor.GREEN);
                    // } else {
                    //     str = getLanById(LanDef.compete_mars_16);
                    // }
                    // return StringUtil.substitute(lan, [str]);
                    if (info && info.rank_num) {
                        var str = game.TextUtil.addColor("" + info.rank_num, 2330156 /* GREEN */);
                        var lan = type == 1 /* Person */ ? game.getLanById("compete_mars_4" /* compete_mars_4 */) : game.getLanById("xianzong_tips8" /* xianzong_tips8 */);
                        return game.StringUtil.substitute(lan, [str]);
                    }
                    else {
                        var param = game.GameConfig.getParamConfigById("xiandi_rank");
                        var count = 0;
                        var centent = "";
                        if (type == 1 /* Person */) {
                            count = param.value[1];
                            centent = game.getLanById("xiandi_tips15" /* xiandi_tips15 */);
                        }
                        else {
                            count = param.value[0];
                            centent = game.getLanById("xiandi_tips16" /* xiandi_tips16 */);
                        }
                        return game.StringUtil.substitute(centent, [count]);
                    }
                };
                XiandiProxy.prototype.getRankCountStr = function (type) {
                    var info = this.getRankInfo(type);
                    var str = game.TextUtil.addColor("" + (info && info.value || 0), 2330156 /* GREEN */);
                    var centent = "";
                    if (type == 1 /* Person */) {
                        centent = game.getLanById("xiandi_tips17" /* xiandi_tips17 */);
                    }
                    else {
                        centent = game.getLanById("xiandi_tips18" /* xiandi_tips18 */);
                    }
                    return game.StringUtil.substitute(centent, [str]);
                };
                /**获取区间排行榜列表 参数为排名 需要-1转换索引 */
                XiandiProxy.prototype.getRankSection = function (rank, type) {
                    var strArr = rank.split("-");
                    var start = +strArr[0];
                    var end = +strArr[1];
                    var ranks = this.getRanks(type);
                    var list = [];
                    for (var i = start - 1; i < end; i++) {
                        var item = ranks && ranks[i];
                        var name = this.getRankItemName(item, type);
                        if (item) {
                            list.push({ rank: item.rank_num, name: name, value: +item.value });
                        }
                        else {
                            list.push({ rank: i + 1, name: name, value: 0 });
                        }
                    }
                    return list;
                };
                XiandiProxy.prototype.getKingInfo = function (index) {
                    if (!this._model.tianwang_info) {
                        return null;
                    }
                    return this._model.tianwang_info.find(function (v) {
                        return v.index == index;
                    });
                };
                Object.defineProperty(XiandiProxy.prototype, "tiandi_info", {
                    get: function () {
                        return this._model.tiandi_info || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "hongyan_info", {
                    get: function () {
                        return this._model.hongyan_info || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xianhou_info", {
                    get: function () {
                        return this._model.xianhou_info || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "click_count", {
                    get: function () {
                        return this._model.click_count || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "is_click", {
                    get: function () {
                        return this._model.is_click || false;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "skill_lv", {
                    get: function () {
                        return this._model.skill_lv || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**周日开启 */
                XiandiProxy.prototype.checkOpen = function () {
                    // if (DEBUG) {
                    //     return true;
                    // }
                    var now_day = game.TimeUtil.formatWeekday(TimeMgr.time.serverTimeSecond * 1000);
                    return !now_day && mod.RoleUtil.getServerDay() >= this.xiandi_open;
                };
                Object.defineProperty(XiandiProxy.prototype, "king_index", {
                    get: function () {
                        return this._model.king_index || 0;
                    },
                    set: function (v) {
                        this._model.king_index = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "tiandi_zhengba_tiaozhan_xiaohao", {
                    /**------------------------数据------------------------- */
                    /**-------------------------参数表配置------------------------ */
                    get: function () {
                        if (!this._model.tiandi_zhengba_tiaozhan_xiaohao) {
                            var param = game.GameConfig.getParamConfigById("tiandi_zhengba_tiaozhan_xiaohao");
                            this._model.tiandi_zhengba_tiaozhan_xiaohao = param.value;
                        }
                        return this._model.tiandi_zhengba_tiaozhan_xiaohao;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "tiandi_zhengba_tiaozhan_duowei", {
                    get: function () {
                        if (!this._model.tiandi_zhengba_tiaozhan_duowei) {
                            var param = game.GameConfig.getParamConfigById("tiandi_zhengba_tiaozhan_duowei");
                            this._model.tiandi_zhengba_tiaozhan_duowei = param.value;
                        }
                        return this._model.tiandi_zhengba_tiaozhan_duowei;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "tiandi_zhengba_tiaozhan_mianfei", {
                    get: function () {
                        if (!this._model.tiandi_zhengba_tiaozhan_mianfei) {
                            var param = game.GameConfig.getParamConfigById("tiandi_zhengba_tiaozhan_mianfei");
                            this._model.tiandi_zhengba_tiaozhan_mianfei = param.value;
                        }
                        return this._model.tiandi_zhengba_tiaozhan_mianfei;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xiandi_rank", {
                    get: function () {
                        if (!this._model.xiandi_rank) {
                            var param = game.GameConfig.getParamConfigById("xiandi_rank");
                            this._model.xiandi_rank = param.value;
                        }
                        return this._model.xiandi_rank;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xiandi_jiangli", {
                    get: function () {
                        if (!this._model.xiandi_jiangli) {
                            var param = game.GameConfig.getParamConfigById("xiandi_jiangli");
                            this._model.xiandi_jiangli = [];
                            for (var _i = 0, _a = param.value; _i < _a.length; _i++) {
                                var idx = _a[_i];
                                this._model.xiandi_jiangli.push([idx]);
                            }
                        }
                        return this._model.xiandi_jiangli;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xiandi_libao", {
                    get: function () {
                        if (!this._model.xiandi_libao) {
                            var param = game.GameConfig.getParamConfigById("xiandi_libao");
                            this._model.xiandi_libao = param.value;
                        }
                        return this._model.xiandi_libao;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "huanggu_nvshen_buff", {
                    get: function () {
                        if (!this._model.huanggu_nvshen_buff) {
                            var param = game.GameConfig.getParamConfigById("huanggu_nvshen_buff");
                            this._model.huanggu_nvshen_buff = param.value;
                        }
                        return this._model.huanggu_nvshen_buff;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "tiandi_zhengba_gongfeng", {
                    get: function () {
                        if (!this._model.tiandi_zhengba_gongfeng) {
                            var param = game.GameConfig.getParamConfigById("tiandi_zhengba_gongfeng");
                            this._model.tiandi_zhengba_gongfeng = param.value;
                        }
                        return this._model.tiandi_zhengba_gongfeng;
                    },
                    enumerable: true,
                    configurable: true
                });
                XiandiProxy.prototype.getBuff = function () {
                    if (!this.skill_lv) {
                        return this.huanggu_nvshen_buff[0][1];
                    }
                    for (var _i = 0, _a = this.huanggu_nvshen_buff; _i < _a.length; _i++) {
                        var info = _a[_i];
                        if (info[0] == this.skill_lv) {
                            return info[1];
                        }
                    }
                    return this.huanggu_nvshen_buff[this.huanggu_nvshen_buff.length - 1][1];
                };
                Object.defineProperty(XiandiProxy.prototype, "xiandi_open", {
                    get: function () {
                        if (!this._model.xiandi_open) {
                            var param = game.GameConfig.getParamConfigById("xiandi_open");
                            this._model.xiandi_open = param.value;
                        }
                        return this._model.xiandi_open;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**-------------------------参数表配置------------------------ */
                /**------------------------红点-------------------------*/
                XiandiProxy.prototype.onUpdateHint = function () {
                    var roots = ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */];
                    var isOpen = this.checkOpen();
                    if (isOpen) {
                        mod.HintMgr.setHint(this.free_times > 0, roots);
                        return;
                    }
                    if (!this.tiandi_info) {
                        mod.HintMgr.setHint(false, roots);
                        return;
                    }
                    if (this.is_job) {
                        if (!this.is_gongfeng) {
                            mod.HintMgr.setHint(true, roots);
                            return;
                        }
                    }
                    if (!this.is_click) {
                        mod.HintMgr.setHint(true, roots);
                        return;
                    }
                    mod.HintMgr.setHint(false, roots);
                };
                XiandiProxy.prototype.onServerDayUpdate = function () {
                    this.onUpdateActIcon();
                };
                XiandiProxy.prototype.onOpenFuncUpdate = function (n) {
                    var idxs = n.body;
                    if (idxs.indexOf(1041670242 /* Xiandi */) > -1) {
                        this.onUpdateActIcon();
                    }
                };
                XiandiProxy.prototype.onUpdateActIcon = function () {
                    var isOpen = this.checkOpen();
                    if (!isOpen) {
                        var server = mod.RoleUtil.getServerDay();
                        var param = game.GameConfig.getParamConfigById("xiandi_first");
                        isOpen = param.value == server;
                    }
                    mod.BtnIconMgr.insTop().updateOpen(1041670242 /* Xiandi */, isOpen);
                };
                /**------------------------红点-------------------------*/
                /**弑帝夺位 */
                XiandiProxy.prototype.onCheckJockey = function () {
                    var _this = this;
                    var prop = this.tiandi_zhengba_tiaozhan_duowei;
                    var cost = prop[1];
                    var count = mod.BagUtil.getPropCntByIdx(prop[0]);
                    if (count < cost) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "130" /* XiandiGift */, this.xiandi_libao);
                        return;
                    }
                    var content = game.StringUtil.substitute(game.getLanById("xiandi_tips13" /* xiandi_tips13 */), [game.TextUtil.addColor("" + count, 8585074 /* GREEN */)]);
                    mod.ViewMgr.getIns().showConfirm(content, base.Handler.alloc(this, function () {
                        _this.c2s_xiandi_zhengba_oper(3);
                    }));
                };
                /**-----------------------------二期功能-----------------------------*/
                XiandiProxy.prototype.s2c_tiandi_box_update = function (n) {
                    var msg = n.body;
                    this._model.count = msg.count || 0;
                    this._model.reward_status = msg.reward_status || 0;
                    this._model.is_huanhua = msg.is_huanhua || false;
                    this._model.is_activa = msg.is_activa || false;
                    this.onUpdateHintByReward();
                    this.sendNt("on_update_xiandi_treasure" /* ON_UPDATE_XIANDI_TREASURE */);
                };
                /**1.幻化2.激活仙器3.奖励领取 */
                XiandiProxy.prototype.c2s_tiandi_box_oper = function (oper) {
                    var msg = new c2s_tiandi_box_oper();
                    msg.oper = oper;
                    this.sendProto(msg);
                };
                XiandiProxy.prototype.c2s_tiandi_box_challenge = function () {
                    var msg = new c2s_tiandi_box_challenge();
                    this.sendProto(msg);
                };
                Object.defineProperty(XiandiProxy.prototype, "count", {
                    get: function () {
                        return this._model.count;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "is_huanhua", {
                    get: function () {
                        return this._model.is_huanhua;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "is_activa", {
                    get: function () {
                        return this._model.is_activa;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "reward_status", {
                    get: function () {
                        return this._model.reward_status;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "tiandi_box_have", {
                    get: function () {
                        if (!this._model.tiandi_box_have) {
                            var param = game.GameConfig.getParamConfigById("tiandi_box_have");
                            this._model.tiandi_box_have = param.value;
                        }
                        return this._model.tiandi_box_have;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xianqi_fuben_reward", {
                    get: function () {
                        if (!this._model.xianqi_fuben_reward) {
                            var param = game.GameConfig.getParamConfigById("xianqi_fuben_reward");
                            this._model.xianqi_fuben_reward = param.value;
                        }
                        return this._model.xianqi_fuben_reward;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xianqi_waixian", {
                    // public get xianqi_buff_property(): number[] {
                    //     if (!this._model.xianqi_buff_property) {
                    //         let param: ParamConfig = GameConfig.getParamConfigById("xianqi_buff_property");
                    //         this._model.xianqi_buff_property = param.value;
                    //     }
                    //     return this._model.xianqi_buff_property;
                    // }
                    get: function () {
                        if (!this._model.xianqi_waixian) {
                            var param = game.GameConfig.getParamConfigById("xianqi_waixian");
                            this._model.xianqi_waixian = param.value;
                        }
                        return this._model.xianqi_waixian;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "tiandi_box_iteam", {
                    get: function () {
                        if (!this._model.tiandi_box_iteam) {
                            var param = game.GameConfig.getParamConfigById("tiandi_box_iteam");
                            this._model.tiandi_box_iteam = param.value;
                        }
                        return this._model.tiandi_box_iteam;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "xianqi_stage", {
                    // public get xianqi_stage_list(): number[][] {
                    //     if (!this._model.xianqi_stage_list) {
                    //         let param: ParamConfig = GameConfig.getParamConfigById("xianqi_stage_list");
                    //         this._model.xianqi_stage_list = param.value;
                    //     }
                    //     return this._model.xianqi_stage_list;
                    // }
                    // public get xianqi_buff_attr(): number[][] {
                    //     if (!this._model.xianqi_buff_attr) {
                    //         let param: ParamConfig = GameConfig.getParamConfigById("xianqi_buff_attr");
                    //         this._model.xianqi_buff_attr = param.value;
                    //     }
                    //     return this._model.xianqi_buff_attr;
                    // }
                    get: function () {
                        var cfgArr = game.getConfigListByName("xiandi_xianqi.json" /* TiandiXianqi */);
                        var stage = 1;
                        var open_day = mod.RoleUtil.getServerDay();
                        for (var _i = 0, cfgArr_5 = cfgArr; _i < cfgArr_5.length; _i++) {
                            var cfg = cfgArr_5[_i];
                            if (cfg.open_day > open_day) {
                                break;
                            }
                            stage = cfg.index;
                        }
                        return stage;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "shops", {
                    get: function () {
                        if (!this._model.shops) {
                            this._model.shops = new Map();
                        }
                        if (!this._model.shops.size) {
                            var cfgArr = game.getConfigListByName("shop.json" /* Store */);
                            for (var _i = 0, cfgArr_6 = cfgArr; _i < cfgArr_6.length; _i++) {
                                var cfg = cfgArr_6[_i];
                                if (cfg.type != 105 /* Xiandi */) {
                                    continue;
                                }
                                var list = [];
                                if (this._model.shops.has(cfg.unlock)) {
                                    list = this._model.shops.get(cfg.unlock);
                                }
                                list.push(cfg);
                                this._model.shops.set(cfg.unlock, list);
                            }
                        }
                        return this._model.shops;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XiandiProxy.prototype, "list", {
                    get: function () {
                        var open = mod.RoleUtil.getServerDay();
                        var day = 0;
                        var keys = Array.from(this.shops.keys());
                        for (var _i = 0, keys_5 = keys; _i < keys_5.length; _i++) {
                            var key = keys_5[_i];
                            if (+key > open) {
                                break;
                            }
                            day = +key;
                        }
                        return this.shops.get(day);
                    },
                    enumerable: true,
                    configurable: true
                });
                XiandiProxy.prototype.onUpdateHintByReward = function () {
                    mod.HintMgr.setHint(this.reward_status == 1, ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */, "181" /* XiandiWeapon */]);
                };
                return XiandiProxy;
            }(game.ProxyBase));
            more.XiandiProxy = XiandiProxy;
            __reflect(XiandiProxy.prototype, "game.mod.more.XiandiProxy", ["game.mod.IXiandiProxy", "base.IProxy"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouModel = /** @class */ (function () {
                function XianjieLuandouModel() {
                    /** boss血量信息 */
                    this.boss_list = {};
                    //技能使用cd
                    this.skill_cds = {};
                    //战场统计选中的类型，默认个人
                    this.sel_scene_rank = 1 /* Person */;
                    //怪物配置列表，灵石类型1在中间（2,3,1,4,5）
                    this.bossCfgList = null;
                    //怪物id列表
                    this.bossIdxList = null;
                    //红点路径
                    this.hintPath = ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "170" /* XianjieLuandouMain */, "01" /* Btn1 */];
                }
                return XianjieLuandouModel;
            }());
            more.XianjieLuandouModel = XianjieLuandouModel;
            __reflect(XianjieLuandouModel.prototype, "game.mod.more.XianjieLuandouModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var s2c_xianjie_pvp_base_info = msg.s2c_xianjie_pvp_base_info;
            var s2c_xianjie_pvp_rank_info = msg.s2c_xianjie_pvp_rank_info;
            var s2c_xianjie_pvp_scene_rank_info = msg.s2c_xianjie_pvp_scene_rank_info;
            var s2c_xianjie_pvp_score_reward = msg.s2c_xianjie_pvp_score_reward;
            var s2c_xianjie_pvp_boss_info = msg.s2c_xianjie_pvp_boss_info;
            var Handler = base.Handler;
            var c2s_xianjie_pvp_oper = msg.c2s_xianjie_pvp_oper;
            var c2s_xianjie_pvp_scene_use_buff = msg.c2s_xianjie_pvp_scene_use_buff;
            var s2c_xianjie_pvp_battle_report = msg.s2c_xianjie_pvp_battle_report;
            var facade = base.facade;
            var s2c_xianjie_pvp_kill_boss_info = msg.s2c_xianjie_pvp_kill_boss_info;
            var s2c_xianjie_pvp_scene_info = msg.s2c_xianjie_pvp_scene_info;
            var s2c_xianjie_luandou_scene_buff_index_cd = msg.s2c_xianjie_luandou_scene_buff_index_cd;
            var TimeMgr = base.TimeMgr;
            /**
             * @description 仙界乱斗
             */
            var XianjieLuandouProxy = /** @class */ (function (_super) {
                __extends(XianjieLuandouProxy, _super);
                function XianjieLuandouProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianjieLuandouProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.XianjieLuandouModel();
                    this.onProto(s2c_xianjie_pvp_base_info, this.s2c_xianjie_pvp_base_info, this);
                    this.onProto(s2c_xianjie_pvp_rank_info, this.s2c_xianjie_pvp_rank_info, this);
                    this.onProto(s2c_xianjie_pvp_scene_rank_info, this.s2c_xianjie_pvp_scene_rank_info, this);
                    this.onProto(s2c_xianjie_pvp_score_reward, this.s2c_xianjie_pvp_score_reward, this);
                    this.onProto(s2c_xianjie_pvp_boss_info, this.s2c_xianjie_pvp_boss_info, this);
                    this.onProto(s2c_xianjie_pvp_battle_report, this.s2c_xianjie_pvp_battle_report, this);
                    this.onProto(s2c_xianjie_pvp_kill_boss_info, this.s2c_xianjie_pvp_kill_boss_info, this);
                    this.onProto(s2c_xianjie_pvp_scene_info, this.s2c_xianjie_pvp_scene_info, this);
                    this.onProto(s2c_xianjie_luandou_scene_buff_index_cd, this.s2c_xianjie_luandou_scene_buff_index_cd, this);
                };
                /**
                 * 1进入副本(s2c_xianjie_pvp_base_info)
                 * 2查看活动排名(s2c_xianjie_pvp_rank_info)
                 * 3获取战场积分排名(s2c_xianjie_pvp_scene_rank_info)
                 * 4领取战场积分奖励(s2c_xianjie_pvp_score_reward)
                 * 5发送宗门邀请
                 * 6请求战报
                 */
                XianjieLuandouProxy.prototype.c2s_xianjie_pvp_oper = function (type, param) {
                    var msg = new c2s_xianjie_pvp_oper();
                    msg.type = type;
                    if (param) {
                        msg.param = param;
                    }
                    this.sendProto(msg);
                };
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_base_info = function (n) {
                    var msg = n.body;
                    if (msg.state != null) {
                        this._model.state = msg.state;
                    }
                    if (msg.cd_sec != null) {
                        this._model.cd_sec = msg.cd_sec;
                    }
                    if (this.is_first_open != null) {
                        this._model.is_first_open = msg.is_first_open;
                    }
                    if (msg.state != null && msg.state == 1) {
                        mod.PropTipsMgr.getIns().showBoss(4 /* XianjieLuandou */, this.end_time);
                    }
                    this.updateHint();
                    this.sendNt("on_xianjie_pvp_base_info_update" /* ON_XIANJIE_PVP_BASE_INFO_UPDATE */);
                };
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_rank_info = function (n) {
                    var msg = n.body;
                    // msg.type
                    if (msg.rank != null) {
                        this._model.rank = msg.rank;
                    }
                    if (msg.my_rank != null) {
                        this._model.my_rank = msg.my_rank;
                    }
                    this.sendNt("on_xianjie_pvp_rank_info_update" /* ON_XIANJIE_PVP_RANK_INFO_UPDATE */);
                };
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_scene_rank_info = function (n) {
                    var msg = n.body;
                    // msg.type
                    if (msg.rank != null) {
                        this._model.scene_rank = msg.rank;
                    }
                    if (msg.my_rank != null) {
                        this._model.scene_my_rank = msg.my_rank;
                    }
                    this.sendNt("on_xianjie_pvp_scene_rank_info_update" /* ON_XIANJIE_PVP_SCENE_RANK_INFO_UPDATE */);
                };
                //已领取的积分奖励列表
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_score_reward = function (n) {
                    var msg = n.body;
                    if (msg.index != null) {
                        this._model.index = msg.index;
                    }
                    this.sendNt("on_xianjie_pvp_score_reward_update" /* ON_XIANJIE_PVP_SCORE_REWARD_UPDATE */);
                };
                XianjieLuandouProxy.prototype.c2s_xianjie_pvp_scene_use_buff = function (index) {
                    var msg = new c2s_xianjie_pvp_scene_use_buff();
                    msg.index = index;
                    this.sendProto(msg);
                };
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_boss_info = function (n) {
                    var msg = n.body;
                    if (msg.boss_list != null) {
                        for (var _i = 0, _a = msg.boss_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.boss_list[item.index.toNumber()] = item;
                        }
                    }
                    if (msg.is_update == 1) {
                        this._model.owner_info = msg.owner_info || null;
                    }
                    this.sendNt("on_xianjie_pvp_boss_info_update" /* ON_XIANJIE_PVP_BOSS_INFO_UPDATE */);
                };
                /// boss击杀归属战报
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_battle_report = function (n) {
                    var msg = n.body;
                    if (msg.report_list != null) {
                        this._model.report_list = msg.report_list;
                    }
                    else {
                        this._model.report_list = [];
                    }
                    this.sendNt("on_xianjie_pvp_battle_report_update" /* ON_XIANJIE_PVP_BATTLE_REPORT_UPDATE */);
                };
                /// 击破灵石提示
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_kill_boss_info = function (n) {
                    var msg = n.body;
                    if (msg != null) {
                        this._model.kill_boss_info = msg;
                    }
                    this.sendNt("on_xianjie_pvp_kill_boss_info_update" /* ON_XIANJIE_PVP_KILL_BOSS_INFO_UPDATE */);
                };
                XianjieLuandouProxy.prototype.s2c_xianjie_pvp_scene_info = function (n) {
                    var msg = n.body;
                    if (msg != null) {
                        this._model.pvp_scene_info = msg;
                    }
                    this.sendNt("on_xianjie_pvp_scene_info_update" /* ON_XIANJIE_PVP_SCENE_INFO_UPDATE */);
                };
                XianjieLuandouProxy.prototype.s2c_xianjie_luandou_scene_buff_index_cd = function (n) {
                    var msg = n.body;
                    if (msg.idx_cds != null) {
                        for (var _i = 0, _a = msg.idx_cds; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.skill_cds[item.index] = item;
                        }
                    }
                    this.sendNt("on_xianjie_scene_skill_cd_update" /* ON_XIANJIE_SCENE_SKILL_CD_UPDATE */);
                };
                Object.defineProperty(XianjieLuandouProxy.prototype, "is_first_open", {
                    /**=========================协议end=========================*/
                    //是否首次开启
                    get: function () {
                        return this._model.is_first_open == 1;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "end_time", {
                    //结束时间
                    get: function () {
                        var date = game.TimeUtil.getServerTime();
                        var cfg = this.dailyLimitTimeCfg;
                        if (this.isOpen && cfg) {
                            var curHour = date.getHours(); //当前时
                            var curMin = date.getMinutes(); //当前分
                            //本次结束时间戳
                            var actTime = cfg.act_time;
                            var endTime = actTime[1]; //此轮的结束时间点
                            if (actTime.length > 2) {
                                //多个开启时间段
                                for (var i = 0; i < actTime.length; i += 2) {
                                    var start = actTime[i];
                                    var end = actTime[i + 1];
                                    if (start[0] <= curHour && start[1] <= curMin && curHour <= end[0] && curMin <= end[1]) {
                                        endTime = actTime[1];
                                        break;
                                    }
                                }
                            }
                            date.setHours(endTime[0], endTime[1], 0, 0);
                            return date.getTime() / 1000;
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "dailyLimitTimeCfg", {
                    //日常玩法配置
                    get: function () {
                        return game.getConfigByNameId("daily_limit_time.json" /* DailyLimitTime */, 5 /* XianjieLuandou */);
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "show_rewards", {
                    //奖励
                    get: function () {
                        var cfg = this.dailyLimitTimeCfg;
                        return cfg && cfg.reward || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "isOpen", {
                    //是否开启，根据服务端判断 todo
                    get: function () {
                        return this._model.state == 1;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "show_time_sec", {
                    //展示时间
                    get: function () {
                        if (this.isOpen) {
                            //本次结束时间戳
                            return this.end_time;
                        }
                        if (!this.dailyLimitTimeCfg) {
                            return 0;
                        }
                        var dailyLimitProxy = facade.retMod("48" /* Daily */).retProxy(195 /* DailyLimitTime */);
                        return dailyLimitProxy && dailyLimitProxy.getNextStartTime(5 /* XianjieLuandou */) || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "skill_list", {
                    //技能列表 [[buff序列_buffid_冷却时间秒_消耗材料_数量]]
                    get: function () {
                        var cfg = game.GameConfig.getParamConfigById('xianjieluandou_skill');
                        return cfg.value || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "revive_data", {
                    //复活技能
                    get: function () {
                        var list = this.skill_list;
                        return list && list[3] || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "rank", {
                    get: function () {
                        return this._model.rank;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "my_rank", {
                    get: function () {
                        return this._model.my_rank;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "my_score", {
                    //我的积分
                    get: function () {
                        var info = this._model.pvp_scene_info;
                        return info && info.my_score || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "score_index", {
                    //已领取的奖励id
                    get: function () {
                        return this._model.index || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "report_list", {
                    //战报
                    get: function () {
                        return this._model.report_list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "scene_rank", {
                    //战场统计
                    get: function () {
                        return this._model.scene_rank || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "scene_my_rank", {
                    //战场统计，我的
                    get: function () {
                        return this._model.scene_my_rank || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "sel_scene_rank", {
                    get: function () {
                        return this._model.sel_scene_rank;
                    },
                    //战场统计选中的类型
                    set: function (type) {
                        this._model.sel_scene_rank = type;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "bossCfgList", {
                    //怪物配置列表，灵石类型1在中间（2,3,1,4,5）
                    get: function () {
                        if (this._model.bossCfgList && this._model.bossCfgList.length > 0) {
                            return this._model.bossCfgList;
                        }
                        var cfgs = game.getConfigListByName("xianjiebrawl_base.json" /* XianjieLuandouBase */);
                        var list = [];
                        for (var _i = 0, cfgs_2 = cfgs; _i < cfgs_2.length; _i++) {
                            var cfg = cfgs_2[_i];
                            var type = cfg.lingshi_type;
                            list[type - 1] = cfg;
                        }
                        var rst = [].concat(list.slice(1, 3), list[0], list.slice(3));
                        return this._model.bossCfgList = rst;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "bossIdxList", {
                    //怪物id列表
                    get: function () {
                        if (this._model.bossIdxList && this._model.bossIdxList.length > 0) {
                            return this._model.bossIdxList;
                        }
                        var cfgs = this.bossCfgList;
                        var list = [];
                        for (var _i = 0, cfgs_3 = cfgs; _i < cfgs_3.length; _i++) {
                            var cfg = cfgs_3[_i];
                            list.push(cfg.monster_index[0]);
                        }
                        return this._model.bossIdxList = list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "boss_list", {
                    //boss信息
                    get: function () {
                        return this._model.boss_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "boss_all_died", {
                    //boss是否全部死亡
                    get: function () {
                        var list = this.boss_list;
                        if (!list) {
                            return true;
                        }
                        for (var key in list) {
                            var item = list[key];
                            if (item && item.percent > 0) {
                                return false;
                            }
                        }
                        return true;
                    },
                    enumerable: true,
                    configurable: true
                });
                //怪物血量
                XianjieLuandouProxy.prototype.getBossHp = function (idx) {
                    var list = this.boss_list;
                    var info = list[idx];
                    return info && info.percent || 0;
                };
                //获取boss信息
                XianjieLuandouProxy.prototype.getBossInfo = function (idx) {
                    var list = this.boss_list;
                    return list && list[idx] || null;
                };
                Object.defineProperty(XianjieLuandouProxy.prototype, "owner_info", {
                    //中央灵石boss归属者信息
                    get: function () {
                        return this._model.owner_info;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "boss_kill_count", {
                    //夺得的灵石数
                    get: function () {
                        var info = this._model.pvp_scene_info;
                        return info && info.boss_kill_count || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "guild_count", {
                    //玩家的宗门参与人数
                    get: function () {
                        var info = this._model.pvp_scene_info;
                        return info && info.guild_count || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianjieLuandouProxy.prototype, "kill_boss_info", {
                    //击破灵石提示
                    get: function () {
                        return this._model.kill_boss_info;
                    },
                    set: function (data) {
                        this._model.kill_boss_info = data;
                    },
                    enumerable: true,
                    configurable: true
                });
                //技能cd时间
                XianjieLuandouProxy.prototype.getSkillCd = function (index) {
                    var info = this._model.skill_cds[index];
                    var endTime = info && info.cd_time ? info.cd_time.toNumber() : 0;
                    if (endTime <= TimeMgr.time.serverTimeSecond) {
                        return 0;
                    }
                    return endTime;
                };
                //有技能cd倒计时
                XianjieLuandouProxy.prototype.haveSkillCd = function () {
                    var info = this._model.skill_cds;
                    return Object.keys(info).length > 0;
                };
                //仙界乱斗积分
                XianjieLuandouProxy.prototype.getScoreCfgList = function () {
                    return game.getConfigListByName("xianjiebrawl_score.json" /* XianjieLuandouScore */);
                };
                //积分奖励红点
                XianjieLuandouProxy.prototype.getScoreRewardHint = function () {
                    var cfgList = this.getScoreCfgList();
                    var indexs = this.score_index;
                    var myScore = this.my_score;
                    for (var _i = 0, cfgList_7 = cfgList; _i < cfgList_7.length; _i++) {
                        var cfg = cfgList_7[_i];
                        if (indexs.indexOf(cfg.index) > -1) {
                            continue;
                        }
                        if (myScore >= cfg.scroe) {
                            return true;
                        }
                    }
                    return false;
                };
                XianjieLuandouProxy.prototype.getRankInfo = function (rankNo) {
                    var ranks = this.rank;
                    return ranks && ranks[rankNo - 1] || null;
                };
                //排行榜数据
                XianjieLuandouProxy.prototype.getRankRewardData = function () {
                    var cfgs = game.getConfigListByName("xianjiebrawl_rank.json" /* XianjieLuandouRank */);
                    var list = [];
                    var _loop_3 = function (i) {
                        var cfg = cfgs[i];
                        var section = cfg.rank_section;
                        var rankStr = void 0;
                        var name = '';
                        var hurtStr = '';
                        var lookHandler = void 0;
                        if (section[0] == section[1]) {
                            var mate = this_3.getRankInfo(i + 1);
                            rankStr = section[0] + '';
                            if (mate) {
                                name = mate && mate.name;
                                hurtStr = mate.value && mate.value.toString();
                            }
                            else {
                                name = game.getLanById("tishi_2" /* tishi_2 */);
                            }
                        }
                        else if (i == cfgs.length - 1) {
                            rankStr = (section[0] - 1) + '+';
                        }
                        else {
                            rankStr = section[0] + "-" + section[1];
                            lookHandler = Handler.alloc(this_3, function () {
                                mod.ViewMgr.getIns().showSecondPop("61" /* More */, "173" /* XianjieLuandouRankSection */, section);
                            });
                        }
                        var data = {
                            rank: rankStr,
                            name: name,
                            hurtStr: hurtStr,
                            reward: cfg.reward,
                            lookHandler: lookHandler
                        };
                        list.push(data);
                    };
                    var this_3 = this;
                    for (var i = 0; i < cfgs.length; i++) {
                        _loop_3(i);
                    }
                    return list;
                };
                XianjieLuandouProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670268 /* XianjieLuandou */)) {
                        return;
                    }
                    var hint = this.isOpen;
                    mod.HintMgr.setHint(hint, this._model.hintPath);
                };
                XianjieLuandouProxy.prototype.onOpenFuncUpdate = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(1041670268 /* XianjieLuandou */) > -1) {
                        this.updateHint();
                    }
                };
                return XianjieLuandouProxy;
            }(game.ProxyBase));
            more.XianjieLuandouProxy = XianjieLuandouProxy;
            __reflect(XianjieLuandouProxy.prototype, "game.mod.more.XianjieLuandouProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiModel = /** @class */ (function () {
                function XianmaiModel() {
                    this.role_list = {}; //每层列表
                    //每层每个位置缓存
                    this.stage_index_map = {};
                    //战报 1.个人2.宗门
                    this.logs = {};
                    this.hintPath = ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "100" /* XianmaiMain */, "01" /* TabBtnType01 */];
                }
                return XianmaiModel;
            }());
            more.XianmaiModel = XianmaiModel;
            __reflect(XianmaiModel.prototype, "game.mod.more.XianmaiModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_xianmai_stage_show = msg.c2s_xianmai_stage_show;
            var s2c_xianmai_stage_show = msg.s2c_xianmai_stage_show;
            var c2s_xianmai_buy_time = msg.c2s_xianmai_buy_time;
            var s2c_xianmai_buy_time = msg.s2c_xianmai_buy_time;
            var c2s_xianmai_my_show = msg.c2s_xianmai_my_show;
            var s2c_xianmai_my_show = msg.s2c_xianmai_my_show;
            var s2c_xianmai_search = msg.s2c_xianmai_search;
            var s2c_xianmai_reward_show = msg.s2c_xianmai_reward_show;
            var s2c_xianmai_list_show = msg.s2c_xianmai_list_show;
            var s2c_xianmai_zhanbao = msg.s2c_xianmai_zhanbao;
            var s2c_xianmai_rank_show = msg.s2c_xianmai_rank_show;
            var c2s_xianmai_pvp_oper = msg.c2s_xianmai_pvp_oper;
            var c2s_xianmai_get_reward = msg.c2s_xianmai_get_reward;
            var c2s_xianmai_list_show = msg.c2s_xianmai_list_show;
            var c2s_xianmai_guild_invite = msg.c2s_xianmai_guild_invite;
            var c2s_xianmai_zhanbao = msg.c2s_xianmai_zhanbao;
            var c2s_xianmai_rank_show = msg.c2s_xianmai_rank_show;
            var TimeMgr = base.TimeMgr;
            var Handler = base.Handler;
            var s2c_city_moment_fight_update = msg.s2c_city_moment_fight_update;
            var facade = base.facade;
            var s2c_update_xianmai_data = msg.s2c_update_xianmai_data;
            var c2s_xianmai_search = msg.c2s_xianmai_search;
            /**
             * @description 仙脉争夺系统
             */
            var XianmaiProxy = /** @class */ (function (_super) {
                __extends(XianmaiProxy, _super);
                function XianmaiProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._stageCfgs = {};
                    /**============== 修仙女仆自动挂机 ==============*/
                    _this._sendSearch = false; //请求一键寻脉协议标识，设为false才可以重新请求。用于自动挂机处理
                    _this._sendPvpOper4 = false; //请求一键寻脉后，占领该位置
                    return _this;
                    /**============== 修仙女仆自动挂机 ==============*/
                }
                XianmaiProxy.prototype.onStartReconnect = function () {
                    _super.prototype.onStartReconnect.call(this);
                    this.reqStage = null;
                };
                XianmaiProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.XianmaiModel();
                    this.onProto(s2c_xianmai_stage_show, this.s2c_xianmai_stage_show, this);
                    this.onProto(s2c_update_xianmai_data, this.s2c_update_xianmai_data, this);
                    this.onProto(s2c_xianmai_buy_time, this.s2c_xianmai_buy_time, this);
                    this.onProto(s2c_xianmai_my_show, this.s2c_xianmai_my_show, this);
                    this.onProto(s2c_xianmai_search, this.s2c_xianmai_search, this);
                    this.onProto(s2c_xianmai_reward_show, this.s2c_xianmai_reward_show, this);
                    this.onProto(s2c_xianmai_list_show, this.s2c_xianmai_list_show, this);
                    this.onProto(s2c_xianmai_zhanbao, this.s2c_xianmai_zhanbao, this);
                    this.onProto(s2c_xianmai_rank_show, this.s2c_xianmai_rank_show, this);
                    this.onProto(s2c_city_moment_fight_update, this.s2c_city_moment_fight_update, this);
                };
                //仙脉主界面展示
                XianmaiProxy.prototype.c2s_xianmai_stage_show = function (stage) {
                    var msg = new c2s_xianmai_stage_show();
                    msg.stage = stage;
                    this.reqStage = stage;
                    this.sendProto(msg);
                };
                //仙脉主界面展示 返回
                XianmaiProxy.prototype.s2c_xianmai_stage_show = function (n) {
                    var msg = n.body;
                    if (msg.mvp_role != null) {
                        this._model.mvp_role = msg.mvp_role;
                    }
                    else {
                        this._model.mvp_role = null;
                    }
                    if (msg.role_list != null) {
                        this._model.role_list = {};
                        this._model.stage_index_map[msg.role_list[0].stage] = {};
                        for (var _i = 0, _a = msg.role_list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.role_list[item.index] = item;
                            this._model.stage_index_map[item.stage][item.index] = item;
                        }
                    }
                    else {
                        this._model.role_list = {};
                        this._model.stage_index_map = {};
                    }
                    if (msg.attack_time != null) {
                        this._model.attack_time = msg.attack_time;
                    }
                    else {
                        this._model.attack_time = 0;
                    }
                    this.sendNt("on_update_xianmai_stage_show" /* ON_UPDATE_XIANMAI_STAGE_SHOW */);
                };
                //更新仙脉数据改变: 只更新改变的
                XianmaiProxy.prototype.s2c_update_xianmai_data = function (n) {
                    var msg = n.body;
                    var haveCurStage = false;
                    var isMine = false;
                    if (msg.list != null) {
                        var myData = this._model.my_data; //我的仙脉数据
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            if (this.reqStage && !haveCurStage && item.stage == this.reqStage) {
                                haveCurStage = true;
                            }
                            if (myData && myData.stage == item.stage && myData.index == item.index) {
                                //我的占领被清空
                                isMine = true;
                                var roleData = item.data;
                                if (!roleData) {
                                    this._model.my_data = null; //我的仙脉变空
                                    this._model.penglai_score = 0;
                                    this._model.lingshi = 0;
                                }
                            }
                            else if (item && item.data && item.data.role_id.eq(game.RoleVo.ins.role_id)) {
                                //我占领某个位置
                                isMine = true;
                                this._model.my_data = item;
                                this._model.penglai_score = 0;
                                this._model.lingshi = 0;
                            }
                            this.updateRoleList(item);
                        }
                    }
                    //是更新我的仙脉数据
                    if (isMine) {
                        this.updateHint();
                        this.sendNt("on_update_xianmai_my_show" /* ON_UPDATE_XIANMAI_MY_SHOW */);
                    }
                    //有当前请求层的更新，再抛出
                    if (haveCurStage) {
                        this.sendNt("on_update_xianmai_stage_show" /* ON_UPDATE_XIANMAI_STAGE_SHOW */);
                    }
                    this.checkAutoChallengeXianmai();
                };
                XianmaiProxy.prototype.updateRoleList = function (roleData) {
                    if (!roleData) {
                        return;
                    }
                    if (!this._model.stage_index_map[roleData.stage]) {
                        this._model.stage_index_map[roleData.stage] = {};
                    }
                    if (!roleData.data) {
                        this._model.stage_index_map[roleData.stage][roleData.index] = null;
                        delete this._model.stage_index_map[roleData.stage][roleData.index];
                    }
                    else {
                        this._model.stage_index_map[roleData.stage][roleData.index] = roleData;
                    }
                    if (!this.reqStage || this.reqStage != roleData.stage) {
                        return; //不属于当前请求层
                    }
                    if (!roleData.data) {
                        //移除
                        this._model.role_list[roleData.index] = null;
                        delete this._model.role_list[roleData.index];
                    }
                    else {
                        this._model.role_list[roleData.index] = roleData;
                    }
                };
                //购买冷却时间
                XianmaiProxy.prototype.c2s_xianmai_buy_time = function () {
                    var msg = new c2s_xianmai_buy_time();
                    this.sendProto(msg);
                };
                //购买冷却时间 返回
                XianmaiProxy.prototype.s2c_xianmai_buy_time = function (n) {
                    var msg = n.body;
                    if (msg.attack_time != null) {
                        this._model.attack_time = msg.attack_time;
                    }
                    this.sendNt("on_update_xianmai_stage_show" /* ON_UPDATE_XIANMAI_STAGE_SHOW */);
                };
                //我的仙脉
                XianmaiProxy.prototype.c2s_xianmai_my_show = function () {
                    var msg = new c2s_xianmai_my_show();
                    this.sendProto(msg);
                };
                //我的仙脉 返回
                XianmaiProxy.prototype.s2c_xianmai_my_show = function (n) {
                    var msg = n.body;
                    if (msg.my_data != null) {
                        this._model.my_data = msg.my_data;
                    }
                    else {
                        this._model.my_data = null;
                    }
                    this._model.penglai_score = msg.penglai_score != null ? msg.penglai_score : 0;
                    this._model.lingshi = msg.lingshi != null ? msg.lingshi : 0;
                    this.updateHint();
                    this.checkAutoChallengeXianmai();
                    this.sendNt("on_update_xianmai_my_show" /* ON_UPDATE_XIANMAI_MY_SHOW */);
                    this.setTimeInterval();
                };
                //一键寻脉
                XianmaiProxy.prototype.c2s_xianmai_search = function () {
                    this.sendProto(new c2s_xianmai_search());
                };
                //一键寻脉 返回
                XianmaiProxy.prototype.s2c_xianmai_search = function (n) {
                    var msg = n.body;
                    this._model.search_index = null;
                    this._model.search_stage = null;
                    if (msg.stage != null) {
                        this._model.search_stage = msg.stage;
                    }
                    if (msg.index != null) {
                        this._model.search_index = msg.index;
                    }
                    this.checkAutoChallengeXianmai(true);
                    this.sendNt("on_update_xianmai_search" /* ON_UPDATE_XIANMAI_SEARCH */);
                };
                //仙脉战斗操作 type 1.撤离2.驱逐3.攻占4.占领
                XianmaiProxy.prototype.c2s_xianmai_pvp_oper = function (type, stage, index) {
                    var msg = new c2s_xianmai_pvp_oper();
                    msg.type = type;
                    msg.stage = stage;
                    msg.index = index;
                    this._stage = stage;
                    this._index = index;
                    this.sendProto(msg);
                };
                //奖励框
                XianmaiProxy.prototype.s2c_xianmai_reward_show = function (n) {
                    var msg = n.body;
                    if (msg.items != null) {
                        this._model.reward_items = msg.items;
                    }
                    else {
                        this._model.reward_items = [];
                    }
                    // //我的占领结束了，清空我的数据
                    // this._model.my_data = null;
                    // this._model.penglai_score = 0;
                    // this._model.lingshi = 0;
                    this.sendNt("on_update_xianmai_reward_show" /* ON_UPDATE_XIANMAI_REWARD_SHOW */);
                };
                //获取结算奖励
                XianmaiProxy.prototype.c2s_xianmai_get_reward = function () {
                    var msg = new c2s_xianmai_get_reward;
                    this.sendProto(msg);
                };
                //点击 仙脉列表
                XianmaiProxy.prototype.c2s_xianmai_list_show = function () {
                    var msg = new c2s_xianmai_list_show();
                    this.sendProto(msg);
                };
                //点击 仙脉列表 返回
                XianmaiProxy.prototype.s2c_xianmai_list_show = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        this._model.list = msg.list;
                    }
                    this.sendNt("on_update_xianmai_list_show" /* ON_UPDATE_XIANMAI_LIST_SHOW */);
                };
                //宗门邀请
                XianmaiProxy.prototype.c2s_xianmai_guild_invite = function () {
                    var msg = new c2s_xianmai_guild_invite();
                    this.sendProto(msg);
                };
                //战报显示 type 1.个人2.宗门
                XianmaiProxy.prototype.c2s_xianmai_zhanbao = function (type) {
                    var msg = new c2s_xianmai_zhanbao();
                    msg.type = type;
                    this.sendProto(msg);
                };
                //战报显示 返回
                XianmaiProxy.prototype.s2c_xianmai_zhanbao = function (n) {
                    var msg = n.body;
                    if (msg.type != null) {
                        this._model.logs[msg.type] = msg.logs != null ? msg.logs : [];
                    }
                    this.sendNt("on_update_xianmai_zhaobao" /* ON_UPDATE_XIANMAI_ZHANBAO */);
                };
                //请求排行榜 type:1.个人2.宗门
                XianmaiProxy.prototype.c2s_xianmai_rank_show = function (type, start, end) {
                    var msg = new c2s_xianmai_rank_show();
                    msg.type = type;
                    msg.start_pos = start;
                    msg.end_pos = end;
                    this.sendProto(msg);
                };
                //请求排行榜 返回
                XianmaiProxy.prototype.s2c_xianmai_rank_show = function (n) {
                    var msg = n.body;
                    if (msg.guild_ranks != null) {
                        this._model.guild_ranks = msg.guild_ranks;
                    }
                    if (msg.person_ranks != null) {
                        this._model.person_ranks = msg.person_ranks;
                    }
                    if (msg.my_guild_rank != null) {
                        this._model.my_guild_rank = msg.my_guild_rank;
                    }
                    if (msg.my_rank != null) {
                        this._model.my_rank = msg.my_rank;
                    }
                    this.sendNt("on_update_xianmai_rank_show" /* ON_UPDATE_XIANMAI_RANK_SHOW */);
                };
                //动画PK直接计算结果
                XianmaiProxy.prototype.s2c_city_moment_fight_update = function (n) {
                    var msg = n.body;
                    if (msg != null) {
                        this._model.fight_data = msg;
                        facade.showView("61" /* More */, "109" /* XianmaiFight */, msg);
                    }
                };
                //todo 获取初始血量比例，后期协议改通用可自行调整协议加字段
                XianmaiProxy.prototype.getInitEnemyHp = function () {
                    if (this._stage && this._index) {
                        var info = this.getStageInfo(this._index);
                        if (info && info.stage == this._stage) {
                            return info.hp / 10000;
                        }
                    }
                    return 1;
                };
                /**==================================协议end==================================*/
                //怪物默认战力
                XianmaiProxy.prototype.getBossPower = function (idx) {
                    var cfg = game.GameConfig.getParamConfigById('xianmai_boss');
                    var values = cfg.value;
                    return (values[idx] || 0) * 10000;
                };
                XianmaiProxy.prototype.getBossNames = function () {
                    return [game.getLanById("xianmaizhengduo_tips26" /* xianmaizhengduo_tips26 */), game.getLanById("xianmaizhengduo_tips27" /* xianmaizhengduo_tips27 */)];
                };
                XianmaiProxy.prototype.getBossIcon = function () {
                    return 'guaiwu';
                };
                Object.defineProperty(XianmaiProxy.prototype, "guild_num", {
                    //宗门人数，客户端自己统计
                    get: function () {
                        var list = this._model.role_list;
                        var myGuildId = mod.RoleUtil.getGuildId();
                        if (!myGuildId) {
                            return 0;
                        }
                        var num = 0;
                        if (list) {
                            for (var key in list) {
                                var info = list[key];
                                if (info && info.data && info.data.guild_id == myGuildId) {
                                    num++;
                                }
                            }
                        }
                        return num;
                    },
                    enumerable: true,
                    configurable: true
                });
                //宗门人数对应的收益万分比
                XianmaiProxy.prototype.getEarnCnt = function (cnt) {
                    if (cnt == undefined) {
                        cnt = this.guild_num;
                    }
                    var cfg = game.GameConfig.getParamConfigById('xianmai_income');
                    var value = cfg.value[cnt];
                    return value[1] / 100;
                };
                Object.defineProperty(XianmaiProxy.prototype, "mvp_role", {
                    get: function () {
                        return this._model.mvp_role || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "cool_time", {
                    //攻击冷却时间
                    get: function () {
                        return this._model.attack_time || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "stage_list", {
                    //仙脉列表
                    get: function () {
                        return this._model.list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "reward_items", {
                    //奖励列表
                    get: function () {
                        return this._model.reward_items || [];
                    },
                    set: function (item) {
                        this._model.reward_items = item;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "my_data", {
                    //我的占领数据
                    get: function () {
                        return this._model.my_data;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "penglai_score", {
                    ////仙脉积分累计
                    get: function () {
                        return this._model.penglai_score || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "lingshi", {
                    //灵石积分累计
                    get: function () {
                        return this._model.lingshi || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "search_stage", {
                    //一键寻脉
                    get: function () {
                        return this._model.search_stage;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "search_index", {
                    get: function () {
                        return this._model.search_index;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianmaiProxy.prototype, "person_ranks", {
                    get: function () {
                        return this._model.person_ranks || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                //活动时间
                XianmaiProxy.prototype.getActTimeRange = function () {
                    var cfg = game.GameConfig.getParamConfigById('xianmai_act');
                    return cfg ? cfg.value : [[10, 0], [22, 0]];
                };
                //开始时间，秒
                XianmaiProxy.prototype.getStartTime = function () {
                    var timeAry = this.getActTimeRange()[0];
                    var day = new Date(TimeMgr.time.serverTime);
                    day.setHours(timeAry[0], timeAry[1], 0, 0);
                    return day.getTime() / 1000;
                };
                //结束时间，秒
                XianmaiProxy.prototype.getEndTime = function () {
                    var timeAry = this.getActTimeRange()[1];
                    var day = new Date(TimeMgr.time.serverTime);
                    day.setHours(timeAry[0], timeAry[1], 0, 0);
                    return day.getTime() / 1000;
                };
                //是否在活动时间内
                XianmaiProxy.prototype.isActTime = function () {
                    var startTime = this.getStartTime();
                    var endTime = this.getEndTime();
                    var curTime = TimeMgr.time.serverTimeSecond;
                    return startTime <= curTime && curTime <= endTime;
                };
                /**
                 * 开启时间或结束时间，秒
                 * @param isStart true表示开始时间10点，false表示结束时间22点
                 */
                XianmaiProxy.prototype.getShowStartTime = function (isStart) {
                    if (isStart === void 0) { isStart = true; }
                    var idx = isStart ? 0 : 1;
                    var date = new Date(TimeMgr.time.serverTime);
                    var curHour = date.getHours(); //当前小时
                    var timeAry = this.getActTimeRange()[idx];
                    var isCurDay = curHour <= timeAry[0]; //是否是今天
                    if (!isStart) {
                        var curMins = date.getMinutes();
                        isCurDay = curHour <= timeAry[0] && curMins <= timeAry[1];
                    }
                    var curTime = TimeMgr.time.serverTimeSecond;
                    var nextDayTime = game.TimeUtil.getNextDayTime(curTime, false, isCurDay ? 0 : 1);
                    var timeSecond = timeAry[0] * game.Second.Hour + timeAry[1] * game.Second.Minute;
                    return nextDayTime + timeSecond;
                };
                //type 1.个人2.宗门
                XianmaiProxy.prototype.getZhanbao = function (type) {
                    return this._model.logs[type] || [];
                };
                //冷却时间消耗
                XianmaiProxy.prototype.getCoolTimeCostStr = function () {
                    var cfg = game.GameConfig.getParamConfigById('xianmai_time_buy');
                    var cost = cfg && cfg.value;
                    if (!cost) {
                        return null;
                    }
                    var propCfg = game.GameConfig.getPropConfigById(cost[0]);
                    var str = cost[1] + (propCfg && propCfg.name || '');
                    return '是否花费' + game.TextUtil.addColor(str, 2330156 /* GREEN */) + '加速' + game.TextUtil.addColor('1小时', 2330156 /* GREEN */);
                };
                //占领的信息
                XianmaiProxy.prototype.getStageInfo = function (index) {
                    return this._model.role_list[index];
                };
                //获取最小占领过期时间戳
                XianmaiProxy.prototype.getMinEndTime = function () {
                    var list = this._model.role_list;
                    var minTime;
                    for (var key in list) {
                        var item = list[key];
                        if (!item || !item.end_time) {
                            continue;
                        }
                        if (minTime == undefined) {
                            minTime = item.end_time;
                        }
                        minTime = Math.min(minTime, item.end_time);
                    }
                    return minTime;
                };
                XianmaiProxy.prototype.getStageCfgs = function (type) {
                    if (this._stageCfgs[type]) {
                        return this._stageCfgs[type];
                    }
                    var list = [];
                    var cfgObj = game.getConfigByNameId("xianmai_stage.json" /* XianmaiStage */, type);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        list.push(cfg);
                    }
                    this._stageCfgs[type] = list;
                    return list;
                };
                XianmaiProxy.prototype.getStageCfg = function (stage, index) {
                    var cfgObj = game.getConfigByNameId("xianmai_stage.json" /* XianmaiStage */, stage);
                    return cfgObj[index];
                };
                //最大层级
                XianmaiProxy.prototype.getMaxStage = function () {
                    if (this._maxStage) {
                        return this._maxStage;
                    }
                    var cfgList = game.getConfigListByName("xianmai_stage.json" /* XianmaiStage */);
                    this._maxStage = cfgList.length;
                    return this._maxStage;
                };
                Object.defineProperty(XianmaiProxy.prototype, "coolTimeLimit", {
                    //两个小时秒数
                    get: function () {
                        return 2 * game.Second.Hour;
                    },
                    enumerable: true,
                    configurable: true
                });
                //冷却时间大于2小时
                XianmaiProxy.prototype.isCoolTimeLarge = function () {
                    var coolTime = this.cool_time;
                    var leftTime = coolTime - TimeMgr.time.serverTimeSecond;
                    return leftTime > this.coolTimeLimit;
                };
                //剩余冷却时间
                XianmaiProxy.prototype.getLeftCoolTime = function () {
                    var coolTime = this.cool_time;
                    var leftTime = coolTime - TimeMgr.time.serverTimeSecond;
                    return leftTime > 0 ? leftTime : 0;
                };
                //冷却时间倒计时
                XianmaiProxy.prototype.getCoolTimeStr = function () {
                    var leftTime = this.getLeftCoolTime();
                    var coolTimeStr = '';
                    if (leftTime > 0) {
                        coolTimeStr = game.TimeUtil.formatSecond(leftTime, 'HH时mm分');
                    }
                    var color = this.isCoolTimeLarge() ? 16719376 /* RED */ : 0xFEFAE5; //特殊色号
                    return game.StringUtil.substitute(game.getLanById("xianmaizhengduo_tips12" /* xianmaizhengduo_tips12 */), [game.TextUtil.addColor(coolTimeStr, color)]);
                };
                //冷却时间处理
                XianmaiProxy.prototype.dealCoolTime = function () {
                    if (this.isCoolTimeLarge()) {
                        var str = this.getCoolTimeCostStr();
                        mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.c2s_xianmai_buy_time));
                    }
                };
                //兑换红点
                XianmaiProxy.prototype.getExchangeHint = function () {
                    var proxy = game.getProxy("27" /* Activity */, 215 /* ExchangeShop */);
                    return proxy.getHintByExchangeType(6 /* Type6 */);
                };
                XianmaiProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670243 /* XianmaiZhengduo */)) {
                        return;
                    }
                    var isActTime = this.isActTime();
                    var hint = false;
                    if (isActTime) {
                        hint = this.my_data == null || this.getExchangeHint();
                    }
                    mod.HintMgr.setHint(hint, this._model.hintPath);
                };
                XianmaiProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf(game.PropIndexToKey[1450000015 /* Lmcoin */]) > -1) {
                        this.updateHint();
                    }
                };
                /**==================排行榜==================*/
                XianmaiProxy.prototype.getRanks = function (type) {
                    if (type == 2) {
                        return this._model.guild_ranks;
                    }
                    else {
                        return this._model.person_ranks;
                    }
                };
                XianmaiProxy.prototype.getRankList = function (type) {
                    var ranks = this.getRanks(type);
                    var cfgArr = game.getConfigByNameId("xianmai_rank_reward.json" /* XianmaiRankReward */, type);
                    var list = [];
                    var _loop_4 = function (cfg) {
                        var cfg1 = cfgArr[cfg];
                        var start = cfg1.rank_no[0];
                        var end = cfg1.rank_no[1];
                        if (start == end) {
                            var item = ranks && ranks[start - 1];
                            var name = item ? item.name + "\n" + "仙宗:" + item.guild_name : "虚位以待";
                            list.push({
                                rank: start,
                                name: name,
                                hurtStr: item && item.value.toString() || "",
                                reward: cfg1.reward
                            });
                        }
                        else {
                            var rank_3 = start > game.MAX_RANK_NUM ? start - 1 + "+" : start + "-" + end;
                            list.push({
                                rank: rank_3,
                                name: "",
                                reward: cfg1.reward,
                                param: type,
                                lookHandler: base.Handler.alloc(this_4, function () {
                                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "112" /* XianmaiRankSectionTips */, {
                                        rank: rank_3,
                                        type: type
                                    });
                                })
                            });
                        }
                    };
                    var this_4 = this;
                    for (var cfg in cfgArr) {
                        _loop_4(cfg);
                    }
                    return list;
                };
                XianmaiProxy.prototype.getRankStr = function (type) {
                    if (type == 2) {
                        var info = this._model.my_guild_rank;
                        var str = "";
                        if (info && info.rank_num) {
                            str = game.TextUtil.addColor("" + info.rank_num, 2330156 /* GREEN */);
                        }
                        else {
                            var param = game.getConfigByNameId("param.json" /* Param */, "xianmai_rank");
                            return "\u4ED9\u5B97\u4ED9\u8109\u79EF\u5206" + param.value[0] + "\u4E0A\u699C";
                        }
                        return "\u4ED9\u5B97\u6392\u540D\uFF1A" + str;
                    }
                    else {
                        var info = this._model.my_rank;
                        if (info && info.rank_num) {
                            var str = game.TextUtil.addColor("" + info.rank_num, 2330156 /* GREEN */);
                            return game.StringUtil.substitute(game.getLanById("compete_mars_4" /* compete_mars_4 */), [str]);
                        }
                        else {
                            var param = game.getConfigByNameId("param.json" /* Param */, "xianmai_rank");
                            return "\u4E2A\u4EBA\u4ED9\u8109\u79EF\u5206" + param.value[1] + "\u4E0A\u699C";
                        }
                    }
                };
                XianmaiProxy.prototype.getRankCountStr = function (type) {
                    if (type == 2) {
                        var info = this._model.my_guild_rank;
                        var str = game.TextUtil.addColor("" + (info && info.value || 0), 2330156 /* GREEN */);
                        return "\u4ED9\u5B97\u79EF\u5206\uFF1A" + str;
                    }
                    else {
                        var info = this._model.my_rank;
                        var str = game.TextUtil.addColor("" + (info && info.value || 0), 2330156 /* GREEN */);
                        return "\u6211\u7684\u79EF\u5206\uFF1A" + str;
                    }
                };
                /**获取区间排行榜列表 参数为排名 需要-1转换索引 */
                XianmaiProxy.prototype.getRankSection = function (rank, type) {
                    var strArr = rank.split("-");
                    var start = +strArr[0];
                    var end = +strArr[1];
                    var ranks;
                    ranks = type == 2 ? this._model.guild_ranks : this._model.person_ranks;
                    var list = [];
                    for (var i = start - 1; i < end; i++) {
                        var item = ranks && ranks[i];
                        if (item) {
                            list.push({
                                rank: item.rank_num,
                                name: item.name + "\n" + "仙宗:" + item.guild_name,
                                value: +item.value
                            });
                        }
                        else {
                            list.push({ rank: i + 1, name: "虚位以待", value: 0 });
                        }
                    }
                    return list;
                };
                //层数对应资源索引
                XianmaiProxy.prototype.getLayerIdx = function (layer) {
                    if (layer == 1) {
                        return 0;
                    }
                    if (1 < layer && layer < 4) {
                        return 1;
                    }
                    return 2;
                };
                XianmaiProxy.prototype.getSecondPopTitle = function (layer) {
                    var idx = this.getLayerIdx(layer);
                    if (idx == 0) {
                        return game.getLanById("xianmaizhengduo_tips29" /* xianmaizhengduo_tips29 */);
                    }
                    else if (idx == 1) {
                        return game.getLanById("xianmaizhengduo_tips28" /* xianmaizhengduo_tips28 */);
                    }
                    return game.getLanById("xianmaizhengduo_tips4" /* xianmaizhengduo_tips4 */);
                };
                //时间节点处理，10点，22点
                XianmaiProxy.prototype.setTimeInterval = function () {
                    var startShowTime = this.getShowStartTime();
                    mod.HintMgr.addTimeEvent(17 /* XianmaiStart */, startShowTime, this, this.c2s_xianmai_my_show);
                    var endShowTime = this.getShowStartTime(false);
                    mod.HintMgr.addTimeEvent(18 /* XianmaiEnd */, endShowTime, this, this.c2s_xianmai_my_show);
                };
                XianmaiProxy.prototype.canAutoChallengeXianmai = function () {
                    //不在活动时间内，我的数据不空
                    if (!this.isActTime() || this.my_data || this.isCoolTimeLarge()) {
                        return false;
                    }
                    //处理请求
                    if (!this.search_stage || !this.search_index) {
                        if (!this._sendSearch) {
                            this.c2s_xianmai_search(); //要处理_sendSearch，否则会进入无限循环
                            this._sendSearch = true;
                        }
                    }
                    return this.search_stage != null && this.search_index != null;
                };
                XianmaiProxy.prototype.sendAutoChallengeXianmai = function () {
                    if (this.search_stage && this.search_index) {
                        this.c2s_xianmai_pvp_oper(4 /* Oper4 */, this.search_stage, this.search_index);
                        this._sendPvpOper4 = true;
                    }
                };
                /**
                 * 21.仙脉争夺
                 * @param searchBack true表示一键寻脉协议返回
                 */
                XianmaiProxy.prototype.checkAutoChallengeXianmai = function (searchBack) {
                    if (searchBack === void 0) { searchBack = false; }
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670243 /* XianmaiZhengduo */)) {
                        return;
                    }
                    if (!searchBack) {
                        this._sendSearch = false; //不是一键寻脉协议返回
                    }
                    if (this._sendPvpOper4) {
                        //占领返回
                        this._sendPvpOper4 = false;
                        mod.RoleUtil.removeAutoChallengeEvent(21 /* Xianmai */);
                        facade.sendNt("on_xiuxiannvpu_special_challenge_next" /* ON_XIUXIANNVPU_SPECIAL_CHALLENGE_NEXT */);
                        return;
                    }
                    if (this.canAutoChallengeXianmai()) {
                        mod.RoleUtil.addAutoChallengeEvent(21 /* Xianmai */, Handler.alloc(this, this.sendAutoChallengeXianmai));
                    }
                    else {
                        mod.RoleUtil.removeAutoChallengeEvent(21 /* Xianmai */);
                    }
                };
                return XianmaiProxy;
            }(game.ProxyBase));
            more.XianmaiProxy = XianmaiProxy;
            __reflect(XianmaiProxy.prototype, "game.mod.more.XianmaiProxy", ["game.mod.IXianmaiProxy", "base.IProxy"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiModel = /** @class */ (function () {
                function XianweiModel() {
                    this.list = new Map();
                    this.cfgs = new Map();
                    this.cfgArr = new Map();
                }
                return XianweiModel;
            }());
            more.XianweiModel = XianweiModel;
            __reflect(XianweiModel.prototype, "game.mod.more.XianweiModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more_3) {
            var TimeMgr = base.TimeMgr;
            var Handler = base.Handler;
            var c2s_xianwei_buy_time = msg.c2s_xianwei_buy_time;
            var s2c_xianwei_buy_time = msg.s2c_xianwei_buy_time;
            var c2s_xianwei_root_show = msg.c2s_xianwei_root_show;
            var s2c_xianwei_root_show = msg.s2c_xianwei_root_show;
            var c2s_xianwei_challenge = msg.c2s_xianwei_challenge;
            var c2s_xianwei_rank_show = msg.c2s_xianwei_rank_show;
            var s2c_xianwei_rank_show = msg.s2c_xianwei_rank_show;
            var c2s_xianwei_branch_show = msg.c2s_xianwei_branch_show;
            var s2c_xianwei_branch_show = msg.s2c_xianwei_branch_show;
            var c2s_xianwei_zhanbao_show = msg.c2s_xianwei_zhanbao_show;
            var s2c_xianwei_zhanbao_show = msg.s2c_xianwei_zhanbao_show;
            var XianweiProxy = /** @class */ (function (_super) {
                __extends(XianweiProxy, _super);
                function XianweiProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianweiProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more_3.XianweiModel();
                    this.onProto(s2c_xianwei_root_show, this.s2c_xianwei_root_show, this);
                    this.onProto(s2c_xianwei_buy_time, this.s2c_xianwei_buy_time, this);
                    this.onProto(s2c_xianwei_branch_show, this.s2c_xianwei_branch_show, this);
                    this.onProto(s2c_xianwei_zhanbao_show, this.s2c_xianwei_zhanbao_show, this);
                    this.onProto(s2c_xianwei_rank_show, this.s2c_xianwei_rank_show, this);
                };
                XianweiProxy.prototype.c2s_xianwei_root_show = function () {
                    var msg = new c2s_xianwei_root_show();
                    this.sendProto(msg);
                };
                XianweiProxy.prototype.c2s_xianwei_buy_time = function () {
                    var msg = new c2s_xianwei_buy_time();
                    this.sendProto(msg);
                };
                XianweiProxy.prototype.c2s_xianwei_branch_show = function (stage, index) {
                    var msg = new c2s_xianwei_branch_show();
                    msg.stage = stage;
                    msg.index = index;
                    this.sendProto(msg);
                };
                XianweiProxy.prototype.c2s_xianwei_zhanbao_show = function () {
                    var msg = new c2s_xianwei_zhanbao_show();
                    this.sendProto(msg);
                };
                XianweiProxy.prototype.c2s_xianwei_challenge = function (stage, index, pos) {
                    var msg = new c2s_xianwei_challenge();
                    msg.stage = stage;
                    msg.index = index;
                    msg.pos = pos;
                    this.sendProto(msg);
                };
                XianweiProxy.prototype.c2s_xianwei_rank_show = function () {
                    var msg = new c2s_xianwei_rank_show();
                    this.sendProto(msg);
                };
                XianweiProxy.prototype.s2c_xianwei_root_show = function (n) {
                    var msg = n.body;
                    if (msg.list) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var info = _a[_i];
                            this._model.list.set(info.stage + "_" + info.index, info);
                        }
                    }
                    this._model.my_place = msg.my_place || null;
                    this._model.attack_time = msg.my_place && msg.my_place.attack_time || 0;
                    if (msg.reward_data) {
                        this.reward_data = msg.reward_data;
                    }
                    if (msg.log_list) {
                        this._model.log_list = msg.log_list;
                    }
                    this.sendNt("on_update_xianwei_info" /* ON_UPDATE_XIANWEI_INFO */);
                };
                XianweiProxy.prototype.s2c_xianwei_buy_time = function (n) {
                    var msg = n.body;
                    this._model.attack_time = msg.attack_time;
                    this.sendNt("on_update_xianwei_cd_info" /* ON_UPDATE_XIANWEI_CD_INFO */);
                };
                XianweiProxy.prototype.s2c_xianwei_branch_show = function (n) {
                    var msg = n.body;
                    if (msg.list) {
                        this._model.member_list = msg.list;
                    }
                    this.sendNt("on_update_xianwei_list_info" /* ON_UPDATE_XIANWEI_LIST_INFO */);
                };
                XianweiProxy.prototype.s2c_xianwei_zhanbao_show = function (n) {
                    var msg = n.body;
                    if (msg.list) {
                        this._model.zhanbao_list = msg.list;
                    }
                    this.sendNt("on_update_xianwei_zhanbao_info" /* ON_UPDATE_XIANWEI_ZHANBAO_INFO */);
                };
                XianweiProxy.prototype.s2c_xianwei_rank_show = function (n) {
                    var msg = n.body;
                    if (msg.ranks) {
                        this._model.ranks = msg.ranks;
                    }
                    if (msg.my_rank) {
                        this._model.my_rank = msg.my_rank;
                    }
                    this.sendNt("on_update_xianwei_rank_info" /* ON_UPDATE_XIANWEI_RANK_INFO */);
                };
                Object.defineProperty(XianweiProxy.prototype, "reward_data", {
                    // private s2c_update_xianwei_data(n: GameNT): void {
                    //     let msg: s2c_update_xianwei_data = n.body;
                    // }
                    // public get cfgs(): Map<number, XianweiBaseConfig[]> {
                    //     if (!this._model.cfgs) {
                    //         let cfgArr = getConfigListByName(ConfigName.XianweiBase);
                    //         for (let k in cfgArr) {
                    //             let cfgs: { [key: number]: XianweiBaseConfig } = cfgArr[k];
                    //             let list: XianweiBaseConfig[] = [];
                    //             for (let k2 in cfgs) {
                    //                 let cfg: XianweiBaseConfig = cfgs[k2];
                    //                 list.push(cfg);
                    //             }
                    //             this._model.cfgs.set(+k, list)
                    //             console.error(cfgs);
                    //         }
                    //     }
                    //     return this._model.cfgs;
                    // }
                    get: function () {
                        return this._model.reward_data || null;
                    },
                    set: function (v) {
                        this._model.reward_data = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "attack_time", {
                    get: function () {
                        return this._model.attack_time;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "zhanbao_list", {
                    get: function () {
                        return this._model.zhanbao_list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "member_list", {
                    get: function () {
                        return this._model.member_list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "ranks", {
                    get: function () {
                        return this._model.ranks;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "my_rank", {
                    get: function () {
                        return this._model.my_rank;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "is_open", {
                    get: function () {
                        var week = game.TimeUtil.getServerTime().getDay() || 7;
                        var hours = game.TimeUtil.getServerTime().getHours();
                        for (var i = 0; i < this.xianwei_act.length; i++) {
                            var time = this.xianwei_act[i];
                            if (week != time[0]) {
                                return true;
                            }
                            if (!i) {
                                return hours >= time[1];
                            }
                            return hours < time[1];
                        }
                        return false;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "open_time", {
                    get: function () {
                        var next_week = game.TimeUtil.getNextWeekTime();
                        return next_week - game.Second.Hour;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "end_time", {
                    /**开启时返回结束时间 未开启返回开启时间 */
                    get: function () {
                        var next_week = game.TimeUtil.getNextWeekTime();
                        // if (this.is_open) {
                        //     return next_week - Second.Hour;
                        // }
                        var week = game.TimeUtil.getServerTime().getDay() || 7;
                        if (week == 7) {
                            return next_week + this.xianwei_act[0][1] * game.Second.Hour;
                        }
                        var time = game.TimeUtil.getNextDayTime(TimeMgr.time.serverTimeSecond, false);
                        return time + this.xianwei_act[0][1] * game.Second.Hour;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "log_list", {
                    get: function () {
                        return this._model.log_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "xianwei_act", {
                    get: function () {
                        if (!this._model.xianwei_act) {
                            var param = game.GameConfig.getParamConfigById("xianwei_act");
                            this._model.xianwei_act = param.value;
                        }
                        return this._model.xianwei_act;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "my_place", {
                    get: function () {
                        return this._model.my_place;
                    },
                    enumerable: true,
                    configurable: true
                });
                XianweiProxy.prototype.checkJob = function (key) {
                    if (!this.my_place) {
                        return false;
                    }
                    var info = this.my_place;
                    var my_key = info.stage + "_" + info.index;
                    return my_key == key;
                };
                Object.defineProperty(XianweiProxy.prototype, "list", {
                    get: function () {
                        return this._model.list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "cfgArr", {
                    get: function () {
                        if (!this._model.cfgArr || !this._model.cfgArr.size) {
                            var cfgArr = game.getConfigListByName("xianwei_base.json" /* XianweiBase */);
                            for (var k in cfgArr) {
                                var cfgs = cfgArr[k];
                                for (var k2 in cfgs) {
                                    this._model.cfgArr.set(+k + 1 + "_" + k2, cfgs[k2]);
                                }
                            }
                        }
                        return this._model.cfgArr;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XianweiProxy.prototype, "xianwei_buy_time", {
                    get: function () {
                        if (!this._model.xianwei_buy_time) {
                            var param = game.GameConfig.getParamConfigById("xianwei_buy_time");
                            this._model.xianwei_buy_time = param.value;
                        }
                        return this._model.xianwei_buy_time;
                    },
                    enumerable: true,
                    configurable: true
                });
                XianweiProxy.prototype.getRankName = function (item) {
                    if (!item) {
                        return game.getLanById("tishi_2" /* tishi_2 */);
                    }
                    return item.name;
                };
                XianweiProxy.prototype.getRanks = function () {
                    var ranks = this.ranks;
                    var cfgArr = game.getConfigListByName("xianwei_rank_reward.json" /* XianweiRankReward */);
                    var list = [];
                    var _loop_5 = function (cfg) {
                        if (cfg.rank_no.length == 1) {
                            var item = ranks && ranks[cfg.rank_no[0] - 1];
                            var name = this_5.getRankName(item);
                            list.push({
                                rank: cfg.rank_no[0],
                                name: name,
                                hurtStr: item && item.value.toString() || "",
                                reward: cfg.reward
                            });
                        }
                        else {
                            var start = cfg.rank_no[0];
                            var end = cfg.rank_no[1];
                            var more_4 = start > game.MAX_RANK_NUM;
                            var rank_4 = more_4 ? start - 1 + "+" : start + "-" + end;
                            var lookHandler = Handler.alloc(this_5, function () {
                                mod.ViewMgr.getIns().showSecondPop("61" /* More */, "194" /* XianweiSection */, { rank: rank_4 });
                            });
                            list.push({
                                rank: rank_4,
                                name: "",
                                reward: cfg.reward,
                                lookHandler: !more_4 && lookHandler
                            });
                        }
                    };
                    var this_5 = this;
                    for (var _i = 0, cfgArr_7 = cfgArr; _i < cfgArr_7.length; _i++) {
                        var cfg = cfgArr_7[_i];
                        _loop_5(cfg);
                    }
                    return list;
                };
                XianweiProxy.prototype.getRankStr = function () {
                    var info = this.my_rank;
                    if (!info || !info.rank_num) {
                        var param = game.getConfigByNameId("param.json" /* Param */, "xianwei_rank_score");
                        // TODO:LanDef.guild_tips14
                        return game.StringUtil.substitute(game.getLanById("guild_tips14" /* guild_tips14 */), [param.value]);
                    }
                    else {
                        var str = game.TextUtil.addColor("" + info.rank_num, 2330156 /* GREEN */);
                        var content = game.getLanById("compete_mars_4" /* compete_mars_4 */);
                        return game.StringUtil.substitute(content, [str]);
                    }
                };
                XianweiProxy.prototype.getRankCountStr = function () {
                    var info = this.my_rank;
                    var str = game.TextUtil.addColor("" + (info && info.value || 0), 2330156 /* GREEN */);
                    return "\u6218\u795E\u79EF\u5206\uFF1A" + str;
                };
                XianweiProxy.prototype.getRankSection = function (rank) {
                    var strArr = rank.split("-");
                    var start = +strArr[0];
                    var end = +strArr[1];
                    var ranks = this.ranks;
                    var list = [];
                    for (var i = start - 1; i < end; i++) {
                        var item = ranks && ranks[i];
                        var name = this.getRankName(item);
                        if (item) {
                            list.push({ rank: item.rank_num, name: name, value: +item.value });
                        }
                        else {
                            list.push({ rank: i + 1, name: name, value: 0 });
                        }
                    }
                    return list;
                };
                return XianweiProxy;
            }(game.ProxyBase));
            more_3.XianweiProxy = XianweiProxy;
            __reflect(XianweiProxy.prototype, "game.mod.more.XianweiProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuangguView = /** @class */ (function (_super) {
                __extends(HuangguView, _super);
                function HuangguView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuangguSkin";
                    return _this;
                }
                return HuangguView;
            }(eui.Component));
            more.HuangguView = HuangguView;
            __reflect(HuangguView.prototype, "game.mod.more.HuangguView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var HundunBtnItem = /** @class */ (function (_super) {
                __extends(HundunBtnItem, _super);
                function HundunBtnItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HundunBtnItemSkin";
                    return _this;
                }
                /**
                 * 更新按钮
                 * @param icon
                 * @param name
                 * @param showHint
                 * @param desc
                 */
                HundunBtnItem.prototype.updateShow = function (icon, name, showHint, desc) {
                    if (showHint === void 0) { showHint = false; }
                    if (desc === void 0) { desc = ''; }
                    this.img_icon.source = icon;
                    this.lb_name.textFlow = game.TextUtil.parseHtml(name);
                    this.redPoint.visible = !!showHint;
                    this.gr_desc.visible = !!desc;
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(desc ? desc : '');
                };
                /**
                 * 更新倒计时
                 * @param endTime 结束时间戳，单位：秒
                 * @param sufStr 时间末尾文本，默认空
                 */
                HundunBtnItem.prototype.updateTime = function (endTime, sufStr) {
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this.timeItem.visible = false;
                        return;
                    }
                    this.timeItem.visible = true;
                    this.timeItem.updateLeftTime(leftTime, sufStr);
                };
                HundunBtnItem.prototype.setHint = function (hint) {
                    if (hint === void 0) { hint = false; }
                    this.redPoint && (this.redPoint.visible = hint);
                };
                return HundunBtnItem;
            }(mod.Btn));
            more.HundunBtnItem = HundunBtnItem;
            __reflect(HundunBtnItem.prototype, "game.mod.more.HundunBtnItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HundunView = /** @class */ (function (_super) {
                __extends(HundunView, _super);
                function HundunView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HundunSkin";
                    return _this;
                }
                return HundunView;
            }(eui.Component));
            more.HundunView = HundunView;
            __reflect(HundunView.prototype, "game.mod.more.HundunView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoFightView = /** @class */ (function (_super) {
                __extends(FengmoFightView, _super);
                function FengmoFightView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.FengmosFightSkin";
                    return _this;
                }
                return FengmoFightView;
            }(eui.Component));
            more.FengmoFightView = FengmoFightView;
            __reflect(FengmoFightView.prototype, "game.mod.more.FengmoFightView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoHurtRewardItem = /** @class */ (function (_super) {
                __extends(FengmoHurtRewardItem, _super);
                function FengmoHurtRewardItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FengmoHurtRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 257 /* Fengmo */);
                };
                FengmoHurtRewardItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    //let cfg: FengmoDamageRewardConfig = this.data;
                    var hurt = this._proxy.damage_value;
                    var target = this.data.cfg.damage_value * 10000;
                    // let bool: boolean = hurt >= target;
                    // let bought: boolean = this._proxy.damage_indexs.indexOf(cfg.index) > -1;
                    //
                    // this.btn_buy.visible = bool && !bought;
                    if (this.data.status == 1) {
                        //达到领取条件
                        this.btn_buy.label = "领取";
                        this.btn_buy.setHint(true);
                        this.btn_buy.visible = true;
                        this.img_bought.visible = false;
                    }
                    else if (this.data.status == 2) {
                        //未达到领取条件
                        this.btn_buy.visible = false;
                        this.img_bought.visible = false;
                    }
                    else if (this.data.status == 3) {
                        //已经领取
                        this.btn_buy.visible = false;
                        this.img_bought.visible = true;
                    }
                    var color = this.data.status == 1 ? 2330156 /* GREEN */ : 16719376 /* RED */;
                    var hurtStr = game.StringUtil.getHurtNumStr(hurt);
                    var targetStr = game.StringUtil.getHurtNumStr(target);
                    var str = game.StringUtil.substitute(game.getLanById("xianzong_tips14" /* xianzong_tips14 */), [targetStr]);
                    var str2 = game.TextUtil.addColor("(" + hurtStr + "/" + targetStr + ")", color);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(str + str2);
                    this._listData.replaceAll(this.data.cfg.damage_awards);
                };
                /**点击购买*/
                FengmoHurtRewardItem.prototype.onClick = function () {
                    this._proxy.c2s_guild_fengmo_get_reward(1, this.data.cfg.index);
                };
                return FengmoHurtRewardItem;
            }(mod.BaseGiftItemRender));
            more.FengmoHurtRewardItem = FengmoHurtRewardItem;
            __reflect(FengmoHurtRewardItem.prototype, "game.mod.more.FengmoHurtRewardItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoHurtRewardView = /** @class */ (function (_super) {
                __extends(FengmoHurtRewardView, _super);
                function FengmoHurtRewardView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.FengmosHurtRewardSkin";
                    return _this;
                }
                return FengmoHurtRewardView;
            }(eui.Component));
            more.FengmoHurtRewardView = FengmoHurtRewardView;
            __reflect(FengmoHurtRewardView.prototype, "game.mod.more.FengmoHurtRewardView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoProgressItem = /** @class */ (function (_super) {
                __extends(FengmoProgressItem, _super);
                function FengmoProgressItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FengmoProgressItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    if (!this.data.val) {
                        this.progress.show(0, this.data.target, false, 0, false, 2 /* NoValue */);
                    }
                    else {
                        var val = this.data.val - this.data.start;
                        val = val < 0 ? 0 : val;
                        var target = this.data.target - this.data.start;
                        this.progress.show(val, target, false, 0, false, 2 /* NoValue */);
                    }
                };
                return FengmoProgressItem;
            }(mod.BaseRenderer));
            more.FengmoProgressItem = FengmoProgressItem;
            __reflect(FengmoProgressItem.prototype, "game.mod.more.FengmoProgressItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var FengmoProgressReward = /** @class */ (function (_super) {
                __extends(FengmoProgressReward, _super);
                function FengmoProgressReward() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._listData = new ArrayCollection();
                    _this._listReward = new ArrayCollection();
                    _this._count = 4;
                    return _this;
                }
                FengmoProgressReward.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list_progress.itemRenderer = mod.ComProgressItem;
                    this.list_progress.dataProvider = this._listData;
                    this.list_reward.itemRenderer = mod.ComProgressRewardItem;
                    this.list_reward.dataProvider = this._listReward;
                    this.img_tips.source = "leijicishu";
                    this._proxy = game.getProxy("61" /* More */, 257 /* Fengmo */);
                };
                // public setData(val: number): void {
                //     this.lab_count.text = `${val}`;
                //     let cfgArr: FengmoTiaozhanRewardConfig[] = getConfigListByName(ConfigName.FengmoTiaozhanReward);
                //     let proxy: FengmoProxy = getProxy(ModName.More, ProxyType.Fengmo);
                //     let list: FengmoTiaozhanRewardConfig[] = [];
                //     let cfg: FengmoTiaozhanRewardConfig = cfgArr.find(v => {
                //         return proxy.times_indexs.indexOf(v.index) == -1;
                //     });
                //     let last: FengmoTiaozhanRewardConfig = cfgArr[cfgArr.length - 1];
                //     if (cfg && last.index - cfg.index >= 3) {
                //         for (let k in cfgArr) {
                //             if (cfgArr[k].index < cfg.index) {
                //                 continue;
                //             }
                //             if (list.length > 3) {
                //                 break;
                //             }
                //             list.push(cfgArr[k]);
                //         }
                //     } else {
                //         for (let len = cfgArr.length - 1; len > 0; len--) {
                //             if (list.length > 3) {
                //                 break;
                //             }
                //             list.push(cfgArr[len]);
                //         }
                //     }
                //     this._listReward.replaceAll(list.sort((a, b) => {
                //         return a.index - b.index;
                //     }));
                //     let vlist: VProgressData[] = [];
                //     for (let i in list) {
                //         let index = list[i].index;
                //         let cfg = getConfigByNameId(ConfigName.FengmoTiaozhanReward, index);
                //         let before = getConfigByNameId(ConfigName.FengmoTiaozhanReward, index - 1);
                //         let start = before && before.tiaozhan_times || 0;
                //         let target: number = cfg.tiaozhan_times;
                //         vlist.push({val, start, target})
                //     }
                //     this._listData.replaceAll(vlist.sort((a, b) => {
                //         return a.target - b.target;
                //     }))
                // }
                FengmoProgressReward.prototype.updateShow = function (val) {
                    var _this = this;
                    // let val: number = this._proxy.max_win_count;
                    this.scroller.maxWidth = mod.ITEM_WIDTH * this._count;
                    this.lab_count.text = "" + val;
                    var cfgArr = game.getConfigListByName("fengmo_tiaozhan_reward.json" /* FengmoTiaozhanReward */);
                    var len = cfgArr.length;
                    var list = [];
                    for (var i = 0; i < cfgArr.length; i++) {
                        var cfg = cfgArr[i];
                        var cfgBefore = cfgArr[i - 1];
                        var start = cfgBefore && cfgBefore.tiaozhan_times || 0;
                        var target = cfg.tiaozhan_times;
                        list.push({ val: val, start: start, target: target });
                    }
                    this._listData.replaceAll(list);
                    var idx = -1;
                    var reward = [];
                    var _loop_6 = function (i) {
                        var cfg = cfgArr[i];
                        var state = this_6._proxy.getRewardState(cfg);
                        if (state != 2 /* Done */ && idx == -1) {
                            idx = +i;
                        }
                        var content = game.StringUtil.substitute(game.getLanById("xianzong_tips15" /* xianzong_tips15 */), [cfg.tiaozhan_times]) + game.TextUtil.addEnoughColor(val, cfg.tiaozhan_times);
                        reward.push({
                            state: state,
                            content: content,
                            index: cfg.index,
                            count: cfg.tiaozhan_times,
                            rewards: cfg.tiaozhan_awards,
                            handler: base.Handler.alloc(this_6, function () {
                                _this._proxy.c2s_guild_fengmo_get_reward(2, cfg.index);
                            })
                        });
                    };
                    var this_6 = this;
                    for (var i in cfgArr) {
                        _loop_6(i);
                    }
                    this._listReward.replaceAll(reward);
                    if (idx < 0 || len - idx < this._count) {
                        idx = len - this._count;
                    }
                    // ScrollUtil.moveHToAssign(this.scroller, idx, ITEM_WIDTH);
                    // this.scroller.viewport.scrollH = idx * ITEM_WIDTH;
                    base.Tween.remove(this.scroller.viewport);
                    base.Tween.get(this.scroller.viewport).to({ scrollH: idx * mod.ITEM_WIDTH }, 100);
                };
                return FengmoProgressReward;
            }(mod.BaseRenderer));
            more.FengmoProgressReward = FengmoProgressReward;
            __reflect(FengmoProgressReward.prototype, "game.mod.more.FengmoProgressReward");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var FengmoProgressRewardItem = /** @class */ (function (_super) {
                __extends(FengmoProgressRewardItem, _super);
                function FengmoProgressRewardItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FengmoProgressRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 257 /* Fengmo */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_box, this.onClickBtn, this);
                };
                FengmoProgressRewardItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data;
                    this.currentState = "" + (this.itemIndex + 1);
                    this.lab_value.text = "" + cfg.tiaozhan_times;
                    var indexs = this._proxy.times_indexs;
                    if (indexs.indexOf(cfg.index) > -1) {
                        this._state = 2;
                    }
                    else {
                        this._state = +(this._proxy.total_times >= cfg.tiaozhan_times);
                    }
                    this.img_got.visible = this._state == 2;
                    this.redPoint.visible = this._state == 1;
                };
                FengmoProgressRewardItem.prototype.onClickBtn = function () {
                    if (!this._state) {
                        var cfg = this.data;
                        var tips = game.StringUtil.substitute(game.getLanById("xianzong_tips15" /* xianzong_tips15 */), [cfg.tiaozhan_times]);
                        var countStr = game.TextUtil.addEnoughColor(this._proxy.total_times, cfg.tiaozhan_times);
                        mod.ViewMgr.getIns().showBoxReward(tips + countStr, cfg.tiaozhan_awards);
                        return;
                    }
                    if (this._state != 1) {
                        return;
                    }
                    this._proxy.c2s_guild_fengmo_get_reward(2, this.data.index);
                };
                return FengmoProgressRewardItem;
            }(mod.BaseRenderer));
            more.FengmoProgressRewardItem = FengmoProgressRewardItem;
            __reflect(FengmoProgressRewardItem.prototype, "game.mod.more.FengmoProgressRewardItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoResultWinView = /** @class */ (function (_super) {
                __extends(FengmoResultWinView, _super);
                function FengmoResultWinView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.FengmoResultWinSkin";
                    return _this;
                }
                return FengmoResultWinView;
            }(eui.Component));
            more.FengmoResultWinView = FengmoResultWinView;
            __reflect(FengmoResultWinView.prototype, "game.mod.more.FengmoResultWinView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoSceneView = /** @class */ (function (_super) {
                __extends(FengmoSceneView, _super);
                function FengmoSceneView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.FengmoSceneSkin";
                    return _this;
                }
                return FengmoSceneView;
            }(eui.Component));
            more.FengmoSceneView = FengmoSceneView;
            __reflect(FengmoSceneView.prototype, "game.mod.more.FengmoSceneView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoView = /** @class */ (function (_super) {
                __extends(FengmoView, _super);
                function FengmoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.FengmoSkin";
                    return _this;
                }
                return FengmoView;
            }(eui.Component));
            more.FengmoView = FengmoView;
            __reflect(FengmoView.prototype, "game.mod.more.FengmoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessAttrView = /** @class */ (function (_super) {
                __extends(GoddessAttrView, _super);
                function GoddessAttrView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessAttrSkin";
                    return _this;
                }
                return GoddessAttrView;
            }(eui.Component));
            more.GoddessAttrView = GoddessAttrView;
            __reflect(GoddessAttrView.prototype, "game.mod.more.GoddessAttrView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessChatView = /** @class */ (function (_super) {
                __extends(GoddessChatView, _super);
                function GoddessChatView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessChatSkin";
                    return _this;
                }
                return GoddessChatView;
            }(eui.Component));
            more.GoddessChatView = GoddessChatView;
            __reflect(GoddessChatView.prototype, "game.mod.more.GoddessChatView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var GoddessEventItem = /** @class */ (function (_super) {
                __extends(GoddessEventItem, _super);
                function GoddessEventItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GoddessEventItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(255 /* Huanggu */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_item, this.onClick, this);
                };
                GoddessEventItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.index;
                    this._isOpen = this._proxy.isEventOpen(index);
                    this._isFinish = this._proxy.isEventFinish(index);
                    var nameStr = data.name;
                    if (this._isFinish) {
                        nameStr += game.TextUtil.addColor("（" + game.getLanById("task7" /* task7 */) + "）", 8585074 /* GREEN */);
                    }
                    else if (this._isOpen) {
                        var stage = this._proxy.getEventStage(index);
                        var maxStage = this._proxy.getEventMaxStage(index);
                        nameStr += game.TextUtil.addColor("（" + stage + "/" + maxStage + "）", 16731212 /* RED */);
                    }
                    this.lab_name.textFlow = game.TextUtil.parseHtml(nameStr);
                    this.btn_item.icon = "goddess_event" + index;
                    this.img_lock.visible = !this._isOpen && this._proxy.chatLv >= data.condition;
                    this.updateHint();
                };
                GoddessEventItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (!this._isOpen) {
                        game.PromptBox.getIns().show(game.getLanById("huanggu_nvshen_tips15" /* huanggu_nvshen_tips15 */));
                        return;
                    }
                    if (this._isFinish) {
                        game.PromptBox.getIns().show(game.getLanById("huanggu_nvshen_tips14" /* huanggu_nvshen_tips14 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "39" /* GoddessEventChallenge */, data);
                };
                GoddessEventItem.prototype.updateHint = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var index = data.index;
                    this.btn_item.redPoint.visible = this._proxy.checkEventPerHint(index);
                };
                return GoddessEventItem;
            }(mod.BaseListenerRenderer));
            more.GoddessEventItem = GoddessEventItem;
            __reflect(GoddessEventItem.prototype, "game.mod.more.GoddessEventItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessEventView = /** @class */ (function (_super) {
                __extends(GoddessEventView, _super);
                function GoddessEventView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessEventSkin";
                    return _this;
                }
                return GoddessEventView;
            }(eui.Component));
            more.GoddessEventView = GoddessEventView;
            __reflect(GoddessEventView.prototype, "game.mod.more.GoddessEventView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessExp = /** @class */ (function (_super) {
                __extends(GoddessExp, _super);
                function GoddessExp() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GoddessExp.prototype.updateShow = function (val, max, lv) {
                    this.upStarEft.updateCost(val, max, true, "已满");
                    this.lab_lv.text = lv + ""; //供奉等级
                };
                return GoddessExp;
            }(mod.Btn));
            more.GoddessExp = GoddessExp;
            __reflect(GoddessExp.prototype, "game.mod.more.GoddessExp");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessGodView = /** @class */ (function (_super) {
                __extends(GoddessGodView, _super);
                function GoddessGodView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessGodSkin";
                    return _this;
                }
                return GoddessGodView;
            }(eui.Component));
            more.GoddessGodView = GoddessGodView;
            __reflect(GoddessGodView.prototype, "game.mod.more.GoddessGodView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessSummonView = /** @class */ (function (_super) {
                __extends(GoddessSummonView, _super);
                function GoddessSummonView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessSummonSkin";
                    return _this;
                }
                return GoddessSummonView;
            }(eui.Component));
            more.GoddessSummonView = GoddessSummonView;
            __reflect(GoddessSummonView.prototype, "game.mod.more.GoddessSummonView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var GoddessTargetRender = /** @class */ (function (_super) {
                __extends(GoddessTargetRender, _super);
                function GoddessTargetRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                GoddessTargetRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("61" /* More */).retProxy(255 /* Huanggu */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_go, this.onClickGo, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_buy, this.onClick, this);
                };
                GoddessTargetRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var curCnt = this._proxy.cnt;
                    var needCnt = data.times;
                    this._canDraw = curCnt >= needCnt;
                    var cntStr = game.TextUtil.addColor("(" + curCnt + "/" + needCnt + ")", this._canDraw ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    var condStr = game.StringUtil.substitute(game.getLanById("huanggu_nvshen_tips17" /* huanggu_nvshen_tips17 */), [cntStr]);
                    this.lb_cond.textFlow = game.TextUtil.parseHtml(condStr);
                    var index = data.index;
                    var hasFreeDraw = this._proxy.hasFreeDraw(index);
                    var iconData = {
                        prop: data.reward[0],
                        isGot: hasFreeDraw,
                        showTips: true
                    };
                    this.icon.data = iconData;
                    this.img_got.visible = hasFreeDraw;
                    this.btn_go.visible = !hasFreeDraw;
                    if (this.btn_go.visible) {
                        this.btn_go.redPoint.visible = this._canDraw;
                        if (this._canDraw) {
                            this.btn_go.labelDisplay.text = game.getLanById("tishi_29" /* tishi_29 */);
                            this.btn_go.setYellow();
                        }
                        else {
                            this.btn_go.labelDisplay.text = game.getLanById("goto" /* goto */);
                            this.btn_go.setBlue();
                        }
                    }
                    this._productId = data.gift_id;
                    var reward2 = this._productId ? mod.PayUtil.getRewards(this._productId) : data.reward2;
                    this._rewardList.source = reward2.slice(0, 3);
                    var hasBuyDraw = this._proxy.hasBuyDraw(index);
                    this.img_got0.visible = hasBuyDraw;
                    this.btn_buy.visible = !hasBuyDraw;
                    if (this.btn_buy.visible) {
                        if (this._productId) {
                            //人民币购买
                            var rmbStr = mod.PayUtil.getRmbValue(this._productId) + mod.PayUtil.getRmbUnit();
                            this.btn_buy.labelDisplay.text = rmbStr;
                            this.btn_buy.redPoint.visible = false;
                            this.btn_buy.resetCost();
                        }
                        else {
                            //仙玉购买
                            this._cost = data.cost[0];
                            this.btn_buy.setCost(this._cost);
                            this.btn_buy.redPoint.visible = this._canDraw && mod.BagUtil.checkPropCnt(this._cost[0], this._cost[1]);
                            this.btn_buy.labelDisplay.text = "";
                        }
                    }
                };
                GoddessTargetRender.prototype.onClickGo = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (!this._canDraw) {
                        //前往
                        facade.sendNt("on_common_back" /* ON_COMMON_BACK */);
                        return;
                    }
                    this._proxy.c2s_huanggu_nvshen_op(7 /* Target */, data.index, 1 /* Free */);
                };
                GoddessTargetRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (!this._canDraw) {
                        game.PromptBox.getIns().show(game.getLanById("jinjielibao_tips2" /* jinjielibao_tips2 */));
                        return;
                    }
                    if (this._productId) {
                        //人民币购买
                        mod.PayUtil.pay(this._productId);
                    }
                    else {
                        //仙玉购买
                        if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                            return;
                        }
                        this._proxy.c2s_huanggu_nvshen_op(7 /* Target */, data.index, 2 /* Buy */);
                    }
                };
                return GoddessTargetRender;
            }(mod.BaseListenerRenderer));
            more.GoddessTargetRender = GoddessTargetRender;
            __reflect(GoddessTargetRender.prototype, "game.mod.more.GoddessTargetRender");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessTargetView = /** @class */ (function (_super) {
                __extends(GoddessTargetView, _super);
                function GoddessTargetView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessTargetSkin";
                    return _this;
                }
                return GoddessTargetView;
            }(eui.Component));
            more.GoddessTargetView = GoddessTargetView;
            __reflect(GoddessTargetView.prototype, "game.mod.more.GoddessTargetView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessView = /** @class */ (function (_super) {
                __extends(GoddessView, _super);
                function GoddessView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.GoddessSkin";
                    return _this;
                }
                return GoddessView;
            }(eui.Component));
            more.GoddessView = GoddessView;
            __reflect(GoddessView.prototype, "game.mod.more.GoddessView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var RewardShowView = /** @class */ (function (_super) {
                __extends(RewardShowView, _super);
                function RewardShowView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.RewardShowSkin";
                    return _this;
                }
                return RewardShowView;
            }(eui.Component));
            more.RewardShowView = RewardShowView;
            __reflect(RewardShowView.prototype, "game.mod.more.RewardShowView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiBuffItem = /** @class */ (function (_super) {
                __extends(XiandiBuffItem, _super);
                function XiandiBuffItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiBuffItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    if (this.data.skillId != undefined) {
                        var cfg = game.getConfigByNameId("buff.json" /* Buff */, this.data.skillId);
                        this.img_icon.source = cfg && cfg.icon || "";
                    }
                    if (this.data.showHint != undefined) {
                        this.redPoint.visible = this.data.showHint;
                    }
                    if (this.data.isAct != undefined) {
                        this.img_lock.visible = !this.data.isAct;
                        if (this.data.lockStr) {
                            this.img_lock.source = this.data.lockStr;
                        }
                    }
                    if (this.data.bgStr != undefined) {
                        this.img_bg.source = this.data.bgStr;
                    }
                };
                return XiandiBuffItem;
            }(mod.SkillItemRender));
            more.XiandiBuffItem = XiandiBuffItem;
            __reflect(XiandiBuffItem.prototype, "game.mod.more.XiandiBuffItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiGiftView = /** @class */ (function (_super) {
                __extends(XiandiGiftView, _super);
                function XiandiGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiGiftSkin";
                    return _this;
                }
                return XiandiGiftView;
            }(eui.Component));
            more.XiandiGiftView = XiandiGiftView;
            __reflect(XiandiGiftView.prototype, "game.mod.more.XiandiGiftView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiGodressView = /** @class */ (function (_super) {
                __extends(XiandiGodressView, _super);
                // public lab_desc:eui.Label;
                function XiandiGodressView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiGodressSkin";
                    return _this;
                }
                return XiandiGodressView;
            }(eui.Component));
            more.XiandiGodressView = XiandiGodressView;
            __reflect(XiandiGodressView.prototype, "game.mod.more.XiandiGodressView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiHouseItem = /** @class */ (function (_super) {
                __extends(XiandiHouseItem, _super);
                function XiandiHouseItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiHouseItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XiandiHouseItem.prototype.setData = function (index, str) {
                    this.addAnimate(index, this.grp_eft);
                    this.grp_eft.scaleX = this.grp_eft.scaleY = 0.8;
                    this.lab_desc.text = str;
                };
                XiandiHouseItem.prototype.setGray = function (bool) {
                    if (bool) {
                        //亮开启
                        this.grp_eft.filters = null;
                    }
                    else {
                        this.grp_eft.filters = [mod.FilterUtil.getGrapFilter()];
                    }
                };
                return XiandiHouseItem;
            }(mod.BaseRenderer));
            more.XiandiHouseItem = XiandiHouseItem;
            __reflect(XiandiHouseItem.prototype, "game.mod.more.XiandiHouseItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiHouseView = /** @class */ (function (_super) {
                __extends(XiandiHouseView, _super);
                function XiandiHouseView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiHouseSkin";
                    return _this;
                }
                return XiandiHouseView;
            }(eui.Component));
            more.XiandiHouseView = XiandiHouseView;
            __reflect(XiandiHouseView.prototype, "game.mod.more.XiandiHouseView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiInfoItem = /** @class */ (function (_super) {
                __extends(XiandiInfoItem, _super);
                function XiandiInfoItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiInfoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XiandiInfoItem.prototype.dataChanged = function () {
                    // if (!this.data) {
                    //     this.grp_info.visible = false;
                    //     return;
                    // }
                    var info = this.data;
                    this.lab_name.text = info && info.name || game.getLanById("tishi_2" /* tishi_2 */);
                    this.lab_power.text = "" + (info && info.showpower && info.showpower.toNumber() || 0);
                    this.img_nobody.visible = !info;
                    if (info) {
                        this.updateRankUIRole(this.grp_eft, info, 0.8);
                    }
                };
                XiandiInfoItem.prototype.setData = function (data) {
                    this.data = data;
                };
                return XiandiInfoItem;
            }(mod.BaseRenderer));
            more.XiandiInfoItem = XiandiInfoItem;
            __reflect(XiandiInfoItem.prototype, "game.mod.more.XiandiInfoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiInfoView = /** @class */ (function (_super) {
                __extends(XiandiInfoView, _super);
                function XiandiInfoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiInfoSkin";
                    return _this;
                }
                return XiandiInfoView;
            }(eui.Component));
            more.XiandiInfoView = XiandiInfoView;
            __reflect(XiandiInfoView.prototype, "game.mod.more.XiandiInfoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiItem = /** @class */ (function (_super) {
                __extends(XiandiItem, _super);
                function XiandiItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XiandiItem.prototype.dataChanged = function () {
                    // if (!this.data) {
                    //     return;
                    // }
                    var info = this.data;
                    this.lab_name.text = info && info.name || game.getLanById("tishi_2" /* tishi_2 */);
                    if (this.data) {
                        this.updateRankUIRole(this.grp_eft, this.data, 0.6);
                    }
                    this.img_nobody.visible = !this.data;
                    // this.img_rank.visible = info && info.rank_num > 0;
                    // if (this.img_rank.visible) {
                    // }
                    this.img_rank.source = "rank" + this._index;
                    this.lab_score.text = "" + (info && info.value || 0);
                };
                XiandiItem.prototype.setData = function (data, index) {
                    this._index = index;
                    this.data = data;
                };
                return XiandiItem;
            }(mod.BaseRenderer));
            more.XiandiItem = XiandiItem;
            __reflect(XiandiItem.prototype, "game.mod.more.XiandiItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            /**仙帝弑帝夺位 */
            var XiandiJockeyItem = /** @class */ (function (_super) {
                __extends(XiandiJockeyItem, _super);
                function XiandiJockeyItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiJockeyItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_fight, this.onClickFight, this);
                    this._proxy = game.getProxy("61" /* More */, 260 /* Xiandi */);
                };
                XiandiJockeyItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        this.lab_name.text = game.getLanById("tishi_2" /* tishi_2 */);
                        this.head.defaultHeadShow();
                        return;
                    }
                    this.lab_name.text = this.data.name;
                    this.head.updateHeadShow(this.data.head, this.data.head_frame, this.data.sex, this.data.role_id);
                    this.btn_fight.visible = !this._proxy.is_tiandi;
                };
                XiandiJockeyItem.prototype.onClickFight = function () {
                    this._proxy.onCheckJockey();
                };
                XiandiJockeyItem.prototype.setData = function (data) {
                    this.data = data;
                };
                XiandiJockeyItem.prototype.initData = function () {
                    this.data = this._proxy.tiandi_info;
                };
                return XiandiJockeyItem;
            }(mod.BaseRenderer));
            more.XiandiJockeyItem = XiandiJockeyItem;
            __reflect(XiandiJockeyItem.prototype, "game.mod.more.XiandiJockeyItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiKingItem = /** @class */ (function (_super) {
                __extends(XiandiKingItem, _super);
                function XiandiKingItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._bool = false;
                    _this._index = 0;
                    return _this;
                }
                XiandiKingItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 260 /* Xiandi */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_change, this.onClickChange, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_add, this.onClickChange, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_info, this.onClickInfo, this);
                };
                XiandiKingItem.prototype.dataChanged = function () {
                    var info = this.data;
                    if (info) {
                        this.updateRankUIRole(this.grp_eft, info, 0.6);
                    }
                    this.btn_change.visible = this._bool;
                    this.btn_add.visible = !info;
                    this.btn_info.visible = !this._index;
                    // this.btn_info.visible = !!info && !this._index;
                    var name = info && info.name || game.getLanById("tishi_2" /* tishi_2 */);
                    var title = "";
                    var showpower = 0;
                    if (this._index) {
                        title = "img_king_title" + this._index;
                    }
                    else {
                        title = "xiandi_title1";
                        showpower = info && info.showpower && info.showpower.toNumber() || 0;
                    }
                    var power;
                    if (showpower) {
                        power = game.StringUtil.getPowerNumStr(showpower);
                    }
                    this.titleItem.setData({ title: title, name: name, power: power });
                };
                XiandiKingItem.prototype.setData = function (data, index, bool) {
                    if (bool === void 0) { bool = false; }
                    this._index = index;
                    this._bool = bool || false;
                    this.data = data;
                };
                XiandiKingItem.prototype.onClickChange = function () {
                    if (!this._proxy.is_tiandi) {
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "127" /* XiandiList */, this._index);
                };
                XiandiKingItem.prototype.onClickInfo = function () {
                    if (!this._proxy.tiandi_info) {
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "128" /* XiandiInfo */);
                };
                return XiandiKingItem;
            }(mod.BaseRenderer));
            more.XiandiKingItem = XiandiKingItem;
            __reflect(XiandiKingItem.prototype, "game.mod.more.XiandiKingItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiListItem = /** @class */ (function (_super) {
                __extends(XiandiListItem, _super);
                function XiandiListItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiListItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 260 /* Xiandi */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_set, this.onClickBtn, this);
                };
                XiandiListItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var info = this.data.base_info;
                    this.lab_name.text = info.name;
                    this.lab_power.text = "\u6218\u529B\uFF1A" + (info.showpower && info.showpower.toNumber());
                    this.headVip.updateShow(info.head, info.head_frame, info.sex, info.vip);
                };
                XiandiListItem.prototype.onClickBtn = function () {
                    this._proxy.c2s_xiandi_zhengba_oper(4, this._proxy.king_index, this.data.base_info.role_id);
                    base.facade.hideView("61" /* More */, "127" /* XiandiList */);
                };
                return XiandiListItem;
            }(mod.BaseRenderer));
            more.XiandiListItem = XiandiListItem;
            __reflect(XiandiListItem.prototype, "game.mod.more.XiandiListItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiListView = /** @class */ (function (_super) {
                __extends(XiandiListView, _super);
                function XiandiListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiListSkin";
                    return _this;
                }
                return XiandiListView;
            }(eui.Component));
            more.XiandiListView = XiandiListView;
            __reflect(XiandiListView.prototype, "game.mod.more.XiandiListView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiShowView = /** @class */ (function (_super) {
                __extends(XiandiShowView, _super);
                function XiandiShowView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiShowSkin";
                    return _this;
                }
                return XiandiShowView;
            }(eui.Component));
            more.XiandiShowView = XiandiShowView;
            __reflect(XiandiShowView.prototype, "game.mod.more.XiandiShowView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiSkillTipsView = /** @class */ (function (_super) {
                __extends(XiandiSkillTipsView, _super);
                function XiandiSkillTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiSkillTipsSkin";
                    return _this;
                }
                return XiandiSkillTipsView;
            }(eui.Component));
            more.XiandiSkillTipsView = XiandiSkillTipsView;
            __reflect(XiandiSkillTipsView.prototype, "game.mod.more.XiandiSkillTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiTipsView = /** @class */ (function (_super) {
                __extends(XiandiTipsView, _super);
                function XiandiTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiTipsSkin";
                    return _this;
                }
                return XiandiTipsView;
            }(eui.Component));
            more.XiandiTipsView = XiandiTipsView;
            __reflect(XiandiTipsView.prototype, "game.mod.more.XiandiTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiTitleItem = /** @class */ (function (_super) {
                __extends(XiandiTitleItem, _super);
                function XiandiTitleItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiTitleItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XiandiTitleItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.currentState = !!this.data.power ? "1" : "2";
                    if (this.data.power) {
                        this.lab_power.text = this.data.power;
                    }
                    this.img_title.source = this.data.title;
                    this.lab_name.text = this.data.name;
                };
                XiandiTitleItem.prototype.setData = function (data) {
                    this.data = data;
                };
                return XiandiTitleItem;
            }(mod.BaseRenderer));
            more.XiandiTitleItem = XiandiTitleItem;
            __reflect(XiandiTitleItem.prototype, "game.mod.more.XiandiTitleItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiView = /** @class */ (function (_super) {
                __extends(XiandiView, _super);
                function XiandiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiSkin";
                    return _this;
                }
                return XiandiView;
            }(eui.Component));
            more.XiandiView = XiandiView;
            __reflect(XiandiView.prototype, "game.mod.more.XiandiView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiXianhouItem = /** @class */ (function (_super) {
                __extends(XiandiXianhouItem, _super);
                function XiandiXianhouItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiXianhouItem.prototype.showInfo = function () {
                    var proxy = game.getProxy("61" /* More */, 260 /* Xiandi */);
                    var tiandi_info = proxy.tiandi_info;
                    this.lab_name1.text = tiandi_info && tiandi_info.name || game.getLanById("tishi_2" /* tishi_2 */);
                    var showpower1 = tiandi_info && tiandi_info.showpower && tiandi_info.showpower.toNumber() || 0;
                    this.lab_power1.text = game.StringUtil.getPowerNumStr(showpower1);
                    if (tiandi_info) {
                        this.head1.updateHeadShow(tiandi_info.head, tiandi_info.head_frame, tiandi_info.sex, tiandi_info.role_id);
                    }
                    else {
                        this.head1.defaultHeadShow();
                    }
                    var xianhou_info = proxy.xianhou_info;
                    this.lab_name2.text = xianhou_info && xianhou_info.name || game.getLanById("tishi_2" /* tishi_2 */);
                    var showpower2 = xianhou_info && xianhou_info.showpower && xianhou_info.showpower.toNumber() || 0;
                    this.lab_power2.text = game.StringUtil.getPowerNumStr(showpower2);
                    if (xianhou_info) {
                        this.head2.updateHeadShow(xianhou_info.head, xianhou_info.head_frame, xianhou_info.sex, xianhou_info.role_id);
                    }
                    else {
                        this.head2.defaultHeadShow();
                    }
                };
                return XiandiXianhouItem;
            }(eui.Component));
            more.XiandiXianhouItem = XiandiXianhouItem;
            __reflect(XiandiXianhouItem.prototype, "game.mod.more.XiandiXianhouItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiActiveView = /** @class */ (function (_super) {
                __extends(XiandiActiveView, _super);
                function XiandiActiveView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiActiveSkin";
                    return _this;
                }
                return XiandiActiveView;
            }(eui.Component));
            more.XiandiActiveView = XiandiActiveView;
            __reflect(XiandiActiveView.prototype, "game.mod.more.XiandiActiveView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiShilianView = /** @class */ (function (_super) {
                __extends(XiandiShilianView, _super);
                function XiandiShilianView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiShilianSkin";
                    return _this;
                }
                return XiandiShilianView;
            }(eui.Component));
            more.XiandiShilianView = XiandiShilianView;
            __reflect(XiandiShilianView.prototype, "game.mod.more.XiandiShilianView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiStageView = /** @class */ (function (_super) {
                __extends(XiandiStageView, _super);
                function XiandiStageView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiStageSkin";
                    return _this;
                }
                return XiandiStageView;
            }(eui.Component));
            more.XiandiStageView = XiandiStageView;
            __reflect(XiandiStageView.prototype, "game.mod.more.XiandiStageView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XiandiTreasureItem = /** @class */ (function (_super) {
                __extends(XiandiTreasureItem, _super);
                function XiandiTreasureItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XiandiTreasureItem.prototype.dataChanged = function () {
                    _super.prototype.dataChanged.call(this);
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    var left_cnt = this.getLeftCnt();
                    this.updateLmtLab(left_cnt, this.data.lmt_cnt, game.getLanById("store7" /* store7 */) + ":");
                };
                XiandiTreasureItem.prototype.getLeftCnt = function () {
                    var info = mod.StoreUtil.getInfoByTypeIndex(this.data.index, this.data.type);
                    // let info = this._proxy.getStoreInfo(this.data.index);
                    var bought_cnt = info ? info.bought_cnt : 0;
                    return this.data.lmt_cnt - bought_cnt;
                };
                XiandiTreasureItem.prototype.onClickBuy = function () {
                    mod.ViewMgr.getIns().openStoreBuyTips(this.data.index, this.getLeftCnt(), Handler.alloc(mod.StoreUtil, mod.StoreUtil.c2s_exchange_shop_buy_prop, [this.data.index, this.data.type]));
                };
                return XiandiTreasureItem;
            }(mod.IconShop));
            more.XiandiTreasureItem = XiandiTreasureItem;
            __reflect(XiandiTreasureItem.prototype, "game.mod.more.XiandiTreasureItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiTreasureView = /** @class */ (function (_super) {
                __extends(XiandiTreasureView, _super);
                function XiandiTreasureView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiTreasureSkin";
                    return _this;
                }
                return XiandiTreasureView;
            }(eui.Component));
            more.XiandiTreasureView = XiandiTreasureView;
            __reflect(XiandiTreasureView.prototype, "game.mod.more.XiandiTreasureView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiWeaponView = /** @class */ (function (_super) {
                __extends(XiandiWeaponView, _super);
                function XiandiWeaponView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XiandiWeaponSkin";
                    return _this;
                }
                return XiandiWeaponView;
            }(eui.Component));
            more.XiandiWeaponView = XiandiWeaponView;
            __reflect(XiandiWeaponView.prototype, "game.mod.more.XiandiWeaponView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XianjieLuandouBossItem = /** @class */ (function (_super) {
                __extends(XianjieLuandouBossItem, _super);
                function XianjieLuandouBossItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjieLuandouBossItemSkin";
                    return _this;
                }
                XianjieLuandouBossItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(268 /* XianjieLuandou */);
                };
                XianjieLuandouBossItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XianjieLuandouBossItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    var monsterId = cfg.monster_index[0];
                    var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, monsterId);
                    this.img_icon.source = monsterCfg.res_id;
                    this.img_di.visible = cfg.lingshi_type == 1; //中间那个
                    this.img_camp.source = 'xianjie_imgtype' + cfg.lingshi_type;
                    var hp = this._proxy.getBossHp(monsterId);
                    this.updateHp(hp);
                };
                /**更新血量*/
                XianjieLuandouBossItem.prototype.updateHp = function (percent) {
                    if (!this.data) {
                        return;
                    }
                    this.bar.show(percent, 10000, false, 0, false, 0 /* Percent */); //血量
                    //已死亡
                    this.img_died.visible = percent <= 0;
                };
                return XianjieLuandouBossItem;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouBossItem = XianjieLuandouBossItem;
            __reflect(XianjieLuandouBossItem.prototype, "game.mod.more.XianjieLuandouBossItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianjieLuandouSceneSkillItem = /** @class */ (function (_super) {
                __extends(XianjieLuandouSceneSkillItem, _super);
                function XianjieLuandouSceneSkillItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.compete.KuafuDoufaSceneSkillItemSkin";
                    return _this;
                }
                XianjieLuandouSceneSkillItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 268 /* XianjieLuandou */);
                    this._shape = new egret.Shape();
                    this._shape.x = this.width * 0.5;
                    this._shape.y = this.height * 0.5;
                    this.addChild(this._shape);
                    this.img_mark.mask = this._shape;
                };
                XianjieLuandouSceneSkillItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XianjieLuandouSceneSkillItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var buffId = data[1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    if (!buffCfg) {
                        console.error("buff 表缺少配置 id = " + buffId);
                        return;
                    }
                    this.img_icon.source = buffCfg.icon;
                    this.lab_cnt.text = data[4] + '';
                    var cdTime = this._proxy.getSkillCd(this.data[0]);
                    //限制cd超过配置时间，点击时候后定时器一直存在，可能存在cd超过配置时间
                    var leftTime = Math.min(cdTime - TimeMgr.time.serverTimeSecond, this.data[2]);
                    if (leftTime > 0) {
                        this.img_mark.visible = true;
                        this.lab_time.text = leftTime + '';
                        this.changeMask();
                    }
                    else {
                        this.lab_time.text = '';
                        this.img_mark.visible = false;
                    }
                };
                //绘制cd动画
                XianjieLuandouSceneSkillItem.prototype.changeMask = function () {
                    var cdTime = this._proxy.getSkillCd(this.data[0]);
                    var cfgCdTime = this.data[2];
                    var leftTime = Math.min(cdTime - TimeMgr.time.serverTimeSecond, cfgCdTime);
                    var angle = leftTime / cfgCdTime * 360;
                    var radius = this.img_mark.height * 0.5;
                    var shape = this._shape;
                    shape.graphics.clear();
                    shape.graphics.beginFill(0xffffff, 1);
                    shape.graphics.moveTo(0, 0);
                    shape.graphics.lineTo(0, radius);
                    shape.graphics.drawArc(0, 0, radius, -90 * Math.PI / 180, (angle - 90) * Math.PI / 180, false); //顺时针绘制
                    shape.graphics.lineTo(0, 0);
                    shape.graphics.endFill();
                };
                /**
                 * 技能列表入口
                 */
                XianjieLuandouSceneSkillItem.prototype.updateSkillItem = function () {
                    this.img_icon.source = "kuafu_doufa_skill"; //todo
                    this.img_mark.visible = this.lab_time.visible = false;
                };
                XianjieLuandouSceneSkillItem.prototype.updateCost = function (cntStr) {
                    this.lab_cnt.textFlow = game.TextUtil.parseHtml(cntStr);
                };
                return XianjieLuandouSceneSkillItem;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouSceneSkillItem = XianjieLuandouSceneSkillItem;
            __reflect(XianjieLuandouSceneSkillItem.prototype, "game.mod.more.XianjieLuandouSceneSkillItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouSceneView = /** @class */ (function (_super) {
                __extends(XianjieLuandouSceneView, _super);
                function XianjieLuandouSceneView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjieLuandouSceneSkin";
                    return _this;
                }
                return XianjieLuandouSceneView;
            }(eui.Component));
            more.XianjieLuandouSceneView = XianjieLuandouSceneView;
            __reflect(XianjieLuandouSceneView.prototype, "game.mod.more.XianjieLuandouSceneView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouSkillBtn = /** @class */ (function (_super) {
                __extends(XianjieLuandouSkillBtn, _super);
                function XianjieLuandouSkillBtn() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjianLuandouSkillBtnSkin";
                    return _this;
                }
                XianjieLuandouSkillBtn.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = base.facade.retMod("61" /* More */).retProxy(268 /* XianjieLuandou */);
                    this._shape = new egret.Shape();
                    this._shape.x = this.width * 0.5;
                    this._shape.y = this.height * 0.5;
                    this.addChild(this._shape);
                    this.img_mask.mask = this._shape;
                };
                XianjieLuandouSkillBtn.prototype.dataChanged = function () {
                    var data = this.data;
                    if (data == null) {
                        return;
                    }
                    var cfg = game.GameConfig.getParamConfigById('xianjieluandou_lingshi_buff');
                    var cfgValue = cfg.value;
                    var value = cfgValue[data];
                    var buffId = value[1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    this.img_icon.source = buffCfg && buffCfg.icon || '';
                    this.lb_num.text = data + '';
                    this.changeGraphics(data);
                };
                XianjieLuandouSkillBtn.prototype.changeGraphics = function (cnt) {
                    var angle = cnt / 4 * 360;
                    var height = 190 * 0.5;
                    var radius = height * 0.5;
                    var shape = this._shape;
                    shape.graphics.clear();
                    shape.graphics.beginFill(0xffffff, 1);
                    shape.graphics.moveTo(0, 0);
                    shape.graphics.lineTo(0, height * 0.5);
                    shape.graphics.drawArc(0, 0, radius, 90 * Math.PI / 180, (angle + 90) * Math.PI / 180, false);
                    shape.graphics.lineTo(0, 0);
                    shape.graphics.endFill();
                };
                return XianjieLuandouSkillBtn;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouSkillBtn = XianjieLuandouSkillBtn;
            __reflect(XianjieLuandouSkillBtn.prototype, "game.mod.more.XianjieLuandouSkillBtn");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XianjieLuandouSkillItem = /** @class */ (function (_super) {
                __extends(XianjieLuandouSkillItem, _super);
                function XianjieLuandouSkillItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianjieLuandouSkillItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 268 /* XianjieLuandou */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_buy, this.onClick, this);
                };
                XianjieLuandouSkillItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XianjieLuandouSkillItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var buffId = data[1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    if (buffCfg) {
                        this.img_icon.source = buffCfg.icon;
                        this.lab_name.text = buffCfg.name;
                        this.lab_desc.textFlow = game.TextUtil.parseHtml(buffCfg.des);
                    }
                    var cost = [data[3], data[4]];
                    this.btn_buy.setCost(cost);
                };
                XianjieLuandouSkillItem.prototype.onClick = function () {
                    var _this = this;
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cost = [data[3], data[4]];
                    if (cost && !mod.BagUtil.checkPropCntUp(cost[0], cost[1])) {
                        return;
                    }
                    var buffId = data[1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    var costCfg = game.GameConfig.getPropConfigById(cost[0]);
                    var costDesc = game.TextUtil.addColor(cost[1] + "\u5F20" + costCfg.name, 2330156 /* GREEN */);
                    var str = "\u4F7F\u7528" + game.TextUtil.addColor(buffCfg.name, 16719376 /* RED */) + "#N" + buffCfg.des + "#N\u6D88\u8017" + costDesc;
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, function () {
                        _this._proxy.c2s_xianjie_pvp_scene_use_buff(data[0]);
                    }));
                };
                return XianjieLuandouSkillItem;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouSkillItem = XianjieLuandouSkillItem;
            __reflect(XianjieLuandouSkillItem.prototype, "game.mod.more.XianjieLuandouSkillItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouSkillTipsView = /** @class */ (function (_super) {
                __extends(XianjieLuandouSkillTipsView, _super);
                function XianjieLuandouSkillTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjieLuandouSkillTipsSkin";
                    return _this;
                }
                return XianjieLuandouSkillTipsView;
            }(eui.Component));
            more.XianjieLuandouSkillTipsView = XianjieLuandouSkillTipsView;
            __reflect(XianjieLuandouSkillTipsView.prototype, "game.mod.more.XianjieLuandouSkillTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XianjieLuandouStatisticItem = /** @class */ (function (_super) {
                __extends(XianjieLuandouStatisticItem, _super);
                function XianjieLuandouStatisticItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianjieLuandouStatisticItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(268 /* XianjieLuandou */);
                };
                XianjieLuandouStatisticItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rankNum = data.rank_num;
                    this.lab_rank.text = rankNum + '';
                    this.img_mvp.visible = rankNum == 1;
                    this.img_mvp.source = 'MVP';
                    var myGuildId = mod.RoleUtil.getGuildId();
                    var guildId = data.guild_id;
                    var color = 2904685 /* DEFAULT2 */;
                    if (myGuildId && guildId && myGuildId == guildId) {
                        color = 2330156 /* GREEN */;
                    }
                    this.lab_name.textColor = color;
                    var rankType = this._proxy.sel_scene_rank;
                    if (rankType == 2 /* Guild */) {
                        this.lab_kill.visible = this.lab_score.visible = false;
                        this.lab_num.text = (data.score || 0) + '';
                        this.lab_name.text = data.guild_name;
                    }
                    else {
                        this.lab_kill.visible = this.lab_score.visible = true;
                        this.lab_kill.text = (data.kill || 0) + '';
                        this.lab_num.text = (data.help_kill || 0) + '';
                        this.lab_score.text = (data.score || 0) + '';
                        this.lab_name.text = data.name + '\n仙宗：' + data.guild_name;
                    }
                };
                XianjieLuandouStatisticItem.prototype.updateMyShow = function () {
                    var rankType = this._proxy.sel_scene_rank;
                    var data = this._proxy.scene_my_rank;
                    var rankNum = data && data.rank_num || 0;
                    this.img_mvp.source = 'wode';
                    this.lab_rank.text = rankNum + '';
                    this.lab_name.textColor = 2330156 /* GREEN */;
                    if (rankType == 2 /* Guild */) {
                        this.lab_kill.visible = this.lab_score.visible = false;
                        this.lab_num.text = "" + (data && data.score || 0);
                        this.lab_name.text = data && data.guild_name || '';
                    }
                    else {
                        this.lab_kill.visible = this.lab_score.visible = true;
                        this.lab_kill.text = "" + (data && data.kill || 0);
                        this.lab_num.text = "" + (data && data.help_kill || 0);
                        this.lab_score.text = "" + (data && data.score || 0);
                        this.lab_name.text = data && data.name || '';
                    }
                };
                return XianjieLuandouStatisticItem;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouStatisticItem = XianjieLuandouStatisticItem;
            __reflect(XianjieLuandouStatisticItem.prototype, "game.mod.more.XianjieLuandouStatisticItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouStatisticView = /** @class */ (function (_super) {
                __extends(XianjieLuandouStatisticView, _super);
                function XianjieLuandouStatisticView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjieLuandouStatisticSkin";
                    return _this;
                }
                return XianjieLuandouStatisticView;
            }(eui.Component));
            more.XianjieLuandouStatisticView = XianjieLuandouStatisticView;
            __reflect(XianjieLuandouStatisticView.prototype, "game.mod.more.XianjieLuandouStatisticView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouView = /** @class */ (function (_super) {
                __extends(XianjieLuandouView, _super);
                function XianjieLuandouView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjieLuandouSkin";
                    return _this;
                }
                return XianjieLuandouView;
            }(eui.Component));
            more.XianjieLuandouView = XianjieLuandouView;
            __reflect(XianjieLuandouView.prototype, "game.mod.more.XianjieLuandouView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XianjieLuandouZhanbaoItem = /** @class */ (function (_super) {
                __extends(XianjieLuandouZhanbaoItem, _super);
                function XianjieLuandouZhanbaoItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianjieLuandouZhanbaoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(268 /* XianjieLuandou */);
                };
                XianjieLuandouZhanbaoItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var bossId = data.boss_id.toNumber();
                    var bossCfg = game.getConfigByNameId("monster1.json" /* Monster */, bossId);
                    this.img_boss.source = bossCfg && bossCfg.res_id || '';
                    this.lb_name.text = bossCfg && bossCfg.name || '';
                    this.lb_guildname.text = game.getLanById("xianjieluandou_tips12" /* xianjieluandou_tips12 */) + "\uFF1A" + (data.kill_name || '无');
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(game.getLanById("xianjieluandou_tips11" /* xianjieluandou_tips11 */));
                    var hp = this._proxy.getBossHp(bossId);
                    this.lb_died.visible = hp <= 0;
                };
                return XianjieLuandouZhanbaoItem;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouZhanbaoItem = XianjieLuandouZhanbaoItem;
            __reflect(XianjieLuandouZhanbaoItem.prototype, "game.mod.more.XianjieLuandouZhanbaoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouZhanbaoView = /** @class */ (function (_super) {
                __extends(XianjieLuandouZhanbaoView, _super);
                function XianjieLuandouZhanbaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianjieLuandouZhanbaoSkin";
                    return _this;
                }
                return XianjieLuandouZhanbaoView;
            }(eui.Component));
            more.XianjieLuandouZhanbaoView = XianjieLuandouZhanbaoView;
            __reflect(XianjieLuandouZhanbaoView.prototype, "game.mod.more.XianjieLuandouZhanbaoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiCoolTimeItem = /** @class */ (function (_super) {
                __extends(XianmaiCoolTimeItem, _super);
                function XianmaiCoolTimeItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiCoolTimeItemSkin";
                    return _this;
                }
                XianmaiCoolTimeItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 261 /* Xianmai */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_lengque, this.onClick, this);
                };
                /**
                 * 大于2小时，才会出现冷却加速按钮
                 */
                XianmaiCoolTimeItem.prototype.updateShow = function () {
                    if (!this._proxy) {
                        this._proxy = game.getProxy("61" /* More */, 261 /* Xianmai */);
                    }
                    var leftCoolTime = this._proxy.getLeftCoolTime();
                    this.visible = leftCoolTime > 0;
                    this.btn_lengque.visible = this._proxy.isCoolTimeLarge();
                    this.lb_cooltime.textFlow = game.TextUtil.parseHtml(this._proxy.getCoolTimeStr());
                };
                XianmaiCoolTimeItem.prototype.onClick = function () {
                    this._proxy.dealCoolTime();
                };
                return XianmaiCoolTimeItem;
            }(mod.BaseListenerRenderer));
            more.XianmaiCoolTimeItem = XianmaiCoolTimeItem;
            __reflect(XianmaiCoolTimeItem.prototype, "game.mod.more.XianmaiCoolTimeItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiFightFailView = /** @class */ (function (_super) {
                __extends(XianmaiFightFailView, _super);
                function XianmaiFightFailView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiFightFailSkin";
                    return _this;
                }
                return XianmaiFightFailView;
            }(eui.Component));
            more.XianmaiFightFailView = XianmaiFightFailView;
            __reflect(XianmaiFightFailView.prototype, "game.mod.more.XianmaiFightFailView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiFightSuccessView = /** @class */ (function (_super) {
                __extends(XianmaiFightSuccessView, _super);
                function XianmaiFightSuccessView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiFightSuccessSkin";
                    return _this;
                }
                return XianmaiFightSuccessView;
            }(eui.Component));
            more.XianmaiFightSuccessView = XianmaiFightSuccessView;
            __reflect(XianmaiFightSuccessView.prototype, "game.mod.more.XianmaiFightSuccessView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianmaiInfoItem = /** @class */ (function (_super) {
                __extends(XianmaiInfoItem, _super);
                function XianmaiInfoItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiInfoItemSkin";
                    return _this;
                }
                XianmaiInfoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 261 /* Xianmai */);
                };
                XianmaiInfoItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this.removeDefendEff();
                };
                //无人占领的
                XianmaiInfoItem.prototype.updateDefaultView = function (stage, index) {
                    this.gr_defendtime.visible = false;
                    this.timeItem.visible = false;
                    var cfg = this._proxy.getStageCfg(stage, index);
                    this.updateInfo(cfg, stage);
                    this.bar.show(0, 1, false, null, false);
                    this.bar.showLabel('0%');
                };
                XianmaiInfoItem.prototype.updateInfo = function (cfg, stage) {
                    this.img_bg.source = "xianmai_img" + this._proxy.getLayerIdx(stage);
                    this.lb_desc0.textFlow = game.TextUtil.parseHtml(game.getLanById("xianmaizhengduo_tips24" /* xianmaizhengduo_tips24 */) + "\uFF1A" + game.TextUtil.addColor("4\u5C0F\u65F6", 2330156 /* GREEN */));
                    var item0 = cfg.score_item;
                    var cfg0 = game.GameConfig.getPropConfigById(item0[0]);
                    this.lb_desc1.textFlow = game.TextUtil.parseHtml(cfg0.name + '：' + game.TextUtil.addColor(item0[1] + '', 2330156 /* GREEN */));
                    var item1 = cfg.lingshi_item;
                    var cfg1 = game.GameConfig.getPropConfigById(item1[0]);
                    this.lb_desc2.textFlow = game.TextUtil.parseHtml(cfg1.name + '：' + game.TextUtil.addColor(item1[1] + '', 2330156 /* GREEN */));
                };
                //有人占领的
                XianmaiInfoItem.prototype.updateRoleView = function (data) {
                    if (!data) {
                        return;
                    }
                    var cfg = this._proxy.getStageCfg(data.stage, data.index);
                    this.updateInfo(cfg, data.stage);
                    this.bar.show(data.hp / 100, 100, false, null, false);
                    this.bar.showLabel(data.hp / 100 + '%');
                    //占领倒计时
                    var endTime = data.end_time;
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    this.timeItem.visible = leftTime > 0;
                    if (leftTime > 0) {
                        this.timeItem.updateLeftTime(leftTime);
                    }
                    //保护倒计时
                    var defendTime = data.defend_time || 0;
                    var defendLeftTime = defendTime - TimeMgr.time.serverTimeSecond;
                    if (defendLeftTime > 0) {
                        this.gr_defendtime.visible = true;
                        this.lb_defendtime.text = game.getLanById("xianmaizhengduo_tips23" /* xianmaizhengduo_tips23 */) + ':' + game.TimeUtil.formatSecond(defendLeftTime, 'mm分ss秒');
                        this.addDefendEff();
                    }
                    else {
                        this.gr_defendtime.visible = false;
                        this.removeDefendEff();
                    }
                };
                XianmaiInfoItem.prototype.removeDefendEff = function () {
                    if (this._defendEft) {
                        this.removeEffect(this._defendEft);
                    }
                };
                //保护特效 todo
                XianmaiInfoItem.prototype.addDefendEff = function () {
                    // this.removeDefendEff();
                };
                return XianmaiInfoItem;
            }(mod.BaseRenderer));
            more.XianmaiInfoItem = XianmaiInfoItem;
            __reflect(XianmaiInfoItem.prototype, "game.mod.more.XianmaiInfoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianmaiItem = /** @class */ (function (_super) {
                __extends(XianmaiItem, _super);
                function XianmaiItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiItemSkin";
                    return _this;
                }
                XianmaiItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 261 /* Xianmai */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                XianmaiItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this.removeDefendTime();
                };
                XianmaiItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var info = this._proxy.getStageInfo(data.cfg.index);
                    this.currentState = info ? 'default' : 'notone';
                    this.img_bg.source = "xianmai_img" + this._proxy.getLayerIdx(data.stage);
                    if (info) {
                        var isRobot = info.data && info.data.role_id.eq(Long.ZERO);
                        var myGuildId = mod.RoleUtil.getGuildId(); //我的仙宗id
                        var otherGuildId = info.data.guild_id || null;
                        var isSameGuild = myGuildId && otherGuildId && myGuildId == otherGuildId;
                        var color = 0xf9e241;
                        if (isRobot || !isSameGuild) {
                            color = 16731212 /* RED */; //中立生物和非本仙宗玩家用红色
                        }
                        this.lb_name.text = isRobot ? this._proxy.getBossNames()[0] : (info.data && info.data.name || '');
                        this.lb_name.textColor = color;
                        this.powerLabel.setPowerValue(info.data && info.data.showpower || 0, 0xfefae5);
                        this.bar.show(info.hp / 100, 100, false, null, false);
                        this.bar.showLabel(info.hp / 100 + '%');
                        this.updateTime();
                    }
                };
                XianmaiItem.prototype.onClick = function () {
                    var stage = this.data.stage;
                    var index = this.data.cfg.index;
                    var myData = this._proxy.my_data;
                    if (myData && stage == myData.stage && index == myData.index) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "107" /* XianmaiItemTipsMine */);
                        return;
                    }
                    var info = this.data.info;
                    if (info && info.defend_time && TimeMgr.time.serverTimeSecond < info.defend_time) {
                        game.PromptBox.getIns().show(game.getLanById("xianmaizhengduo_tips22" /* xianmaizhengduo_tips22 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "104" /* XianmaiItemTips */, [stage, index]);
                };
                //更新保护时间
                XianmaiItem.prototype.updateTime = function () {
                    if (!this.data || !this.data.cfg) {
                        this.removeDefendTime();
                        return;
                    }
                    var info = this._proxy.getStageInfo(this.data.cfg.index);
                    if (!info) {
                        this.removeDefendTime();
                        return;
                    }
                    var defendTime = info.defend_time || 0;
                    var leftTime = defendTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime > 0) {
                        this.lb_defendtime.visible = true;
                        this.img_timedi.visible = true;
                        this.lb_defendtime.text = game.getLanById("xianmaizhengduo_tips23" /* xianmaizhengduo_tips23 */) + ':' + game.TimeUtil.formatSecond(leftTime, 'mm分ss秒');
                        this.addDefendEff();
                    }
                    else {
                        this.removeDefendTime();
                    }
                };
                XianmaiItem.prototype.removeDefendTime = function () {
                    this.lb_defendtime.visible = false;
                    this.img_timedi.visible = false;
                    if (this._defendEft) {
                        this.removeEffect(this._defendEft);
                    }
                };
                //保护特效 todo
                XianmaiItem.prototype.addDefendEff = function () {
                    // if (this._defendEft) {
                    //     this.removeEffect(this._defendEft);
                    // }
                };
                return XianmaiItem;
            }(mod.BaseRenderer));
            more.XianmaiItem = XianmaiItem;
            __reflect(XianmaiItem.prototype, "game.mod.more.XianmaiItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiItemTipsView = /** @class */ (function (_super) {
                __extends(XianmaiItemTipsView, _super);
                function XianmaiItemTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiItemTipsSkin";
                    return _this;
                }
                return XianmaiItemTipsView;
            }(eui.Component));
            more.XianmaiItemTipsView = XianmaiItemTipsView;
            __reflect(XianmaiItemTipsView.prototype, "game.mod.more.XianmaiItemTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XianmaiListItem = /** @class */ (function (_super) {
                __extends(XianmaiListItem, _super);
                function XianmaiListItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiListItemSkin";
                    return _this;
                }
                XianmaiListItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 261 /* Xianmai */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                XianmaiListItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XianmaiListItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_layer.text = game.StringUtil.substitute(game.getLanById("xujietansuo_tips14" /* xujietansuo_tips14 */), [data.stage]);
                    this.lb_num.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("xianmaizhengduo_tips9" /* xianmaizhengduo_tips9 */), [data.guild_num]));
                    this.lb_earn.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("xianmaizhengduo_tips10" /* xianmaizhengduo_tips10 */), [this._proxy.getEarnCnt(data.guild_num) + '%']));
                };
                //跳转到对应层数
                XianmaiListItem.prototype.onClick = function () {
                    facade.sendNt("on_xianmai_list_view_close" /* ON_XIANMAI_LIST_VIEW_CLOSE */);
                    if (!this._proxy.isActTime()) {
                        game.PromptBox.getIns().show(game.getLanById("huodongzanweikaiqi" /* huodongzanweikaiqi */));
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "100" /* XianmaiMain */, ["01" /* TabBtnType01 */, this.data.stage - 1]);
                };
                return XianmaiListItem;
            }(mod.BaseListenerRenderer));
            more.XianmaiListItem = XianmaiListItem;
            __reflect(XianmaiListItem.prototype, "game.mod.more.XianmaiListItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiListView = /** @class */ (function (_super) {
                __extends(XianmaiListView, _super);
                function XianmaiListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiListSkin";
                    return _this;
                }
                return XianmaiListView;
            }(eui.Component));
            more.XianmaiListView = XianmaiListView;
            __reflect(XianmaiListView.prototype, "game.mod.more.XianmaiListView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiMvpItem = /** @class */ (function (_super) {
                __extends(XianmaiMvpItem, _super);
                function XianmaiMvpItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiMvpItemSkin";
                    return _this;
                }
                XianmaiMvpItem.prototype.updateShow = function (data) {
                    if (!data) {
                        this.defaultView();
                        return;
                    }
                    this.currentState = '1';
                    this.head.updateShow(data.head, data.head_frame, data.sex, data.vip, data.role_id, data.server_id);
                    this.lb_name.text = data.name;
                    this.powerLabel.setPowerValue(data.showpower, 0xf9f3d7);
                    this.lb_guild.text = game.getLanById("zongmen" /* zongmen */) + "\uFF1A" + data.guild_name;
                    this.lb_score.text = game.getLanById("xianmaizhengduo_tips25" /* xianmaizhengduo_tips25 */) + "\uFF1A" + (data.value ? data.value.toNumber() : 0);
                };
                XianmaiMvpItem.prototype.defaultView = function () {
                    this.currentState = '2';
                    this.head.defaultHeadShow();
                };
                return XianmaiMvpItem;
            }(eui.Component));
            more.XianmaiMvpItem = XianmaiMvpItem;
            __reflect(XianmaiMvpItem.prototype, "game.mod.more.XianmaiMvpItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiResultView = /** @class */ (function (_super) {
                __extends(XianmaiResultView, _super);
                function XianmaiResultView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiResultSkin";
                    return _this;
                }
                return XianmaiResultView;
            }(eui.Component));
            more.XianmaiResultView = XianmaiResultView;
            __reflect(XianmaiResultView.prototype, "game.mod.more.XianmaiResultView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiSelectView = /** @class */ (function (_super) {
                __extends(XianmaiSelectView, _super);
                function XianmaiSelectView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiSelectSkin";
                    return _this;
                }
                return XianmaiSelectView;
            }(eui.Component));
            more.XianmaiSelectView = XianmaiSelectView;
            __reflect(XianmaiSelectView.prototype, "game.mod.more.XianmaiSelectView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiView = /** @class */ (function (_super) {
                __extends(XianmaiView, _super);
                function XianmaiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiSkin";
                    return _this;
                }
                return XianmaiView;
            }(eui.Component));
            more.XianmaiView = XianmaiView;
            __reflect(XianmaiView.prototype, "game.mod.more.XianmaiView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianmaiZhanbaoItem = /** @class */ (function (_super) {
                __extends(XianmaiZhanbaoItem, _super);
                function XianmaiZhanbaoItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianmaiZhanbaoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XianmaiZhanbaoItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XianmaiZhanbaoItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data || !data.info) {
                        return;
                    }
                    var mate = data.info.first_name;
                    this.headVip.updateShow(mate.head, mate.head_frame, mate.sex, mate.vip, mate.role_id, mate.server_id);
                    var timeStr = '';
                    if (data.info.time) {
                        var time = data.info.time && data.info.time || 0;
                        var leaveTime = TimeMgr.time.serverTimeSecond - time;
                        var day = Math.floor(leaveTime / game.Second.Day);
                        if (day > 0) {
                            timeStr = game.StringUtil.substitute(game.getLanById("xujietansuo_tips26" /* xujietansuo_tips26 */), [day]);
                        }
                        else {
                            var hour = Math.floor(leaveTime / game.Second.Hour);
                            if (hour > 0) {
                                timeStr = game.StringUtil.substitute(game.getLanById("xujietansuo_tips27" /* xujietansuo_tips27 */), [hour]);
                            }
                            else {
                                var mins = Math.floor(leaveTime / game.Second.Minute);
                                timeStr = mins + '分钟前';
                            }
                        }
                    }
                    var str;
                    if (data.info.is_success) {
                        this.img_bg.source = "liebiaodikuangti2";
                        if (data.type == 1) {
                            str = game.StringUtil.substitute(game.getLanById("xianmaizhengba_tips1" /* xianmaizhengba_tips1 */), [data.info.first_name.name]);
                        }
                        else {
                            str = game.StringUtil.substitute(game.getLanById("xianmaizhengba_tips3" /* xianmaizhengba_tips3 */), [data.info.first_name.name, data.info.two_name]);
                        }
                    }
                    else {
                        this.img_bg.source = "liebiaodikuangti";
                        if (data.type == 1) {
                            str = game.StringUtil.substitute(game.getLanById("xianmaizhengba_tips2" /* xianmaizhengba_tips2 */), [data.info.first_name.name]);
                        }
                        else {
                            str = game.StringUtil.substitute(game.getLanById("xianmaizhengba_tips4" /* xianmaizhengba_tips4 */), [data.info.first_name.name, data.info.two_name]);
                        }
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(str + "(" + timeStr + ")");
                };
                return XianmaiZhanbaoItem;
            }(mod.BaseListenerRenderer));
            more.XianmaiZhanbaoItem = XianmaiZhanbaoItem;
            __reflect(XianmaiZhanbaoItem.prototype, "game.mod.more.XianmaiZhanbaoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiZhanbaoView = /** @class */ (function (_super) {
                __extends(XianmaiZhanbaoView, _super);
                function XianmaiZhanbaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianmaiZhanbaoSkin";
                    return _this;
                }
                return XianmaiZhanbaoView;
            }(eui.Component));
            more.XianmaiZhanbaoView = XianmaiZhanbaoView;
            __reflect(XianmaiZhanbaoView.prototype, "game.mod.more.XianmaiZhanbaoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XianweiCDItem = /** @class */ (function (_super) {
                __extends(XianweiCDItem, _super);
                function XianweiCDItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianweiCDItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn, this.onClickBtn, this);
                };
                XianweiCDItem.prototype.updateTime = function (leftTime) {
                    if (leftTime <= 0) {
                        this.lab_time.text = "";
                        return;
                    }
                    this.lab_time.text = game.TimeUtil.formatSecond(leftTime, 'd天H时', true);
                };
                XianweiCDItem.prototype.onClickBtn = function () {
                    if (!mod.BagUtil.checkPropCnt(this._proxy.xianwei_buy_time[0], this._proxy.xianwei_buy_time[1], 1 /* Dialog */)) {
                        return;
                    }
                    this._proxy.c2s_xianwei_buy_time();
                };
                return XianweiCDItem;
            }(mod.BaseRenderer));
            more.XianweiCDItem = XianweiCDItem;
            __reflect(XianweiCDItem.prototype, "game.mod.more.XianweiCDItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiCommonItem = /** @class */ (function (_super) {
                __extends(XianweiCommonItem, _super);
                function XianweiCommonItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianweiCommonItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                };
                XianweiCommonItem.prototype.dataChanged = function () {
                    var key = this.data;
                    var cfg = this._proxy.cfgArr.get(key);
                    this.img_title.source = "xianweititle" + key;
                    this.lab_cnt.text = "" + cfg.position_quantity;
                    this.img_role.visible = this._proxy.checkJob(key);
                };
                XianweiCommonItem.prototype.setData = function (key) {
                    this.data = key;
                };
                return XianweiCommonItem;
            }(mod.BaseRenderer));
            more.XianweiCommonItem = XianweiCommonItem;
            __reflect(XianweiCommonItem.prototype, "game.mod.more.XianweiCommonItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiInfoItem = /** @class */ (function (_super) {
                __extends(XianweiInfoItem, _super);
                function XianweiInfoItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._listData = new eui.ArrayCollection();
                    return _this;
                }
                XianweiInfoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                    this.list.itemRenderer = mod.CoinItemCenter;
                    this.list.dataProvider = this._listData;
                };
                XianweiInfoItem.prototype.dataChanged = function () {
                    var info = this.data;
                    var key = info.stage + "_" + info.index;
                    var cfg = this._proxy.cfgArr.get(key);
                    this.lab_name.text = cfg.name;
                    this._listData.replaceAll([[cfg.coin[0], info.coin || 0], [cfg.score[0], info.score || 0]]);
                };
                XianweiInfoItem.prototype.setData = function (data) {
                    this.data = data;
                };
                XianweiInfoItem.prototype.updateTime = function (leftTime) {
                    this.timeItem.updateLeftTime(leftTime);
                };
                return XianweiInfoItem;
            }(mod.BaseRenderer));
            more.XianweiInfoItem = XianweiInfoItem;
            __reflect(XianweiInfoItem.prototype, "game.mod.more.XianweiInfoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var XianweiListItem = /** @class */ (function (_super) {
                __extends(XianweiListItem, _super);
                function XianweiListItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._self = false;
                    return _this;
                }
                XianweiListItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn, this.onClickBtn, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.head, this.onClickHead, this);
                };
                XianweiListItem.prototype.dataChanged = function () {
                    var info = this.data;
                    // let cfg = this.data.cfg;
                    var cfg = this._proxy.cfgArr.get(info.stage + "_" + info.index);
                    if (!info.data || info.data.is_robot) {
                        var head = cfg.head_frame[info.pos - 1];
                        this.head.updateHeadShow(head[0], head[1]);
                        this.lab_name.text = cfg.name;
                        this.powerLabel.setPowerValue(cfg.rebot_power);
                        this._power = cfg.rebot_power;
                    }
                    else {
                        this._self = info.data.role_id.eq(game.RoleVo.ins.role_id);
                        this.head.updateHeadShow(info.data.head, info.data.head_frame, info.data.sex, info.data.role_id);
                        this.lab_name.text = info.data.name;
                        this.powerLabel.setPowerValue(info.data.showpower);
                        this._power = info.data.showpower.toNumber();
                    }
                    var key = info.stage + "_" + info.index;
                    this.img_title.source = "xianweititle" + key;
                    var serverTime = TimeMgr.time.serverTimeSecond;
                    this.grp_time.visible = !!info.end_time && info.end_time > serverTime;
                    if (this.grp_time.visible) {
                        this.timeItem.updateLeftTime(serverTime - info.start_time, "", ""); //getLanById(LanDef.battle_cue29)
                    }
                };
                XianweiListItem.prototype.onClickBtn = function () {
                    if (this._self) {
                        game.PromptBox.getIns().show("不能挑战自己");
                        return;
                    }
                    if (game.RoleVo.ins.showpower.toNumber() < this._power) {
                        game.PromptBox.getIns().show("战力不足，挑战失败");
                        return;
                    }
                    if (this._proxy.attack_time && TimeMgr.time.serverTimeSecond < this._proxy.attack_time) {
                        game.PromptBox.getIns().show("攻击冷却中");
                        return;
                    }
                    var info = this.data;
                    this._proxy.c2s_xianwei_challenge(info.stage, info.index, info.pos);
                    facade.sendNt("on_close_common_popup" /* ON_CLOSE_COMMON_POPUP */);
                };
                XianweiListItem.prototype.onClickHead = function () {
                    var info = this.data;
                    if (!info.data || info.data.is_robot) {
                        game.PromptBox.getIns().show("对方修为如迷雾一般，竟无法看透");
                    }
                };
                return XianweiListItem;
            }(mod.BaseRenderer));
            more.XianweiListItem = XianweiListItem;
            __reflect(XianweiListItem.prototype, "game.mod.more.XianweiListItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiListView = /** @class */ (function (_super) {
                __extends(XianweiListView, _super);
                function XianweiListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianweiListSkin";
                    return _this;
                }
                return XianweiListView;
            }(eui.Component));
            more.XianweiListView = XianweiListView;
            __reflect(XianweiListView.prototype, "game.mod.more.XianweiListView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiPropView = /** @class */ (function (_super) {
                __extends(XianweiPropView, _super);
                function XianweiPropView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianweiPropSkin";
                    return _this;
                }
                return XianweiPropView;
            }(eui.Component));
            more.XianweiPropView = XianweiPropView;
            __reflect(XianweiPropView.prototype, "game.mod.more.XianweiPropView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiTipsItem = /** @class */ (function (_super) {
                __extends(XianweiTipsItem, _super);
                function XianweiTipsItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianweiTipsItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                };
                XianweiTipsItem.prototype.dataChanged = function () {
                    var cfg = this._proxy.cfgArr.get(this.data.stage + "_" + this.data.index);
                    var lose_name = this.data.lose_name || cfg.name;
                    var str = this.data.win_name + "\u6210\u529F\u6311\u6218" + lose_name + "\uFF0C\u6210\u4E3A" + cfg.name + "\u3002";
                    this.lab.textFlow = game.TextUtil.parseHtml(str);
                };
                return XianweiTipsItem;
            }(mod.BaseRenderer));
            more.XianweiTipsItem = XianweiTipsItem;
            __reflect(XianweiTipsItem.prototype, "game.mod.more.XianweiTipsItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiTipsItem2 = /** @class */ (function (_super) {
                __extends(XianweiTipsItem2, _super);
                function XianweiTipsItem2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianweiTipsItem2.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                };
                XianweiTipsItem2.prototype.dataChanged = function () {
                    var cfg = this._proxy.cfgArr.get(this.data.stage + "_" + this.data.index);
                    var info = this.data.target;
                    if (!info) {
                        info;
                    }
                    if (this.data.act == 2) {
                        this.head.updateHeadShow(info.head, info.head_frame, info.sex, info.role_id);
                    }
                    else {
                        this.head.updateMyHead();
                    }
                    var name1 = this.data.act == 1 ? game.RoleVo.ins.name : info.name;
                    var name2 = this.data.act == 2 ? game.RoleVo.ins.name : info.name;
                    //S999.XXX挑战S999.XXX的"仙位名称"失败，仙位没有变化。
                    //S999.XXX挑战S999.XXX的"仙位名称"成功，仙位被夺走了！
                    var fail = "%s挑战%s的%s失败，仙位没有变化。";
                    var success = "%s挑战%s的%s成功，仙位被夺走了！";
                    var content = this.data.is_success ? success : fail;
                    this.lab.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(content, [name1, name2, cfg.name]));
                };
                return XianweiTipsItem2;
            }(mod.BaseRenderer));
            more.XianweiTipsItem2 = XianweiTipsItem2;
            __reflect(XianweiTipsItem2.prototype, "game.mod.more.XianweiTipsItem2");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiTipsView = /** @class */ (function (_super) {
                __extends(XianweiTipsView, _super);
                function XianweiTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianweiTipsSkin";
                    return _this;
                }
                return XianweiTipsView;
            }(eui.Component));
            more.XianweiTipsView = XianweiTipsView;
            __reflect(XianweiTipsView.prototype, "game.mod.more.XianweiTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiTopItem = /** @class */ (function (_super) {
                __extends(XianweiTopItem, _super);
                function XianweiTopItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianweiTopItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 269 /* Xianwei */);
                };
                XianweiTopItem.prototype.dataChanged = function () {
                    var key = this.data;
                    var cfg = this._proxy.cfgArr.get(key);
                    var info = this._proxy.list.get(key);
                    var role = info && info.data;
                    var is_robot = role && role.is_robot;
                    if (!role || is_robot) {
                        var head = cfg.head_frame[0];
                        this.head.updateHeadShow(head[0], head[1]);
                        this.powerLabel.setPowerValue(cfg.rebot_power);
                        this.lab_name.text = cfg.name;
                    }
                    else {
                        this.head.updateHeadShow(role.head, role.head_frame);
                        this.powerLabel.setPowerValue(role.showpower);
                        this.lab_name.text = role.name;
                    }
                    this.img_title.source = "xianweititle" + key;
                };
                XianweiTopItem.prototype.setData = function (key) {
                    this.data = key;
                };
                return XianweiTopItem;
            }(mod.BaseRenderer));
            more.XianweiTopItem = XianweiTopItem;
            __reflect(XianweiTopItem.prototype, "game.mod.more.XianweiTopItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiView = /** @class */ (function (_super) {
                __extends(XianweiView, _super);
                function XianweiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XianweiSkin";
                    return _this;
                }
                return XianweiView;
            }(eui.Component));
            more.XianweiView = XianweiView;
            __reflect(XianweiView.prototype, "game.mod.more.XianweiView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuangguMainMdr = /** @class */ (function (_super) {
                __extends(HuangguMainMdr, _super);
                function HuangguMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Huanggu */,
                            icon: "huanggu_tab",
                            mdr: more.HuangguMdr,
                            bg: "huanggu_bg",
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */],
                        },
                        {
                            btnType: "02" /* Hundun */,
                            icon: "hundun_tab",
                            mdr: more.HundunMdr,
                            bg: "hundun_bg",
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */],
                        }
                    ];
                    return _this;
                }
                return HuangguMainMdr;
            }(mod.WndBaseNewMdr));
            more.HuangguMainMdr = HuangguMainMdr;
            __reflect(HuangguMainMdr.prototype, "game.mod.more.HuangguMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var HuangguMdr = /** @class */ (function (_super) {
                __extends(HuangguMdr, _super);
                function HuangguMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuangguView);
                    return _this;
                }
                HuangguMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                };
                HuangguMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_goddess, TouchEvent.TOUCH_TAP, this.onClickGoddess);
                    addEventListener(this._view.btn_xiandi, TouchEvent.TOUCH_TAP, this.onClickXiandi);
                    addEventListener(this._view.btn_doufa, TouchEvent.TOUCH_TAP, this.onClickDoufa);
                    addEventListener(this._view.btn_shenqi, TouchEvent.TOUCH_TAP, this.onClickShenqi);
                    addEventListener(this._view.btn_xianwei, TouchEvent.TOUCH_TAP, this.onClickXianwei);
                };
                HuangguMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateHint();
                    this._view.item.showInfo();
                    this._view.btn_xiandi.setEffect("huanggutiangong" /* HuangGuTianGong */);
                    this._view.btn_goddess.setEffect("nvshenjusuo" /* NvShenJuSuo */);
                    this._view.btn_doufa.setEffect("wanxiantai" /* WanXianTai */);
                    this._view.btn_shenqi.setEffect("huanggushenqi" /* Huanggushenqi */);
                    this._view.btn_xianwei.setEffect("xianweizhengduo" /* Xianweizhengduo */);
                };
                HuangguMdr.prototype.onHide = function () {
                    this._view.btn_xiandi.clearEffect();
                    this._view.btn_goddess.clearEffect();
                    this._view.btn_doufa.clearEffect();
                    this._view.btn_shenqi.clearEffect();
                    this._view.btn_xianwei.clearEffect();
                    _super.prototype.onHide.call(this);
                };
                HuangguMdr.prototype.onClickGoddess = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "31" /* GoddessMain */);
                };
                HuangguMdr.prototype.onClickXiandi = function () {
                    var proxy = game.getProxy("61" /* More */, 260 /* Xiandi */);
                    if (proxy.checkOpen()) {
                        mod.ViewMgr.getIns().showView("61" /* More */, "120" /* Xiandi */);
                    }
                    else {
                        mod.ViewMgr.getIns().showView("61" /* More */, "121" /* XiandiShow */);
                    }
                };
                HuangguMdr.prototype.onClickDoufa = function () {
                    mod.ViewMgr.getIns().showViewByID(128 /* KuafuDoufa */);
                };
                HuangguMdr.prototype.onClickShenqi = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "05" /* SkyPalace */);
                };
                HuangguMdr.prototype.onClickXianwei = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "190" /* Xianwei */);
                };
                HuangguMdr.prototype.updateHint = function () {
                    this._view.btn_goddess.redPoint.visible = mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "31" /* GoddessMain */]);
                    this._view.btn_xiandi.redPoint.visible = mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */]);
                    this._view.btn_doufa.redPoint.visible = mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "150" /* KuafuDoufa */]);
                    this._view.btn_doufa.redPoint.visible = mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "05" /* SkyPalace */]);
                    this._view.btn_xianwei.redPoint.visible = mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "190" /* Xianwei */]);
                };
                return HuangguMdr;
            }(game.EffectMdrBase));
            more.HuangguMdr = HuangguMdr;
            __reflect(HuangguMdr.prototype, "game.mod.more.HuangguMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var HundunMdr = /** @class */ (function (_super) {
                __extends(HundunMdr, _super);
                function HundunMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HundunView);
                    return _this;
                }
                HundunMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._fengmo = this.retProxy(257 /* Fengmo */);
                    this._crossunion = this.retProxy(265 /* CrossUnion */);
                    this._xianmaiProxy = this.retProxy(261 /* Xianmai */);
                    this._xianjieProxy = this.retProxy(268 /* XianjieLuandou */);
                };
                HundunMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_fengmo, TouchEvent.TOUCH_TAP, this.onClickFengmo);
                    addEventListener(this._view.btn_crossunion, TouchEvent.TOUCH_TAP, this.onClickCrossUnion);
                    addEventListener(this._view.btn_xianmai, TouchEvent.TOUCH_TAP, this.onClickXianmai);
                    addEventListener(this._view.btn_xuanyuanmen, TouchEvent.TOUCH_TAP, this.onClickXuanyuanmen);
                };
                HundunMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                    this.updateHint();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.updateTime();
                };
                HundunMdr.prototype.onHide = function () {
                    this._view.btn_crossunion.clearEffect();
                    this._view.btn_fengmo.clearEffect();
                    this._view.btn_xianmai.clearEffect();
                    _super.prototype.onHide.call(this);
                };
                HundunMdr.prototype.onClickCrossUnion = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670262 /* CrossUnion */, true)) {
                        return;
                    }
                    // let openView: string = this._crossunion.openView;
                    // ViewMgr.getIns().showView(ModName.More, openView);
                    game.PromptBox.getIns().show("\u656C\u8BF7\u671F\u5F85\uFF01");
                };
                HundunMdr.prototype.onClickFengmo = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "82" /* Fengmo */);
                };
                HundunMdr.prototype.onClickXianmai = function () {
                    if (!this._xianmaiProxy.isActTime()) {
                        game.PromptBox.getIns().show(game.getLanById("huodongzanweikaiqi" /* huodongzanweikaiqi */));
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "100" /* XianmaiMain */);
                };
                HundunMdr.prototype.onClickXuanyuanmen = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670268 /* XianjieLuandou */, true)) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "170" /* XianjieLuandouMain */);
                };
                HundunMdr.prototype.updateView = function () {
                    //封魔台
                    this._view.btn_fengmo["lab_count"].text = "\u6B21\u6570\uFF1A" + this._fengmo.times + "/" + this._fengmo.guild_fengmo_meiricishu;
                    this._view.btn_fengmo.setEffect("leize" /* LeiZe */);
                    //跨服仙宗战
                    var grp = this._view.btn_crossunion["grp_tips"];
                    var state = this._crossunion.openState;
                    var is_join = this._crossunion.is_join;
                    var is_guild_join = this._crossunion.is_guild_join;
                    grp.visible = !is_join && (state == 2 /* Match */ && is_guild_join || state == 1 /* Ready */);
                    this._view.btn_crossunion.setEffect("kunlunjing" /* KunLunJing */);
                    //仙脉争夺（不周山）
                    this._view.btn_xianmai.updateShow('buzhoushan_btn_icon', '不周山', false);
                    this._view.btn_xianmai.setEffect("buzhoushan" /* BuZhouShan */);
                    //仙界乱斗（轩辕门）
                    this.updateBtnXuanyuanmen();
                };
                //仙界乱斗（轩辕门）
                HundunMdr.prototype.updateBtnXuanyuanmen = function () {
                    var timeItem = this._view.btn_xuanyuanmen['timeItem'];
                    var labCount = this._view.btn_xuanyuanmen['lab_count'];
                    var isOpen = this._xianjieProxy.isOpen;
                    if (isOpen) {
                        timeItem.visible = false;
                        labCount.visible = true;
                        labCount.text = game.getLanById("xianjieluandou_tips18" /* xianjieluandou_tips18 */);
                    }
                    else {
                        timeItem.visible = true;
                        labCount.visible = false;
                        timeItem.updateTime(this._xianjieProxy.show_time_sec);
                    }
                };
                //红点
                HundunMdr.prototype.updateHint = function () {
                    this._view.btn_fengmo.setHint(mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "82" /* Fengmo */]));
                    this._view.btn_crossunion.setHint(mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "160" /* CrossUnion */]));
                    //仙脉红点
                    this._view.btn_xianmai.setHint(mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "100" /* XianmaiMain */]));
                    //轩辕门
                    this._view.btn_xuanyuanmen.setHint(mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "170" /* XianjieLuandouMain */, "01" /* Btn1 */]));
                };
                HundunMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                HundunMdr.prototype.updateTime = function () {
                    if (this._xianmaiProxy.isActTime()) {
                        this._view.btn_xianmai.timeItem.visible = false;
                    }
                    else {
                        this._view.btn_xianmai.updateTime(this._xianmaiProxy.getShowStartTime(), game.getLanById("material3" /* material3 */));
                    }
                    this.updateBtnXuanyuanmen();
                };
                return HundunMdr;
            }(game.EffectMdrBase));
            more.HundunMdr = HundunMdr;
            __reflect(HundunMdr.prototype, "game.mod.more.HundunMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var Handler = base.Handler;
            var TouchEvent = egret.TouchEvent;
            var FengmoFightMdr = /** @class */ (function (_super) {
                __extends(FengmoFightMdr, _super);
                function FengmoFightMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.FengmoFightView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FengmoFightMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._itemList;
                    this._proxy = this.retProxy(257 /* Fengmo */);
                };
                FengmoFightMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_saodang, TouchEvent.TOUCH_TAP, this.onClickSao);
                    addEventListener(this._view.btn_fight, TouchEvent.TOUCH_TAP, this.onClickFight);
                };
                FengmoFightMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                FengmoFightMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FengmoFightMdr.prototype.onUpdateView = function () {
                    this._view.progress.showMax();
                    this._view.progress.showLabel("100%");
                    var guild_fengmo_model = this._proxy.guild_fengmo_model;
                    var monster = game.getConfigByNameId("monster1.json" /* Monster */, guild_fengmo_model);
                    this._view.lab_name.text = monster.name;
                    var hurt = game.StringUtil.getHurtNumStr(this._proxy.my_max_damage);
                    var color = game.TextUtil.addColor(hurt, 8585074 /* GREEN */);
                    var str = game.StringUtil.substitute(game.getLanById("xianzong_tips13" /* xianzong_tips13 */), [color]);
                    this._view.lab_maxhurt.textFlow = game.TextUtil.parseHtml(str);
                    var str2 = game.StringUtil.substitute(game.getLanById("xianzong_tips12" /* xianzong_tips12 */), [color]);
                    this._view.lab_hurt.textFlow = game.TextUtil.parseHtml(str2);
                    this._view.countItem.setData(this._proxy.times, Handler.alloc(this, this.onUpdateCount));
                    this._itemList.replaceAll(this._proxy.reward);
                };
                FengmoFightMdr.prototype.onUpdateCount = function () {
                    var count = this._view.countItem.getCnt;
                    var hurt = game.StringUtil.getHurtNumStr(this._proxy.my_max_damage * count);
                    var color = game.TextUtil.addColor(hurt, 8585074 /* GREEN */);
                    var str = game.StringUtil.substitute(game.getLanById("xianzong_tips12" /* xianzong_tips12 */), [color]);
                    this._view.lab_hurt.textFlow = game.TextUtil.parseHtml(str);
                    var list = [];
                    for (var _i = 0, _a = this._proxy.reward; _i < _a.length; _i++) {
                        var data = _a[_i];
                        list.push(game.PropData.create(data.idx, data.cnt * count));
                    }
                    this._itemList.replaceAll(list);
                };
                FengmoFightMdr.prototype.onClickSao = function () {
                    var count = this._view.countItem.getCnt;
                    this._proxy.c2s_guild_fengmo_battle(2, count);
                    this.hide();
                };
                FengmoFightMdr.prototype.onClickFight = function () {
                    this._proxy.c2s_guild_fengmo_battle(1);
                    this.hide();
                };
                return FengmoFightMdr;
            }(game.MdrBase));
            more.FengmoFightMdr = FengmoFightMdr;
            __reflect(FengmoFightMdr.prototype, "game.mod.more.FengmoFightMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var FengmoHurtRewardMdr = /** @class */ (function (_super) {
                __extends(FengmoHurtRewardMdr, _super);
                function FengmoHurtRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.FengmoHurtRewardView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FengmoHurtRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_reward.itemRenderer = more.FengmoHurtRewardItem;
                    this._view.list_reward.dataProvider = this._itemList;
                    this._proxy = this.retProxy(257 /* Fengmo */);
                };
                FengmoHurtRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_fengmo_info" /* ON_UPDATE_FENGMO_INFO */, this.updateReward, this);
                };
                FengmoHurtRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateReward();
                };
                FengmoHurtRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FengmoHurtRewardMdr.prototype.updateReward = function () {
                    var hurt = this._proxy.damage_value;
                    var cfgArr = game.getConfigListByName("fengmo_damage_reward.json" /* FengmoDamageReward */);
                    var dataList = [];
                    for (var _i = 0, cfgArr_8 = cfgArr; _i < cfgArr_8.length; _i++) {
                        var cfg = cfgArr_8[_i];
                        var status = 1;
                        var bought = this._proxy.damage_indexs.indexOf(cfg.index) > -1;
                        if (bought) {
                            //已经领取
                            status = 3;
                            dataList.push({ status: status, cfg: cfg });
                            continue;
                        }
                        var target = cfg.damage_value * 10000;
                        var bool = hurt >= target;
                        if (!bool) {
                            //未达到领取条件
                            status = 2;
                        }
                        dataList.push({ status: status, cfg: cfg });
                    }
                    this._itemList.replaceAll(dataList.sort(this.sortDamage));
                };
                FengmoHurtRewardMdr.prototype.sortDamage = function (a, b) {
                    return a.status - b.status;
                };
                return FengmoHurtRewardMdr;
            }(game.MdrBase));
            more.FengmoHurtRewardMdr = FengmoHurtRewardMdr;
            __reflect(FengmoHurtRewardMdr.prototype, "game.mod.more.FengmoHurtRewardMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoMainMdr = /** @class */ (function (_super) {
                __extends(FengmoMainMdr, _super);
                function FengmoMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xianzongfengmobiaotiantubiao",
                            mdr: more.FengmoMdr,
                            bg: 'fengmo_bg1',
                            title: "xianzong_tips11" /* xianzong_tips11 */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "82" /* Fengmo */]
                        },
                    ];
                    return _this;
                }
                return FengmoMainMdr;
            }(mod.WndBaseMdr));
            more.FengmoMainMdr = FengmoMainMdr;
            __reflect(FengmoMainMdr.prototype, "game.mod.more.FengmoMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var FengmoMdr = /** @class */ (function (_super) {
                __extends(FengmoMdr, _super);
                function FengmoMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.FengmoView);
                    return _this;
                }
                FengmoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(257 /* Fengmo */);
                    this._view.lab_tips.text = game.getLanById("xianzong_tips7" /* xianzong_tips7 */);
                };
                FengmoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_fight, TouchEvent.TOUCH_TAP, this.onClickFight);
                    addEventListener(this._view.btn_add, TouchEvent.TOUCH_TAP, this.onClickAdd);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.btn_rank, TouchEvent.TOUCH_TAP, this.onClickRank);
                    this.onNt("on_update_fengmo_info" /* ON_UPDATE_FENGMO_INFO */, this.onUpdateView, this);
                };
                FengmoMdr.prototype.onShow = function () {
                    this._proxy.c2s_guild_fengmo_get_info();
                    _super.prototype.onShow.call(this);
                    // this.onUpdateView();
                    this.onUpdateTime();
                    this.onUpdateModel();
                };
                FengmoMdr.prototype.onUpdateTime = function () {
                    this._endTime = game.TimeUtil.getNextWeekTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                FengmoMdr.prototype.onUpdateModel = function () {
                    if (this._eftIdx) {
                        this.removeEffect(this._eftIdx);
                    }
                    var guild_fengmo_model = this._proxy.guild_fengmo_model;
                    this._eftIdx = this.addMonster(guild_fengmo_model, this._view.grp_eft);
                };
                FengmoMdr.prototype.onUpdateView = function () {
                    var info = this._proxy.mvp_info;
                    if (info) {
                        this._view.headMvp.updateMvp({ info: info });
                    }
                    else {
                        this._view.headMvp.updateMvp(null);
                    }
                    this._view.reward.updateShow(this._proxy.total_times);
                    var cfg = this._proxy.hurt_cfg;
                    var target = cfg.damage_value * 10000;
                    this._view.progress.show(this._proxy.damage_value, target, false);
                    var hurtStr = game.StringUtil.getHurtNumStr(this._proxy.damage_value);
                    var maxStr = game.StringUtil.getHurtNumStr(target);
                    this._view.progress.showLabel((this._proxy.damage_value > target ? maxStr : hurtStr) + "/" + maxStr);
                    var hurt = game.StringUtil.getHurtNumStr(this._proxy.my_max_damage);
                    this.addBmpFont(hurt, game.BmpTextCfg[201 /* CommonPower2 */], this._view.grp_hurt, true, 1, false, 0, true);
                    this._view.btn_reward.setHint(this._proxy.getDamageHint());
                    this._view.btn_fight.setHint(this._proxy.times > 0 && mod.RoleUtil.isInUnion());
                    this._view.btn_rank.setHint(mod.HintMgr.getHint(["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "82" /* Fengmo */, "140" /* UnionRank */]));
                    this.onUpdateCnt();
                };
                FengmoMdr.prototype.onUpdateCnt = function () {
                    var cnt = this._proxy.times;
                    var team_conquest_num = this._proxy.guild_fengmo_meiricishu;
                    var color = !cnt ? 16731212 /* RED */ : 8585074 /* GREEN */;
                    this._view.lab_times.textFlow = game.TextUtil.parseHtml("\u6B21\u6570:" + game.TextUtil.addColor(cnt + "/" + team_conquest_num, color));
                };
                FengmoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    if (this._eftIdx) {
                        this.removeEffect(this._eftIdx);
                        this._eftIdx = 0;
                    }
                };
                FengmoMdr.prototype.onClickFight = function () {
                    if (!this._proxy.times) {
                        game.PromptBox.getIns().show("次数不足");
                        return;
                    }
                    if (!mod.RoleUtil.isInUnion()) {
                        game.PromptBox.getIns().show("请先加入仙宗");
                        return;
                    }
                    if (!this._proxy.my_max_damage) {
                        this._proxy.c2s_guild_fengmo_battle(1);
                    }
                    else {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "84" /* FengmoFight */);
                    }
                };
                FengmoMdr.prototype.onClickAdd = function () {
                    var maxBuyCnt = this._proxy.guild_fengmo_meiricishu - this._proxy.times;
                    if (!maxBuyCnt) {
                        game.PromptBox.getIns().show(game.getLanById("compete_mars_8" /* compete_mars_8 */));
                        return;
                    }
                    var param = game.GameConfig.getParamConfigById("guild_goumai_xiaohao");
                    if (!mod.BagUtil.checkPropCnt(param.value[0], param.value[1], 1 /* Dialog */)) {
                        return;
                    }
                    var maxCnt = this._proxy.guild_fengmo_meirixiangou;
                    var cnt = maxCnt - this._proxy.buy_times;
                    if (!cnt) {
                        game.PromptBox.getIns().show(game.getLanById("compete_mars_9" /* compete_mars_9 */));
                        return;
                    }
                    var tips = "是否花费%s购买%s次挑战次数？";
                    mod.ViewMgr.getIns().showBuyTimes(tips, param.value, cnt, maxBuyCnt, maxCnt, Handler.alloc(this._proxy, this._proxy.c2s_buy_fengmo_tiaozhan_times));
                };
                FengmoMdr.prototype.onClickReward = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "80" /* FengmoHurtReward */);
                };
                FengmoMdr.prototype.onClickRank = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "81" /* FengmoRank */);
                };
                FengmoMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this._endTime = game.TimeUtil.getNextWeekTime();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                return FengmoMdr;
            }(game.EffectMdrBase));
            more.FengmoMdr = FengmoMdr;
            __reflect(FengmoMdr.prototype, "game.mod.more.FengmoMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoRank2Mdr = /** @class */ (function (_super) {
                __extends(FengmoRank2Mdr, _super);
                function FengmoRank2Mdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 2 /* Person */;
                    return _this;
                }
                return FengmoRank2Mdr;
            }(more.FengmoRankMdr));
            more.FengmoRank2Mdr = FengmoRank2Mdr;
            __reflect(FengmoRank2Mdr.prototype, "game.mod.more.FengmoRank2Mdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var FengmoRankMainMdr = /** @class */ (function (_super) {
                __extends(FengmoRankMainMdr, _super);
                function FengmoRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xianzongpaimingbiaoqiantubiao",
                            mdr: more.FengmoRankMdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: []
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "personal_rank_",
                            mdr: more.FengmoRank2Mdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: []
                        }
                    ];
                    return _this;
                }
                return FengmoRankMainMdr;
            }(mod.WndBaseMdr));
            more.FengmoRankMainMdr = FengmoRankMainMdr;
            __reflect(FengmoRankMainMdr.prototype, "game.mod.more.FengmoRankMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MoreMod = /** @class */ (function (_super) {
                __extends(MoreMod, _super);
                function MoreMod() {
                    return _super.call(this, "61" /* More */) || this;
                }
                MoreMod.prototype.initCmd = function () {
                    _super.prototype.initCmd.call(this);
                };
                MoreMod.prototype.initModel = function () {
                    _super.prototype.initModel.call(this);
                    this.regProxy(240 /* Achieve */, more.AchieveProxy);
                    this.regProxy(241 /* Huashen */, more.HuashenProxy);
                    this.regProxy(244 /* SkyPalace */, more.SkyPalaceProxy);
                    this.regProxy(251 /* Zhandui */, more.ZhanduiProxy);
                    this.regProxy(253 /* XujieJitan */, more.XujieJitanProxy);
                    this.regProxy(254 /* Mining */, more.MiningProxy);
                    this.regProxy(255 /* Huanggu */, more.HuangguProxy);
                    this.regProxy(256 /* XujieTansuo */, more.XujieTansuoProxy);
                    this.regProxy(257 /* Fengmo */, more.FengmoProxy);
                    this.regProxy(259 /* GoddessRecord */, more.GoddessRecordProxy);
                    this.regProxy(260 /* Xiandi */, more.XiandiProxy);
                    this.regProxy(261 /* Xianmai */, more.XianmaiProxy);
                    this.regProxy(264 /* Huanjing */, more.HuanjingProxy);
                    this.regProxy(265 /* CrossUnion */, more.CrossUnionProxy);
                    this.regProxy(267 /* CrossUnionFight */, more.CrossUnionFightProxy);
                    this.regProxy(268 /* XianjieLuandou */, more.XianjieLuandouProxy);
                    this.regProxy(269 /* Xianwei */, more.XianweiProxy);
                    this.regProxy(270 /* Honour */, more.HonourProxy);
                };
                MoreMod.prototype.initView = function () {
                    _super.prototype.initView.call(this);
                    this.regMdr("01" /* AchieveMain */, more.AchieveMainMdr);
                    this.regMdr("02" /* HuashenMain */, more.HuashenMainMdr);
                    this.regMdr("03" /* HuashenOpenMain */, more.HuashenOpenMainMdr);
                    this.regMdr("04" /* HuashenBattleMain */, more.HuashenBattleMainMdr);
                    this.regMdr("05" /* SkyPalace */, more.SkyPalaceMainMdr);
                    this.regMdr("06" /* ArtifactBuwei */, more.ArtifactBuweiTipsMdr);
                    this.regMdr("07" /* ArtifactBuff */, more.ArtifactBuffTipsMdr);
                    this.regMdr("08" /* ArtifactTips */, more.ArtifactTipsMdr);
                    this.regMdr("09" /* HuashenZhilu */, more.HuashenZhiluMdr);
                    //战队
                    this.regMdr("10" /* ZhanshendianMain */, more.ZhanshendianMainMdr);
                    this.regMdr("11" /* ZhanduiBuildMain */, more.ZhanduiBuildMainMdr);
                    this.regMdr("12" /* ZhanduiCreate */, more.ZhanduiCreateMdr);
                    this.regMdr("13" /* ZhanduiJoin */, more.ZhanduiJoinMdr);
                    this.regMdr("14" /* ZhanduiMain */, more.ZhanduiMainMdr);
                    this.regMdr("15" /* ZhanduiRename */, more.ZhanduiRenameMdr);
                    this.regMdr("16" /* ZhanduiInviteList */, more.ZhanduiInviteListMdr);
                    this.regMdr("17" /* ZhanduiLevelSecondMainMdr */, more.ZhanduiLevelSecondMainMdr);
                    this.regMdr("18" /* ZhanduiTeammateCheck */, more.ZhanduiTeammateCheckMdr);
                    this.regMdr("19" /* ZhanduiXianjiMain */, more.ZhanduiXianjiMainMdr);
                    //墟界祭坛
                    this.regMdr("20" /* XujieJitanMain */, more.XujieJitanMainMdr);
                    this.regMdr("21" /* XujieJitanGiftMain */, more.XujieJitanGiftMainMdr);
                    this.regMdr("22" /* XujieJitanHuanhua */, more.XujieJitanHuanhuaMdr);
                    this.regMdr("23" /* XujieJitanSpeedUp */, more.XujieJitanSpeedUpMdr);
                    this.regMdr("24" /* XujieJitanShelf */, more.XujieJitanShelfMdr);
                    //墟界探索
                    this.regMdr("51" /* XujieTansuoMain */, more.XujieTansuoMainMdr);
                    this.regMdr("52" /* XujieTansuoRankMain */, more.XujieTansuoRankMainMdr);
                    this.regMdr("53" /* XujieTansuoLayerMain */, more.XujieTansuoLayerMainMdr);
                    this.regMdr("54" /* XujieTansuoZhanlipin */, more.XujieTansuoZhanlipinMdr);
                    this.regMdr("55" /* XujieTansuoRankSection */, more.XujieTansuoRankSectionMdr);
                    this.regMdr("56" /* XujieTansuoBusinessGrid */, more.XujieTansuoBusinessGridMdr);
                    this.regMdr("57" /* XujieTansuoRewardGrid */, more.XujieTansuoRewardGridMdr);
                    this.regMdr("58" /* XujieTansuoExpeditionGrid */, more.XujieTansuoExpeditionGridMdr);
                    this.regMdr("59" /* XujieTansuoExpeditionShenLing */, more.XujieTansuoExpeditionShenLingMdr);
                    this.regMdr("60" /* XujieTansuoBossGrid */, more.XujieTansuoBossGridMdr);
                    this.regMdr("61" /* XujieTansuoZhanbao */, more.XujieTansuoZhanbaoMdr);
                    this.regMdr("62" /* XujieTansuoSaodang */, more.XujieTansuoSaodangMdr);
                    this.regMdr("63" /* XujieTansuoSceneResult */, more.XujieTansuoSceneResultMdr);
                    this.regMdr("64" /* XujieTansuoSceneResultKill */, more.XujieTansuoSceneResultKillMdr);
                    this.regMdr("68" /* XujieTansuoSceneResultFail */, more.XujieTansuoSceneResultFailMdr);
                    this.regMdr("65" /* TBSFight */, more.TBSFightMdr);
                    this.regMdr("66" /* Zhenrong */, more.ZhenrongMdr);
                    this.regMdr("67" /* ZhenrongShangzhen */, more.ZhenrongShangzhenSecondMainMdr);
                    this.regMdr("69" /* ZhenrongAttr */, more.ZhenrongAttrMdr);
                    this.regMdr("30" /* HuangguMain */, more.HuangguMainMdr);
                    this.regMdr("31" /* GoddessMain */, more.GoddessMainMdr);
                    this.regMdr("32" /* GoddessAttr */, more.GoddessAttrMdr);
                    this.regMdr("33" /* GoddessGod */, more.GoddessGodMdr);
                    this.regMdr("34" /* GoddessSummon */, more.GoddessSummonMdr);
                    this.regMdr("35" /* RewardShow */, more.RewardShowMdr);
                    this.regMdr("37" /* GoddessTargetMain */, more.GoddessTargetMainMdr);
                    this.regMdr("36" /* GoddessChat */, more.GoddessChatMdr);
                    this.regMdr("38" /* GoddessEvent */, more.GoddessEventMdr);
                    this.regMdr("39" /* GoddessEventChallenge */, more.GoddessEventChallengeMdr);
                    this.regMdr("29" /* EventChat */, more.EventChatMdr);
                    this.regMdr("40" /* MiningMain */, more.MiningMainMdr);
                    this.regMdr("41" /* MiningTips */, more.MiningTipsMdr);
                    this.regMdr("43" /* MiningSave */, more.MiningSaveMdr);
                    this.regMdr("42" /* MiningFight */, more.MiningFightListMdr);
                    this.regMdr("44" /* MiningLingbao */, more.MiningLingbaoMdr);
                    this.regMdr("45" /* MiningGift */, more.MiningGiftMdr);
                    this.regMdr("46" /* MiningBuy */, more.MiningBuyCntMdr);
                    this.regMdr("47" /* MiningResultWin */, more.MiningResultWinMdr);
                    this.regMdr("48" /* MiningResultFail */, more.MiningResultFailMdr);
                    this.regMdr("70" /* GoddessRecordMain */, more.GoddessRecordMainMdr);
                    this.regMdr("71" /* TimeGoddessMain */, more.TimeGoddessMainMdr);
                    this.regMdr("72" /* TimeGoddessEvent */, more.TimeGoddessEventMdr);
                    this.regMdr("73" /* TimeGoddessEventChallenge */, more.TimeGoddessEventChallengeMdr);
                    this.regMdr("74" /* TimeGoddessChat */, more.TimeGoddessChatMdr);
                    this.regMdr("76" /* TimeGoddessShelf */, more.TimeGoddessShelfMdr);
                    this.regMdr("75" /* TimeGoddessSpeedUp */, more.TimeGoddessSpeedUpMdr);
                    this.regMdr("77" /* TimeGoddessSummon */, more.TimeGoddessSummonMdr);
                    this.regMdr("90" /* HunkaMain */, more.HunkaMainMdr);
                    this.regMdr("91" /* HunkaTypeMain */, more.HunkaTypeMainMdr);
                    this.regMdr("92" /* HunkaGongming */, more.HunkaGongmingMdr);
                    this.regMdr("93" /* HunkaBag */, more.HunkaBagMdr);
                    this.regMdr("94" /* HunkaTips */, more.HunkaTipsMdr);
                    this.regMdr("95" /* HunkaOneKeyCompose */, more.HunkaOneKeyComposeMdr);
                    this.regMdr("96" /* HunkaComposeTips */, more.HunkaComposeTipsMdr);
                    this.regMdr("82" /* Fengmo */, more.FengmoMainMdr);
                    this.regMdr("80" /* FengmoHurtReward */, more.FengmoHurtRewardMdr);
                    this.regMdr("81" /* FengmoRank */, more.FengmoRankMainMdr);
                    this.regMdr("83" /* FengmoRankTips */, more.FengmoSectionMdr);
                    this.regMdr("84" /* FengmoFight */, more.FengmoFightMdr);
                    this.regMdr("85" /* FengmoResult */, more.FengmoResultWinMdr);
                    this.regMdr("86" /* FengmoScene */, more.FengmoSceneMdr);
                    this.regMdr("100" /* XianmaiMain */, more.XianmaiMainMdr);
                    this.regMdr("101" /* XianmaiZhanbao */, more.XianmaiZhanbaoMdr);
                    this.regMdr("102" /* XianmaiResult */, more.XianmaiResultMdr);
                    this.regMdr("103" /* XianmaiList */, more.XianmaiListMdr);
                    this.regMdr("104" /* XianmaiItemTips */, more.XianmaiItemTipsMdr);
                    this.regMdr("105" /* XianmaiSelect */, more.XianmaiSelectMdr);
                    this.regMdr("106" /* XianmaiItemTipsOnekey */, more.XianmaiItemTipsOnekeyMdr);
                    this.regMdr("107" /* XianmaiItemTipsMine */, more.XianmaiItemTipsMineMdr);
                    this.regMdr("108" /* XianmaiRank */, more.XianmaiRanMainMdr);
                    this.regMdr("109" /* XianmaiFight */, more.XianmaiFightMdr);
                    this.regMdr("110" /* XianmaiFightSuccess */, more.XianmaiFightSuccessMdr);
                    this.regMdr("111" /* XianmaiFightFail */, more.XianmaiFightFailMdr);
                    this.regMdr("112" /* XianmaiRankSectionTips */, more.XianmaiRankSectionMdr); //区间排行榜
                    this.regMdr("122" /* XiandiHouse */, more.XiandiHouseMainMdr);
                    this.regMdr("124" /* XiandiTips */, more.XiandiTipsMdr);
                    this.regMdr("125" /* XiandiSkill */, more.XiandiSkillTipsMdr);
                    this.regMdr("126" /* XiandiGodress */, more.XiandiGodressMainMdr);
                    this.regMdr("120" /* Xiandi */, more.XiandiMainMdr);
                    this.regMdr("121" /* XiandiShow */, more.XiandiShowMainMdr);
                    this.regMdr("127" /* XiandiList */, more.XiandiListMdr);
                    this.regMdr("123" /* XiandiRank */, more.XiandiRankMainMdr);
                    this.regMdr("128" /* XiandiInfo */, more.XiandiInfoMdr);
                    this.regMdr("129" /* XiandiSection */, more.XiandiSectionMdr);
                    this.regMdr("130" /* XiandiGift */, more.XiandiGiftMdr);
                    this.regMdr("180" /* XiandiTreasure */, more.XiandiTreasureMainMdr);
                    this.regMdr("181" /* XiandiWeapon */, more.XiandiWeaponMainMdr);
                    this.regMdr("182" /* XiandiStage */, more.XiandiStageMdr);
                    this.regMdr("183" /* XiandiShilian */, more.XiandiShilianMdr);
                    this.regMdr("131" /* CommonMatch */, mod.CommonMatchMdr);
                    this.regMdr("140" /* HuanjingMain */, more.HuanjingMainMdr);
                    this.regMdr("141" /* HuanjingGrowMain */, more.HuanjingGrowMainMdr);
                    this.regMdr("142" /* HuanjingStage */, more.HuanjingStageMdr);
                    this.regMdr("143" /* HuanjingStageSkillTips */, more.HuanjingStageSkillTipsMdr);
                    this.regMdr("144" /* HuanjingStar */, more.HuanjingStarMdr);
                    this.regMdr("145" /* HuanjingHuanling */, more.HuanjingHuanlingMdr);
                    this.regMdr("146" /* HuanjingZhushen */, more.HuanjingZhushenMdr);
                    this.regMdr("147" /* HuanjingCollectMain */, more.HuanjingCollectMainMdr);
                    this.regMdr("148" /* HuanjingZhushenSkillTips */, more.HuanjingZhushenSkillTipsMdr);
                    this.regMdr("149" /* HuanjingHuanlingSkillTips */, more.HuanjingHuanlingSkillTipsMdr);
                    this.regMdr("139" /* HuanjingStarStageTips */, more.HuanjingStarStageTipsMdr);
                    this.regMdr("138" /* HuanjingStarSkillTips */, more.HuanjingStarSkillTipsMdr);
                    this.regMdr("137" /* HuanjingCollectItemTips */, more.HuanjingCollectItemTipsMdr);
                    this.regMdr("160" /* CrossUnion */, more.CrossUnionMainMdr);
                    this.regMdr("161" /* CrossUnionReady */, more.CrossUnionReadyMainMdr);
                    this.regMdr("162" /* CrossUnionTeam */, more.CrossUnionTeamMdr);
                    this.regMdr("163" /* CrossUnionFormat */, more.CrossUnionFormatMdr);
                    this.regMdr("164" /* CrossUnionSkill */, more.CrossUnionSkillTipsMdr);
                    this.regMdr("165" /* CrossUnionReward */, more.CrossUnionRewardMdr);
                    this.regMdr("166" /* CrossUnionScene */, more.CrossUnionSceneMdr);
                    this.regMdr("167" /* CrossUnionInfo */, more.CrossUnionResultMdr);
                    this.regMdr("168" /* CrossUnionWin */, more.CrossUnionWinMdr);
                    this.regMdr("169" /* CrossUnionZhanbao */, more.CrossUnionZhanbaoMdr);
                    this.regMdr("170" /* XianjieLuandouMain */, more.XianjieLuandouMainMdr);
                    this.regMdr("171" /* XianjieLuandouRankMain */, more.XianjieLuandouRankMainMdr);
                    this.regMdr("172" /* XianjieLuandouScene */, more.XianjieLuandouSceneMdr);
                    this.regMdr("173" /* XianjieLuandouRankSection */, more.XianjieLuandouRankSectionMdr);
                    this.regMdr("174" /* XianjieLuandouScoreReward */, more.XianjieLuandouScoreRewardMdr);
                    this.regMdr("175" /* XianjieLuandouSkill */, more.XianjieLuandouSkillMdr);
                    this.regMdr("176" /* XianjieLuandouZhanbao */, more.XianjieLuandouZhanbaoMdr);
                    this.regMdr("177" /* XianjieLuandouStatistic */, more.XianjieLuandouStatisticMdr);
                    this.regMdr("178" /* XianjieLuandouSkillTips */, more.XianjieLuandouSkillTipsMdr);
                    this.regMdr("179" /* XianjieLuandouBossTips */, more.XianjieLuandouBossTipsMdr);
                    this.regMdr("190" /* Xianwei */, more.XianweiMainMdr);
                    this.regMdr("191" /* XianweiList */, more.XianweiListMdr);
                    this.regMdr("192" /* XianweiTips */, more.XianweiTipsMdr);
                    this.regMdr("193" /* XianweiRank */, more.XianweiRankMainMdr);
                    this.regMdr("194" /* XianweiSection */, more.XianweiSectionMdr);
                    this.regMdr("195" /* XianweiProp */, more.XianweiPropMdr);
                };
                return MoreMod;
            }(game.ModBase));
            more.MoreMod = MoreMod;
            __reflect(MoreMod.prototype, "game.mod.more.MoreMod");
            gso.modCls.push(MoreMod);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var delayCall = base.delayCall;
            var FengmoResultWinMdr = /** @class */ (function (_super) {
                __extends(FengmoResultWinMdr, _super);
                function FengmoResultWinMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.FengmoResultWinView);
                    _this.isEasyHide = false; //设置为不可点击，动画表现结束后设置为可点击
                    return _this;
                }
                FengmoResultWinMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                };
                FengmoResultWinMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.isEasyHide = false; //设置为不可点击，动画表现结束后设置为可点击
                    this._view.closeTips.visible = false;
                    this.updateReward();
                    this.updateHurtList();
                };
                FengmoResultWinMdr.prototype.onHide = function () {
                    mod.SceneUtil.exitScene();
                    _super.prototype.onHide.call(this);
                };
                //显示奖励
                FengmoResultWinMdr.prototype.updateReward = function () {
                    var info = this._showArgs;
                    this._view.resultReward.updateRewardList(info.reward, Handler.alloc(this, this.onRewardTweenEnd));
                };
                //显示伤害
                FengmoResultWinMdr.prototype.updateHurtList = function () {
                    var info = this._showArgs;
                    var hurt = info.long_params[0].toNumber();
                    var str = game.StringUtil.getHurtNumStr(hurt);
                    this._view.lab_hurt.textFlow = game.TextUtil.parseHtml("\u9020\u6210\u4F24\u5BB3 " + game.TextUtil.addColor(str, 8585074 /* GREEN */));
                };
                /**********************奖励表现相关**********************/
                //结束动画后执行
                FengmoResultWinMdr.prototype.onRewardTweenEnd = function () {
                    var _this = this;
                    this._view.closeTips.visible = true;
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                    delayCall(Handler.alloc(this, function () {
                        _this.isEasyHide = true; //动画表现结束后设置为可点击
                    }), 200);
                };
                return FengmoResultWinMdr;
            }(game.EffectMdrBase));
            more.FengmoResultWinMdr = FengmoResultWinMdr;
            __reflect(FengmoResultWinMdr.prototype, "game.mod.more.FengmoResultWinMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var FengmoSceneMdr = /** @class */ (function (_super) {
                __extends(FengmoSceneMdr, _super);
                function FengmoSceneMdr() {
                    var _this = _super.call(this, game.Layer.main) || this;
                    _this._view = _this.mark("_view", more.FengmoSceneView);
                    return _this;
                }
                FengmoSceneMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.percentHeight = 100;
                    this._view.percentWidth = 100;
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(257 /* Fengmo */);
                };
                FengmoSceneMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_scene_damage_update" /* ON_SCENE_DAMAGE_UPDATE */, this.onUpdateHurt, this);
                };
                FengmoSceneMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateHurt();
                    this._endTime = this._proxy.guild_fengmo_time + TimeMgr.time.serverTimeSecond;
                    this.update(TimeMgr.time);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                FengmoSceneMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                FengmoSceneMdr.prototype.onUpdateHurt = function (n) {
                    var hurt = 0;
                    if (n) {
                        var msg_1 = n.body;
                        for (var _i = 0, _a = msg_1.damage_list; _i < _a.length; _i++) {
                            var info = _a[_i];
                            var damage = info.damage && info.damage.toNumber() || 0;
                            hurt += damage;
                        }
                    }
                    this._view.lab_hurt.text = game.StringUtil.getHurtNumStr(hurt);
                };
                FengmoSceneMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this._view.lab_time.text = game.getLanById("battle_cue29" /* battle_cue29 */);
                        return;
                    }
                    this._view.lab_time.textFlow = game.TextUtil.parseHtml(game.TimeUtil.formatSecond(leftTime, 'mm:ss', true));
                };
                return FengmoSceneMdr;
            }(game.MdrBase));
            more.FengmoSceneMdr = FengmoSceneMdr;
            __reflect(FengmoSceneMdr.prototype, "game.mod.more.FengmoSceneMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var FengmoSectionMdr = /** @class */ (function (_super) {
                __extends(FengmoSectionMdr, _super);
                function FengmoSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                FengmoSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(257 /* Fengmo */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                };
                FengmoSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._section = this._showArgs.rank;
                    this._type = +this._showArgs.type;
                    this.onRankUpdate();
                };
                FengmoSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                FengmoSectionMdr.prototype.onRankUpdate = function () {
                    if (this._section && this._type) {
                        this._itemList.source = this._proxy.getRankSection(this._section, this._type);
                    }
                    this._view.img_type2.source = "fengmojifen";
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._type));
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr(this._type));
                };
                return FengmoSectionMdr;
            }(game.EffectMdrBase));
            more.FengmoSectionMdr = FengmoSectionMdr;
            __reflect(FengmoSectionMdr.prototype, "game.mod.more.FengmoSectionMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var GoddessAttrMdr = /** @class */ (function (_super) {
                __extends(GoddessAttrMdr, _super);
                function GoddessAttrMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.GoddessAttrView);
                    _this.isEasyHide = true;
                    return _this;
                }
                GoddessAttrMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                };
                GoddessAttrMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClickAct);
                };
                GoddessAttrMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                GoddessAttrMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessAttrMdr.prototype.onClickAct = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "37" /* GoddessTargetMain */);
                    this.hide();
                };
                GoddessAttrMdr.prototype.updateView = function () {
                    // this._view.baseDescItem2.visible = false;//todo
                    this._view.btn_act.visible = !this._proxy.isAct;
                    var lv = this._proxy.lv;
                    var desc = game.getLanById("huanggu_nvshen_tips4" /* huanggu_nvshen_tips4 */) + "：" + game.TextUtil.addColor(lv + game.getLanById("lv" /* lv */), 8585074 /* GREEN */);
                    this._view.baseDescItem1.updateShow(desc, game.getLanById("huanggu_nvshen_tips3" /* huanggu_nvshen_tips3 */));
                    var param = game.GameConfig.getParamConfigById("huanggu_nvshen_show_attr");
                    var desc2 = game.getLanById("huanggu_nvshen_tips29" /* huanggu_nvshen_tips29 */) + "：" + game.TextUtil.addColor("" + param.value * lv, 8585074 /* GREEN */)
                        + (" (" + game.getLanById("huanggu_nvshen_tips30" /* huanggu_nvshen_tips30 */) + ")")
                        + "\n" + game.getLanById("huanggu_nvshen_tips28" /* huanggu_nvshen_tips28 */);
                    var color = game.TextUtil.addColor(" (" + game.getLanById("huanggu_nvshen_tips27" /* huanggu_nvshen_tips27 */) + ")", 8585074 /* GREEN */);
                    this._view.baseDescItem2.updateShow(desc2, game.getLanById("huanggu_nvshen_tips26" /* huanggu_nvshen_tips26 */) + color);
                };
                return GoddessAttrMdr;
            }(game.MdrBase));
            more.GoddessAttrMdr = GoddessAttrMdr;
            __reflect(GoddessAttrMdr.prototype, "game.mod.more.GoddessAttrMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var nvshen_chat = msg.nvshen_chat;
            var delayCall = base.delayCall;
            var Handler = base.Handler;
            var clearDelay = base.clearDelay;
            var GoddessChatMdr = /** @class */ (function (_super) {
                __extends(GoddessChatMdr, _super);
                function GoddessChatMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.GoddessChatView);
                    _this.ITEM_H = 124; //item高度
                    _this.ITEM_N = 5; //item显示的数量
                    _this._index = 0; //当前对话的index
                    _this._chatList = [];
                    _this.content = "";
                    _this.contentLen = -1;
                    _this.startContent = false;
                    _this._isClose = true;
                    _this.isEasyHide = false;
                    return _this;
                }
                GoddessChatMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(255 /* Huanggu */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = more.CommonChatRender;
                    this._view.list.dataProvider = this._itemList;
                    this._selList = new ArrayCollection();
                    this._view.list_sel.itemRenderer = more.CommonChatSelRender;
                    this._view.list_sel.dataProvider = this._selList;
                };
                GoddessChatMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    //addEventListener(this._view, TouchEvent.TOUCH_TAP, this.jumpChat);
                    addEventListener(game.Layer.modal, TouchEvent.TOUCH_TAP, this.onClick);
                    this.onNt("on_update_goddess_chat_info" /* ON_UPDATE_GODDESS_CHAT_INFO */, this.onInfoUpdate, this);
                    this.onNt("on_goddess_chat_sel" /* ON_GODDESS_CHAT_SEL */, this.onChatSel, this);
                };
                GoddessChatMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.curChatType = 1 /* Goddess */;
                    this.setListSel(false);
                    this._view.scr.viewport.scrollV = 0;
                    this.updateView();
                };
                GoddessChatMdr.prototype.onHide = function () {
                    this._index = 0;
                    this._chatList = [];
                    this._itemList.removeAll();
                    this.resetData();
                    this.clearDelay();
                    game.Layer.modal.removeEventListener(TouchEvent.TOUCH_TAP, this.onClick, this);
                    _super.prototype.onHide.call(this);
                };
                GoddessChatMdr.prototype.onClick = function () {
                    if (!this.jumpChat() && this._isClose) {
                        this.hide();
                    }
                };
                GoddessChatMdr.prototype.resetData = function () {
                    this.content = "";
                    this.contentLen = -1;
                    this.startContent = false;
                    this._view.scr.scrollPolicyV = "on";
                    TimeMgr.removeUpdateItem(this);
                };
                GoddessChatMdr.prototype.onInfoUpdate = function () {
                    this.updateView();
                };
                GoddessChatMdr.prototype.onChatSel = function (n) {
                    var data = n.body;
                    var info = data.info;
                    var desc = data.desc;
                    //去重
                    for (var _i = 0, _a = this._chatList; _i < _a.length; _i++) {
                        var i = _a[_i];
                        if (i.index == info.index && i.level == info.level) {
                            return;
                        }
                    }
                    this.setListSel(false);
                    this._chatList.push(info);
                    var infoData = { type: 2 /* Self */, desc: desc };
                    this.addItemList(infoData);
                    this.nextChat();
                };
                GoddessChatMdr.prototype.updateView = function () {
                    var haoganLv = this._proxy.haoganLv;
                    var chatLv = this._proxy.chatLv;
                    var maxChatLv = this._proxy.chatMaxLv;
                    var isFinish = this._proxy.isChatFinish();
                    var canChat = !isFinish && haoganLv >= chatLv && chatLv <= maxChatLv; //当前好感index大于对话index，且当前对话未完成时，且不超过对话等级上限
                    if (canChat) {
                        //开始对话，定位到对应的位置
                        if (chatLv > 1) {
                            //存在已完成的对话
                            var curLv = chatLv - 1;
                            var infos = this.getInfos(curLv);
                            this.updateItemList(infos);
                        }
                        this.startChat(); //开始对话
                        this.setLabAct(false);
                    }
                    else {
                        //刷新列表
                        var curLv = Math.min(haoganLv, chatLv, maxChatLv);
                        var infos = this.getInfos(curLv, isFinish);
                        this.updateItemList(infos);
                        var actStr = "";
                        if (chatLv < maxChatLv) {
                            actStr = game.StringUtil.substitute(game.getLanById("huanggu_nvshen_tips13" /* huanggu_nvshen_tips13 */), [curLv + 1]);
                        }
                        this._view.lab_act.text = actStr;
                        this.setLabAct(true);
                    }
                };
                //curLv：已经完成对话的等级
                GoddessChatMdr.prototype.getInfos = function (curLv, isFinish) {
                    var infos = [];
                    for (var i = 0; i < curLv; ++i) {
                        var startLv = i + 1;
                        var cfgList = game.getConfigByNameId("huanggu_haogan_duihua.json" /* HuangguHaoganDuihua */, startLv);
                        for (var k in cfgList) {
                            var cfg = cfgList[k];
                            var infoData = { type: cfg.type };
                            if (cfg.type == 1 /* Goddess */) {
                                //女神对话
                                infoData.desc = cfg.desc;
                            }
                            else {
                                //自己对话，取保存选择的对话信息
                                infoData.desc = this._proxy.getSelfChat(cfg);
                            }
                            infos.push(infoData);
                        }
                        var rewardCfg = game.getConfigByNameId("huanggu_haogan.json" /* HuangguHaogan */, startLv);
                        var status = isFinish ? 1 /* Finish */ : 2 /* Draw */;
                        var rewardData = { type: 1 /* Goddess */, reward: rewardCfg.reward, status: status }; //最后显示奖励
                        infos.push(rewardData);
                    }
                    return infos;
                };
                //isPos暂时不用
                GoddessChatMdr.prototype.updateItemList = function (infos, isPos) {
                    this._view.scr.stopAnimation();
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(infos);
                    }
                    else {
                        this._itemList.source = infos;
                    }
                    this.updateItemListPos(isPos);
                };
                GoddessChatMdr.prototype.updateItemListPos = function (isPos) {
                    var _this = this;
                    var infos = this._itemList.source;
                    //isPos为true时则定位到最新的位置，否则滚动到最底部
                    var pos = isPos ? infos.length : infos.length - 1;
                    if (pos >= this.ITEM_N || isPos) {
                        egret.callLater(function () {
                            mod.ScrollUtil.moveVToAssign(_this._view.scr, pos, _this.ITEM_H, 10, 0, true, isPos);
                        }, this);
                    }
                };
                GoddessChatMdr.prototype.addItemList = function (item) {
                    this._itemList.addItem(item);
                    this.updateItemListPos();
                };
                GoddessChatMdr.prototype.setLabAct = function (visible) {
                    this._view.lab_act.visible = visible;
                };
                GoddessChatMdr.prototype.setListSel = function (visible, infoList) {
                    this._view.list_sel.visible = this._view.lab_tips.visible = visible;
                    if (visible) {
                        this._selList.source = infoList;
                    }
                };
                GoddessChatMdr.prototype.startChat = function () {
                    this._index++;
                    var chatLv = this._proxy.chatLv;
                    var cfgList = game.getConfigByNameId("huanggu_haogan_duihua.json" /* HuangguHaoganDuihua */, chatLv);
                    var cfg = cfgList[this._index];
                    if (!cfg) {
                        //对话已经结束，展示对话奖励
                        var rewardCfg = game.getConfigByNameId("huanggu_haogan.json" /* HuangguHaogan */, chatLv);
                        var status = 1 /* Finish */;
                        var rewardData = { type: 1 /* Goddess */, reward: rewardCfg.reward, status: status }; //最后显示奖励
                        this.addItemList(rewardData);
                        this.endChat();
                        this._isClose = true;
                    }
                    else {
                        if (cfg.type == 1 /* Goddess */) {
                            //女神对话
                            var infoData = { type: cfg.type, desc: cfg.desc, notShowDesc: true };
                            this.addItemList(infoData);
                            this.startContent = true;
                            this.content = cfg.desc;
                            this._view.scr.scrollPolicyV = "off";
                            this.updateContent();
                            TimeMgr.addUpdateItem(this, 25); //用于对话文本表现
                        }
                        else {
                            //自己对话时候，提示选择对话
                            var infoList = [];
                            var descList = this._proxy.getDescList(cfg.desc);
                            for (var pos = 0; pos < descList.length; pos++) {
                                var desc = descList[pos];
                                var info = new nvshen_chat();
                                info.pos = pos;
                                info.level = cfg["level"];
                                info.index = cfg.index;
                                infoList.push({ desc: desc, info: info });
                            }
                            this.setListSel(true, infoList);
                            this._isClose = true;
                        }
                    }
                };
                GoddessChatMdr.prototype.nextChat = function () {
                    var _this = this;
                    this._isClose = false;
                    //进行下一对话，延迟执行
                    this.clearDelay();
                    this._delay = delayCall(Handler.alloc(this, function () {
                        _this.startChat();
                    }), 500);
                };
                GoddessChatMdr.prototype.clearDelay = function () {
                    if (this._delay) {
                        clearDelay(this._delay);
                    }
                };
                //当前等级的对话结束的时候会调用
                GoddessChatMdr.prototype.endChat = function () {
                    this._index = 0;
                    this._proxy.c2s_huanggu_nvshen_op(4 /* Chat */);
                    if (this._chatList.length) {
                        var list = this._chatList.concat();
                        this._proxy.c2s_nvshen_save_chat(1 /* Goddess */, list);
                        this._chatList = [];
                    }
                };
                GoddessChatMdr.prototype.updateChatTxt = function (desc) {
                    var list = this._itemList.source;
                    var chatData = list[list.length - 1];
                    chatData.desc = desc;
                    this._itemList.itemUpdated(chatData);
                };
                GoddessChatMdr.prototype.jumpChat = function () {
                    if (this.startContent) {
                        this.contentLen = this.content.length;
                        this.updateChatTxt(this.content);
                        return true;
                    }
                    return false;
                };
                GoddessChatMdr.prototype.update = function (time) {
                    this.updateContent();
                };
                GoddessChatMdr.prototype.updateContent = function () {
                    if (this.contentLen == this.content.length) {
                        this.resetData();
                        this.nextChat();
                    }
                    else {
                        this.contentLen++;
                        var tmpContent = this.content.substring(0, this.contentLen);
                        this.updateChatTxt(tmpContent);
                    }
                };
                return GoddessChatMdr;
            }(game.MdrBase));
            more.GoddessChatMdr = GoddessChatMdr;
            __reflect(GoddessChatMdr.prototype, "game.mod.more.GoddessChatMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var Handler = base.Handler;
            var GoddessEventChallengeMdr = /** @class */ (function (_super) {
                __extends(GoddessEventChallengeMdr, _super);
                function GoddessEventChallengeMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoBossGridView);
                    _this.isEasyHide = true;
                    return _this;
                }
                GoddessEventChallengeMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._itemList;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                    this._view.btn_zhenrong.visible = true;
                    this._view.btn_zhanbao.visible = false;
                };
                GoddessEventChallengeMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_zhenrong, TouchEvent.TOUCH_TAP, this.onClickZhenrong);
                    addEventListener(this._view.btn_challenge, TouchEvent.TOUCH_TAP, this.onClickChallenge);
                    this.onNt("on_update_goddess_event_info" /* ON_UPDATE_GODDESS_EVENT_INFO */, this.updateView, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.updateBtn, this);
                };
                GoddessEventChallengeMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                GoddessEventChallengeMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessEventChallengeMdr.prototype.onClickZhenrong = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "66" /* Zhenrong */);
                };
                GoddessEventChallengeMdr.prototype.onClickChallenge = function () {
                    if (!mod.ViewMgr.getIns().checkZhenrong(true)) {
                        return;
                    }
                    if (!this._cfg) {
                        return;
                    }
                    mod.ViewMgr.getIns().checkZhenrongGod(this._cfg.god, Handler.alloc(this._proxy, this._proxy.c2s_huanggu_nvshen_op, [6 /* Event */, this._index]));
                };
                GoddessEventChallengeMdr.prototype.updateView = function () {
                    this._view.secondPop.updateTitleStr(this._showArgs.name);
                    var index = this._showArgs.index;
                    this._index = index;
                    var stage = this._proxy.getEventStage(index);
                    if (stage <= 0) {
                        var pCfg = game.GameConfig.getParamConfigById("huanggu_nvshen_touxiang");
                        var systemInfo = pCfg && pCfg.value; //头像ID、相框ID、性别1男2女
                        var data = { desc: this._showArgs.desc, systemInfo: systemInfo };
                        facade.showView("61" /* More */, "29" /* EventChat */, data);
                    }
                    var curStage = stage + 1;
                    var maxStage = this._proxy.getEventMaxStage(index);
                    if (curStage > maxStage) {
                        this.hide();
                        return;
                    }
                    var cfgList = game.getConfigByNameId("huanggu_shijian.json" /* HuangguShijian */, index);
                    var cfg = cfgList[curStage];
                    this._cfg = cfg;
                    this.addBmpFont(cfg.god + "", game.BmpTextCfg[222 /* XujietansuoTbs */], this._view.gr_power, true, 1, false, 0, true);
                    this._itemList.source = cfg.show_reward;
                    this._view.bar.show(100, 100, false, 0, false, 0 /* Percent */);
                    this._view.nameItem.visible = !!cfg.bossId;
                    if (this._view.nameItem.visible) {
                        var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, cfg.bossId);
                        this._view.nameItem.updateShow(monsterCfg.name);
                    }
                    this.updateBtn();
                    //todo，背景
                };
                GoddessEventChallengeMdr.prototype.updateBtn = function () {
                    var canChallenge = mod.ViewMgr.getIns().checkZhenrong();
                    this._view.btn_challenge.labelDisplay.text = canChallenge ? game.getLanById("tishi_14" /* tishi_14 */) : game.getLanById("huanggu_nvshen_tips25" /* huanggu_nvshen_tips25 */);
                    this._view.btn_challenge.redPoint.visible = this._proxy.checkEventPerHint(this._index);
                };
                return GoddessEventChallengeMdr;
            }(game.EffectMdrBase));
            more.GoddessEventChallengeMdr = GoddessEventChallengeMdr;
            __reflect(GoddessEventChallengeMdr.prototype, "game.mod.more.GoddessEventChallengeMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var GoddessEventMdr = /** @class */ (function (_super) {
                __extends(GoddessEventMdr, _super);
                function GoddessEventMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.GoddessEventView);
                    _this._itemList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                GoddessEventMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                };
                GoddessEventMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.updateHint, this);
                    this.onNt("on_update_goddess_event_info" /* ON_UPDATE_GODDESS_EVENT_INFO */, this.updateView, this);
                };
                GoddessEventMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateView();
                };
                GoddessEventMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessEventMdr.prototype.initShow = function () {
                    this._itemList = [
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4
                    ];
                };
                GoddessEventMdr.prototype.updateView = function () {
                    var cfgList = game.getConfigListByName("huanggu_shijian_type.json" /* HuangguShijianType */);
                    for (var i = 0; i < this._itemList.length && i < cfgList.length; ++i) {
                        var item = this._itemList[i];
                        var cfg = cfgList[i];
                        item.data = cfg;
                    }
                };
                GoddessEventMdr.prototype.updateHint = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        item.updateHint();
                    }
                };
                return GoddessEventMdr;
            }(game.MdrBase));
            more.GoddessEventMdr = GoddessEventMdr;
            __reflect(GoddessEventMdr.prototype, "game.mod.more.GoddessEventMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var GoddessGodMdr = /** @class */ (function (_super) {
                __extends(GoddessGodMdr, _super);
                function GoddessGodMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.GoddessGodView);
                    _this.isEasyHide = true;
                    return _this;
                }
                GoddessGodMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                };
                GoddessGodMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClickAct);
                };
                GoddessGodMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                GoddessGodMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessGodMdr.prototype.onClickAct = function () {
                    if (this._canAct) {
                        this._proxy.c2s_huanggu_nvshen_op(1 /* Act */);
                    }
                    else {
                        mod.ViewMgr.getIns().showView("61" /* More */, "37" /* GoddessTargetMain */);
                    }
                    this.hide();
                };
                GoddessGodMdr.prototype.updateView = function () {
                    //let attr = this._proxy.attr;
                    //let god = attr && attr.god || 0;
                    var specialAttrId = this._proxy.getSpecialAttrId();
                    var cfg = game.getConfigByNameId("special_attr.json" /* SpecialAttr */, specialAttrId);
                    var lv = this._proxy.lv;
                    var godStr = "" + cfg.god * lv;
                    this.addBmpFont(godStr, game.BmpTextCfg[100 /* CommonPower */], this._view.grp_god, true, 1, false, 0, true);
                    //let addGod = god / lv;
                    var addGod = cfg.god;
                    var descStr = game.getLanById("huanggu_nvshen_tips7" /* huanggu_nvshen_tips7 */) + "，" +
                        game.TextUtil.addColor(game.TextUtil.getAttrsText("god" /* god */) + "+" + addGod, 8585074 /* GREEN */);
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(descStr);
                    var lvStr = "（" + game.getLanById("huanggu_nvshen_tips8" /* huanggu_nvshen_tips8 */) + "：" + lv + "）";
                    this._view.lab_lv.text = lvStr;
                    this._view.btn_act.visible = this._view.lab_act.visible = !this._proxy.isAct;
                    if (this._view.btn_act.visible) {
                        var cfg_1 = game.GameConfig.getParamConfigById("huanggu_qiyue");
                        var index = cfg_1 && cfg_1.value && cfg_1.value[0];
                        var costCnt = cfg_1 && cfg_1.value && cfg_1.value[1];
                        this._canAct = mod.BagUtil.checkPropCnt(index, costCnt);
                        this._view.btn_act.redPoint.visible = this._canAct;
                        var actStr = this._canAct ? "huanggu_nvshen_tips18" /* huanggu_nvshen_tips18 */ : "huanggu_nvshen_tips19" /* huanggu_nvshen_tips19 */;
                        this._view.btn_act.labelDisplay.text = game.getLanById(actStr);
                    }
                };
                return GoddessGodMdr;
            }(game.EffectMdrBase));
            more.GoddessGodMdr = GoddessGodMdr;
            __reflect(GoddessGodMdr.prototype, "game.mod.more.GoddessGodMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessMainMdr = /** @class */ (function (_super) {
                __extends(GoddessMainMdr, _super);
                function GoddessMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Goddess */,
                            icon: "goddess_tab",
                            mdr: more.GoddessMdr,
                            title: "huanggu_nvshen_tips" /* huanggu_nvshen_tips */,
                            bg: "goddess_bg",
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "31" /* GoddessMain */, "01" /* Goddess */],
                        }
                    ];
                    return _this;
                }
                return GoddessMainMdr;
            }(mod.WndBaseMdr));
            more.GoddessMainMdr = GoddessMainMdr;
            __reflect(GoddessMainMdr.prototype, "game.mod.more.GoddessMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var TextEvent = egret.TextEvent;
            var facade = base.facade;
            var Handler = base.Handler;
            var GoddessMdr = /** @class */ (function (_super) {
                __extends(GoddessMdr, _super);
                function GoddessMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.GoddessView);
                    return _this;
                }
                GoddessMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                };
                GoddessMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.power2.btn_desc, TouchEvent.TOUCH_TAP, this.onClickDesc);
                    addEventListener(this._view.btn_exp, TouchEvent.TOUCH_TAP, this.onClickDesc);
                    addEventListener(this._view.btn_chat, TouchEvent.TOUCH_TAP, this.onClickChat);
                    addEventListener(this._view.btn_event, TouchEvent.TOUCH_TAP, this.onClickEvent);
                    addEventListener(this._view.btn_target, TouchEvent.TOUCH_TAP, this.onClickTarget);
                    addEventListener(this._view.btn_summon, TouchEvent.TOUCH_TAP, this.onClickSummon);
                    addEventListener(this._view.btn_consecrate, TouchEvent.TOUCH_TAP, this.onClickConsecrate);
                    addEventListener(this._view.lab_reward, TextEvent.LINK, this.onClickReward);
                    this.onNt("on_update_goddess_consecrate_info" /* ON_UPDATE_GODDESS_CONSECRATE_INFO */, this.onInfoUpdate, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updateAttr, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateIndex, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onHintUpdate, this);
                    this.onNt("on_update_goddess_chat_info" /* ON_UPDATE_GODDESS_CHAT_INFO */, this.updateChatHint, this);
                    this.onNt("on_update_goddess_event_info" /* ON_UPDATE_GODDESS_EVENT_INFO */, this.updateEventHint, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.updateEventHint, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onUpdateIndex2, this);
                };
                GoddessMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateInfo();
                    this.updateAttr();
                    this.updateHint();
                    this._proxy.c2s_nvshen_get_chat(1 /* Goddess */); //请求对话信息
                };
                GoddessMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessMdr.prototype.onClickDesc = function () {
                    facade.showView("61" /* More */, "32" /* GoddessAttr */);
                };
                GoddessMdr.prototype.onClickChat = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "36" /* GoddessChat */);
                };
                GoddessMdr.prototype.onClickEvent = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "38" /* GoddessEvent */);
                };
                GoddessMdr.prototype.onClickTarget = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "37" /* GoddessTargetMain */);
                };
                GoddessMdr.prototype.onClickGodItem = function () {
                    facade.showView("61" /* More */, "33" /* GoddessGod */);
                };
                GoddessMdr.prototype.onClickSummon = function () {
                    facade.showView("61" /* More */, "34" /* GoddessSummon */);
                };
                GoddessMdr.prototype.onClickConsecrate = function () {
                    if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    this._proxy.c2s_huanggu_nvshen_op(3 /* Consecrate */);
                };
                GoddessMdr.prototype.onClickReward = function () {
                    var rewards = this._proxy.getRewards();
                    var tips = game.getLanById("huanggu_nvshen_tips22" /* huanggu_nvshen_tips22 */);
                    mod.ViewMgr.getIns().rewardShow(rewards, tips);
                };
                GoddessMdr.prototype.onInfoUpdate = function () {
                    this.updateInfo();
                    this.updateAttr();
                    this.updateChatHint();
                    this.updateActHint();
                };
                /** 通用背包事件监听 */
                GoddessMdr.prototype.onBagUpdateIndex = function (n) {
                    var indexs = n.body;
                    var index = this._cost && this._cost[0];
                    if (index && indexs.indexOf(index) > -1) {
                        this.updateCost();
                    }
                };
                GoddessMdr.prototype.onUpdateIndex2 = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("huanggu_shuijing" /* huanggu_shuijing */) > -1) {
                        this.updateSummonHint();
                        this._view.item_summon.updateShow();
                    }
                };
                /** 通用红点事件监听 */
                GoddessMdr.prototype.onHintUpdate = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(this._proxy.targetHint)) {
                        this.updateTargetHint(data.value);
                    }
                };
                GoddessMdr.prototype.initShow = function () {
                    var tipsStr = game.getLanById("huanggu_nvshen_tips2" /* huanggu_nvshen_tips2 */);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(tipsStr);
                    var rewardStr = this._view.lab_reward.text;
                    this._view.lab_reward.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(rewardStr, 2330156 /* GREEN */, ""));
                    this._view.btn_gift.updateGift(201302 /* Id201302 */);
                    this._view.item_summon.setData(this._proxy.summonIndex);
                };
                GoddessMdr.prototype.updateInfo = function () {
                    var haoganLv = this._proxy.haoganLv;
                    var fontStr = haoganLv + "";
                    this.addBmpFont(fontStr, game.BmpTextCfg[221 /* GoddessFont */], this._view.grp_haoganLv, true, 1, true);
                    var haoganCfg = game.getConfigByNameId("huanggu_haogan.json" /* HuangguHaogan */, haoganLv);
                    this._view.bar.show(this._proxy.haoganExp, haoganCfg.exp, false, 0, false);
                    var lv = this._proxy.lv;
                    var exp = this._proxy.exp;
                    var cfg = game.getConfigByNameId("huanggu_gongfeng.json" /* HuangguGongfeng */, lv);
                    this._view.btn_exp.updateShow(exp, cfg.exp, lv); //供奉经验
                    this.updateCost();
                };
                GoddessMdr.prototype.updateCost = function () {
                    var cfg = game.GameConfig.getParamConfigById("huanggu_gongfeng_xiaohao");
                    this._cost = cfg.value;
                    var costIndex = this._cost[0];
                    var costCnt = this._cost[1];
                    var curCnt = mod.BagUtil.getPropCntByIdx(costIndex);
                    this._view.btn_consecrate.labelDisplay.text = curCnt + "/" + costCnt; //供奉消耗
                    this._view.btn_consecrate.redPoint.visible = curCnt >= costCnt;
                };
                GoddessMdr.prototype.updateAttr = function () {
                    //更新属性
                    //let attr = this._proxy.attr;
                    //供奉等级
                    var lv = this._proxy.lv;
                    var cfg = game.getConfigByNameId("huanggu_gongfeng.json" /* HuangguGongfeng */, lv);
                    this._view.power2.setPowerValue(cfg.ability_index);
                    //荒古仙力
                    var specialAttrId = this._proxy.getSpecialAttrId();
                    var cfg2 = game.getConfigByNameId("special_attr.json" /* SpecialAttr */, specialAttrId);
                    var god = cfg2.god * lv;
                    this._view.god_item.updateGod(god, true, Handler.alloc(this, this.onClickGodItem));
                    if (this._proxy.isAct) {
                        //亮开启
                        this._view.god_item.filters = null;
                    }
                    else {
                        this._view.god_item.filters = [mod.FilterUtil.getGrapFilter()];
                    }
                };
                GoddessMdr.prototype.updateHint = function () {
                    this.updateChatHint();
                    this.updateEventHint();
                    this.updateTargetHint(mod.HintMgr.getHint(this._proxy.targetHint));
                    this.updateActHint();
                    this.updateSummonHint();
                };
                GoddessMdr.prototype.updateChatHint = function () {
                    this._view.btn_chat.redPoint.visible = this._proxy.checkChatHint();
                };
                GoddessMdr.prototype.updateEventHint = function () {
                    this._view.btn_event.redPoint.visible = this._proxy.checkEventHint();
                };
                GoddessMdr.prototype.updateTargetHint = function (hint) {
                    this._view.btn_target.redPoint.visible = hint;
                };
                GoddessMdr.prototype.updateActHint = function () {
                    this._view.god_item.redPoint.visible = this._proxy.checkActHint();
                };
                GoddessMdr.prototype.updateSummonHint = function () {
                    this._view.btn_summon.redPoint.visible = this._proxy.checkSummonHint();
                };
                return GoddessMdr;
            }(game.EffectMdrBase));
            more.GoddessMdr = GoddessMdr;
            __reflect(GoddessMdr.prototype, "game.mod.more.GoddessMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var Tween = base.Tween;
            var GoddessSummonMdr = /** @class */ (function (_super) {
                __extends(GoddessSummonMdr, _super);
                function GoddessSummonMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.GoddessSummonView);
                    _this.isEasyHide = true;
                    return _this;
                }
                GoddessSummonMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                };
                GoddessSummonMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_summon, TouchEvent.TOUCH_TAP, this.onClickSummon);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateIndex, this);
                };
                GoddessSummonMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateView();
                };
                GoddessSummonMdr.prototype.onHide = function () {
                    Tween.remove(this._view.img_icon);
                    _super.prototype.onHide.call(this);
                };
                GoddessSummonMdr.prototype.onClickSummon = function () {
                    var isOpen = this._proxy.isOpenSummon();
                    if (!isOpen) {
                        game.PromptBox.getIns().show(game.getLanById("huanggu_nvshen_tips21" /* huanggu_nvshen_tips21 */));
                        return;
                    }
                    if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    this._proxy.c2s_huanggu_nvshen_op(2 /* Summon */);
                };
                GoddessSummonMdr.prototype.onClickReward = function () {
                    var rewards = this._proxy.getSummonRewards();
                    var cfg = game.GameConfig.getParamConfigById("huanggu_shuijing_gailv");
                    var rate = cfg.value / 100;
                    var tips = game.getLanById("huanggu_nvshen_tips11" /* huanggu_nvshen_tips11 */) + "：" + game.TextUtil.addColor(rate + "%", 2330156 /* GREEN */);
                    var title = game.getLanById("huanggu_nvshen_tips10" /* huanggu_nvshen_tips10 */);
                    mod.ViewMgr.getIns().rewardShow(rewards, tips, title);
                };
                /** 通用背包事件监听 */
                GoddessSummonMdr.prototype.onBagUpdateIndex = function (n) {
                    var indexs = n.body;
                    var index = this._cost && this._cost[0];
                    if (index && indexs.indexOf(index) > -1) {
                        this.updateView();
                    }
                };
                GoddessSummonMdr.prototype.initShow = function () {
                    this.addEftByParent("nvshentexiao" /* Nvshentexiao */, this._view.grp_eft);
                    Tween.remove(this._view.img_icon);
                    this._view.img_icon.y = 429;
                    Tween.get(this._view.img_icon, { loop: true })
                        .to({ y: 459 }, 800)
                        .to({ y: 429 }, 800);
                };
                GoddessSummonMdr.prototype.updateView = function () {
                    var isOpen = this._proxy.isOpenSummon();
                    var actStr = isOpen ? "" : game.getLanById("huanggu_nvshen_tips20" /* huanggu_nvshen_tips20 */);
                    this._view.lab_act.text = actStr;
                    var cost = this._proxy.getSummonCost(); //荒古水晶
                    this._cost = cost;
                    var costIndex = cost[0];
                    var costCnt = cost[1];
                    var curCnt = mod.BagUtil.getPropCntByIdx(costIndex);
                    this._view.bar.show(curCnt, costCnt, false, 0, false);
                    this._view.btn_summon.redPoint.visible = isOpen && curCnt >= costCnt;
                };
                return GoddessSummonMdr;
            }(game.EffectMdrBase));
            more.GoddessSummonMdr = GoddessSummonMdr;
            __reflect(GoddessSummonMdr.prototype, "game.mod.more.GoddessSummonMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var GoddessTargetMainMdr = /** @class */ (function (_super) {
                __extends(GoddessTargetMainMdr, _super);
                function GoddessTargetMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Target */,
                            icon: "goddess_target_tab",
                            mdr: more.GoddessTargetMdr,
                            title: "huanggu_nvshen_tips23" /* huanggu_nvshen_tips23 */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */,
                                "31" /* GoddessMain */, "01" /* Goddess */, "37" /* GoddessTargetMain */, "01" /* Target */],
                        }
                    ];
                    return _this;
                }
                return GoddessTargetMainMdr;
            }(mod.WndBaseMdr));
            more.GoddessTargetMainMdr = GoddessTargetMainMdr;
            __reflect(GoddessTargetMainMdr.prototype, "game.mod.more.GoddessTargetMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var GoddessTargetMdr = /** @class */ (function (_super) {
                __extends(GoddessTargetMdr, _super);
                function GoddessTargetMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.GoddessTargetView);
                    return _this;
                }
                GoddessTargetMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(255 /* Huanggu */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = more.GoddessTargetRender;
                    this._view.list.dataProvider = this._itemList;
                };
                GoddessTargetMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_goddess_target_info" /* ON_UPDATE_GODDESS_TARGET_INFO */, this.updateItemList, this);
                };
                GoddessTargetMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateItemList();
                };
                GoddessTargetMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                GoddessTargetMdr.prototype.initShow = function () {
                    var cfgList = game.getConfigListByName("huanggu_gift.json" /* HuangguGift */);
                    var rewards = cfgList[cfgList.length - 1].reward2;
                    this._view.icon_bigreward.setData(rewards[0]);
                };
                GoddessTargetMdr.prototype.updateItemList = function () {
                    var cfgList = game.getConfigListByName("huanggu_gift.json" /* HuangguGift */);
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(cfgList);
                    }
                    else {
                        this._itemList.source = cfgList;
                    }
                };
                return GoddessTargetMdr;
            }(game.EffectMdrBase));
            more.GoddessTargetMdr = GoddessTargetMdr;
            __reflect(GoddessTargetMdr.prototype, "game.mod.more.GoddessTargetMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var RewardShowMdr = /** @class */ (function (_super) {
                __extends(RewardShowMdr, _super);
                function RewardShowMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.RewardShowView);
                    _this.isEasyHide = true;
                    return _this;
                }
                RewardShowMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._itemList;
                };
                RewardShowMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                };
                RewardShowMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                RewardShowMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                RewardShowMdr.prototype.updateView = function () {
                    var info = this._showArgs;
                    var title = info.title || game.getLanById("relic2" /* relic2 */); //奖励预览
                    this._view.secondPop.updateTitleStr(title);
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(info.tips);
                    this._itemList.source = info.rewards;
                };
                return RewardShowMdr;
            }(game.MdrBase));
            more.RewardShowMdr = RewardShowMdr;
            __reflect(RewardShowMdr.prototype, "game.mod.more.RewardShowMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var XiandiGiftMdr = /** @class */ (function (_super) {
                __extends(XiandiGiftMdr, _super);
                function XiandiGiftMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XiandiGiftView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._itemList = new ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._itemList;
                };
                XiandiGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn_buy, TouchEvent.TOUCH_TAP, this.onClickBuy);
                    this.onNt("on_direct_buy_update" /* ON_DIRECT_BUY_UPDATE */, this.onBuyUpdate, this);
                };
                XiandiGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._productId = _super.prototype.decodeShowArgs.call(this);
                    this.updateShow();
                    this.updateBuyState();
                    this.labTimes();
                };
                XiandiGiftMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XiandiGiftMdr.prototype.labTimes = function () {
                    var cut = mod.PayUtil.getBuyTimes(this._productId);
                    if (cut <= 1) {
                        this._view.lab_cut.text = "无限购次数";
                        return;
                    }
                    this._view.lab_cut.text = "\u53EF\u8D2D\u4E70\u6B21\u6570:" + cut;
                };
                XiandiGiftMdr.prototype.onBuyUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(this._productId) >= 0) {
                        //this.updateBuyState();
                        this.hide();
                    }
                };
                XiandiGiftMdr.prototype.onClickBuy = function () {
                    if (this._canReceived) {
                        mod.PayUtil.drawReward(this._productId);
                        return;
                    }
                    mod.PayUtil.pay(this._productId);
                };
                XiandiGiftMdr.prototype.updateShow = function () {
                    var rewards = mod.PayUtil.getRewards(this._productId);
                    this._itemList.source = rewards;
                    // let reward = rewards[0];
                    // let propIndex = reward[0];
                    // let propCfg: PropConfig = GameConfig.getPropConfigById(propIndex);
                    // let index = propCfg && propCfg.param1 && propCfg.param1.length ? propCfg.param1[0][0] : 0;
                    // if (!index) {
                    //     return;
                    // }
                    // let cfg = getConfigById(index) as HorseConfig;
                    // this.addAnimate(index, this._view.grp_eff);
                    // this._view.name_item.updateShow(cfg.name, cfg.quality);
                    // this._view.special_attr.updateDesc(cfg);
                };
                XiandiGiftMdr.prototype.updateBuyState = function () {
                    this._canReceived = mod.PayUtil.canReceived(this._productId);
                    var hasReceived = mod.PayUtil.hasReceived(this._productId);
                    // this._view.img_buy.visible = hasReceived;
                    this._view.btn_buy.visible = !hasReceived;
                    if (this._view.btn_buy.visible) {
                        if (this._canReceived) {
                            this._view.btn_buy.group_eft.removeChildren();
                            this._view.btn_buy.labelDisplay.text = game.getLanById("battle_cue38" /* battle_cue38 */);
                        }
                        else {
                            this._view.btn_buy.labelDisplay.text = "";
                            var rmb = mod.PayUtil.getRmbValue(this._productId);
                            var rmbStr = rmb + "y";
                            this.addBmpFont(rmbStr, game.BmpTextCfg[207 /* Price */], this._view.btn_buy.group_eft, true, 1, true);
                        }
                    }
                };
                return XiandiGiftMdr;
            }(game.EffectMdrBase));
            more.XiandiGiftMdr = XiandiGiftMdr;
            __reflect(XiandiGiftMdr.prototype, "game.mod.more.XiandiGiftMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiGodressMainMdr = /** @class */ (function (_super) {
                __extends(XiandiGodressMainMdr, _super);
                function XiandiGodressMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandi_huanggunvshen",
                            mdr: more.XiandiGodressMdr,
                            bg: 'xiandi_godress_bg',
                            title: "xiandi_tips6" /* xiandi_tips6 */,
                            hintTypes: []
                        },
                    ];
                    return _this;
                }
                return XiandiGodressMainMdr;
            }(mod.WndBaseNewMdr));
            more.XiandiGodressMainMdr = XiandiGodressMainMdr;
            __reflect(XiandiGodressMainMdr.prototype, "game.mod.more.XiandiGodressMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiGodressMdr = /** @class */ (function (_super) {
                __extends(XiandiGodressMdr, _super);
                function XiandiGodressMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XiandiGodressView);
                    return _this;
                }
                XiandiGodressMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiGodressMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_fight, TouchEvent.TOUCH_TAP, this.onClickFight);
                    addEventListener(this._view.grp_skill, TouchEvent.TOUCH_TAP, this.onClickSkill);
                };
                XiandiGodressMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiGodressMdr.prototype.onUpdateView = function () {
                    if (this._proxy.tiandi_info) {
                        var info = this._proxy.tiandi_info;
                        this._view.head.updateHeadShow(info.head, info.head_frame, info.sex);
                        this._view.lab_name.text = info.name;
                    }
                    this._view.btn_fight.visible = !this._proxy.is_tiandi;
                    var buffId = this._proxy.getBuff();
                    var buff = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    this._view.img_icon.source = buff.icon;
                    this._view.nameItem.updateShow(game.getLanById("xiandi_tips6" /* xiandi_tips6 */));
                    // this._view.lab_desc.textFlow = TextUtil.parseHtml(getLanById(LanDef.xiandi_tips4));
                };
                XiandiGodressMdr.prototype.onClickFight = function () {
                    // let cost: number[] = this._proxy.tiandi_zhengba_tiaozhan_duowei;
                    // if (!BagUtil.checkPropCnt(cost[0], cost[1])) {
                    //     ViewMgr.getIns().showGift(this._proxy.xiandi_libao);
                    //     return;
                    // }
                    // let str: string = getLanById(LanDef.xiandi_tips13);
                    // let content: string = StringUtil.substitute(str, []);
                    // ViewMgr.getIns().showConfirm(content, base.Handler.alloc(this, () => {
                    //     this._proxy.c2s_xiandi_zhengba_oper(3);
                    // }))
                    this._proxy.onCheckJockey();
                };
                XiandiGodressMdr.prototype.onClickSkill = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "125" /* XiandiSkill */);
                };
                XiandiGodressMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiGodressMdr;
            }(game.EffectMdrBase));
            more.XiandiGodressMdr = XiandiGodressMdr;
            __reflect(XiandiGodressMdr.prototype, "game.mod.more.XiandiGodressMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiHouseMainMdr = /** @class */ (function (_super) {
                __extends(XiandiHouseMainMdr, _super);
                function XiandiHouseMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandigong",
                            mdr: more.XiandiHouseMdr,
                            bg: 'xiandigong_bg',
                            title: "xiandi_tips5" /* xiandi_tips5 */,
                            hintTypes: []
                        },
                    ];
                    return _this;
                }
                return XiandiHouseMainMdr;
            }(mod.WndBaseNewMdr));
            more.XiandiHouseMainMdr = XiandiHouseMainMdr;
            __reflect(XiandiHouseMainMdr.prototype, "game.mod.more.XiandiHouseMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiHouseMdr = /** @class */ (function (_super) {
                __extends(XiandiHouseMdr, _super);
                function XiandiHouseMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XiandiHouseView);
                    return _this;
                }
                XiandiHouseMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiHouseMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_god1, TouchEvent.TOUCH_TAP, this.onClickGod);
                    addEventListener(this._view.btn_god2, TouchEvent.TOUCH_TAP, this.onClickGod);
                    addEventListener(this._view.btn_god3, TouchEvent.TOUCH_TAP, this.onClickGod);
                    addEventListener(this._view.btn_god4, TouchEvent.TOUCH_TAP, this.onClickGod);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickFight);
                };
                XiandiHouseMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiHouseMdr.prototype.onUpdateView = function () {
                    var cfgArr = game.getConfigListByName("tiandi_type.json" /* TiandiType */);
                    for (var i in cfgArr) {
                        var cfg = game.getConfigByNameId("new_privilege.json" /* NewPrivilege */, cfgArr[i].privilege_id);
                        var itype = cfgArr[i].itype;
                        var btn = this._view["btn_god" + itype];
                        var item = btn["item"];
                        item.setData(cfgArr[i].image_id, cfg.desc);
                        item.setGray(game.ActivityUtil.getActivateByTiandi(itype));
                    }
                    var info = this._proxy.tiandi_info;
                    if (info) {
                        this._view.head.updateHeadShow(info.head, info.head_frame, info.sex, info.role_id);
                        this._view.lab_name.text = info.name;
                    }
                    else {
                        this._view.head.defaultHeadShow();
                        this._view.lab_name.text = game.getLanById("tishi_2" /* tishi_2 */);
                    }
                    this._view.btn.visible = !this._proxy.is_tiandi;
                };
                XiandiHouseMdr.prototype.onClickFight = function () {
                    // this._proxy.c2s_xiandi_zhengba_oper(3);
                    // let cost: number[] = this._proxy.tiandi_zhengba_tiaozhan_duowei;
                    // if (!BagUtil.checkPropCnt(cost[0], cost[1])) {
                    //     ViewMgr.getIns().showSecondPop(ModName.More, MoreViewType.XiandiGift, this._proxy.xiandi_libao);
                    //     return;
                    // }
                    // let str: string = getLanById(LanDef.xiandi_tips13);
                    // let content: string = StringUtil.substitute(str, []);
                    // ViewMgr.getIns().showConfirm(content, base.Handler.alloc(this, () => {
                    //     this._proxy.c2s_xiandi_zhengba_oper(3);
                    // }))
                    this._proxy.onCheckJockey();
                };
                XiandiHouseMdr.prototype.onClickGod = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670200 /* Tiandilu */, true)) {
                        return;
                    }
                    if (!mod.RoleUtil.isRoleRingAct()) {
                        game.PromptBox.getIns().show("请前往激活主角光环");
                        return;
                    }
                    mod.ViewMgr.getIns().showView("60" /* God */, "01" /* GodMain */);
                };
                XiandiHouseMdr.prototype.onHide = function () {
                    var cfgArr = game.getConfigListByName("tiandi_type.json" /* TiandiType */);
                    for (var i in cfgArr) {
                        var btn = this._view["btn_god" + cfgArr[i].itype];
                        var item = btn["item"];
                        item.setGray(false);
                    }
                    _super.prototype.onHide.call(this);
                };
                return XiandiHouseMdr;
            }(game.MdrBase));
            more.XiandiHouseMdr = XiandiHouseMdr;
            __reflect(XiandiHouseMdr.prototype, "game.mod.more.XiandiHouseMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiInfoMdr = /** @class */ (function (_super) {
                __extends(XiandiInfoMdr, _super);
                function XiandiInfoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XiandiInfoView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiInfoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._view.touchChildren = false;
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiInfoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.img_bg, egret.TouchEvent.TOUCH_TAP, this.hide);
                };
                XiandiInfoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiInfoMdr.prototype.onUpdateView = function () {
                    var tiandi_info = this._proxy.tiandi_info;
                    this._view.item1.setData(tiandi_info);
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(game.getLanById("xiandi_tips3" /* xiandi_tips3 */));
                    var xianhou_info = this._proxy.xianhou_info;
                    this._view.item2.setData(xianhou_info);
                    var hongyan_info = this._proxy.hongyan_info;
                    this._view.item3.setData(hongyan_info);
                    this._view.item.showInfo();
                };
                XiandiInfoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiInfoMdr;
            }(game.EffectMdrBase));
            more.XiandiInfoMdr = XiandiInfoMdr;
            __reflect(XiandiInfoMdr.prototype, "game.mod.more.XiandiInfoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var XiandiListMdr = /** @class */ (function (_super) {
                __extends(XiandiListMdr, _super);
                function XiandiListMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XiandiListView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                    this._view.list.itemRenderer = more.XiandiListItem;
                    this._view.list.dataProvider = this._listData;
                };
                XiandiListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_new_rank_info_update" /* ON_NEW_RANK_INFO_UPDATE */, this.onUpdateView, this);
                };
                XiandiListMdr.prototype.onShow = function () {
                    mod.RankUtil.c2s_rank_req_rank(2001 /* Zhanli */);
                    _super.prototype.onShow.call(this);
                    // this.onUpdateView();
                    this._proxy.king_index = this._showArgs;
                };
                XiandiListMdr.prototype.onUpdateView = function () {
                    var s2c = mod.RankUtil.getNewRankInfo(2001 /* Zhanli */);
                    // this._listData.replaceAll(s2c.info_list.filter(v => {
                    //     if (v.base_info) {
                    //         return !this._proxy.checkJob(v.base_info.role_id) || !v.base_info.role_id.eq(RoleVo.ins.role_id);
                    //     }
                    //     return false;
                    // }));
                    var list = s2c.info_list;
                    var lists = [];
                    for (var _i = 0, list_2 = list; _i < list_2.length; _i++) {
                        var info = list_2[_i];
                        var base_1 = info.base_info;
                        if (game.RoleVo.ins.role_id.eq(base_1.role_id)) {
                            continue;
                        }
                        if (base_1 && !this._proxy.checkJob(base_1.role_id)) {
                            lists.push(info);
                        }
                    }
                    this._listData.replaceAll(lists);
                };
                XiandiListMdr.prototype.onHide = function () {
                    this._proxy.king_index = 0;
                    _super.prototype.onHide.call(this);
                };
                return XiandiListMdr;
            }(game.EffectMdrBase));
            more.XiandiListMdr = XiandiListMdr;
            __reflect(XiandiListMdr.prototype, "game.mod.more.XiandiListMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiMainMdr = /** @class */ (function (_super) {
                __extends(XiandiMainMdr, _super);
                function XiandiMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandi_huanggutiangong",
                            mdr: more.XiandiMdr,
                            bg: 'xiandi_bg',
                            title: "xiandi_tips1" /* xiandi_tips1 */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */]
                        },
                    ];
                    return _this;
                }
                return XiandiMainMdr;
            }(mod.WndBaseNewMdr));
            more.XiandiMainMdr = XiandiMainMdr;
            __reflect(XiandiMainMdr.prototype, "game.mod.more.XiandiMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiMdr = /** @class */ (function (_super) {
                __extends(XiandiMdr, _super);
                function XiandiMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XiandiView);
                    return _this;
                }
                XiandiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_add, egret.TouchEvent.TOUCH_TAP, this.onClickAdd);
                    addEventListener(this._view.btn, egret.TouchEvent.TOUCH_TAP, this.onClickFight);
                    addEventListener(this._view.btn_rank, egret.TouchEvent.TOUCH_TAP, this.onClickRank);
                    addEventListener(this._view.btn_explain, egret.TouchEvent.TOUCH_TAP, this.onClickExplain);
                    this.onNt("on_update_xiandi_rank" /* ON_UPDATE_XIANDI_RANK */, this.onUpdateView, this);
                };
                XiandiMdr.prototype.onShow = function () {
                    this._proxy.c2s_xiandi_zhengba_oper(2, 1 /* Person */);
                    _super.prototype.onShow.call(this);
                    this.onUpdateTime();
                };
                XiandiMdr.prototype.onUpdateTime = function () {
                    this._endTime = game.TimeUtil.getNextDayTime(base.TimeMgr.time.serverTimeSecond, false, 1);
                    base.TimeMgr.addUpdateItem(this, 1000);
                    this.update(base.TimeMgr.time);
                };
                XiandiMdr.prototype.onUpdateView = function () {
                    for (var i = 0; i < 3; i++) {
                        var info_1 = this._proxy.geren_ranks && this._proxy.geren_ranks[i];
                        var item = this._view["item" + (i + 1)];
                        item.setData(info_1, i + 1);
                    }
                    var free_times = this._proxy.free_times;
                    var tiandi_zhengba_tiaozhan_mianfei = this._proxy.tiandi_zhengba_tiaozhan_mianfei;
                    var color = !free_times ? 16731212 /* RED */ : 8585074 /* GREEN */;
                    this._view.lab_count.textFlow = game.TextUtil.parseHtml("\u6B21\u6570:" + game.TextUtil.addColor(free_times + "/" + tiandi_zhengba_tiaozhan_mianfei, color));
                    var info = this._proxy.getRankInfo(1 /* Person */);
                    this._view.lab_rank.text = "" + (info && info.rank_num || game.getLanById("compete_mars_16" /* compete_mars_16 */));
                    this._view.lab_score.text = "" + info.value;
                };
                XiandiMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                XiandiMdr.prototype.onHide = function () {
                    base.TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                XiandiMdr.prototype.onClickAdd = function () {
                    var cost = this._proxy.tiandi_zhengba_tiaozhan_xiaohao;
                    var tiandi_zhengba_tiaozhan_mianfei = this._proxy.tiandi_zhengba_tiaozhan_mianfei;
                    var free_times = this._proxy.free_times;
                    if (free_times < tiandi_zhengba_tiaozhan_mianfei) {
                        mod.ViewMgr.getIns().showGainWaysTips(cost[0]);
                    }
                };
                XiandiMdr.prototype.onClickFight = function () {
                    var _this = this;
                    var free_times = this._proxy.free_times;
                    if (!free_times) {
                        var cost = this._proxy.tiandi_zhengba_tiaozhan_xiaohao;
                        if (!mod.BagUtil.checkPropCnt(cost[0], cost[1], 1 /* Dialog */)) {
                            return;
                        }
                        var prop = game.PropData.create(cost[0]);
                        var content = game.StringUtil.substitute(game.getLanById("xiandi_tips19" /* xiandi_tips19 */), [prop.cfg.name + "X" + cost[1]]);
                        // let content: string = "";
                        mod.ViewMgr.getIns().showConfirm(content, base.Handler.alloc(this, function () {
                            _this._proxy.c2s_xiandi_zhengba_oper(6);
                        }));
                        return;
                    }
                    this._proxy.c2s_xiandi_zhengba_oper(6);
                };
                XiandiMdr.prototype.onClickRank = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "123" /* XiandiRank */);
                };
                XiandiMdr.prototype.onClickExplain = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xiandi_tips10" /* xiandi_tips10 */));
                };
                return XiandiMdr;
            }(game.EffectMdrBase));
            more.XiandiMdr = XiandiMdr;
            __reflect(XiandiMdr.prototype, "game.mod.more.XiandiMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiRank2Mdr = /** @class */ (function (_super) {
                __extends(XiandiRank2Mdr, _super);
                function XiandiRank2Mdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 2 /* Guild */;
                    return _this;
                }
                return XiandiRank2Mdr;
            }(more.XiandiRankMdr));
            more.XiandiRank2Mdr = XiandiRank2Mdr;
            __reflect(XiandiRank2Mdr.prototype, "game.mod.more.XiandiRank2Mdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiRankMainMdr = /** @class */ (function (_super) {
                __extends(XiandiRankMainMdr, _super);
                function XiandiRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xianzongpaimingbiaoqiantubiao",
                            mdr: more.XiandiRank2Mdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: []
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "personal_rank_",
                            mdr: more.XiandiRankMdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: []
                        }
                    ];
                    return _this;
                }
                return XiandiRankMainMdr;
            }(mod.WndBaseMdr));
            more.XiandiRankMainMdr = XiandiRankMainMdr;
            __reflect(XiandiRankMainMdr.prototype, "game.mod.more.XiandiRankMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_achievement_get_big_rewards = msg.c2s_achievement_get_big_rewards;
            var s2c_achievement_info = msg.s2c_achievement_info;
            var AchieveProxy = /** @class */ (function (_super) {
                __extends(AchieveProxy, _super);
                function AchieveProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                AchieveProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.AchieveModel();
                    this.onProto(s2c_achievement_info, this.s2c_achievement_info, this);
                };
                AchieveProxy.prototype.c2s_achievement_get_big_rewards = function () {
                    var msg = new c2s_achievement_get_big_rewards();
                    this.sendProto(msg);
                };
                AchieveProxy.prototype.s2c_achievement_info = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    if (msg.level != undefined) {
                        this._model.lv = msg.level;
                    }
                    if (msg.status != undefined) {
                        this._model.status = msg.status;
                    }
                    this.updateHint();
                    this.sendNt("on_achieve_info_update" /* ON_ACHIEVE_INFO_UPDATE */);
                };
                Object.defineProperty(AchieveProxy.prototype, "lv", {
                    get: function () {
                        return this._model.lv;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(AchieveProxy.prototype, "status", {
                    get: function () {
                        return this._model.status;
                    },
                    enumerable: true,
                    configurable: true
                });
                AchieveProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670198 /* Achieve */)) {
                        return; //功能未开启
                    }
                    var hint = this.checkHint();
                    var hintType = this._model.hintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                AchieveProxy.prototype.checkHint = function () {
                    if (mod.TaskUtil.getTaskHint(39 /* Achieve */)) {
                        return true;
                    }
                    var hasDraw = this.status == 2 /* Draw */;
                    if (hasDraw) {
                        return false;
                    }
                    var curVal = game.RoleVo.ins.getValueByKey("chengjiu_jifen" /* chengjiu_jifen */); //成就积分
                    var cfg = game.getConfigByNameId("achievement.json" /* Achievement */, this.lv);
                    var maxVal = cfg && cfg.value || 0;
                    return curVal >= maxVal;
                };
                AchieveProxy.prototype.onTaskHint = function (n) {
                    var types = n.body;
                    var type = 39 /* Achieve */;
                    if (types.indexOf(type) < 0) {
                        return;
                    }
                    this.updateHint();
                };
                AchieveProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("chengjiu_jifen" /* chengjiu_jifen */) >= 0) {
                        this.updateHint();
                    }
                };
                return AchieveProxy;
            }(game.ProxyBase));
            more.AchieveProxy = AchieveProxy;
            __reflect(AchieveProxy.prototype, "game.mod.more.AchieveProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var XiandiSectionMdr = /** @class */ (function (_super) {
                __extends(XiandiSectionMdr, _super);
                function XiandiSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(260 /* Xiandi */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                };
                XiandiSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._section = this._showArgs.rank;
                    this._type = +this._showArgs.type;
                    this.onRankUpdate();
                };
                XiandiSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XiandiSectionMdr.prototype.onRankUpdate = function () {
                    if (this._section && this._type) {
                        this._itemList.source = this._proxy.getRankSection(this._section, this._type);
                    }
                    this._view.img_type2.source = "xingshu";
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._type));
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr(this._type));
                };
                return XiandiSectionMdr;
            }(game.EffectMdrBase));
            more.XiandiSectionMdr = XiandiSectionMdr;
            __reflect(XiandiSectionMdr.prototype, "game.mod.more.XiandiSectionMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiShowMainMdr = /** @class */ (function (_super) {
                __extends(XiandiShowMainMdr, _super);
                function XiandiShowMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandi_huanggutiangong",
                            mdr: more.XiandiShowMdr,
                            bg: 'xiandi_show_bg',
                            title: "xiandi_tips2" /* xiandi_tips2 */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */]
                        },
                    ];
                    return _this;
                }
                return XiandiShowMainMdr;
            }(mod.WndBaseNewMdr));
            more.XiandiShowMainMdr = XiandiShowMainMdr;
            __reflect(XiandiShowMainMdr.prototype, "game.mod.more.XiandiShowMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiShowMdr = /** @class */ (function (_super) {
                __extends(XiandiShowMdr, _super);
                function XiandiShowMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XiandiShowView);
                    _this._kings = 4;
                    return _this;
                }
                XiandiShowMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiShowMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_like, TouchEvent.TOUCH_TAP, this.onClickLike);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickExplain);
                    addEventListener(this._view.btn_goddess, TouchEvent.TOUCH_TAP, this.onClickGoddess);
                    addEventListener(this._view.btn_gift, TouchEvent.TOUCH_TAP, this.onClickGift);
                    addEventListener(this._view.btn_reward, TouchEvent.TOUCH_TAP, this.onClickReward);
                    addEventListener(this._view.btn_house, TouchEvent.TOUCH_TAP, this.onClickHouse);
                    addEventListener(this._view.btn_fight, TouchEvent.TOUCH_TAP, this.onClickFight);
                    addEventListener(this._view.btn_treasure, TouchEvent.TOUCH_TAP, this.onClickTreasure);
                    addEventListener(this._view.btn_weapon, TouchEvent.TOUCH_TAP, this.onClickWeapon);
                    // addEventListener(this._view.item, TouchEvent.TOUCH_TAP, this.onClickInfo);
                    this.onNt("on_update_xiandi_info" /* ON_UPDATE_XIANDI_INFO */, this.onUpdateView, this);
                };
                XiandiShowMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiShowMdr.prototype.onUpdateView = function () {
                    for (var i = 1; i <= this._kings; i++) {
                        var info = this._proxy.getKingInfo(i);
                        var item = this._view["item" + i];
                        item.setData(info, i, this._proxy.is_tiandi);
                    }
                    this._view.item.setData(this._proxy.tiandi_info, 0, false);
                    if (this._proxy.tiandi_info && !this._proxy.is_tiandi) {
                        this._view.btn_fight.setEffect("chuangguanfight" /* CurPass */);
                    }
                    this._view.lab_count.text = "" + this._proxy.click_count;
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(game.getLanById("xiandi_tips12" /* xiandi_tips12 */));
                    this._view.btn_reward.setHint(this._proxy.is_job && !this._proxy.is_gongfeng);
                    this._view.btn_like.setHint(this._proxy.tiandi_info && !this._proxy.is_click);
                };
                XiandiShowMdr.prototype.onClickHouse = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "122" /* XiandiHouse */);
                };
                XiandiShowMdr.prototype.onClickLike = function () {
                    if (this._proxy.is_click) {
                        game.PromptBox.getIns().show("今日已点赞");
                        return;
                    }
                    this._proxy.c2s_xiandi_zhengba_oper(5);
                };
                XiandiShowMdr.prototype.onClickExplain = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xiandi_tips10" /* xiandi_tips10 */));
                };
                XiandiShowMdr.prototype.onClickGoddess = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "126" /* XiandiGodress */);
                };
                XiandiShowMdr.prototype.onClickGift = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "130" /* XiandiGift */, this._proxy.xiandi_libao);
                    // ViewMgr.getIns().showGift(this._proxy.xiandi_libao);
                };
                XiandiShowMdr.prototype.onClickReward = function () {
                    var _this = this;
                    var okFunc = base.Handler.alloc(this, function () {
                        // if (!this._proxy.is_job) {
                        //     return;
                        // }
                        _this._proxy.c2s_xiandi_zhengba_oper(7);
                    });
                    var time = 0;
                    if (this._proxy.is_gongfeng) {
                        time = game.TimeUtil.getNextDayTime(base.TimeMgr.time.serverTimeSecond, false, 1);
                    }
                    var btnTips;
                    if (!this._proxy.is_job) {
                        btnTips = "天王可领取";
                    }
                    var timeTips = "后可领取";
                    var btnStr = game.getLanById("lingqu" /* lingqu */);
                    var title = game.getLanById("xiandi_tips20" /* xiandi_tips20 */);
                    mod.ViewMgr.getIns().showBoxReward2({ reward: this._proxy.tiandi_zhengba_gongfeng, okFunc: okFunc, time: time, timeTips: timeTips, btnStr: btnStr, btnTips: btnTips, title: title });
                };
                XiandiShowMdr.prototype.onClickFight = function () {
                    var _this = this;
                    var cost = this._proxy.tiandi_zhengba_tiaozhan_duowei;
                    var cnt = mod.BagUtil.getPropCntByIdx(cost[0]);
                    // if (!BagUtil.checkPropCnt(cost[0], cost[1])) {
                    if (cnt < cost[1]) {
                        // ViewMgr.getIns().showGift(this._proxy.xiandi_libao);
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "130" /* XiandiGift */, this._proxy.xiandi_libao);
                        return;
                    }
                    var param = game.TextUtil.addColor("" + cnt, 8585074 /* GREEN */);
                    var content = game.StringUtil.substitute(game.getLanById("xiandi_tips13" /* xiandi_tips13 */), [param]);
                    mod.ViewMgr.getIns().showConfirm(content, base.Handler.alloc(this, function () {
                        _this._proxy.c2s_xiandi_zhengba_oper(3);
                    }));
                };
                // private onClickInfo(): void {
                //     ViewMgr.getIns().showSecondPop(ModName.More, MoreViewType.XiandiInfo);
                // }
                XiandiShowMdr.prototype.onClickTreasure = function () {
                    if (!this._proxy.tiandi_info) {
                        game.PromptBox.getIns().show("暂无仙帝");
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "180" /* XiandiTreasure */);
                };
                XiandiShowMdr.prototype.onClickWeapon = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "181" /* XiandiWeapon */);
                };
                XiandiShowMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiShowMdr;
            }(game.EffectMdrBase));
            more.XiandiShowMdr = XiandiShowMdr;
            __reflect(XiandiShowMdr.prototype, "game.mod.more.XiandiShowMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var XiandiSkillTipsMdr = /** @class */ (function (_super) {
                __extends(XiandiSkillTipsMdr, _super);
                function XiandiSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XiandiSkillTipsView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(260 /* Xiandi */);
                    this._view.list.itemRenderer = mod.BaseDescItem;
                    this._view.list.dataProvider = this._listData;
                };
                XiandiSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XiandiSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiSkillTipsMdr.prototype.onUpdateView = function () {
                    var datas = [];
                    var level = this._proxy.skill_lv;
                    var huanggu_nvshen_buff = this._proxy.huanggu_nvshen_buff;
                    var info = this._proxy.tiandi_info;
                    var power = info && info.showpower && info.showpower.toNumber() || 0;
                    for (var _i = 0, huanggu_nvshen_buff_1 = huanggu_nvshen_buff; _i < huanggu_nvshen_buff_1.length; _i++) {
                        var info_2 = huanggu_nvshen_buff_1[_i];
                        var title = info_2[0] + "\u9636\u6548\u679C ";
                        if (power < info_2[2]) {
                            var limit = "(\u9700\u8981\u5929\u5E1D\u6218\u529B" + game.StringUtil.getPowerNumStr(info_2[2]) + ")";
                            var color = game.TextUtil.addColor(limit, 16731212 /* RED */);
                            title += color;
                        }
                        var buff = game.getConfigByNameId("buff.json" /* Buff */, info_2[1]);
                        var desc = buff.des;
                        if (!level && info_2[0] == level + 1 || info_2[0] == level) {
                            this._view.skill.setData(info_2[1]);
                            this._view.lab_name.text = buff.name;
                        }
                        datas.push({ desc: desc, title: title });
                    }
                    this._listData.replaceAll(datas);
                };
                XiandiSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiSkillTipsMdr;
            }(game.MdrBase));
            more.XiandiSkillTipsMdr = XiandiSkillTipsMdr;
            __reflect(XiandiSkillTipsMdr.prototype, "game.mod.more.XiandiSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiTipsMdr = /** @class */ (function (_super) {
                __extends(XiandiTipsMdr, _super);
                function XiandiTipsMdr() {
                    var _this = _super.call(this, game.Layer.upperWin) || this;
                    _this._view = _this.mark("_view", more.XiandiTipsView);
                    return _this;
                    // this.isEasyHide = true;
                }
                XiandiTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    // this._view.horizontalCenter = 0;
                    // this._view.verticalCenter = 0;
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.closeTips.male, TouchEvent.TOUCH_TAP, this.onNoRemind);
                };
                XiandiTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.closeTips.updateTxt(game.getLanById("xiandi_tips7" /* xiandi_tips7 */));
                    this._view.closeTips.updateShow(3, base.Handler.alloc(this, this.hide));
                    this.onUpdateView();
                };
                XiandiTipsMdr.prototype.onUpdateView = function () {
                    var type = this._showArgs;
                    var info;
                    var content = "";
                    var landef = "";
                    var name = "";
                    if (type == 1 /* Xiandi */) {
                        info = this._proxy.tiandi_info;
                        landef = game.getLanById("xiandi_tips8" /* xiandi_tips8 */);
                    }
                    else {
                        info = this._proxy.xianhou_info;
                        landef = game.getLanById("xiandi_tips9" /* xiandi_tips9 */);
                    }
                    name = info && game.TextUtil.addColor(info.name, 0xfff053) || game.getLanById("tishi_2" /* tishi_2 */);
                    content = game.StringUtil.substitute(landef, [name]);
                    if (info) {
                        this._view.head.updateHeadShow(info.head, info.head_frame, info.sex);
                    }
                    this._view.img_title.source = "xiandi_title" + type;
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(content);
                };
                XiandiTipsMdr.prototype.onNoRemind = function () {
                    this._proxy.c2s_tiandi_zhengba_ui_info();
                };
                XiandiTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiTipsMdr;
            }(game.MdrBase));
            more.XiandiTipsMdr = XiandiTipsMdr;
            __reflect(XiandiTipsMdr.prototype, "game.mod.more.XiandiTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiShilianMdr = /** @class */ (function (_super) {
                __extends(XiandiShilianMdr, _super);
                function XiandiShilianMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XiandiShilianView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiShilianMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiShilianMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                };
                XiandiShilianMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiShilianMdr.prototype.onUpdateView = function () {
                    this._view.icon.setData(this._proxy.xianqi_fuben_reward);
                    this._view.btn.label = this._proxy.reward_status == 1 ? game.getLanById("lingqu" /* lingqu */) : game.getLanById("tishi_14" /* tishi_14 */);
                    this._view.btn.setHint(this._proxy.reward_status == 1);
                    var cfg = game.getConfigByNameId("tiandi_xianqi_fuben.json" /* TiandiXianqiFuben */, this._proxy.xianqi_stage);
                    this._view.recommendPower.setPowerValue(cfg.power_show);
                    this._view.lab_tips.textFlow = game.TextUtil.parseHtml(game.getLanById("xiandi_tips24" /* xiandi_tips24 */));
                };
                XiandiShilianMdr.prototype.onClickBtn = function () {
                    if (this._proxy.reward_status == 1) {
                        this._proxy.c2s_tiandi_box_oper(3);
                    }
                    else {
                        this._proxy.c2s_tiandi_box_challenge();
                    }
                    this.hide();
                    this.sendNt("on_close_xiandi_popup" /* ON_CLOSE_XIANDI_POPUP */);
                };
                XiandiShilianMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiShilianMdr;
            }(game.MdrBase));
            more.XiandiShilianMdr = XiandiShilianMdr;
            __reflect(XiandiShilianMdr.prototype, "game.mod.more.XiandiShilianMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiStageMdr = /** @class */ (function (_super) {
                __extends(XiandiStageMdr, _super);
                function XiandiStageMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XiandiStageView);
                    _this._index = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                XiandiStageMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiStageMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_right, TouchEvent.TOUCH_TAP, this.onClickRight);
                    addEventListener(this._view.btn_left, TouchEvent.TOUCH_TAP, this.onClickLeft);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClickActive);
                    addEventListener(this._view.power.btn_desc, TouchEvent.TOUCH_TAP, this.onClickAttr);
                    addEventListener(this._view.btn_shilian, TouchEvent.TOUCH_TAP, this.onClickShilian);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.onUpdateAttr, this);
                    this.onNt("on_update_xiandi_treasure" /* ON_UPDATE_XIANDI_TREASURE */, this.onUpdateView, this);
                    this.onNt("on_close_xiandi_popup" /* ON_CLOSE_XIANDI_POPUP */, this.hide, this);
                };
                XiandiStageMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._index = 0;
                    this.onUpdateView();
                };
                XiandiStageMdr.prototype.onUpdateView = function () {
                    // let stage: number[] = this._proxy.xianqi_stage_list.find(v => { return this._proxy.xianqi_stage == v[0] });
                    var _this = this;
                    var cfgArr = game.getConfigListByName("xiandi_xianqi.json" /* TiandiXianqi */);
                    this._cfgs = cfgArr.filter(function (v) { return v.index >= _this._proxy.xianqi_stage; });
                    if (!this._cfgs || !this._cfgs.length) {
                        return;
                    }
                    this.addAnimate(this._proxy.xianqi_waixian, this._view.grp_eft);
                    this._view.btn_shilian.setHint(this._proxy.reward_status == 1);
                    this.onnUpdateSelect();
                };
                XiandiStageMdr.prototype.onnUpdateSelect = function () {
                    var len = this._cfgs.length;
                    if (this._index == len) {
                        this._index = len - 1;
                    }
                    if (this._index < 0) {
                        this._index = 0;
                    }
                    this._view.btn_right.visible = len > 1 && this._index != len - 1;
                    this._view.btn_left.visible = !!this._index;
                    if (this._index) {
                        var limit = this._cfgs[this._index].open_day;
                        //     this._view.lab_limit.text = `开服${limit}天后可进阶`;
                        this.addBmpFont("" + limit, game.BmpTextCfg[100 /* CommonPower */], this._view.grp_day, true, 1, true);
                    }
                    this._view.grp_limit.visible = !!this._index;
                    var bool = mod.BagUtil.checkPropCnt(this._proxy.xianqi_fuben_reward[0], this._proxy.xianqi_fuben_reward[1]);
                    var bool_limit = !this._index && !this._proxy.is_activa && this._proxy.is_tiandi;
                    this._view.btn_act.visible = bool && bool_limit;
                    this._view.btn_shilian.visible = !bool && bool_limit;
                    var cfg = game.getConfigByNameId("xiandi_xianqi.json" /* TiandiXianqi */, this.stage);
                    this._view.lab_desc1.textFlow = game.TextUtil.parseHtml(cfg.attr_desc);
                    var buff = game.getConfigByNameId("buff.json" /* Buff */, cfg.buff_id);
                    this._view.lab_desc2.textFlow = game.TextUtil.parseHtml(buff && buff.des);
                    var stageStr = game.StringUtil.getCNBynumber(cfg.index);
                    this.addBmpFont("" + stageStr, game.BmpTextCfg[205 /* ChineseLayer */], this._view.grp_font);
                    this.onUpdateAttr();
                };
                XiandiStageMdr.prototype.onUpdateAttr = function () {
                    var cfg = game.getConfigByNameId("tiandi_xianqi_fuben.json" /* TiandiXianqiFuben */, this.stage);
                    var attr = mod.RoleUtil.getAttr(cfg.attr_id);
                    this._view.power.setPowerValue(attr && attr.showpower || 0);
                };
                XiandiStageMdr.prototype.onClickRight = function () {
                    this._index++;
                    this.onnUpdateSelect();
                };
                XiandiStageMdr.prototype.onClickLeft = function () {
                    this._index--;
                    this.onnUpdateSelect();
                };
                XiandiStageMdr.prototype.onClickActive = function () {
                    this._proxy.c2s_tiandi_box_oper(2);
                };
                XiandiStageMdr.prototype.onClickAttr = function () {
                    var cfg = game.getConfigByNameId("tiandi_xianqi_fuben.json" /* TiandiXianqiFuben */, this.stage);
                    var attr = mod.RoleUtil.getAttr(cfg.attr_id);
                    mod.ViewMgr.getIns().showAttrTipsWithoutGod("\u5C5E\u6027", attr);
                };
                XiandiStageMdr.prototype.onClickShilian = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "183" /* XiandiShilian */);
                };
                XiandiStageMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.removeAllEffects();
                };
                Object.defineProperty(XiandiStageMdr.prototype, "stage", {
                    get: function () {
                        return this._cfgs[this._index] && this._cfgs[this._index].index || 1;
                    },
                    enumerable: true,
                    configurable: true
                });
                return XiandiStageMdr;
            }(game.EffectMdrBase));
            more.XiandiStageMdr = XiandiStageMdr;
            __reflect(XiandiStageMdr.prototype, "game.mod.more.XiandiStageMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiTreasureMainMdr = /** @class */ (function (_super) {
                __extends(XiandiTreasureMainMdr, _super);
                function XiandiTreasureMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandi_huanggutiangong",
                            mdr: more.XiandiTreasureMdr,
                            bg: 'xiandibaoge_bg',
                            // title: LanDef.xiandi_tips2,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */, "180" /* XiandiTreasure */]
                        },
                    ];
                    return _this;
                }
                return XiandiTreasureMainMdr;
            }(mod.WndBaseNewMdr));
            more.XiandiTreasureMainMdr = XiandiTreasureMainMdr;
            __reflect(XiandiTreasureMainMdr.prototype, "game.mod.more.XiandiTreasureMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiTreasureMdr = /** @class */ (function (_super) {
                __extends(XiandiTreasureMdr, _super);
                function XiandiTreasureMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XiandiTreasureView);
                    _this._listData = new eui.ArrayCollection();
                    return _this;
                }
                XiandiTreasureMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                    this._view.list.itemRenderer = more.XiandiTreasureItem;
                    this._view.list.dataProvider = this._listData;
                };
                XiandiTreasureMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_fight, TouchEvent.TOUCH_TAP, this.onClickFight);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickExplain);
                    this.onNt("on_update_xiandi_treasure" /* ON_UPDATE_XIANDI_TREASURE */, this.onUpdateCount, this);
                    this.onNt("on_update_exchange_shop_info" /* ON_UPDATE_EXCHANGE_SHOP_INFO */, this.onUpdateList, this);
                    // this.onNt(RoleEvent.ON_SERVER_DAY_UPDATE, this.onUpdateList, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this); //属性刷新，有货币
                };
                XiandiTreasureMdr.prototype.onShow = function () {
                    mod.StoreUtil.c2s_exchange_shop_info(105 /* Xiandi */);
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiTreasureMdr.prototype.onUpdateView = function () {
                    if (this._proxy.tiandi_info) {
                        var tiandi = this._proxy.tiandi_info;
                        this._view.lab_name.text = tiandi.name;
                        this.updateUIRole(this._view.grp_eft, tiandi.fashion, tiandi.weapon, tiandi.wing, tiandi.sex, 0.5);
                    }
                    this.onUpdateCount();
                    this.onUpdateList();
                    this.onUpdateCoin();
                };
                XiandiTreasureMdr.prototype.onUpdateCoin = function () {
                    this._view.coin1.setData(1450000002 /* Xianyu */);
                    this._view.coin2.setData(1450000001 /* Yuanbao */);
                };
                XiandiTreasureMdr.prototype.onUpdateList = function () {
                    this._listData.replaceAll(this._proxy.list);
                };
                XiandiTreasureMdr.prototype.onUpdateCount = function () {
                    var count = this._proxy.count;
                    this.addBmpFont("" + count, game.BmpTextCfg[104 /* MainVip */], this._view.grp_font, true, 1.5, true);
                    var rate = "";
                    var rates = this._proxy.tiandi_box_have;
                    var num = 0;
                    if (this._proxy.is_king) {
                        rate = game.TextUtil.addColor(rates[1] / 100 + "%", 8585074 /* GREEN */);
                        num = count * rates[1] / 10000;
                    }
                    else {
                        rate = game.TextUtil.addColor(rates[0] / 100 + "%", 8585074 /* GREEN */);
                        num = count * rates[0] / 10000;
                    }
                    this._view.lab_rate.textFlow = game.TextUtil.parseHtml("\u5F53\u524D\u7A0E\u7387\uFF1A" + rate);
                    this._view.prop.setData([this._proxy.tiandi_box_iteam, num]);
                };
                XiandiTreasureMdr.prototype.onClickFight = function () {
                    this._proxy.onCheckJockey();
                };
                XiandiTreasureMdr.prototype.onClickExplain = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xiandi_tips26" /* xiandi_tips26 */));
                };
                XiandiTreasureMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf(game.PropIndexToKey[1450000002 /* Xianyu */]) > -1 || keys.indexOf(game.PropIndexToKey[1450000001 /* Yuanbao */]) > -1) {
                        this.onUpdateCoin();
                    }
                };
                XiandiTreasureMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XiandiTreasureMdr;
            }(game.EffectMdrBase));
            more.XiandiTreasureMdr = XiandiTreasureMdr;
            __reflect(XiandiTreasureMdr.prototype, "game.mod.more.XiandiTreasureMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XiandiWeaponMainMdr = /** @class */ (function (_super) {
                __extends(XiandiWeaponMainMdr, _super);
                function XiandiWeaponMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandi_huanggutiangong",
                            mdr: more.XiandiWeaponMdr,
                            bg: 'huangguxianqi_bg',
                            title: "xiandi_tips2" /* xiandi_tips2 */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "120" /* Xiandi */, "181" /* XiandiWeapon */]
                        },
                    ];
                    return _this;
                }
                return XiandiWeaponMainMdr;
            }(mod.WndBaseNewMdr));
            more.XiandiWeaponMainMdr = XiandiWeaponMainMdr;
            __reflect(XiandiWeaponMainMdr.prototype, "game.mod.more.XiandiWeaponMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var XiandiWeaponMdr = /** @class */ (function (_super) {
                __extends(XiandiWeaponMdr, _super);
                function XiandiWeaponMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XiandiWeaponView);
                    return _this;
                }
                XiandiWeaponMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(260 /* Xiandi */);
                };
                XiandiWeaponMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_battle, TouchEvent.TOUCH_TAP, this.onClickBattle);
                    addEventListener(this._view.btn_preview, TouchEvent.TOUCH_TAP, this.onClickPreview);
                    addEventListener(this._view.power.btn_desc, TouchEvent.TOUCH_TAP, this.onClickAttr);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.onUpdateAttr, this);
                    this.onNt("on_server_day_update" /* ON_SERVER_DAY_UPDATE */, this.onUpdateAttr, this);
                    this.onNt("on_update_xiandi_treasure" /* ON_UPDATE_XIANDI_TREASURE */, this.onUpdateView, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this); //属性刷新，有货币
                };
                XiandiWeaponMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XiandiWeaponMdr.prototype.onUpdateView = function () {
                    this._view.btn_battle.visible = this._proxy.is_tiandi && !this._proxy.is_huanhua && this._proxy.is_activa;
                    this.addAnimate(this._proxy.xianqi_waixian, this._view.grp_eft);
                    this._view.jockeyItem.initData();
                    this._view.btn_preview.setHint(this._proxy.reward_status == 1);
                    this.onUpdateSkill();
                    this.onUpdateAttr();
                    this.onUpdateCoin();
                };
                XiandiWeaponMdr.prototype.onUpdateCoin = function () {
                    this._view.coin1.setData(1450000002 /* Xianyu */);
                    this._view.coin2.setData(1450000001 /* Yuanbao */);
                };
                XiandiWeaponMdr.prototype.onUpdateSkill = function () {
                    var cfg = game.getConfigByNameId("xiandi_xianqi.json" /* TiandiXianqi */, this._proxy.xianqi_stage);
                    this._view.lab_desc1.textFlow = game.TextUtil.parseHtml(cfg.attr_desc);
                    var buff = game.getConfigByNameId("buff.json" /* Buff */, cfg.buff_id);
                    this._view.lab_desc2.textFlow = game.TextUtil.parseHtml(buff && buff.des);
                };
                XiandiWeaponMdr.prototype.onUpdateAttr = function () {
                    var cfg = game.getConfigByNameId("tiandi_xianqi_fuben.json" /* TiandiXianqiFuben */, this._proxy.xianqi_stage);
                    var attr = mod.RoleUtil.getAttr(cfg.attr_id);
                    this._view.power.setPowerValue(attr && attr.showpower || 0);
                };
                XiandiWeaponMdr.prototype.onClickBattle = function () {
                    this._proxy.c2s_tiandi_box_oper(1);
                };
                XiandiWeaponMdr.prototype.onClickPreview = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "182" /* XiandiStage */);
                };
                XiandiWeaponMdr.prototype.onClickAttr = function () {
                    var cfg = game.getConfigByNameId("tiandi_xianqi_fuben.json" /* TiandiXianqiFuben */, this._proxy.xianqi_stage);
                    var attr = mod.RoleUtil.getAttr(cfg.attr_id);
                    mod.ViewMgr.getIns().showAttrTipsWithoutGod("\u5C5E\u6027", attr);
                };
                XiandiWeaponMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf(game.PropIndexToKey[1450000002 /* Xianyu */]) > -1 || keys.indexOf(game.PropIndexToKey[1450000001 /* Yuanbao */]) > -1) {
                        this.onUpdateCoin();
                    }
                };
                XiandiWeaponMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.removeAllEffects();
                };
                return XiandiWeaponMdr;
            }(game.EffectMdrBase));
            more.XiandiWeaponMdr = XiandiWeaponMdr;
            __reflect(XiandiWeaponMdr.prototype, "game.mod.more.XiandiWeaponMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianjieLuandouBossTipsMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouBossTipsMdr, _super);
                function XianjieLuandouBossTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.BossTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouBossTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianjieLuandouBossTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_get, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                XianjieLuandouBossTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.updateView();
                };
                XianjieLuandouBossTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouBossTipsMdr.prototype.updateView = function () {
                    this._endTime = this._proxy.show_time_sec;
                    this._listData.replaceAll(this._proxy.show_rewards);
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(game.getLanById("xianjieluandou_tips19" /* xianjieluandou_tips19 */));
                    this._view.btn_get.setEffect("tiaozhan" /* Tiaozhan */);
                };
                XianjieLuandouBossTipsMdr.prototype.onClick = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "170" /* XianjieLuandouMain */);
                    this.hide();
                };
                XianjieLuandouBossTipsMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this.hide();
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return XianjieLuandouBossTipsMdr;
            }(game.MdrBase));
            more.XianjieLuandouBossTipsMdr = XianjieLuandouBossTipsMdr;
            __reflect(XianjieLuandouBossTipsMdr.prototype, "game.mod.more.XianjieLuandouBossTipsMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouMainMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouMainMdr, _super);
                function XianjieLuandouMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "xianjieluandoubiaoqiantubiao",
                            mdr: more.XianjieLuandouMdr,
                            title: "xianjieluandou_tips1" /* xianjieluandou_tips1 */,
                            bg: "xianjieludou_bg",
                            openIdx: 1041670268 /* XianjieLuandou */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "170" /* XianjieLuandouMain */, "01" /* Btn1 */]
                        }
                    ];
                    return _this;
                }
                return XianjieLuandouMainMdr;
            }(mod.WndBaseMdr));
            more.XianjieLuandouMainMdr = XianjieLuandouMainMdr;
            __reflect(XianjieLuandouMainMdr.prototype, "game.mod.more.XianjieLuandouMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianjieLuandouMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouMdr, _super);
                function XianjieLuandouMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XianjieLuandouView);
                    return _this;
                }
                XianjieLuandouMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianjieLuandouMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_rank, egret.TouchEvent.TOUCH_TAP, this.onClickRank, this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClickDo, this);
                    this.onNt("on_xianjie_pvp_base_info_update" /* ON_XIANJIE_PVP_BASE_INFO_UPDATE */, this.onUpdateView, this);
                };
                XianjieLuandouMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.onUpdateView();
                    this._listData.replaceAll(this._proxy.show_rewards);
                };
                XianjieLuandouMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouMdr.prototype.onUpdateView = function () {
                    this.updateView();
                    this._view.btn_do.setHint(this._proxy.isOpen);
                };
                XianjieLuandouMdr.prototype.updateView = function () {
                    var isOpen = this._proxy.isOpen;
                    var isFirst = this._proxy.is_first_open;
                    this._view.btn_rank.visible = !isFirst; //服务器首次活动开启前不显示此按钮
                    if (isOpen) {
                        this._view.btn_do.visible = true;
                        this._view.img_end.visible = this._view.lb_desc.visible = false;
                    }
                    else {
                        this._view.btn_do.visible = false;
                        this._view.lb_desc.visible = isFirst;
                        this._view.img_end.visible = !isFirst;
                    }
                };
                XianjieLuandouMdr.prototype.update = function (time) {
                    var endTime = this._proxy.show_time_sec;
                    var sufStr = '后开启';
                    if (this._proxy.isOpen) {
                        sufStr = '后结束';
                    }
                    this._view.timeItem.updateTime(endTime, sufStr);
                };
                XianjieLuandouMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xianjieluandou_tips2" /* xianjieluandou_tips2 */));
                };
                XianjieLuandouMdr.prototype.onClickRank = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "171" /* XianjieLuandouRankMain */);
                };
                XianjieLuandouMdr.prototype.onClickDo = function () {
                    if (!mod.RoleUtil.getGuildId()) {
                        game.PromptBox.getIns().show(game.getLanById("xianjieluandou_tips8" /* xianjieluandou_tips8 */));
                        return;
                    }
                    this._proxy.c2s_xianjie_pvp_oper(1 /* Oper1 */);
                };
                return XianjieLuandouMdr;
            }(game.MdrBase));
            more.XianjieLuandouMdr = XianjieLuandouMdr;
            __reflect(XianjieLuandouMdr.prototype, "game.mod.more.XianjieLuandouMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouRankMainMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouRankMainMdr, _super);
                function XianjieLuandouRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "ui_tab_rank_",
                            mdr: more.XianjieLuandouRankMdr,
                            title: "pass_rank" /* pass_rank */,
                            bg: "pass_rank_bg"
                        }
                    ];
                    return _this;
                }
                return XianjieLuandouRankMainMdr;
            }(mod.WndBaseMdr));
            more.XianjieLuandouRankMainMdr = XianjieLuandouRankMainMdr;
            __reflect(XianjieLuandouRankMainMdr.prototype, "game.mod.more.XianjieLuandouRankMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianjieLuandouRankMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouRankMdr, _super);
                function XianjieLuandouRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    _this._type = 1; //1活动上期排名 2活动本期排名
                    return _this;
                }
                XianjieLuandouRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_type2.source = 'jifen';
                    this._view.img_type3.source = 'paihangjiangli';
                    this._view.scr["$hasScissor"] = true;
                    this._view.timeItem.visible = true;
                };
                XianjieLuandouRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_xianjie_pvp_rank_info_update" /* ON_XIANJIE_PVP_RANK_INFO_UPDATE */, this.updateView, this);
                };
                XianjieLuandouRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._type = 1;
                    this._proxy.c2s_xianjie_pvp_oper(2 /* Oper2 */, this._type); //本期
                    // this.updateView();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                XianjieLuandouRankMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouRankMdr.prototype.updateView = function () {
                    var topInfo = this._proxy.getRankInfo(1);
                    if (topInfo) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    var rewardList = this._proxy.getRankRewardData();
                    this._listData.replaceAll(rewardList);
                    var myRank = this._proxy.my_rank;
                    var rankNo = myRank && myRank.rank_num || 0;
                    var myRankStr = rankNo ? rankNo + '' : game.getLanById("tishi_13" /* tishi_13 */);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.getLanById("tishi_12" /* tishi_12 */) + "：" + myRankStr);
                    var valueStr = myRank && myRank.value ? myRank.value.toString() : '0';
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(game.getLanById("battle_cue46" /* battle_cue46 */) + '：' + valueStr);
                };
                XianjieLuandouRankMdr.prototype.update = function (time) {
                    var endTime = this._proxy.end_time; //todo
                    var leftTime = endTime - time.serverTimeSecond;
                    this._view.timeItem.updateLeftTime(leftTime, '', game.TextUtil.addColor('已结束', 16731212 /* RED */));
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                    }
                };
                return XianjieLuandouRankMdr;
            }(game.EffectMdrBase));
            more.XianjieLuandouRankMdr = XianjieLuandouRankMdr;
            __reflect(XianjieLuandouRankMdr.prototype, "game.mod.more.XianjieLuandouRankMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouRankSectionMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouRankSectionMdr, _super);
                function XianjieLuandouRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_type2.source = 'jifen';
                };
                XianjieLuandouRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XianjieLuandouRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                XianjieLuandouRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouRankSectionMdr.prototype.updateView = function () {
                    var section = this._showArgs;
                    var list = [];
                    for (var i = section[0]; i <= section[1]; i++) {
                        var mate = this._proxy.getRankInfo(i);
                        list.push({
                            rank: i,
                            name: mate ? mate.name : game.getLanById("tishi_2" /* tishi_2 */),
                            value: mate && mate.value ? mate.value.toString() : ''
                        });
                    }
                    this._listData.replaceAll(list);
                    var myRank = this._proxy.my_rank;
                    var rankNo = myRank && myRank.rank_num || 0;
                    var myRankStr = rankNo ? rankNo + '' : game.getLanById("tishi_13" /* tishi_13 */);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.getLanById("tishi_12" /* tishi_12 */) + "：" + myRankStr);
                    var valueStr = myRank && myRank.value ? myRank.value.toString() : '0';
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(game.getLanById("battle_cue46" /* battle_cue46 */) + '：' + valueStr);
                };
                return XianjieLuandouRankSectionMdr;
            }(game.MdrBase));
            more.XianjieLuandouRankSectionMdr = XianjieLuandouRankSectionMdr;
            __reflect(XianjieLuandouRankSectionMdr.prototype, "game.mod.more.XianjieLuandouRankSectionMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var GPlayerVo = game.scene.GPlayerVo;
            var Tween = base.Tween;
            var Handler = base.Handler;
            var MoveAct = game.scene.MoveAct;
            var XianjieLuandouSceneMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouSceneMdr, _super);
                function XianjieLuandouSceneMdr() {
                    var _this = _super.call(this, game.Layer.main) || this;
                    _this._view = _this.mark("_view", more.XianjieLuandouSceneView);
                    _this._isNoticeShowing = false; //是否正在公吿
                    _this.NOTICE_TIME = 200; //公告出现时间
                    _this.NOTICE_SHOW = 2000; //公告暂停时间
                    _this._reliveTime = 0; //复活时间戳
                    //左边列表三个角色的箭头按钮控制状态
                    _this._clickBtn1 = false;
                    _this._clickBtn2 = false;
                    _this._clickBtn3 = false;
                    return _this;
                }
                XianjieLuandouSceneMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.percentHeight = 100;
                    this._view.percentWidth = 100;
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._sceneProxy = facade.retMod("03" /* Scene */).retProxy(2 /* Scene */);
                    this._competeProxy = facade.retMod("52" /* Compete */).retProxy(200 /* Compete */);
                    this._view.list_boss.itemRenderer = more.XianjieLuandouBossItem;
                    this._view.list_boss.dataProvider = this._listBoss = new eui.ArrayCollection();
                    this._view.list_skill.itemRenderer = more.XianjieLuandouSceneSkillItem;
                    this._view.list_skill.dataProvider = this._listSkill = new eui.ArrayCollection();
                    this._view.lb_goto.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(game.getLanById("guild_invite" /* guild_invite */), 16748553 /* ORANGE */, ''));
                };
                XianjieLuandouSceneMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.head1, egret.TouchEvent.TOUCH_TAP, this.onClickHead1, this);
                    addEventListener(this._view.head2, egret.TouchEvent.TOUCH_TAP, this.onClickHead2, this);
                    addEventListener(this._view.head3, egret.TouchEvent.TOUCH_TAP, this.onClickHead3, this);
                    addEventListener(this._view.btn1, egret.TouchEvent.TOUCH_TAP, this.onClickBtn1, this);
                    addEventListener(this._view.btn2, egret.TouchEvent.TOUCH_TAP, this.onClickBtn2, this);
                    addEventListener(this._view.btn3, egret.TouchEvent.TOUCH_TAP, this.onClickBtn3, this);
                    addEventListener(this._view.btn_zhanbao, egret.TouchEvent.TOUCH_TAP, this.onClickZhanbao, this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_hurt, egret.TouchEvent.TOUCH_TAP, this.onClickHurt, this);
                    addEventListener(this._view.btn_reward, egret.TouchEvent.TOUCH_TAP, this.onClickRrward, this);
                    addEventListener(this._view.skillItem, egret.TouchEvent.TOUCH_TAP, this.onClickSkillItem, this);
                    addEventListener(this._view.list_boss, eui.ItemTapEvent.ITEM_TAP, this.onClickListBoss, this);
                    addEventListener(this._view.list_skill, eui.ItemTapEvent.ITEM_TAP, this.onClickListSkill, this);
                    addEventListener(this._view.btn_skill, egret.TouchEvent.TOUCH_TAP, this.onClickBtnSkill, this);
                    addEventListener(this._view.buffReviveView.lab_revive, egret.TextEvent.LINK, this.onClickRevive);
                    addEventListener(this._view.lb_goto, egret.TextEvent.LINK, this.onClickGoto);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateIndex, this);
                    this.onNt("on_scene_max_hurt_update" /* ON_SCENE_MAX_HURT_UPDATE */, this.updateAvengeEnemy, this); //最高伤害者更新
                    this.onNt("on_display_add" /* ON_OBJ_ADD */, this.onObjAdd, this);
                    this.onNt("on_display_del" /* ON_OBJ_DEL */, this.onObjDel, this);
                    this.onNt("on_role_relive" /* ON_ROLE_RELIVE */, this.onRoleRelive, this);
                    this.onNt("on_role_die" /* ON_ROLE_DIE */, this.onRoleDie, this);
                    this.onNt("on_xianjie_pvp_boss_info_update" /* ON_XIANJIE_PVP_BOSS_INFO_UPDATE */, this.updateBossListHp, this);
                    this.onNt("on_xianjie_pvp_scene_info_update" /* ON_XIANJIE_PVP_SCENE_INFO_UPDATE */, this.onUpdateXianjieSceneInfo, this);
                    this.onNt("on_xianjie_pvp_kill_boss_info_update" /* ON_XIANJIE_PVP_KILL_BOSS_INFO_UPDATE */, this.onUpdateKillBossInfo, this);
                    this.onNt("kuafu_doufa_notice_update" /* KUAFU_DOUFA_NOTICE_UPDATE */, this.updateKill, this); //击杀公告更新
                    this.onNt("on_xianjie_scene_skill_cd_update" /* ON_XIANJIE_SCENE_SKILL_CD_UPDATE */, this.updateSkillCd, this); //技能cd
                    this.onNt("foe_target_change" /* FOE_TARGET_CHANGE */, this.updateAttack, this); //切换攻击目标
                    this.onNt("on_xianjie_pvp_score_reward_update" /* ON_XIANJIE_PVP_SCORE_REWARD_UPDATE */, this.updateBtnHint, this);
                    this.onNt("on_boss_hp_filter" /* ON_BOSS_HP_FILTER */, this.onBossHpChange, this); //boss血条展示后，处理boss选中
                    // this.onNt(MoreEvent.ON_XIANJIE_PVP_BATTLE_REPORT_UPDATE, this.onUpdateBattleReportInfo, this);//战报
                };
                XianjieLuandouSceneMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShow();
                    this.updateBossList();
                    this.initBossSelect();
                    this.updateBelong();
                    this.updateNearbyEnemy();
                    this.updateAvengeEnemy();
                    this.updateSkill();
                    this.onUpdateXianjieSceneInfo();
                    // this.onUpdateBattleReportInfo();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                XianjieLuandouSceneMdr.prototype.initShow = function () {
                    this._view.grp_killtips.visible = false;
                    this._view.grp_tips.visible = false;
                    this._view.headKillView.visible = false;
                    this.setAttackShow(false);
                    this.setDiedShow(false);
                };
                XianjieLuandouSceneMdr.prototype.onHide = function () {
                    this._selBossIdx = null;
                    this._skillCostIdx = null;
                    this._belongVo = null;
                    this._nearbyEnemyVo = null;
                    this._targetVo = null;
                    this._competeProxy.clearNotice();
                    Tween.remove(this._view.grp_killtips);
                    Tween.remove(this._view.headKillView);
                    this._clickBtn1 = this._clickBtn2 = this._clickBtn3 = false;
                    this.setDiedShow(false);
                    _super.prototype.onHide.call(this);
                };
                //战报按钮
                XianjieLuandouSceneMdr.prototype.onUpdateBattleReportInfo = function () {
                    var list = this._proxy.report_list;
                    this._view.btn_zhanbao.visible = list && list.length > 0;
                };
                //宗门人数等变化
                XianjieLuandouSceneMdr.prototype.onUpdateXianjieSceneInfo = function () {
                    this._view.btn_skill.data = this._proxy.boss_kill_count;
                    this._view.lb_cnt.textFlow = game.TextUtil.parseHtml(game.getLanById("union_title_4" /* union_title_4 */) + ':' + game.TextUtil.addColor(this._proxy.guild_count + '', 0x41ff28));
                    this.updateBtnHint();
                };
                //积分按钮红点
                XianjieLuandouSceneMdr.prototype.updateBtnHint = function () {
                    this._view.btn_reward.setHint(this._proxy.getScoreRewardHint());
                };
                //todo
                XianjieLuandouSceneMdr.prototype.updateAttack = function () {
                    DEBUG && console.log("xianjie change attack\uFF1A", this._sceneProxy.foeTargetId);
                    var foeTargetId = this._sceneProxy.foeTargetId;
                    var targetVo = null;
                    if (foeTargetId) {
                        var vo = this._sceneProxy.getVoById(foeTargetId);
                        if (vo && vo.percent > 0) {
                            targetVo = vo;
                        }
                    }
                    if (targetVo) {
                        /*if (targetVo.type == ObjectType.MONSTER) {
                            //怪物
                            let data: BossHpData = {
                                entity_id: targetVo.entity_id,
                                cfg: targetVo.cfg,
                                max_hp: targetVo.max_hp,
                                percent: targetVo.percent
                            };
                            this.setAttackShow(true, data);
                        } else */
                        if (targetVo.type == 1 /* PLAYER */) {
                            //玩家，攻击玩家直接隐藏boss血条
                            this.setAttackShow(false);
                        }
                    }
                    else {
                        this.setAttackShow(false);
                    }
                };
                XianjieLuandouSceneMdr.prototype.setAttackShow = function (show, data) {
                    if (show) {
                        facade.showView("03" /* Scene */, "01" /* BigBossHp */, data);
                    }
                    else {
                        facade.hideView("03" /* Scene */, "01" /* BigBossHp */);
                    }
                };
                //在打boss
                XianjieLuandouSceneMdr.prototype.onBossHpChange = function (n) {
                    var mainAi = this._sceneProxy.mainAi;
                    DEBUG && console.log("XianjieLuandouSceneMdr, onBossHpChange");
                    if (!mainAi || !mainAi.curTarget || (mainAi.curTarget instanceof GPlayerVo)) {
                        this._selBossIdx = null;
                        this.setAttackShow(false);
                        return;
                    }
                    if (this._selBossIdx == null) {
                        this.initBossSelect();
                    }
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    if (this._selBossIdx != null) {
                        //todo 打印
                        var bossIdx = this._proxy.bossIdxList[this._selBossIdx];
                        DEBUG && console.log("XianjieLuandouSceneMdr, onBossHpChange, bossIdx1: " + bossIdx + ", bossName2: " + (msg.cfg && msg.cfg.index));
                    }
                    if (msg.percent > 0 && !this._sceneProxy.curBossId) {
                        //血量大于0且之前不在挑战boss状态
                        this.setAttackShow(true, msg);
                    }
                    else {
                        this.sendNt("on_boss_hp" /* ON_BOSS_HP */, msg); //发送事件，在BigBossHpMdr里面监听
                    }
                };
                /*====================战场提示 start====================*/
                //击破灵石提示
                XianjieLuandouSceneMdr.prototype.onUpdateKillBossInfo = function () {
                    var _this = this;
                    var info = this._proxy.kill_boss_info;
                    if (!info) {
                        this._view.grp_killtips.visible = false;
                    }
                    else {
                        this._view.grp_killtips.visible = true;
                        var bossCfg = game.getConfigByNameId("monster1.json" /* Monster */, info.boss_id.toNumber());
                        //todo
                        this._view.lb_killtips.text = info.guild_name + "\u83B7\u5F97" + (bossCfg && bossCfg.name || '') + "\u7684\u5F52\u5C5E";
                        Tween.remove(this._view.grp_killtips);
                        Tween.get(this._view.grp_killtips).delay(5000).exec(Handler.alloc(this, function () {
                            _this._view.grp_killtips.visible = false;
                            _this._proxy.kill_boss_info = null;
                        }));
                    }
                };
                /*====================击杀提示 start====================*/
                XianjieLuandouSceneMdr.prototype.setKillShow = function (show) {
                    this._view.headKillView.visible = show;
                };
                XianjieLuandouSceneMdr.prototype.updateKill = function () {
                    var infoList = this._competeProxy.noticeList;
                    if (!this._isNoticeShowing && infoList.length) {
                        //不在公告表现，且存在公告信息时
                        this.showKill(infoList.shift());
                    }
                };
                XianjieLuandouSceneMdr.prototype.showKill = function (info) {
                    this._isNoticeShowing = true;
                    this.setKillShow(true);
                    this._view.headKillView.updateShow(info);
                    Tween.remove(this._view.headKillView);
                    this._view.headKillView.scaleX = this._view.headKillView.scaleY = 0;
                    Tween.get(this._view.headKillView)
                        .to({ scaleX: 1, scaleY: 1 }, this.NOTICE_TIME)
                        .delay(this.NOTICE_SHOW) //显示2秒钟
                        .to({ scaleX: 0, scaleY: 0 }, this.NOTICE_TIME)
                        .exec(Handler.alloc(this, this.checkNextKill));
                };
                XianjieLuandouSceneMdr.prototype.checkNextKill = function () {
                    var infoList = this._competeProxy.noticeList;
                    if (!infoList.length) {
                        this._isNoticeShowing = false;
                        this.setKillShow(false);
                        return;
                    }
                    this.showKill(infoList.shift());
                };
                /*====================顶部怪物列表 start====================*/
                //boss列表
                XianjieLuandouSceneMdr.prototype.updateBossList = function () {
                    this._listBoss.replaceAll(this._proxy.bossCfgList);
                };
                //初始boss选中
                XianjieLuandouSceneMdr.prototype.initBossSelect = function () {
                    var mainAi = this._sceneProxy.mainAi;
                    if (!mainAi) {
                        return;
                    }
                    var target = mainAi.curTarget ? mainAi.curTarget.entity_id : mod.SceneUtil.getAttackTargetId();
                    var selIdx;
                    if (target) {
                        var list = this._proxy.boss_list;
                        if (list) {
                            var bossIdx = void 0;
                            for (var key in list) {
                                var item = list[key];
                                if (item && item.entity_id.eq(target)) {
                                    bossIdx = item.index.toNumber();
                                    break;
                                }
                            }
                            if (bossIdx) {
                                selIdx = this._proxy.bossIdxList.indexOf(bossIdx);
                            }
                        }
                    }
                    if (selIdx >= 0) {
                        this._view.list_boss.selectedIndex = this._selBossIdx = selIdx;
                    }
                    else {
                        this._view.list_boss.selectedIndex = this._selBossIdx = null;
                    }
                };
                XianjieLuandouSceneMdr.prototype.updateBossListHp = function () {
                    var num = this._view.list_boss.numChildren || 0;
                    for (var i = 0; i < num; i++) {
                        var item = this._view.list_boss.getChildAt(i);
                        if (!item || !item.data) {
                            continue;
                        }
                        var bossIdx = item.data.monster_index[0];
                        var bossInfo = this._proxy.getBossInfo(bossIdx);
                        var hp = bossInfo && bossInfo.percent || 0;
                        item.updateHp(hp);
                    }
                    this.updateBelong();
                };
                /*====================顶部怪物列表 end====================*/
                /*====================左边敌人列表 start====================*/
                XianjieLuandouSceneMdr.prototype.onObjAdd = function (n) {
                    this.updateNearbyEnemy();
                    this.updateAvengeEnemy();
                };
                XianjieLuandouSceneMdr.prototype.onObjDel = function (n) {
                    // let body = n.body;
                    // if (body instanceof GPlayerVo) {
                    //     //攻击玩家情况下，打死玩家了，继续寻怪或玩家 @zpj
                    //     let entityId = body.entity_id;
                    //     let foeTargetId = this._sceneProxy.foeTargetId;
                    //     if (foeTargetId && entityId && foeTargetId.eq(entityId)) {
                    //         this._sceneProxy.foeTargetId = null;
                    //     }
                    // }
                    this.updateNearbyEnemy();
                    this.updateAvengeEnemy();
                };
                //更新归属者
                XianjieLuandouSceneMdr.prototype.updateBelong = function () {
                    var ownerInfo = this._proxy.owner_info;
                    if (ownerInfo) {
                        this._view.head1.updateHeadShow(ownerInfo.head, ownerInfo.head_frame, ownerInfo.sex);
                    }
                    else {
                        this._view.head1.defaultHeadShow();
                    }
                    this.updateBelongHp();
                };
                //更新归属者血量
                XianjieLuandouSceneMdr.prototype.updateBelongHp = function () {
                    var ownerInfo = this._proxy.owner_info;
                    if (!ownerInfo) {
                        this._view.bar1.show(0, 100, false, 0, false, 0 /* Percent */);
                        return;
                    }
                    var value = ownerInfo && ownerInfo.index || 0;
                    this._view.bar1.show(value, 10000, false, 0, false, 0 /* Percent */);
                };
                //更新附近敌人
                XianjieLuandouSceneMdr.prototype.updateNearbyEnemy = function () {
                    var enemies = this._sceneProxy.getEnemyVos(1 /* PLAYER */); //获取所有敌对玩家
                    this._nearbyEnemyVo = enemies && enemies.length ? enemies[0] : null; //取第一个敌人
                    if (this._nearbyEnemyVo) {
                        this._view.head2.updateHeadShow(this._nearbyEnemyVo.head, this._nearbyEnemyVo.head_frame, this._nearbyEnemyVo.sex);
                    }
                    else {
                        this._view.head2.defaultHeadShow();
                    }
                    this.updateNearbyEnemyHp();
                };
                //更新附近敌人血量
                XianjieLuandouSceneMdr.prototype.updateNearbyEnemyHp = function () {
                    if (!this._nearbyEnemyVo) {
                        this._view.bar2.show(0, 100, false, 0, false, 0 /* Percent */);
                        return;
                    }
                    var value = this._nearbyEnemyVo.percent || 0;
                    this._view.bar2.show(value, 10000, false, 0, false, 0 /* Percent */);
                };
                //更新复仇敌人
                XianjieLuandouSceneMdr.prototype.updateAvengeEnemy = function () {
                    var info = this._sceneProxy.maxHurt;
                    var maxHurtVo = info ? this.getVoByRoleId(info.role_id) : null;
                    if (!info || !maxHurtVo) {
                        this._view.head3.defaultHeadShow();
                    }
                    else {
                        this._view.head3.updateHeadShow(info.head, info.head_frame, info.sex);
                    }
                    this.updateAvengeEnemyHp();
                };
                //更新复仇敌人血量
                XianjieLuandouSceneMdr.prototype.updateAvengeEnemyHp = function () {
                    var info = this._sceneProxy.maxHurt;
                    var maxHurtVo = info ? this.getVoByRoleId(info.role_id) : null;
                    if (!info || !maxHurtVo) {
                        this._view.bar3.show(0, 100, false, 0, false, 0 /* Percent */);
                        return;
                    }
                    var value = maxHurtVo && maxHurtVo.percent || 0;
                    this._view.bar3.show(value, 10000, false, 0, false, 0 /* Percent */);
                };
                XianjieLuandouSceneMdr.prototype.getVoByRoleId = function (roleId, camp) {
                    var vos = this._sceneProxy.getVosByType(1 /* PLAYER */);
                    if (!vos || !vos.length) {
                        return null;
                    }
                    for (var _i = 0, vos_1 = vos; _i < vos_1.length; _i++) {
                        var v = vos_1[_i];
                        if (camp != undefined && v.camp != camp) {
                            continue;
                        }
                        if (v.role_id.eq(roleId)) {
                            return v;
                        }
                    }
                    return null;
                };
                /*====================左边敌人列表 end====================*/
                /*====================下方技能 start====================*/
                //更新技能
                XianjieLuandouSceneMdr.prototype.updateSkill = function () {
                    var skillList = this._proxy.skill_list;
                    this._listSkill.replaceAll(skillList);
                    this._skillCostIdx = skillList[0][3];
                    this._view.skillItem.updateSkillItem();
                    this.updateSkillCost();
                };
                XianjieLuandouSceneMdr.prototype.updateSkillCost = function () {
                    this._view.skillItem.updateCost(mod.BagUtil.getPropCntByIdx(this._skillCostIdx) + "");
                };
                XianjieLuandouSceneMdr.prototype.updateSkillCd = function () {
                    if (!this._proxy.haveSkillCd()) {
                        return;
                    }
                    this._listSkill.replaceAll(this._proxy.skill_list);
                };
                /*====================下方技能 end====================*/
                /*====================角色复活 start====================*/
                XianjieLuandouSceneMdr.prototype.onRoleRelive = function () {
                    this.setDiedShow(false);
                };
                XianjieLuandouSceneMdr.prototype.onRoleDie = function () {
                    this.setDiedShow(true);
                };
                XianjieLuandouSceneMdr.prototype.setDiedShow = function (show) {
                    this._view.buffReviveView.visible = show;
                    if (show) {
                        var diedInfo = this._sceneProxy.diedInfo;
                        this._reliveTime = diedInfo && diedInfo.relife_time || 0;
                        this.updateReliveTime();
                    }
                };
                XianjieLuandouSceneMdr.prototype.updateReliveTime = function () {
                    if (this._view.buffReviveView.visible) {
                        var leftTime = this._reliveTime - TimeMgr.time.serverTimeSecond;
                        this._view.buffReviveView.updateShow(leftTime);
                        if (leftTime <= 0) {
                            this.setDiedShow(false);
                        }
                    }
                };
                /*====================角色复活 end====================*/
                //立即复活
                XianjieLuandouSceneMdr.prototype.onClickRevive = function () {
                    var data = this._proxy.revive_data;
                    if (!data) {
                        return;
                    }
                    var cost = [data[3], data[4]];
                    if (cost && mod.BagUtil.checkPropCntUp(cost[0], cost[1])) {
                        this._proxy.c2s_xianjie_pvp_scene_use_buff(data[0]);
                    }
                };
                //点击归属者
                XianjieLuandouSceneMdr.prototype.onClickHead1 = function () {
                    var info = this._proxy.owner_info;
                    if (!info || info.role_id.eq(game.RoleVo.ins.role_id)) {
                        if (info.role_id.notEquals(game.RoleVo.ins.role_id) && info.guild_id == mod.RoleUtil.getGuildId()) {
                            game.PromptBox.getIns().show(game.getLanById("xianjieluandou_tips15" /* xianjieluandou_tips15 */));
                        }
                        return;
                    }
                    this.changeAttackTarget(info.entity_id);
                };
                //点击附近敌人
                XianjieLuandouSceneMdr.prototype.onClickHead2 = function () {
                    if (this._nearbyEnemyVo) {
                        this.changeAttackTarget(this._nearbyEnemyVo.entity_id);
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("03" /* Scene */, "04" /* Enemy */);
                };
                //点击复仇
                XianjieLuandouSceneMdr.prototype.onClickHead3 = function () {
                    if (this._sceneProxy.maxHurt) {
                        this.changeAttackTarget(this._sceneProxy.maxHurt.entity_id);
                        return;
                    }
                };
                //更改攻击目标，攻击玩家 todo
                XianjieLuandouSceneMdr.prototype.changeAttackTarget = function (foeTargetId) {
                    var mainPlayer = this._sceneProxy.mainPlayerObj;
                    if (mainPlayer) {
                        //玩家正在移动的话，清除移动动作
                        mainPlayer.actMgr.removeAllActByCls(MoveAct);
                    }
                    this._sceneProxy.foeTargetId = foeTargetId;
                    this._sceneProxy.requestMonster(foeTargetId); //请求挑战
                    this._view.list_boss.selectedIndex = -1; //无选中boss
                    this._selBossIdx = null;
                };
                XianjieLuandouSceneMdr.prototype.onClickBtn1 = function () {
                    this._clickBtn1 = !this._clickBtn1;
                    this._view.btn1.scaleY = this._clickBtn1 ? -1 : 1;
                    this._view.enemyInfo1.visible = this._clickBtn1;
                    var mate = this._proxy.owner_info;
                    if (mate) {
                        this._view.enemyInfo1.updateShow(mate);
                    }
                    else {
                        this._view.enemyInfo1.updateShowDefault();
                    }
                };
                XianjieLuandouSceneMdr.prototype.onClickBtn2 = function () {
                    this._clickBtn2 = !this._clickBtn2;
                    this._view.btn2.scaleY = this._clickBtn2 ? -1 : 1;
                    this._view.enemyInfo2.visible = this._clickBtn2;
                    var vo = this._nearbyEnemyVo;
                    if (vo) {
                        this._view.enemyInfo2.updateShowByObj(vo);
                    }
                    else {
                        this._view.enemyInfo2.updateShowDefault();
                    }
                };
                XianjieLuandouSceneMdr.prototype.onClickBtn3 = function () {
                    this._clickBtn3 = !this._clickBtn3;
                    this._view.btn3.scaleY = this._clickBtn3 ? -1 : 1;
                    this._view.enemyInfo3.visible = this._clickBtn3;
                    if (this._sceneProxy.maxHurt) {
                        this._view.enemyInfo3.updateShow(this._sceneProxy.maxHurt);
                    }
                    else {
                        this._view.enemyInfo3.updateShowDefault();
                    }
                };
                //战报
                XianjieLuandouSceneMdr.prototype.onClickZhanbao = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "176" /* XianjieLuandouZhanbao */);
                };
                XianjieLuandouSceneMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xianjieluandou_tips2" /* xianjieluandou_tips2 */));
                };
                //战场统计
                XianjieLuandouSceneMdr.prototype.onClickHurt = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "177" /* XianjieLuandouStatistic */);
                };
                //积分奖励
                XianjieLuandouSceneMdr.prototype.onClickRrward = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "174" /* XianjieLuandouScoreReward */);
                };
                //技能列表
                XianjieLuandouSceneMdr.prototype.onClickSkillItem = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "175" /* XianjieLuandouSkill */);
                };
                XianjieLuandouSceneMdr.prototype.onClickListBoss = function (e) {
                    var itemData = e.item;
                    if (!itemData) {
                        return;
                    }
                    var bossIdx = itemData.monster_index[0];
                    var hp = this._proxy.getBossHp(bossIdx);
                    if (hp <= 0) {
                        //died
                        game.PromptBox.getIns().show(game.getLanById("xianjieluandou_tips9" /* xianjieluandou_tips9 */));
                        this._view.list_boss.selectedIndex = this._selBossIdx;
                        return;
                    }
                    var itemIndex = e.itemIndex;
                    if (itemIndex == this._selBossIdx) {
                        return;
                    }
                    this._selBossIdx = itemIndex;
                    var bossCfg = game.getConfigByNameId("monster1.json" /* Monster */, bossIdx);
                    game.PromptBox.getIns().show(game.getLanById("xianjieluandou_tips10" /* xianjieluandou_tips10 */) + bossCfg.name); //已选择xx
                    //攻击boss
                    var bossInfo = this._proxy.getBossInfo(bossIdx);
                    var target = bossInfo ? bossInfo.entity_id : null;
                    this._sceneProxy.requestMonster(target);
                };
                // 使用技能
                XianjieLuandouSceneMdr.prototype.onClickListSkill = function (e) {
                    var values = e.item;
                    if (!values) {
                        return;
                    }
                    var cdTime = this._proxy.getSkillCd(values[0]);
                    if (cdTime > 0) {
                        game.PromptBox.getIns().show(game.getLanById("xianjieluandou_tips17" /* xianjieluandou_tips17 */));
                        return;
                    }
                    var cost = [values[3], values[4]];
                    if (cost && !mod.BagUtil.checkPropCntUp(cost[0], cost[1])) {
                        return;
                    }
                    this._proxy.c2s_xianjie_pvp_scene_use_buff(values[0]);
                };
                XianjieLuandouSceneMdr.prototype.onClickBtnSkill = function () {
                    facade.showView("61" /* More */, "178" /* XianjieLuandouSkillTips */);
                };
                //仙宗邀请
                XianjieLuandouSceneMdr.prototype.onClickGoto = function () {
                    var chatProxy = facade.retMod("25" /* Chat */).retProxy(35 /* Chat */);
                    var chatCd = chatProxy.getChatCD(4 /* Union */);
                    var cfgCd = chatProxy.getCfgCD(4 /* Union */);
                    if (chatCd && TimeMgr.time.serverTimeSecond - chatCd < cfgCd) {
                        return;
                    }
                    this._proxy.c2s_xianjie_pvp_oper(5 /* Oper5 */);
                };
                /** 通用背包事件监听 */
                XianjieLuandouSceneMdr.prototype.onBagUpdateIndex = function (n) {
                    var indexs = n.body;
                    var index = this._skillCostIdx;
                    if (index && indexs.indexOf(index) > -1) {
                        this.updateSkillCost();
                    }
                };
                XianjieLuandouSceneMdr.prototype.update = function (time) {
                    // this.updateBelongHp();
                    this.updateNearbyEnemyHp();
                    this.updateAvengeEnemyHp();
                    this.updateSkillCd();
                    this.updateReliveTime();
                    if (this._selBossIdx == null) {
                        this.initBossSelect();
                    }
                    var endTime = this._proxy.end_time;
                    this._view.timeItem.updateTime(endTime);
                };
                return XianjieLuandouSceneMdr;
            }(game.MdrBase));
            more.XianjieLuandouSceneMdr = XianjieLuandouSceneMdr;
            __reflect(XianjieLuandouSceneMdr.prototype, "game.mod.more.XianjieLuandouSceneMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouScoreRewardItem = /** @class */ (function (_super) {
                __extends(XianjieLuandouScoreRewardItem, _super);
                function XianjieLuandouScoreRewardItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianjieLuandouScoreRewardItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                    this._proxy = game.getProxy("61" /* More */, 268 /* XianjieLuandou */);
                    this.img_not.visible = false;
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_draw, this.onClick, this);
                };
                XianjieLuandouScoreRewardItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XianjieLuandouScoreRewardItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var cfg = data.cfg;
                    this._listData.replaceAll(cfg.award);
                    var color = data.myScore >= cfg.scroe ? 2330156 /* GREEN */ : 16719376 /* RED */;
                    var str = game.StringUtil.substitute(game.getLanById("xianjieluandou_tips16" /* xianjieluandou_tips16 */), [game.TextUtil.addColor(cfg.scroe + '', 2330156 /* GREEN */)])
                        + game.TextUtil.addColor("(" + data.myScore + "/" + cfg.scroe + ")", color);
                    this.lab_desc.textFlow = game.TextUtil.parseHtml(str);
                    if (data.status == 2 /* Draw */) {
                        this.img_draw.visible = true;
                        this.img_not.visible = this.btn_draw.visible = false;
                    }
                    else if (data.status == 1 /* Finish */) {
                        this.btn_draw.visible = true;
                        this.img_draw.visible = this.img_not.visible = false;
                        this.btn_draw.label = game.getLanById("lingqu" /* lingqu */);
                        this.btn_draw.setHint(true);
                    }
                    else {
                        this.img_not.visible = true;
                        this.btn_draw.visible = this.img_draw.visible = false;
                    }
                };
                XianjieLuandouScoreRewardItem.prototype.onClick = function () {
                    var data = this.data;
                    if (data && data.status == 1 /* Finish */) {
                        this._proxy.c2s_xianjie_pvp_oper(4 /* Oper4 */, data.cfg.index);
                    }
                };
                return XianjieLuandouScoreRewardItem;
            }(mod.BaseListenerRenderer));
            more.XianjieLuandouScoreRewardItem = XianjieLuandouScoreRewardItem;
            __reflect(XianjieLuandouScoreRewardItem.prototype, "game.mod.more.XianjieLuandouScoreRewardItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouScoreRewardMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouScoreRewardMdr, _super);
                function XianjieLuandouScoreRewardMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.KuafuDoufaScoreView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouScoreRewardMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list_reward.itemRenderer = more.XianjieLuandouScoreRewardItem;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianjieLuandouScoreRewardMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_xianjie_pvp_score_reward_update" /* ON_XIANJIE_PVP_SCORE_REWARD_UPDATE */, this.updateView, this);
                    this.onNt("on_xianjie_pvp_scene_info_update" /* ON_XIANJIE_PVP_SCENE_INFO_UPDATE */, this.updateView, this);
                };
                XianjieLuandouScoreRewardMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                XianjieLuandouScoreRewardMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouScoreRewardMdr.prototype.updateView = function () {
                    var cfgList = this._proxy.getScoreCfgList();
                    var list = [];
                    var myScore = this._proxy.my_score;
                    var indexs = this._proxy.score_index;
                    for (var _i = 0, cfgList_8 = cfgList; _i < cfgList_8.length; _i++) {
                        var cfg = cfgList_8[_i];
                        var status = 0 /* NotFinish */;
                        if (indexs.indexOf(cfg.index) > -1) {
                            status = 2 /* Draw */;
                        }
                        else if (myScore >= cfg.scroe) {
                            status = 1 /* Finish */;
                        }
                        list.push({
                            cfg: cfg,
                            myScore: myScore,
                            status: status
                        });
                    }
                    game.SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                };
                return XianjieLuandouScoreRewardMdr;
            }(game.MdrBase));
            more.XianjieLuandouScoreRewardMdr = XianjieLuandouScoreRewardMdr;
            __reflect(XianjieLuandouScoreRewardMdr.prototype, "game.mod.more.XianjieLuandouScoreRewardMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouSkillMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouSkillMdr, _super);
                function XianjieLuandouSkillMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.KuafuDoufaSkillView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouSkillMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list_reward.itemRenderer = more.XianjieLuandouSkillItem;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianjieLuandouSkillMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateIndex, this);
                    this.onNt("scene_change" /* SCENE_CHANGE */, this.hide, this);
                };
                XianjieLuandouSkillMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateItemList();
                    this.updateCost();
                };
                XianjieLuandouSkillMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouSkillMdr.prototype.updateItemList = function () {
                    var skillList = this._proxy.skill_list;
                    this._listData.replaceAll(skillList);
                };
                XianjieLuandouSkillMdr.prototype.updateCost = function () {
                    var skillList = this._proxy.skill_list;
                    this._costIndex = skillList[0][3];
                    this._view.cost.setData(this._costIndex);
                };
                /** 通用背包事件监听 */
                XianjieLuandouSkillMdr.prototype.onBagUpdateIndex = function (n) {
                    var indexs = n.body;
                    var index = this._costIndex;
                    if (index && indexs.indexOf(index) > -1) {
                        this.updateCost();
                    }
                };
                return XianjieLuandouSkillMdr;
            }(game.MdrBase));
            more.XianjieLuandouSkillMdr = XianjieLuandouSkillMdr;
            __reflect(XianjieLuandouSkillMdr.prototype, "game.mod.more.XianjieLuandouSkillMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouSkillTipsMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouSkillTipsMdr, _super);
                function XianjieLuandouSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianjieLuandouSkillTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                };
                XianjieLuandouSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_xianjie_pvp_scene_info_update" /* ON_XIANJIE_PVP_SCENE_INFO_UPDATE */, this.updateView, this);
                };
                XianjieLuandouSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                XianjieLuandouSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouSkillTipsMdr.prototype.updateView = function () {
                    var bossKillCount = this._proxy.boss_kill_count;
                    var cfg = game.GameConfig.getParamConfigById('xianjieluandou_lingshi_buff');
                    var cfgValue = cfg.value;
                    var value = cfgValue[bossKillCount];
                    var buffId = value[1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    if (!buffCfg) {
                        return;
                    }
                    this._view.img_skill.source = buffCfg.icon;
                    this._view.lb_name.text = buffCfg.name;
                    this._view.baseQualityTips.updateShow(buffCfg.buff_quality);
                    this._view.baseDescItem0.updateShow(buffCfg.des, game.getLanById("dragon_skill_desc" /* dragon_skill_desc */));
                    var nextValue = cfgValue[bossKillCount + 1];
                    this._view.baseDescItem1.visible = !!nextValue;
                    if (nextValue) {
                        var nextBuffCfg = game.getConfigByNameId("buff.json" /* Buff */, nextValue[1]);
                        var desc = game.TextUtil.addColor(nextBuffCfg && nextBuffCfg.des || '', 7835024 /* GRAY */);
                        this._view.baseDescItem1.updateShow(desc, game.getLanById("lingpo_tips3" /* lingpo_tips3 */));
                    }
                };
                return XianjieLuandouSkillTipsMdr;
            }(game.MdrBase));
            more.XianjieLuandouSkillTipsMdr = XianjieLuandouSkillTipsMdr;
            __reflect(XianjieLuandouSkillTipsMdr.prototype, "game.mod.more.XianjieLuandouSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianjieLuandouStatisticMdr = /** @class */ (function (_super) {
                __extends(XianjieLuandouStatisticMdr, _super);
                function XianjieLuandouStatisticMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianjieLuandouStatisticView);
                    _this._rankType = 1 /* Person */;
                    _this.isEasyHide = true;
                    return _this;
                }
                XianjieLuandouStatisticMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(268 /* XianjieLuandou */);
                    this._view.list_rank.itemRenderer = more.XianjieLuandouStatisticItem;
                    this._view.list_rank.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.list_btn.itemRenderer = mod.TabSecondItem;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                };
                XianjieLuandouStatisticMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickListBtn, this);
                    this.onNt("on_xianjie_pvp_scene_rank_info_update" /* ON_XIANJIE_PVP_SCENE_RANK_INFO_UPDATE */, this.updateView, this);
                };
                XianjieLuandouStatisticMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.sel_scene_rank = this._rankType = 1 /* Person */;
                    this.updateListBtn();
                    this._proxy.c2s_xianjie_pvp_oper(3 /* Oper3 */, this._rankType);
                };
                XianjieLuandouStatisticMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianjieLuandouStatisticMdr.prototype.updateListBtn = function () {
                    var list = [];
                    for (var i = 1; i <= 2; i++) {
                        list.push({
                            icon: 'xianjieluandou_statistic' + i
                        });
                    }
                    this._listBtn.replaceAll(list);
                    this._view.list_btn.selectedIndex = this._rankType - 1;
                };
                // todo
                XianjieLuandouStatisticMdr.prototype.updateView = function () {
                    this._listData.replaceAll(this._proxy.scene_rank);
                    this._view.item.updateMyShow();
                    if (this._rankType == 2 /* Guild */) {
                        this._view.img_type3.visible = this._view.img_type5.visible = false;
                        this._view.img_type4.source = 'jifen3';
                    }
                    else {
                        this._view.img_type3.visible = this._view.img_type5.visible = true;
                        this._view.img_type4.source = 'zhugong3';
                    }
                };
                XianjieLuandouStatisticMdr.prototype.onClickListBtn = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx + 1 == this._rankType) {
                        return;
                    }
                    this._rankType = itemIdx + 1;
                    this._proxy.sel_scene_rank = this._rankType;
                    this._proxy.c2s_xianjie_pvp_oper(3 /* Oper3 */, this._rankType);
                };
                return XianjieLuandouStatisticMdr;
            }(game.MdrBase));
            more.XianjieLuandouStatisticMdr = XianjieLuandouStatisticMdr;
            __reflect(XianjieLuandouStatisticMdr.prototype, "game.mod.more.XianjieLuandouStatisticMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var AchieveModel = /** @class */ (function () {
                function AchieveModel() {
                    this.lv = 1;
                    this.status = 0; //已领取状态，2
                    this.hintType = ["61" /* More */, "01" /* AchieveMain */, "01" /* Achieve */];
                }
                return AchieveModel;
            }());
            more.AchieveModel = AchieveModel;
            __reflect(AchieveModel.prototype, "game.mod.more.AchieveModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var Handler = base.Handler;
            var XianmaiFightFailMdr = /** @class */ (function (_super) {
                __extends(XianmaiFightFailMdr, _super);
                function XianmaiFightFailMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiFightFailView);
                    _this._btnList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiFightFailMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                };
                XianmaiFightFailMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XianmaiFightFailMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    //添加倒计时
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                    this._view.icon_group.removeChildren();
                    this._btnList.length = 0;
                    var jumpData = null;
                    var jumpId = 0;
                    if (!mod.PayUtil.checkFirstCharge()) {
                        //未来首充过
                        jumpData = game.JumpDataList[40 /* FirstCharge */];
                        jumpId = 40 /* FirstCharge */;
                    }
                    else if (mod.PayUtil.checkTequanling()) {
                        //特权
                        jumpData = game.JumpDataList[44 /* PrerogativeWrit */];
                        jumpId = 44 /* PrerogativeWrit */;
                    }
                    else {
                        //充值
                        jumpData = game.JumpDataList[46 /* StoreXianyu */];
                        jumpId = 46 /* StoreXianyu */;
                    }
                    this.addBtn(jumpData, jumpId);
                    var proxy = facade.retMod("42" /* Pass */).retProxy(9 /* Pass */);
                    var curIndex = proxy.curIndex;
                    var gateCfg = game.getConfigByNameId("gate1.json" /* Gate */, curIndex); //240000001
                    var faulttips = gateCfg.faulttips;
                    if (!faulttips || faulttips.length <= 0) {
                        return;
                    }
                    for (var i = 0; i < faulttips.length; i++) {
                        var jumpId_1 = faulttips[i];
                        var jumpData_1 = game.JumpDataList[jumpId_1];
                        this.addBtn(jumpData_1, jumpId_1);
                    }
                };
                XianmaiFightFailMdr.prototype.addBtn = function (data, jumpId) {
                    var btn = new mod.Btn();
                    btn.skinName = "skins.common.CommonBtn1Skin";
                    btn.iconDisplay.source = data.icon || "huashen_task_tab1";
                    btn.width = 94;
                    btn.height = 94;
                    btn["jumpId"] = jumpId;
                    this._view.icon_group.addChild(btn);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(btn, egret.TouchEvent.TOUCH_TAP, this.jumpFunc, this);
                };
                XianmaiFightFailMdr.prototype.jumpFunc = function (e) {
                    this.hide();
                    if (e.target instanceof mod.Btn) {
                        var jumpId = e.target["jumpId"];
                        mod.ViewMgr.getIns().showViewByID(jumpId);
                    }
                };
                XianmaiFightFailMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XianmaiFightFailMdr;
            }(game.MdrBase));
            more.XianmaiFightFailMdr = XianmaiFightFailMdr;
            __reflect(XianmaiFightFailMdr.prototype, "game.mod.more.XianmaiFightFailMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var Tween = base.Tween;
            var facade = base.facade;
            var XianmaiFightMdr = /** @class */ (function (_super) {
                __extends(XianmaiFightMdr, _super);
                function XianmaiFightMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.YouliKillerFightView);
                    _this.HP_WIDTH = 350; //血条宽度
                    _this.TWEEN_TIME = 3000; //动画时间
                    return _this;
                }
                XianmaiFightMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(261 /* Xianmai */);
                };
                XianmaiFightMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XianmaiFightMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._data = this._showArgs;
                    this.updateInfo();
                };
                XianmaiFightMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._data = null;
                    Tween.remove(this._view.img_hp1);
                    Tween.remove(this._view.img_hp2);
                };
                XianmaiFightMdr.prototype.updateInfo = function () {
                    var _this = this;
                    this.updateSelf();
                    this.updateEnemy();
                    var myHp = this._data.atk_hp / 100;
                    var enemyHp = this._data.enemy_hp / 100;
                    this._view.img_hp1.width = this.HP_WIDTH;
                    var initEnemyHp = this._proxy.getInitEnemyHp(); //todo 仙脉受击方初始血量
                    this._view.img_hp2.width = this.HP_WIDTH * initEnemyHp;
                    Tween.remove(this._view.img_hp1);
                    Tween.remove(this._view.img_hp2);
                    Tween.get(this._view.img_hp1)
                        .to({ width: myHp / 100 * this.HP_WIDTH }, this.TWEEN_TIME)
                        .exec(Handler.alloc(this, function () {
                        if (myHp <= 0) {
                            _this.endTween();
                        }
                    }));
                    Tween.get(this._view.img_hp2)
                        .to({ width: enemyHp / 100 * this.HP_WIDTH }, this.TWEEN_TIME)
                        .exec(Handler.alloc(this, function () {
                        if (enemyHp <= 0) {
                            _this.endTween();
                        }
                    }));
                };
                XianmaiFightMdr.prototype.endTween = function () {
                    Tween.remove(this._view.img_hp1);
                    Tween.remove(this._view.img_hp2);
                    if (this._data.atk_hp <= 0) {
                        //失败
                        facade.showView("61" /* More */, "111" /* XianmaiFightFail */);
                    }
                    else if (this._data.enemy_hp <= 0) {
                        //成功
                        facade.showView("61" /* More */, "110" /* XianmaiFightSuccess */, this._data.props);
                    }
                    this.hide();
                };
                /**更新自己*/
                XianmaiFightMdr.prototype.updateSelf = function () {
                    var vo = game.RoleVo.ins;
                    this._view.lab_name1.text = vo.name;
                    this._view.powerLabel1.setPowerValue(vo.showpower);
                    this._view.head1.updateHeadShow(vo.head, vo.head_frame, vo.sex);
                };
                /**更新敌人*/
                XianmaiFightMdr.prototype.updateEnemy = function () {
                    var enemyInfo = this._data.enemy_info;
                    if (!enemyInfo) {
                        return;
                    }
                    //怪物
                    if (enemyInfo.role_id.eq(Long.ZERO)) {
                        var bossNames = this._proxy.getBossNames();
                        this._view.lab_name2.text = bossNames[0];
                        this._view.powerLabel2.setPowerValue(enemyInfo.showpower);
                        this._view.head2.visible = false;
                        this._view.img_boss2.visible = true;
                        this._view.img_boss2.source = this._proxy.getBossIcon();
                        return;
                    }
                    //玩家
                    this._view.head2.visible = true;
                    this._view.img_boss2.visible = false;
                    this._view.lab_name2.text = enemyInfo.name;
                    this._view.powerLabel2.setPowerValue(enemyInfo.showpower);
                    this._view.head2.updateHeadShow(enemyInfo.head, enemyInfo.head_frame, enemyInfo.sex);
                };
                return XianmaiFightMdr;
            }(game.MdrBase));
            more.XianmaiFightMdr = XianmaiFightMdr;
            __reflect(XianmaiFightMdr.prototype, "game.mod.more.XianmaiFightMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XianmaiFightSuccessMdr = /** @class */ (function (_super) {
                __extends(XianmaiFightSuccessMdr, _super);
                function XianmaiFightSuccessMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiFightSuccessView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiFightSuccessMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                };
                XianmaiFightSuccessMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XianmaiFightSuccessMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._props = this._showArgs;
                    this.updateView();
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                };
                XianmaiFightSuccessMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._props = null;
                };
                XianmaiFightSuccessMdr.prototype.updateView = function () {
                    this._view.resultReward.updateRewardList(this._props || []);
                };
                return XianmaiFightSuccessMdr;
            }(game.MdrBase));
            more.XianmaiFightSuccessMdr = XianmaiFightSuccessMdr;
            __reflect(XianmaiFightSuccessMdr.prototype, "game.mod.more.XianmaiFightSuccessMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HonourModel = /** @class */ (function () {
                function HonourModel() {
                    var _a;
                    /**type-index存储信息，二维Map存储*/
                    this.typeInfo = {};
                    this.typeCfgMap = {};
                    //红点路径
                    this.hintPathObj = (_a = {},
                        _a[1 /* Honour */] = ["61" /* More */, "01" /* AchieveMain */, "02" /* Honour */],
                        _a);
                }
                return HonourModel;
            }());
            more.HonourModel = HonourModel;
            __reflect(HonourModel.prototype, "game.mod.more.HonourModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            //我的仙脉
            var XianmaiItemTipsMineMdr = /** @class */ (function (_super) {
                __extends(XianmaiItemTipsMineMdr, _super);
                function XianmaiItemTipsMineMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianmaiItemTipsMineMdr.prototype.updateView = function () {
                    this._view.currentState = 'my';
                    this._view.lb_title.text = game.getLanById("xiuxiannvpu_tips12" /* xiuxiannvpu_tips12 */);
                    this._view.secondPop.updateTitleStr(game.getLanById("xianmaizhengduo_tips3" /* xianmaizhengduo_tips3 */));
                    this._view.btn_do.visible = true;
                    this._proxy.c2s_xianmai_my_show();
                };
                XianmaiItemTipsMineMdr.prototype.onUpdateMyShow = function () {
                    var myData = this._proxy.my_data;
                    if (!myData) {
                        return;
                    }
                    var cfg = this._proxy.getStageCfg(myData.stage, myData.index);
                    var cfg0 = game.GameConfig.getPropConfigById(cfg.score_item[0]);
                    this._view.lb_mydesc0.text = cfg0.name + '：';
                    this._view.lb_mynum0.text = this._proxy.penglai_score + '';
                    var cfg1 = game.GameConfig.getPropConfigById(cfg.lingshi_item[0]);
                    this._view.lb_mydesc1.text = cfg1.name + '：';
                    this._view.lb_mynum1.text = this._proxy.lingshi + '';
                    this._view.infoItem.updateRoleView(myData);
                    if (!TimeMgr.hasUpdateItem(this)) {
                        TimeMgr.addUpdateItem(this, 1000);
                        this.update(TimeMgr.time);
                    }
                };
                XianmaiItemTipsMineMdr.prototype.onUpdateStageShow = function () {
                    this.updateCoolTime();
                };
                //点击按钮
                XianmaiItemTipsMineMdr.prototype.onClickBtndo = function () {
                    var myData = this._proxy.my_data;
                    this._proxy.c2s_xianmai_pvp_oper(1 /* Oper1 */, myData.stage, myData.index);
                    this.hide();
                };
                XianmaiItemTipsMineMdr.prototype.updateTime = function () {
                    this._view.infoItem.updateRoleView(this._proxy.my_data);
                };
                return XianmaiItemTipsMineMdr;
            }(more.XianmaiItemTipsMdr));
            more.XianmaiItemTipsMineMdr = XianmaiItemTipsMineMdr;
            __reflect(XianmaiItemTipsMineMdr.prototype, "game.mod.more.XianmaiItemTipsMineMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            //一键寻脉
            var XianmaiItemTipsOnekeyMdr = /** @class */ (function (_super) {
                __extends(XianmaiItemTipsOnekeyMdr, _super);
                function XianmaiItemTipsOnekeyMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XianmaiItemTipsOnekeyMdr.prototype.updateView = function () {
                    this._view.currentState = 'notone';
                    this._view.lb_title.text = game.getLanById("xianmaizhengduo_tips13" /* xianmaizhengduo_tips13 */);
                    var title = this._proxy.getSecondPopTitle(this._proxy.search_stage);
                    this._view.secondPop.updateTitleStr(title);
                    this._view.infoItem.updateDefaultView(this._proxy.search_stage, this._proxy.search_index);
                    this.updateTime();
                };
                //点击按钮
                XianmaiItemTipsOnekeyMdr.prototype.onClickBtndo = function () {
                    this._proxy.c2s_xianmai_pvp_oper(4 /* Oper4 */, this._proxy.search_stage, this._proxy.search_index);
                    this.hide();
                };
                XianmaiItemTipsOnekeyMdr.prototype.updateTime = function () {
                    this.updateCoolTime();
                    var leftCoolTime = this._proxy.getLeftCoolTime();
                    if (leftCoolTime > 0) {
                        if (!TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.addUpdateItem(this, 1000);
                        }
                    }
                    else {
                        if (TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.removeUpdateItem(this);
                        }
                    }
                };
                return XianmaiItemTipsOnekeyMdr;
            }(more.XianmaiItemTipsMdr));
            more.XianmaiItemTipsOnekeyMdr = XianmaiItemTipsOnekeyMdr;
            __reflect(XianmaiItemTipsOnekeyMdr.prototype, "game.mod.more.XianmaiItemTipsOnekeyMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiListMdr = /** @class */ (function (_super) {
                __extends(XianmaiListMdr, _super);
                function XianmaiListMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiListView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._view.list.itemRenderer = more.XianmaiListItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianmaiListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_invite, egret.TouchEvent.TOUCH_TAP, this.onClickInvite, this);
                    this.onNt("on_update_xianmai_list_show" /* ON_UPDATE_XIANMAI_LIST_SHOW */, this.updateView, this);
                    this.onNt("on_xianmai_list_view_close" /* ON_XIANMAI_LIST_VIEW_CLOSE */, this.hide, this);
                    this.onNt("on_xianmai_view_close" /* ON_XIANMAI_VIEW_CLOSE */, this.hide, this);
                };
                XianmaiListMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.c2s_xianmai_list_show();
                    this.updateView();
                };
                XianmaiListMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianmaiListMdr.prototype.updateView = function () {
                    var maxStage = this._proxy.getMaxStage();
                    var stageList = this._proxy.stage_list;
                    var map = new Map();
                    for (var _i = 0, stageList_1 = stageList; _i < stageList_1.length; _i++) {
                        var item = stageList_1[_i];
                        map.set(item.stage, item);
                    }
                    var list = [];
                    for (var i = 1; i <= maxStage; i++) {
                        if (map.has(i)) {
                            list.push(map.get(i));
                        }
                        else {
                            var data = new msg.xianmai_stage_data();
                            data.stage = i;
                            data.guild_num = 0;
                            list.push(data);
                        }
                    }
                    this._listData.replaceAll(list);
                };
                XianmaiListMdr.prototype.onClickInvite = function () {
                    this._proxy.c2s_xianmai_guild_invite();
                };
                return XianmaiListMdr;
            }(game.MdrBase));
            more.XianmaiListMdr = XianmaiListMdr;
            __reflect(XianmaiListMdr.prototype, "game.mod.more.XianmaiListMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiMainMdr = /** @class */ (function (_super) {
                __extends(XianmaiMainMdr, _super);
                function XianmaiMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xianmaizhengduo",
                            mdr: more.XianmaiMdr,
                            title: "xianmaizhengduo_tips1" /* xianmaizhengduo_tips1 */,
                            bg: "xianmaizhengduo_bg",
                            openIdx: 0,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "02" /* Hundun */, "100" /* XianmaiMain */, "01" /* TabBtnType01 */]
                        }
                    ];
                    return _this;
                }
                XianmaiMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_xianmai_view_close" /* ON_XIANMAI_VIEW_CLOSE */, this.onClickBack, this);
                };
                return XianmaiMainMdr;
            }(mod.WndBaseMdr));
            more.XianmaiMainMdr = XianmaiMainMdr;
            __reflect(XianmaiMainMdr.prototype, "game.mod.more.XianmaiMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var facade = base.facade;
            var XianmaiMdr = /** @class */ (function (_super) {
                __extends(XianmaiMdr, _super);
                function XianmaiMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XianmaiView);
                    _this._selIdx = 0;
                    _this._isClickSearch = false; //标识是否点击了一键寻矿按钮，避免自动挑战时的弹窗
                    return _this;
                }
                XianmaiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._view.list.itemRenderer = more.XianmaiItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.list_btn.itemRenderer = mod.TabSecondItem;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                };
                XianmaiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rank, egret.TouchEvent.TOUCH_TAP, this.onClickRank, this);
                    addEventListener(this._view.btn_zhanbao, egret.TouchEvent.TOUCH_TAP, this.onClickZhanbao, this);
                    addEventListener(this._view.btn_yijianxunkuang, egret.TouchEvent.TOUCH_TAP, this.onClickYijianxunkuang, this);
                    addEventListener(this._view.btn_wodexianmai, egret.TouchEvent.TOUCH_TAP, this.onClickWodexianmai, this);
                    addEventListener(this._view.btn_xianmailiebiao, egret.TouchEvent.TOUCH_TAP, this.onClickXianmailiebiao, this);
                    addEventListener(this._view.btn_xianmaiduihuan, egret.TouchEvent.TOUCH_TAP, this.onClickXianmaiduihuan, this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickListBtn, this);
                    this.onNt("on_update_xianmai_stage_show" /* ON_UPDATE_XIANMAI_STAGE_SHOW */, this.onUpdateView, this);
                    this.onNt("on_update_xianmai_reward_show" /* ON_UPDATE_XIANMAI_REWARD_SHOW */, this.onUpdateRewardShow, this);
                    this.onNt("on_update_xianmai_search" /* ON_UPDATE_XIANMAI_SEARCH */, this.onUpdateSearchView, this);
                };
                XianmaiMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var selIdx = 0;
                    var selType = _super.prototype.decodeShowArgs.call(this, true);
                    if (selType != null) {
                        selIdx = selType;
                    }
                    this._selIdx = selIdx;
                    this._proxy.c2s_xianmai_stage_show(this._selIdx + 1);
                    this._proxy.c2s_xianmai_my_show(); //请求我的占领数据
                    this.updateListBtn();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                    this.onUpdateRewardShow();
                    this.updateBtnHint();
                };
                XianmaiMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                    this._minEndTime = null;
                    this._proxy.reqStage = null;
                    this._isClickSearch = false;
                };
                //结算奖励弹窗
                XianmaiMdr.prototype.onUpdateRewardShow = function () {
                    var rewardItems = this._proxy.reward_items;
                    if (rewardItems && rewardItems.length) {
                        facade.showView("61" /* More */, "102" /* XianmaiResult */);
                    }
                };
                //请求一键寻矿返回
                XianmaiMdr.prototype.onUpdateSearchView = function () {
                    if (!this._isClickSearch) {
                        return;
                    }
                    this._isClickSearch = false;
                    if (this._proxy.search_stage) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "106" /* XianmaiItemTipsOnekey */);
                    }
                    else {
                        game.PromptBox.getIns().show(game.getLanById("xianmaizhengduo_tips18" /* xianmaizhengduo_tips18 */));
                    }
                };
                XianmaiMdr.prototype.updateTimeStr = function () {
                    var sufStr = game.getLanById("tishi_8" /* tishi_8 */);
                    var timeSec = this._proxy.getEndTime() || 0;
                    var leftTime = timeSec - TimeMgr.time.serverTimeSecond;
                    //活动时间结束，返回上一层界面
                    if (leftTime <= 0) {
                        this.sendNt("on_xianmai_view_close" /* ON_XIANMAI_VIEW_CLOSE */);
                        return;
                    }
                    var timeStr = game.StringUtil.substitute(game.getLanById("xianmaizhengduo_tips11" /* xianmaizhengduo_tips11 */), [game.TextUtil.addColor(game.TimeUtil.formatSecond(leftTime, 'HH时mm分'), 0x00ff00), sufStr]);
                    this._view.lb_time.textFlow = game.TextUtil.parseHtml(timeStr);
                };
                XianmaiMdr.prototype.updateListBtn = function () {
                    var maxStage = this._proxy.getMaxStage();
                    var list = [];
                    for (var i = 1; i <= maxStage; i++) {
                        var nameStr = "\u7B2C" + i + "\u5C42";
                        list.push({
                            icon: "xianmai_icon" + this._proxy.getLayerIdx(i),
                            nameStr: nameStr,
                            gray: false
                        });
                    }
                    this._listBtn.replaceAll(list);
                    this._view.list_btn.selectedIndex = this._selIdx;
                };
                XianmaiMdr.prototype.onUpdateView = function () {
                    this._view.coolTimeItem.updateShow();
                    this._minEndTime = this._proxy.getMinEndTime();
                    this.updateView();
                };
                XianmaiMdr.prototype.updateView = function () {
                    var guildNum = this._proxy.guild_num;
                    var guildStr = game.StringUtil.substitute(game.getLanById("xianmaizhengduo_tips9" /* xianmaizhengduo_tips9 */), [game.TextUtil.addColor(guildNum + '', 0x00ff00)]);
                    this._view.lb_teamcnt.textFlow = game.TextUtil.parseHtml(guildStr);
                    var earnCnt = this._proxy.getEarnCnt();
                    var earnStr = game.StringUtil.substitute(game.getLanById("xianmaizhengduo_tips10" /* xianmaizhengduo_tips10 */), [game.TextUtil.addColor(earnCnt + '%', 0x00ff00)]);
                    this._view.lb_teamearn.textFlow = game.TextUtil.parseHtml(earnStr);
                    //mvp
                    this._view.mvpItem.updateShow(this._proxy.mvp_role);
                    var list = [];
                    var cfgList = this._proxy.getStageCfgs(this._selIdx + 1);
                    for (var _i = 0, cfgList_9 = cfgList; _i < cfgList_9.length; _i++) {
                        var cfg = cfgList_9[_i];
                        list.push({
                            stage: this._selIdx + 1,
                            cfg: cfg,
                            info: this._proxy.getStageInfo(cfg.index)
                        });
                    }
                    this._listData.replaceAll(list);
                };
                XianmaiMdr.prototype.onClickListBtn = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIdx;
                    this._minEndTime = null;
                    this._proxy.c2s_xianmai_stage_show(this._selIdx + 1);
                };
                //排行榜
                XianmaiMdr.prototype.onClickRank = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "108" /* XianmaiRank */);
                };
                XianmaiMdr.prototype.onClickZhanbao = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "101" /* XianmaiZhanbao */);
                };
                XianmaiMdr.prototype.onClickYijianxunkuang = function () {
                    if (this._proxy.my_data) {
                        game.PromptBox.getIns().show(game.getLanById("xianmaizhengduo_tips19" /* xianmaizhengduo_tips19 */));
                        return;
                    }
                    this._isClickSearch = true;
                    this._proxy.c2s_xianmai_search();
                };
                XianmaiMdr.prototype.onClickWodexianmai = function () {
                    if (!this._proxy.my_data) {
                        game.PromptBox.getIns().show(game.getLanById("xianmaizhengduo_tips8" /* xianmaizhengduo_tips8 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "107" /* XianmaiItemTipsMine */);
                };
                XianmaiMdr.prototype.onClickXianmailiebiao = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "103" /* XianmaiList */);
                };
                XianmaiMdr.prototype.onClickXianmaiduihuan = function () {
                    mod.ViewMgr.getIns().showView("27" /* Activity */, "54" /* ExchangeShop */, 6 /* Type6 */);
                };
                XianmaiMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xianmaizhengduo_tips2" /* xianmaizhengduo_tips2 */));
                };
                XianmaiMdr.prototype.update = function (time) {
                    this.updateTimeStr();
                    if (this._view.coolTimeItem.visible) {
                        this._view.coolTimeItem.updateShow();
                    }
                    var endTime = game.TimeUtil.getNextWeekTime() - 1; //减一秒
                    this._view.timeItem.updateTime(endTime);
                    // 改成服务端统一处理，因位置被占领等等需要及时推送
                    // //占领时间到了，需要重新请求，更新数据
                    // if (this._minEndTime && TimeMgr.time.serverTimeSecond >= this._minEndTime) {
                    //     this._proxy.c2s_xianmai_stage_show(this._selIdx + 1);
                    //     this._minEndTime = null;
                    // }
                    // todo
                    var size = this._listData.source.length;
                    for (var i = 0; i < size; i++) {
                        var data = this._listData.source[i];
                        if (!data || !data.info || !data.info.defend_time) {
                            continue;
                        }
                        var item = this._view.list.getChildAt(i);
                        if (item) {
                            item.updateTime();
                        }
                    }
                };
                XianmaiMdr.prototype.updateBtnHint = function () {
                    this._view.btn_xianmaiduihuan.setHint(this._proxy.getExchangeHint());
                };
                return XianmaiMdr;
            }(game.MdrBase));
            more.XianmaiMdr = XianmaiMdr;
            __reflect(XianmaiMdr.prototype, "game.mod.more.XianmaiMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiRank2Mdr = /** @class */ (function (_super) {
                __extends(XianmaiRank2Mdr, _super);
                function XianmaiRank2Mdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 1;
                    return _this;
                }
                return XianmaiRank2Mdr;
            }(more.XianmaiRankMdr));
            more.XianmaiRank2Mdr = XianmaiRank2Mdr;
            __reflect(XianmaiRank2Mdr.prototype, "game.mod.more.XianmaiRank2Mdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiRanMainMdr = /** @class */ (function (_super) {
                __extends(XianmaiRanMainMdr, _super);
                function XianmaiRanMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xianzongpaimingbiaoqiantubiao",
                            mdr: more.XianmaiRankMdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: []
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "personal_rank_",
                            mdr: more.XianmaiRank2Mdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                            hintTypes: []
                        }
                    ];
                    return _this;
                }
                return XianmaiRanMainMdr;
            }(mod.WndBaseMdr));
            more.XianmaiRanMainMdr = XianmaiRanMainMdr;
            __reflect(XianmaiRanMainMdr.prototype, "game.mod.more.XianmaiRanMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var s2c_honour_get_reward = msg.s2c_honour_get_reward;
            var c2s_honour_get_info = msg.c2s_honour_get_info;
            /**
             * @description 荣耀系统
             */
            var HonourProxy = /** @class */ (function (_super) {
                __extends(HonourProxy, _super);
                function HonourProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HonourProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.HonourModel();
                    this.onProto(s2c_honour_get_reward, this.s2c_honour_get_reward, this);
                };
                //请求类型信息
                HonourProxy.prototype.c2s_honour_get_info = function (type) {
                    var msg = new c2s_honour_get_info();
                    msg.type = type;
                    this.sendProto(msg);
                };
                HonourProxy.prototype.s2c_honour_get_reward = function (n) {
                    var msg = n.body;
                    if (msg.info != null) {
                        for (var _i = 0, _a = msg.info; _i < _a.length; _i++) {
                            var item = _a[_i];
                            //一级map
                            var type = item.type;
                            var obj = this._model.typeInfo[type];
                            if (!obj) {
                                this._model.typeInfo[type] = obj = {};
                            }
                            //二级map存储
                            if (item.info != null) {
                                for (var _b = 0, _c = item.info; _b < _c.length; _b++) {
                                    var subItem = _c[_b];
                                    obj[subItem.index] = subItem;
                                }
                            }
                        }
                    }
                    this.updateHint();
                    this.sendNt("on_update_honour_info" /* ON_UPDATE_HONOUR_INFO */);
                };
                /**=========================协议end=========================*/
                /**大类信息*/
                HonourProxy.prototype.getInfoByType = function (type) {
                    return this._model.typeInfo[type];
                };
                /**大类下某index的信息*/
                HonourProxy.prototype.getInfoByTypeIndex = function (type, index) {
                    var typeInfo = this.getInfoByType(type);
                    return typeInfo && typeInfo[index] || null;
                };
                //配置列表
                HonourProxy.prototype.getCfgList = function (type) {
                    if (this._model.typeCfgMap[type]) {
                        return this._model.typeCfgMap[type];
                    }
                    var list = [];
                    var cfgObj = game.getConfigByNameId("honour.json" /* Honour */, type);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        list.push(cfg);
                    }
                    this._model.typeCfgMap[type] = list;
                    return list;
                };
                //配置
                HonourProxy.prototype.getCfg = function (type, index) {
                    var cfgObj = game.getConfigByNameId("honour.json" /* Honour */, type);
                    return cfgObj && cfgObj[index] || null;
                };
                //list数据源
                HonourProxy.prototype.getListData = function (type) {
                    var list = [];
                    var cfgList = this.getCfgList(type) || [];
                    for (var _i = 0, cfgList_10 = cfgList; _i < cfgList_10.length; _i++) {
                        var cfg = cfgList_10[_i];
                        list.push({
                            type: type,
                            cfg: cfg,
                            info: this.getInfoByTypeIndex(type, cfg.index)
                        });
                    }
                    return list;
                };
                /**大类下某index的红点*/
                HonourProxy.prototype.getHintByTypeIndex = function (type, index) {
                    var info = this.getInfoByTypeIndex(type, index);
                    if (info && info.is_finish == 1) {
                        return false; //已领完，无剩余名额
                    }
                    var cfg = this.getCfg(type, index);
                    if (cfg && cfg.target) {
                        return mod.TaskUtil.canRewardDraw(mod.TaskUtil.getTask(cfg.target));
                    }
                    return false;
                };
                /**大类红点*/
                HonourProxy.prototype.getHintByType = function (type) {
                    var cfgList = this.getCfgList(type);
                    for (var _i = 0, cfgList_11 = cfgList; _i < cfgList_11.length; _i++) {
                        var cfg = cfgList_11[_i];
                        if (this.getHintByTypeIndex(type, cfg.index)) {
                            return true;
                        }
                    }
                    return false;
                };
                //更新红点，如果后期加了其他HonourType，再自行修改红点使之适配 todo
                HonourProxy.prototype.updateHint = function () {
                    var hint = this.getHintByType(1 /* Honour */);
                    mod.HintMgr.setHint(hint, this._model.hintPathObj[1 /* Honour */]);
                };
                HonourProxy.prototype.onTaskHint = function (n) {
                    var types = n.body;
                    if (types.indexOf(55 /* Honour */) >= 0) {
                        this.updateHint();
                    }
                };
                return HonourProxy;
            }(game.ProxyBase));
            more.HonourProxy = HonourProxy;
            __reflect(HonourProxy.prototype, "game.mod.more.HonourProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var XianmaiRankSectionMdr = /** @class */ (function (_super) {
                __extends(XianmaiRankSectionMdr, _super);
                function XianmaiRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    return _this;
                }
                XianmaiRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                };
                XianmaiRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                XianmaiRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._section = this._showArgs.rank;
                    this._type = +this._showArgs.type;
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this.onRankUpdate();
                };
                XianmaiRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianmaiRankSectionMdr.prototype.onRankUpdate = function () {
                    if (this._section && this._type) {
                        this._itemList.source = this._proxy.getRankSection(this._section, this._type);
                    }
                    this._view.img_type2.source = "xianmaijifen";
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr(this._type));
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr(this._type));
                };
                return XianmaiRankSectionMdr;
            }(game.EffectMdrBase));
            more.XianmaiRankSectionMdr = XianmaiRankSectionMdr;
            __reflect(XianmaiRankSectionMdr.prototype, "game.mod.more.XianmaiRankSectionMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiResultMdr = /** @class */ (function (_super) {
                __extends(XianmaiResultMdr, _super);
                function XianmaiResultMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiResultView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiResultMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianmaiResultMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                XianmaiResultMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                XianmaiResultMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._proxy.c2s_xianmai_get_reward();
                    this._proxy.reward_items = null; //关闭就清空
                };
                XianmaiResultMdr.prototype.updateView = function () {
                    this._listData.replaceAll(this._proxy.reward_items);
                };
                XianmaiResultMdr.prototype.onClick = function () {
                    // this._proxy.c2s_xianmai_get_reward();
                    this.hide();
                };
                return XianmaiResultMdr;
            }(game.MdrBase));
            more.XianmaiResultMdr = XianmaiResultMdr;
            __reflect(XianmaiResultMdr.prototype, "game.mod.more.XianmaiResultMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XianmaiSelectMdr = /** @class */ (function (_super) {
                __extends(XianmaiSelectMdr, _super);
                function XianmaiSelectMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiSelectView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiSelectMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._view.secondPop.bgStr = game.ResUtil.getUiJpg("xuanzhexianmai_bg");
                };
                XianmaiSelectMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop, egret.TouchEvent.TOUCH_TAP, this.onHide, this);
                    addEventListener(this._view.btn_do0, egret.TouchEvent.TOUCH_TAP, this.onClickBtnDo0, this);
                    addEventListener(this._view.btn_do1, egret.TouchEvent.TOUCH_TAP, this.onClickBtnDo1, this);
                    this.onNt("on_xianmai_view_close" /* ON_XIANMAI_VIEW_CLOSE */, this.hide, this);
                };
                XianmaiSelectMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._stage = this._showArgs[0];
                    this._index = this._showArgs[1];
                    // todo
                    if ((typeof this._stage != 'number') || (typeof this._index != 'number')) {
                        DEBUG && console.trace("_xianmai_select: ", this._stage, this._index);
                    }
                    this.updateView();
                    TimeMgr.addUpdateItem(this, 1000);
                };
                XianmaiSelectMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._stage = null;
                    this._index = null;
                };
                XianmaiSelectMdr.prototype.updateView = function () {
                    var myData = this._proxy.my_data;
                    if (!myData) {
                        this.hide();
                        return;
                    }
                    this._view.infoItem0.updateRoleView(myData);
                    var info = this._proxy.getStageInfo(this._index);
                    if (info) {
                        this._view.btn_do0.visible = true;
                        this._view.btn_do1.x = 376;
                        this._view.infoItem1.updateRoleView(info);
                        this._view.btn_do1.label = game.getLanById("xianmaizhengduo_tips20" /* xianmaizhengduo_tips20 */);
                    }
                    else {
                        this._view.btn_do0.visible = false;
                        this._view.btn_do1.x = 276;
                        this._view.btn_do1.label = game.getLanById("xianmaizhengduo_tips21" /* xianmaizhengduo_tips21 */);
                        this._view.infoItem1.updateDefaultView(this._stage, this._index);
                    }
                };
                XianmaiSelectMdr.prototype.onClickBtnDo0 = function () {
                    this._proxy.c2s_xianmai_pvp_oper(2 /* Oper2 */, this._stage, this._index);
                    this.hide();
                };
                XianmaiSelectMdr.prototype.onClickBtnDo1 = function () {
                    var info = this._proxy.getStageInfo(this._index);
                    var oper = info ? 3 /* Oper3 */ : 4 /* Oper4 */;
                    this._proxy.c2s_xianmai_pvp_oper(oper, this._stage, this._index);
                    this.hide();
                };
                XianmaiSelectMdr.prototype.update = function (time) {
                    this.updateView(); //todo
                };
                return XianmaiSelectMdr;
            }(game.MdrBase));
            more.XianmaiSelectMdr = XianmaiSelectMdr;
            __reflect(XianmaiSelectMdr.prototype, "game.mod.more.XianmaiSelectMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianmaiZhanbaoMdr = /** @class */ (function (_super) {
                __extends(XianmaiZhanbaoMdr, _super);
                function XianmaiZhanbaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianmaiZhanbaoView);
                    _this._selIdx = 0;
                    //todo 个人，宗门
                    _this._btnData = [
                        {
                            icon: 'gerenzhanbao',
                            showHint: false
                        },
                        {
                            icon: 'zongmenzhanbao',
                            showHint: false
                        }
                    ];
                    _this.isEasyHide = true;
                    return _this;
                }
                XianmaiZhanbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(261 /* Xianmai */);
                    this._view.list_btn.itemRenderer = mod.TabSecondItem;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                    this._view.list.itemRenderer = more.XianmaiZhanbaoItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XianmaiZhanbaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_xianmai_zhaobao" /* ON_UPDATE_XIANMAI_ZHANBAO */, this.updateView, this);
                    this.onNt("on_xianmai_view_close" /* ON_XIANMAI_VIEW_CLOSE */, this.hide, this);
                };
                XianmaiZhanbaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._listBtn.replaceAll(this._btnData);
                    this._view.list_btn.selectedIndex = this._selIdx;
                    this._proxy.c2s_xianmai_zhanbao(this._selIdx + 1);
                };
                XianmaiZhanbaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                };
                XianmaiZhanbaoMdr.prototype.updateView = function () {
                    var logs = this._proxy.getZhanbao(this._selIdx + 1);
                    this._view.scroller.visible = logs && logs.length > 0;
                    this._view.lb_desc.visible = !this._view.scroller.visible;
                    if (this._view.scroller.visible) {
                        var list = [];
                        for (var _i = 0, logs_1 = logs; _i < logs_1.length; _i++) {
                            var item = logs_1[_i];
                            list.push({
                                type: this._selIdx + 1,
                                info: item
                            });
                        }
                        this._listData.replaceAll(list);
                    }
                };
                XianmaiZhanbaoMdr.prototype.onClickList = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIdx;
                    this._proxy.c2s_xianmai_zhanbao(this._selIdx + 1);
                };
                return XianmaiZhanbaoMdr;
            }(game.MdrBase));
            more.XianmaiZhanbaoMdr = XianmaiZhanbaoMdr;
            __reflect(XianmaiZhanbaoMdr.prototype, "game.mod.more.XianmaiZhanbaoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var XianweiListMdr = /** @class */ (function (_super) {
                __extends(XianweiListMdr, _super);
                function XianweiListMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianweiListView);
                    _this._listData = new ArrayCollection();
                    _this._listProp = new ArrayCollection();
                    _this._idxs = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                XianweiListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(269 /* Xianwei */);
                    this._view.list.itemRenderer = more.XianweiListItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_prop.itemRenderer = mod.CoinItemCenter;
                    this._view.list_prop.dataProvider = this._listProp;
                };
                XianweiListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_xianwei_list_info" /* ON_UPDATE_XIANWEI_LIST_INFO */, this.onUpdateView, this);
                    this.onNt("on_close_common_popup" /* ON_CLOSE_COMMON_POPUP */, this.hide, this);
                };
                XianweiListMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var key = this._showArgs.split("_");
                    this._stage = +key[0];
                    this._index = +key[1];
                    this._proxy.c2s_xianwei_branch_show(this._stage, this._index);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                XianweiListMdr.prototype.onUpdateView = function () {
                    var cfg = this._proxy.cfgArr.get(this._showArgs);
                    this._listProp.replaceAll([cfg.score, cfg.coin]);
                    this._view.img_title.source = "xianweititle" + this._showArgs;
                    var serverTime = TimeMgr.time.serverTimeSecond;
                    var list = this._proxy.member_list;
                    for (var i = 0; i < list.length; i++) {
                        var member = list[i];
                        if (member.end_time > serverTime) {
                            this._idxs.push(i);
                        }
                    }
                    this._listData.replaceAll(list);
                };
                XianweiListMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                    this.onClearDelay();
                };
                XianweiListMdr.prototype.update = function (time) {
                    var serverTime = TimeMgr.time.serverTimeSecond;
                    var is_open = this._proxy.is_open;
                    var suffix = is_open ? "后重置" : "后开启";
                    var endTIme = is_open ? this._proxy.open_time : this._proxy.end_time;
                    var leftTime = endTIme - serverTime;
                    if (leftTime <= 0) {
                        this.onResult();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, suffix, "");
                    for (var k in this._listData.source) {
                        var data = this._listData.source[k];
                        if (!data.end_time) {
                            continue;
                        }
                        if (serverTime >= data.end_time) {
                            this.onResult();
                            // continue;
                        }
                        this._listData.itemUpdated(data);
                    }
                };
                XianweiListMdr.prototype.onResult = function () {
                    var _this = this;
                    this.onClearDelay();
                    this._delayIdx = base.delayCall(base.Handler.alloc(this, function () {
                        _this._proxy.c2s_xianwei_branch_show(_this._stage, _this._index);
                        _this._delayIdx = 0;
                    }), 200);
                };
                XianweiListMdr.prototype.onClearDelay = function () {
                    if (this._delayIdx) {
                        base.clearDelay(this._delayIdx);
                        this._delayIdx = 0;
                    }
                };
                return XianweiListMdr;
            }(game.MdrBase));
            more.XianweiListMdr = XianweiListMdr;
            __reflect(XianweiListMdr.prototype, "game.mod.more.XianweiListMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiMainMdr = /** @class */ (function (_super) {
                __extends(XianweiMainMdr, _super);
                function XianweiMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xiandi_huanggutiangong",
                            mdr: more.XianweiMdr,
                            bg: '',
                            title: "xiandi_tips1" /* xiandi_tips1 */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "190" /* Xianwei */]
                        },
                    ];
                    return _this;
                }
                return XianweiMainMdr;
            }(mod.WndBaseNewMdr));
            more.XianweiMainMdr = XianweiMainMdr;
            __reflect(XianweiMainMdr.prototype, "game.mod.more.XianweiMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var TouchEvent = egret.TouchEvent;
            var XianweiMdr = /** @class */ (function (_super) {
                __extends(XianweiMdr, _super);
                function XianweiMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XianweiView);
                    _this._listData = new eui.ArrayCollection();
                    return _this;
                }
                XianweiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(269 /* Xianwei */);
                    this._view.list.itemRenderer = more.XianweiTipsItem;
                    this._view.list.dataProvider = this._listData;
                };
                XianweiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickExplain);
                    addEventListener(this._view.btn_tips, TouchEvent.TOUCH_TAP, this.onClickTips);
                    addEventListener(this._view.btn_rank, TouchEvent.TOUCH_TAP, this.onClickRank);
                    var keys = Array.from(this._proxy.cfgArr.keys());
                    for (var _i = 0, keys_6 = keys; _i < keys_6.length; _i++) {
                        var key = keys_6[_i];
                        addEventListener(this._view["item" + key], TouchEvent.TOUCH_TAP, this.onClickItem);
                    }
                    this.onNt("on_update_xianwei_info" /* ON_UPDATE_XIANWEI_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_xianwei_cd_info" /* ON_UPDATE_XIANWEI_CD_INFO */, this.onUpdateFigth, this);
                };
                XianweiMdr.prototype.onShow = function () {
                    this._proxy.c2s_xianwei_root_show();
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                    // this.onUpdateView();
                    this.update(null);
                };
                XianweiMdr.prototype.onUpdateReward = function () {
                    if (this._proxy.reward_data) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "195" /* XianweiProp */);
                    }
                };
                XianweiMdr.prototype.onUpdateView = function () {
                    this.onUpdateReward();
                    // this._endTImes.length = 0;
                    this._endTime = 0;
                    var keys = Array.from(this._proxy.cfgArr.keys());
                    for (var i = 0; i < keys.length; i++) {
                        var key = keys[i];
                        if (i < 3) {
                            var item_1 = this._view["item" + key];
                            item_1.setData(key);
                            var info = this._proxy.list.get(key);
                            if (!info || !info.end_time) {
                                continue;
                            }
                            if (info.end_time <= TimeMgr.time.serverTimeSecond) {
                                this.onResult();
                                DEBUG && console.error("若重复发送协议即bug");
                                return;
                            }
                            if (!this._endTime) {
                                this._endTime = info.end_time;
                            }
                            else {
                                this._endTime = info.end_time < this._endTime ? info.end_time : this._endTime;
                            }
                            continue;
                        }
                        var item = this._view["item" + key];
                        item.setData(key);
                    }
                    this._view.infoItem.visible = this._proxy.my_place && !!this._proxy.my_place.stage;
                    if (this._view.infoItem.visible) {
                        this._view.infoItem.setData(this._proxy.my_place);
                        var leftTime = TimeMgr.time.serverTimeSecond - this._proxy.my_place.start_time;
                        this._view.infoItem.updateTime(leftTime);
                    }
                    this._listData.replaceAll(this._proxy.log_list);
                    this.onUpdateFigth();
                };
                /**挑战cd */
                XianweiMdr.prototype.onUpdateFigth = function () {
                    this._view.cdItem.visible = !!this._proxy.attack_time;
                    if (this._view.cdItem.visible) {
                        var left = this._proxy.attack_time - TimeMgr.time.serverTimeSecond;
                        this._view.cdItem.updateTime(left);
                    }
                };
                XianweiMdr.prototype.onClickExplain = function () {
                    // TODO:提示
                    mod.ViewMgr.getIns().showRuleTips("待添加说明");
                };
                XianweiMdr.prototype.onClickTips = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "192" /* XianweiTips */);
                };
                XianweiMdr.prototype.onClickRank = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "193" /* XianweiRank */);
                };
                XianweiMdr.prototype.onClickItem = function (e) {
                    var key = e.currentTarget.data;
                    // console.error(key);
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "191" /* XianweiList */, key);
                };
                XianweiMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                    this.onClearDelay();
                };
                XianweiMdr.prototype.update = function (time) {
                    var serverTime = TimeMgr.time.serverTimeSecond;
                    var is_open = this._proxy.is_open;
                    var suffix = is_open ? "后重置" : "后开启";
                    var endTIme = is_open ? this._proxy.open_time : this._proxy.end_time;
                    this._view.timeItem.updateLeftTime(endTIme - serverTime, suffix);
                    // if (this._endTImes.length) {
                    //     for (let time of this._endTImes) {
                    //         if (serverTime >= time) {
                    //             this.onResult();
                    //             break;
                    //         }
                    //     }
                    // }
                    if (this._endTime > 0 && serverTime >= this._endTime) {
                        this.onResult();
                    }
                    if (this._view.cdItem.visible) {
                        var left = this._proxy.attack_time - serverTime;
                        if (left <= 0) {
                            this.onResult();
                        }
                        else {
                            this._view.cdItem.updateTime(left);
                        }
                    }
                    if (this._view.infoItem.visible) {
                        var info = this._proxy.my_place;
                        if (!info) {
                            this._view.infoItem.visible = false;
                            return;
                        }
                        if (serverTime >= info.end_time) { //时间结束 退位
                            this.onResult();
                            return;
                        }
                        var leftTime = serverTime - this._proxy.my_place.start_time;
                        this._view.infoItem.updateTime(leftTime);
                    }
                };
                XianweiMdr.prototype.onResult = function () {
                    var _this = this;
                    this.onClearDelay();
                    this._delayIdx = base.delayCall(base.Handler.alloc(this, function () {
                        _this._proxy.c2s_xianwei_root_show();
                        _this._delayIdx = 0;
                    }), 200);
                };
                XianweiMdr.prototype.onClearDelay = function () {
                    if (this._delayIdx) {
                        base.clearDelay(this._delayIdx);
                        this._delayIdx = 0;
                    }
                };
                return XianweiMdr;
            }(game.MdrBase));
            more.XianweiMdr = XianweiMdr;
            __reflect(XianweiMdr.prototype, "game.mod.more.XianweiMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var Handler = base.Handler;
            var XianweiPropMdr = /** @class */ (function (_super) {
                __extends(XianweiPropMdr, _super);
                function XianweiPropMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianweiPropView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                XianweiPropMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(269 /* Xianwei */);
                    this._view.verticalCenter = 0;
                    this._view.touchEnabled = false;
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData;
                };
                XianweiPropMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XianweiPropMdr.prototype.onUpdateView = function () {
                    var reward_data = this._proxy.reward_data;
                    var time = reward_data.time;
                    var timeStr = game.TimeUtil.formatSecond(time, "H小时m分", true);
                    this._view.lab.textFlow = game.TextUtil.parseHtml("\u606D\u559C\u9053\u53CB\u6210\u529F\u5360\u9886\u4E86" + timeStr);
                    this._listData.replaceAll(reward_data.items);
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                    this._proxy.reward_data = null;
                };
                XianweiPropMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XianweiPropMdr;
            }(game.MdrBase));
            more.XianweiPropMdr = XianweiPropMdr;
            __reflect(XianweiPropMdr.prototype, "game.mod.more.XianweiPropMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XianweiRankMainMdr = /** @class */ (function (_super) {
                __extends(XianweiRankMainMdr, _super);
                function XianweiRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "personal_rank_",
                            mdr: more.XianweiRankMdr,
                            bg: 'pass_rank_bg',
                            title: "pass_rank" /* pass_rank */,
                        }
                    ];
                    return _this;
                }
                return XianweiRankMainMdr;
            }(mod.WndBaseMdr));
            more.XianweiRankMainMdr = XianweiRankMainMdr;
            __reflect(XianweiRankMainMdr.prototype, "game.mod.more.XianweiRankMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TimeMgr = base.TimeMgr;
            var XianweiRankMdr = /** @class */ (function (_super) {
                __extends(XianweiRankMdr, _super);
                function XianweiRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.RankView);
                    return _this;
                }
                XianweiRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(269 /* Xianwei */);
                    this._itemList = new ArrayCollection();
                    this._view.list_rank.itemRenderer = mod.RankRewardRender;
                    this._view.list_rank.dataProvider = this._itemList;
                    this._view.btn_god.visible = false;
                    this._view.timeItem.visible = true;
                    this._view.img_type2.source = "meishuzi_xianshoujingyan";
                    this._view.img_type3.source = "paimingjiangli";
                };
                XianweiRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_xianwei_rank_info" /* ON_UPDATE_XIANWEI_RANK_INFO */, this.onUpdateView, this);
                };
                XianweiRankMdr.prototype.onShow = function () {
                    this._proxy.c2s_xianwei_rank_show();
                    _super.prototype.onShow.call(this);
                    this.onUpdateTime();
                };
                XianweiRankMdr.prototype.onUpdateTime = function () {
                    this._endTime = game.TimeUtil.getNextWeekTime();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.updateTime();
                };
                XianweiRankMdr.prototype.onUpdateView = function () {
                    this._view.masterItem.visible = false;
                    var list = this._proxy.ranks;
                    var topInfo = list && list[0];
                    if (topInfo && topInfo.value) {
                        this.updateRankUIRole(this._view.grp_eff, topInfo);
                    }
                    var infos = this._proxy.getRanks();
                    this._itemList.replaceAll(infos);
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr());
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr());
                };
                XianweiRankMdr.prototype.onHide = function () {
                    TimeMgr.removeUpdateItem(this);
                    _super.prototype.onHide.call(this);
                };
                XianweiRankMdr.prototype.update = function (time) {
                    this.updateTime();
                };
                XianweiRankMdr.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this._endTime = game.TimeUtil.getNextWeekTime();
                        this._proxy.c2s_xianwei_rank_show();
                    }
                    this._view.timeItem.updateLeftTime(leftTime, "", game.getLanById("battle_cue29" /* battle_cue29 */));
                };
                return XianweiRankMdr;
            }(game.EffectMdrBase));
            more.XianweiRankMdr = XianweiRankMdr;
            __reflect(XianweiRankMdr.prototype, "game.mod.more.XianweiRankMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var XianweiSectionMdr = /** @class */ (function (_super) {
                __extends(XianweiSectionMdr, _super);
                function XianweiSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XianweiSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(269 /* Xianwei */);
                    this._itemList = new ArrayCollection();
                    this._view.list.itemRenderer = mod.RankSectionItem;
                    this._view.list.dataProvider = this._itemList;
                };
                // protected addListeners(): void {
                //     super.addListeners();
                //     let addEventListener = this.onEgret.bind(this);
                // }
                XianweiSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._section = this._showArgs.rank;
                    this._view.secondPop.updateTitleStr(game.getLanById("pass_rank" /* pass_rank */));
                    this.onRankUpdate();
                };
                XianweiSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XianweiSectionMdr.prototype.onRankUpdate = function () {
                    this._itemList.replaceAll(this._proxy.getRankSection(this._section));
                    this._view.img_type2.source = "duobaocishu";
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(this._proxy.getRankStr());
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(this._proxy.getRankCountStr());
                };
                return XianweiSectionMdr;
            }(game.EffectMdrBase));
            more.XianweiSectionMdr = XianweiSectionMdr;
            __reflect(XianweiSectionMdr.prototype, "game.mod.more.XianweiSectionMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var XianweiTipsMdr = /** @class */ (function (_super) {
                __extends(XianweiTipsMdr, _super);
                function XianweiTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XianweiTipsView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                XianweiTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(269 /* Xianwei */);
                    this._view.list.itemRenderer = more.XianweiTipsItem2;
                    this._view.list.dataProvider = this._listData;
                };
                XianweiTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_xianwei_zhanbao_info" /* ON_UPDATE_XIANWEI_ZHANBAO_INFO */, this.onUpdateView, this);
                };
                XianweiTipsMdr.prototype.onShow = function () {
                    this._proxy.c2s_xianwei_zhanbao_show();
                    _super.prototype.onShow.call(this);
                    // this.onUpdateView();
                };
                XianweiTipsMdr.prototype.onUpdateView = function () {
                    this._listData.replaceAll(this._proxy.zhanbao_list);
                };
                XianweiTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return XianweiTipsMdr;
            }(game.MdrBase));
            more.XianweiTipsMdr = XianweiTipsMdr;
            __reflect(XianweiTipsMdr.prototype, "game.mod.more.XianweiTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingModel = /** @class */ (function () {
                function HuanjingModel() {
                    this.infoMap = {};
                    this.attrMap = {};
                    //最大进阶等级
                    this.stageLvMap = {};
                    //槽位配置最大星级
                    this.starPosMap = {};
                    //幻灵配置的最大阶数
                    this.huanlingMaxStageMap = {};
                    //幻灵被动技能条件
                    this.huanlingSkillMap = {};
                    //驻神技能配置的最大等级
                    this.zhushenSkillLvMap = {};
                    //外显表头
                    this.headTypes = [];
                    //神灵id
                    this.shenlingIds = [];
                    //消耗道具id
                    this.costIndexs = [];
                    //神灵升星和觉醒消耗
                    this.shenlingStarCost = [];
                    this.mainHintPath = ["61" /* More */, "140" /* HuanjingMain */, "01" /* Btn1 */];
                    //养成红点路径，此路径不可直接使用，需要拼接不同的systemId
                    this.growHintPath = ["61" /* More */, "140" /* HuanjingMain */, "01" /* Btn1 */, "147" /* HuanjingCollectMain */, "01" /* Btn1 */, "141" /* HuanjingGrowMain */, "01" /* Btn1 */];
                    //收集红点路径，此路径不可直接使用，需要拼接不同的systemId
                    this.collectHintPath = ["61" /* More */, "140" /* HuanjingMain */, "01" /* Btn1 */, "147" /* HuanjingCollectMain */, "01" /* Btn1 */];
                }
                return HuanjingModel;
            }());
            more.HuanjingModel = HuanjingModel;
            __reflect(HuanjingModel.prototype, "game.mod.more.HuanjingModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_huanjin_oper = msg.c2s_huanjin_oper;
            var s2c_update_huanjin_info = msg.s2c_update_huanjin_info;
            var facade = base.facade;
            var s2c_huanjin_attr_update = msg.s2c_huanjin_attr_update;
            /**
             * @description 幻境系统
             */
            var HuanjingProxy = /** @class */ (function (_super) {
                __extends(HuanjingProxy, _super);
                function HuanjingProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuanjingProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.HuanjingModel();
                    this.onProto(s2c_update_huanjin_info, this.s2c_update_huanjin_info, this);
                    this.onProto(s2c_huanjin_attr_update, this.s2c_huanjin_attr_update, this);
                    facade.onNt("on_update_fuchenlinghu_info" /* ON_UPDATE_FUCHENLINGHU_INFO */, this.onUpdateFuchenlinghuInfo, this);
                    facade.onNt("on_shen_ling_reward_update" /* ON_SHEN_LING_REWARD_UPDATE */, this.onUpdateShenlingShenjiInfo, this);
                };
                /**
                 * 激活升阶升星等操作
                 * @param systemId
                 * @param oper 1.祭炼2.天星槽位升星3.天星激活4.幻灵升阶5.幻灵技能激活6.驻神进阶
                 * @param pos 槽位(2,4,5,6)
                 * @param place 技能槽位(5)
                 */
                HuanjingProxy.prototype.c2s_huanjin_oper = function (systemId, oper, pos, place) {
                    var msg = new c2s_huanjin_oper();
                    msg.system_id = systemId;
                    msg.oper = oper;
                    if (pos) {
                        msg.pos = pos;
                    }
                    if (place) {
                        msg.place = place;
                    }
                    this.sendProto(msg);
                };
                HuanjingProxy.prototype.s2c_update_huanjin_info = function (n) {
                    var msg = n.body;
                    if (msg != null) {
                        var lastInfo = this.getSystemInfo(msg.system_id); //上次数据缓存
                        var lastStageLv = lastInfo && lastInfo.jilian_level || 0; //上次进阶等级
                        this._model.infoMap[msg.system_id] = msg;
                        var curStageLv = this.getStageLv(msg.system_id); //当前进阶等级
                        this.checkBreakthrough(msg.system_id, lastInfo != null, lastStageLv, curStageLv);
                    }
                    this.updateHint();
                    this.sendNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */);
                };
                HuanjingProxy.prototype.s2c_huanjin_attr_update = function (n) {
                    var msg = n.body;
                    if (msg != null) {
                        this._model.attrMap[msg.system_id] = msg;
                    }
                    this.updateHint();
                    this.sendNt("on_update_huanjing_attr" /* ON_UPDATE_HUANJING_ATTR */);
                };
                //检查突破弹窗
                HuanjingProxy.prototype.checkBreakthrough = function (systemId, isCheck, lastStageLv, curStageLv) {
                    if (!isCheck || lastStageLv == curStageLv) {
                        return;
                    }
                    var skillId = this.getStageSkill(systemId);
                    var lastStage = Math.floor(Math.max(lastStageLv - 1, 0) / 10) % 10; //上一阶
                    var curStage = Math.floor(Math.max(curStageLv - 1, 0) / 10) % 10; //当前阶
                    var lastStageCfg = this.getStageCfg(systemId, (lastStage - 1) * 10 + 1);
                    var curStageCfg = this.getStageCfg(systemId, curStage * 10 + 1);
                    var lastDesc = '';
                    if (lastStageCfg && lastStageCfg.attr_id) {
                        var attr = mod.RoleUtil.getAttr(lastStageCfg.attr_id); //界面上会显示下阶属性，所以已经请求过了
                        lastDesc = game.TextUtil.getAttrTextInfos(attr, 0x55ff63, '\n', ' +', 0xfcf6d1).join('\n');
                    }
                    var curDesc = '';
                    if (curStageCfg && curStageCfg.attr_id) {
                        var attr = mod.RoleUtil.getAttr(curStageCfg.attr_id); //界面上会显示下阶属性，所以已经请求过了
                        curDesc = game.TextUtil.getAttrTextInfos(attr, 0x55ff63, '\n', ' +', 0xfcf6d1).join('\n');
                    }
                    if (lastStage != curStage) {
                        mod.ViewMgr.getIns().showBreakthroughTips(skillId, curStage, lastDesc, curDesc);
                    }
                };
                /**====================协议end====================*/
                //功能是否开启
                HuanjingProxy.prototype.checkSystemOpen = function (systemId, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var cfg = this.getHuanjingParamCfg(systemId);
                    return cfg && mod.ViewMgr.getIns().checkViewOpen(cfg.open_id, isTips);
                };
                //全部功能配置
                HuanjingProxy.prototype.getHuanjingParamCfgs = function () {
                    return game.getConfigListByName("huanjin_param.json" /* HuanJingParam */);
                };
                //某功能配置
                HuanjingProxy.prototype.getHuanjingParamCfg = function (systemId) {
                    return game.getConfigByNameId("huanjin_param.json" /* HuanJingParam */, systemId);
                };
                //进阶配置
                HuanjingProxy.prototype.getStageCfg = function (systemId, stageLv) {
                    if (stageLv == undefined) {
                        stageLv = this.getStageLv(systemId); //不传则用当前等级
                    }
                    var cfgObj = game.getConfigByNameId("huanjin_stage.json" /* HuanJingStage */, systemId);
                    return cfgObj ? cfgObj[stageLv] : null;
                };
                //升星配置
                HuanjingProxy.prototype.getStarCfg = function (systemId, pos, star) {
                    var cfgObj = game.getConfigByNameId("huanjin_star.json" /* HuanJingStar */, systemId);
                    if (!cfgObj) {
                        return null;
                    }
                    var buildId = pos * 10000 + star;
                    return cfgObj[buildId];
                };
                //幻灵配置
                HuanjingProxy.prototype.getHuanlingCfg = function (systemId, type, lv) {
                    var cfgObj = game.getConfigByNameId("huanjin_huanling.json" /* HuanJingHuanLing */, systemId);
                    if (!cfgObj) {
                        return null;
                    }
                    var buildId = type * 10000 + lv;
                    return cfgObj[buildId];
                };
                //驻神配置
                HuanjingProxy.prototype.getZhushenCfg = function (systemId, pos, lv) {
                    var cfgObj = game.getConfigByNameId("huanjin_zushen.json" /* HuanJingZuShen */, systemId);
                    if (!cfgObj) {
                        return null;
                    }
                    var buildId = pos * 10000 + lv;
                    return cfgObj[buildId];
                };
                //功能数据
                HuanjingProxy.prototype.getSystemInfo = function (systemId) {
                    return this._model.infoMap[systemId];
                };
                //属性汇总数值
                HuanjingProxy.prototype.getSystemAttr = function (systemId) {
                    return this._model.attrMap[systemId];
                };
                //获取属性汇总的数值
                HuanjingProxy.prototype.getAttr = function (systemId) {
                    var attr = this.getSystemAttr(systemId);
                    return attr && attr.value || 0;
                };
                //进阶祭炼等级
                HuanjingProxy.prototype.getStageLv = function (systemId) {
                    var info = this.getSystemInfo(systemId);
                    return info && info.jilian_level || 0;
                };
                //进阶祭炼等级转换成阶数
                HuanjingProxy.prototype.getStageNum = function (systemId) {
                    var lv = this.getStageLv(systemId);
                    return Math.floor(Math.max(lv - 1, 0) / 10) % 10;
                };
                //进阶技能
                HuanjingProxy.prototype.getStageSkill = function (systemId) {
                    var cfg = this.getHuanjingParamCfg(systemId);
                    return cfg && cfg.stage_skill || 0;
                };
                //最大进阶等级
                HuanjingProxy.prototype.getMaxStageLv = function (systemId) {
                    if (this._model.stageLvMap[systemId]) {
                        return this._model.stageLvMap[systemId];
                    }
                    var cfgObj = game.getConfigByNameId("huanjin_stage.json" /* HuanJingStage */, systemId);
                    if (!cfgObj) {
                        return 0;
                    }
                    return this._model.stageLvMap[systemId] = Object.keys(cfgObj).length;
                };
                //是否已达最大进阶等级
                HuanjingProxy.prototype.isMaxStageLv = function (systemId) {
                    var curStageLv = this.getStageLv(systemId);
                    var maxStageLv = this.getMaxStageLv(systemId);
                    return curStageLv >= maxStageLv;
                };
                //能否进阶
                HuanjingProxy.prototype.canUpStage = function (systemId, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (this.isMaxStageLv(systemId)) {
                        return false;
                    }
                    var cfg = this.getStageCfg(systemId, this.getStageLv(systemId) + 1);
                    if (!cfg || !cfg.cost) {
                        return false;
                    }
                    return mod.BagUtil.checkPropCnt(cfg.cost[0], cfg.cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //外显激活数量
                HuanjingProxy.prototype.getSurfaceActedNum = function (systemId) {
                    var cfg = this.getHuanjingParamCfg(systemId);
                    if (!cfg || !cfg.outlook) {
                        return 0;
                    }
                    var cnt = 0;
                    for (var _i = 0, _a = cfg.outlook; _i < _a.length; _i++) {
                        var id = _a[_i];
                        if (mod.SurfaceUtil.isAct(id)) {
                            cnt++;
                        }
                    }
                    return cnt;
                };
                //打开养成界面
                HuanjingProxy.prototype.canOpenGrow = function (systemId, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (!this.checkSystemOpen(systemId, isTips)) {
                        return false;
                    }
                    var cfg = this.getHuanjingParamCfg(systemId);
                    var num = this.getSurfaceActedNum(systemId);
                    if (num < 1) {
                        if (isTips) {
                            var str = game.StringUtil.substitute(game.getLanById("huanjing_tips13" /* huanjing_tips13 */), [cfg.name]);
                            game.PromptBox.getIns().show(str);
                        }
                        return false;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "141" /* HuanjingGrowMain */, ["01" /* Btn1 */, systemId]);
                    return true;
                };
                //天星等级
                HuanjingProxy.prototype.getStarLv = function (systemId) {
                    var info = this.getSystemInfo(systemId);
                    return info && info.tianxing_level || 0;
                };
                //星数据
                HuanjingProxy.prototype.getStarList = function (systemId) {
                    var info = this.getSystemInfo(systemId);
                    return info && info.star_list || [];
                };
                //升星槽位数据
                HuanjingProxy.prototype.getStarPosData = function (systemId, pos) {
                    var list = this.getStarList(systemId);
                    for (var _i = 0, list_3 = list; _i < list_3.length; _i++) {
                        var item = list_3[_i];
                        if (item && item.pos == pos) {
                            return item;
                        }
                    }
                    return null;
                };
                //槽位配置最大星级
                HuanjingProxy.prototype.getStarPosMax = function (systemId, pos) {
                    var posMap = this._model.starPosMap;
                    if (posMap && posMap[systemId] && posMap[systemId][pos]) {
                        return posMap[systemId][pos];
                    }
                    var map = this._model.starPosMap[systemId] = {};
                    var cfgObj = game.getConfigByNameId("huanjin_star.json" /* HuanJingStar */, systemId);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[+key];
                        var curPos = Math.floor(cfg.index / 10000) % 10;
                        if (!map[curPos]) {
                            map[curPos] = 0;
                        }
                        map[curPos]++;
                    }
                    return map[pos];
                };
                //升星槽位是否达到最大星级
                HuanjingProxy.prototype.isStarPosMax = function (systemId, pos) {
                    var info = this.getStarPosData(systemId, pos);
                    var star = info && info.star || 0;
                    var maxStar = this.getStarPosMax(systemId, pos);
                    return star >= maxStar;
                };
                //槽位可激活或升星
                HuanjingProxy.prototype.canActOrUpStarPos = function (systemId, pos, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (this.isStarPosMax(systemId, pos)) {
                        return false;
                    }
                    var info = this.getStarPosData(systemId, pos);
                    var star = info && info.star || 0;
                    var cfg = this.getStarCfg(systemId, pos, star + 1);
                    if (!cfg || !cfg.cost) {
                        return false;
                    }
                    for (var _i = 0, _a = cfg.cost; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (!mod.BagUtil.checkPropCnt(item[0], item[1], isTips ? 1 /* Dialog */ : 0 /* None */)) {
                            return false;
                        }
                    }
                    return true;
                };
                //天星阶数可激活或升星
                HuanjingProxy.prototype.canActOrUpStar = function (systemId, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (this.isMaxStarLv(systemId)) {
                        return false;
                    }
                    var starLv = this.getStarLv(systemId);
                    var actNum = this.getStarActNum(systemId, starLv + 1);
                    var totalNum = this.getHuanjingParamCfg(systemId).star_max_pos;
                    if (actNum < totalNum) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("tiaojianbuzu" /* tiaojianbuzu */));
                        }
                        return false;
                    }
                    return true;
                };
                //天星配置最大等级
                HuanjingProxy.prototype.getMaxStarLv = function (systemId) {
                    var cfg = this.getHuanjingParamCfg(systemId);
                    return cfg && cfg.star_buff ? cfg.star_buff.length : 0;
                };
                //天星等级已达最高
                HuanjingProxy.prototype.isMaxStarLv = function (systemId) {
                    return this.getStarLv(systemId) >= this.getMaxStarLv(systemId);
                };
                //满足星级的数量
                HuanjingProxy.prototype.getStarActNum = function (systemId, starLv) {
                    var info = this.getSystemInfo(systemId);
                    if (!info || !info.star_list) {
                        return 0;
                    }
                    var cnt = 0;
                    for (var _i = 0, _a = info.star_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item && item.star >= starLv) {
                            cnt++;
                        }
                    }
                    return cnt;
                };
                //幻灵配置的最大阶数
                HuanjingProxy.prototype.getHuanlingMaxStage = function (systemId, type) {
                    var stageMap = this._model.huanlingMaxStageMap;
                    if (stageMap && stageMap[systemId] && stageMap[systemId][type]) {
                        return stageMap[systemId][type];
                    }
                    var map = this._model.huanlingMaxStageMap[systemId] = {};
                    var cfgObj = game.getConfigByNameId("huanjin_huanling.json" /* HuanJingHuanLing */, systemId);
                    for (var key in cfgObj) {
                        var cfg = cfgObj[+key];
                        var curType = Math.floor(cfg.index / 10000) % 10;
                        if (!map[curType]) {
                            map[curType] = 0;
                        }
                        map[curType]++;
                    }
                    return map[type];
                };
                //幻灵已达最大阶数
                HuanjingProxy.prototype.isHuanlingMaxStage = function (systemId, type) {
                    var info = this.getHuanlingInfo(systemId, type);
                    var stage = info && info.stage || 0;
                    var maxStage = this.getHuanlingMaxStage(systemId, type);
                    return stage >= maxStage;
                };
                //幻灵数据
                HuanjingProxy.prototype.getHuanlingList = function (systemId) {
                    var info = this.getSystemInfo(systemId);
                    return info && info.huanling_list || [];
                };
                //某类型的幻灵数据
                HuanjingProxy.prototype.getHuanlingInfo = function (systemId, type) {
                    var list = this.getHuanlingList(systemId);
                    for (var _i = 0, list_4 = list; _i < list_4.length; _i++) {
                        var item = list_4[_i];
                        if (item && item.type == type) {
                            return item;
                        }
                    }
                    return null;
                };
                //某类型的幻灵技能
                HuanjingProxy.prototype.getHuanlingSkillInfo = function (systemId, type, pos) {
                    var list = this.getHuanlingInfo(systemId, type);
                    if (!list || !list.skill_list) {
                        return null;
                    }
                    for (var _i = 0, _a = list.skill_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item && item.pos == pos) {
                            return item;
                        }
                    }
                    return null;
                };
                //幻灵被动技能条件
                HuanjingProxy.prototype.getHuanlingSkillData = function (systemId, type, pos) {
                    var skillMap = this._model.huanlingSkillMap;
                    if (skillMap && skillMap[systemId] && skillMap[systemId][type] && skillMap[systemId][type][pos]) {
                        return skillMap[systemId][type][pos];
                    }
                    var cfg = this.getHuanjingParamCfg(systemId);
                    if (!cfg || !cfg.huanling_skill) {
                        return [];
                    }
                    var map = this._model.huanlingSkillMap[systemId] = {};
                    for (var _i = 0, _a = cfg.huanling_skill; _i < _a.length; _i++) {
                        var item = _a[_i];
                        var curType = item[0];
                        if (!map[curType]) {
                            map[curType] = {};
                        }
                        map[curType][item[1]] = item;
                    }
                    if (map && map[type] && map[type][pos]) {
                        return map[type][pos];
                    }
                    return [];
                };
                //幻灵特殊属性id
                HuanjingProxy.prototype.getHuanlingSpecialId = function (systemId, type, pos) {
                    var cfg = this.getHuanjingParamCfg(systemId);
                    for (var _i = 0, _a = cfg.huanling_spe_id; _i < _a.length; _i++) {
                        var item = _a[_i];
                        var curType = item[0];
                        if (curType != type) {
                            continue;
                        }
                        if (item[1] == pos) {
                            return item[2];
                        }
                    }
                    return 0;
                };
                //幻灵激活或升星
                HuanjingProxy.prototype.canHuanling = function (systemId, type, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var isMax = this.isHuanlingMaxStage(systemId, type);
                    if (isMax) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("huanjing_tips11" /* huanjing_tips11 */));
                        }
                        return false;
                    }
                    var info = this.getHuanlingInfo(systemId, type);
                    var stage = info && info.stage || 0;
                    var cfg = this.getHuanlingCfg(systemId, type, stage + 1);
                    if (!cfg || !cfg.cost) {
                        return false;
                    }
                    return mod.BagUtil.checkPropCnt(cfg.cost[0], cfg.cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //幻灵技能能否激活
                HuanjingProxy.prototype.canHuanlingSkillAct = function (systemId, type, pos) {
                    var posInfo = this.getHuanlingSkillInfo(systemId, type, pos);
                    if (posInfo) {
                        return false;
                    }
                    var info = this.getHuanlingInfo(systemId, type);
                    var stage = info && info.stage || 0;
                    var skillAry = this.getHuanlingSkillData(systemId, type, pos);
                    return stage >= skillAry[2];
                };
                //幻灵红点
                HuanjingProxy.prototype.getHuanlingHintByType = function (systemId, type) {
                    if (this.canHuanling(systemId, type)) {
                        return true;
                    }
                    for (var i = 1; i <= 4; i++) {
                        if (this.canHuanlingSkillAct(systemId, type, i)) {
                            return true;
                        }
                    }
                    return false;
                };
                //幻灵最高阶
                HuanjingProxy.prototype.getHuanlingStageMax = function (systemId) {
                    var list = this.getHuanlingList(systemId);
                    var max = 0;
                    for (var _i = 0, list_5 = list; _i < list_5.length; _i++) {
                        var item = list_5[_i];
                        max = Math.max(max, item.stage);
                    }
                    return max;
                };
                //驻神技能数据
                HuanjingProxy.prototype.getZhushenList = function (systemId) {
                    var info = this.getSystemInfo(systemId);
                    return info && info.zushen_list || [];
                };
                //某驻神技能数据
                HuanjingProxy.prototype.getZhushenInfo = function (systemId, pos) {
                    var list = this.getZhushenList(systemId);
                    for (var _i = 0, list_6 = list; _i < list_6.length; _i++) {
                        var item = list_6[_i];
                        if (item && item.pos == pos) {
                            return item;
                        }
                    }
                    return null;
                };
                //驻神阶数
                HuanjingProxy.prototype.getZhushenStageLv = function (systemId) {
                    var list = this.getZhushenList(systemId);
                    if (!list || list.length < 4) {
                        return 0;
                    }
                    var stage = Number.MAX_SAFE_INTEGER;
                    for (var _i = 0, list_7 = list; _i < list_7.length; _i++) {
                        var item = list_7[_i];
                        stage = Math.min(item.star, stage);
                    }
                    return stage;
                };
                //驻神技能配置的最大等级
                HuanjingProxy.prototype.getZhushenSkillMaxLv = function (systemId, pos) {
                    var lvMap = this._model.zhushenSkillLvMap;
                    if (lvMap && lvMap[systemId] && lvMap[systemId][pos]) {
                        return lvMap[systemId][pos];
                    }
                    var cfgObj = game.getConfigByNameId("huanjin_zushen.json" /* HuanJingZuShen */, systemId);
                    var map = this._model.zhushenSkillLvMap[systemId] = {};
                    for (var key in cfgObj) {
                        var cfg = cfgObj[+key];
                        var curPos = Math.floor(cfg.index / 10000) % 10;
                        if (!map[curPos]) {
                            map[curPos] = 0;
                        }
                        map[curPos]++;
                    }
                    return map[pos] || 0;
                };
                //驻神技能是否达到最大等级
                HuanjingProxy.prototype.isZhushenSkillMax = function (systemId, pos) {
                    var info = this.getZhushenInfo(systemId, pos);
                    var lv = info && info.star || 0;
                    var maxLv = this.getZhushenSkillMaxLv(systemId, pos);
                    return lv >= maxLv;
                };
                //驻神技能激活或升级
                HuanjingProxy.prototype.canActOrUpZhushen = function (systemId, pos, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (this.isZhushenSkillMax(systemId, pos)) {
                        return false;
                    }
                    var info = this.getZhushenInfo(systemId, pos);
                    var lv = info && info.star || 0;
                    var cfg = this.getZhushenCfg(systemId, pos, lv + 1);
                    return cfg && cfg.cost && mod.BagUtil.checkPropCnt(cfg.cost[0], cfg.cost[1], isTips ? 1 /* Dialog */ : 0 /* None */);
                };
                //驻神最大星级
                HuanjingProxy.prototype.getZhushenStarMax = function (systemId) {
                    var list = this.getZhushenList(systemId);
                    var max = 0;
                    for (var _i = 0, list_8 = list; _i < list_8.length; _i++) {
                        var item = list_8[_i];
                        max = Math.max(max, item.star);
                    }
                    return max;
                };
                //养成界面战力
                HuanjingProxy.prototype.getGrowAttr = function (systemId) {
                    var info = this.getSystemInfo(systemId);
                    var attr = new msg.attributes();
                    if (!info) {
                        return attr;
                    }
                    var attrIdList = [];
                    //进阶
                    var stageLv = this.getStageLv(systemId);
                    var stageCfg = this.getStageCfg(systemId, stageLv);
                    if (stageCfg && stageCfg.attr_id) {
                        attrIdList.push(stageCfg.attr_id);
                    }
                    //升星
                    var starList = this.getStarList(systemId);
                    for (var _i = 0, starList_1 = starList; _i < starList_1.length; _i++) {
                        var item = starList_1[_i];
                        if (item && item.star) {
                            var starCfg = this.getStarCfg(systemId, item.pos, item.star);
                            if (starCfg && starCfg.attr_id) {
                                attrIdList.push(starCfg.attr_id);
                            }
                        }
                    }
                    //幻灵
                    var huanlingList = this.getHuanlingList(systemId);
                    for (var _a = 0, huanlingList_1 = huanlingList; _a < huanlingList_1.length; _a++) {
                        var item = huanlingList_1[_a];
                        if (item && item.stage) {
                            var huanlingCfg = this.getHuanlingCfg(systemId, item.type, item.stage);
                            if (huanlingCfg && huanlingCfg.attr_id) {
                                attrIdList.push(huanlingCfg.attr_id);
                            }
                        }
                    }
                    //驻神
                    var zhushenList = this.getZhushenList(systemId);
                    for (var _b = 0, zhushenList_1 = zhushenList; _b < zhushenList_1.length; _b++) {
                        var item = zhushenList_1[_b];
                        if (item && item.star) {
                            var zhushenCfg = this.getZhushenCfg(systemId, item.pos, item.star);
                            if (zhushenCfg && zhushenCfg.attr_id) {
                                attrIdList.push(zhushenCfg.attr_id);
                            }
                        }
                    }
                    var attrList = mod.RoleUtil.getAttrList(attrIdList);
                    return game.TextUtil.calcAttrList(attrList);
                };
                Object.defineProperty(HuanjingProxy.prototype, "mainHintPath", {
                    /**======================== hint start ========================*/
                    get: function () {
                        return this._model.mainHintPath;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuanjingProxy.prototype, "growHintPath", {
                    //此路径不可直接使用，需要拼接不同的systemId
                    get: function () {
                        return this._model.growHintPath;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(HuanjingProxy.prototype, "collectHintPath", {
                    //此路径不可直接使用，需要拼接不同的systemId
                    get: function () {
                        return this._model.collectHintPath;
                    },
                    enumerable: true,
                    configurable: true
                });
                //进阶红点
                HuanjingProxy.prototype.getStageHint = function (systemId) {
                    return this.canUpStage(systemId);
                };
                //升星红点
                HuanjingProxy.prototype.getStarHint = function (systemId) {
                    if (this.canActOrUpStar(systemId)) {
                        return true;
                    }
                    var cfg = this.getHuanjingParamCfg(systemId);
                    for (var i = 1; i <= cfg.star_max_pos; i++) {
                        if (this.canActOrUpStarPos(systemId, i)) {
                            return true;
                        }
                    }
                    return false;
                };
                //幻灵红点
                HuanjingProxy.prototype.getHuanlingHint = function (systemId) {
                    for (var i = 0; i < game.ShenLingTypeAry.length; i++) {
                        if (this.getHuanlingHintByType(systemId, i + 1)) {
                            return true;
                        }
                    }
                    return false;
                };
                //驻神红点
                HuanjingProxy.prototype.getZhushenHint = function (systemId) {
                    var cfg = this.getHuanjingParamCfg(systemId);
                    if (!cfg || !cfg.zushen_skill) {
                        return false;
                    }
                    for (var i = 0; i < cfg.zushen_skill.length; i++) {
                        if (this.canActOrUpZhushen(systemId, i + 1)) {
                            return true;
                        }
                    }
                    return false;
                };
                //养成界面红点路径
                HuanjingProxy.prototype.getGrowHintPath = function (systemId) {
                    return this._model.growHintPath.concat([systemId + '']);
                };
                //养成界面红点
                HuanjingProxy.prototype.getGrowHint = function (systemId) {
                    if (!this.checkSystemOpen(systemId)) {
                        return false;
                    }
                    //至少有一个外显激活才可以
                    if (this.getSurfaceActedNum(systemId) < 1) {
                        return false;
                    }
                    return this.getStageHint(systemId)
                        || this.getStarHint(systemId)
                        || this.getHuanlingHint(systemId)
                        || this.getZhushenHint(systemId);
                };
                //收集界面红点路径
                HuanjingProxy.prototype.getCollectHintPath = function (systemId) {
                    return this._model.collectHintPath.concat([systemId + '']);
                };
                //收集界面的外显激活或升星
                HuanjingProxy.prototype.getSurfaceHint = function (systemId) {
                    var cfg = this.getHuanjingParamCfg(systemId);
                    if (!cfg || !cfg.outlook) {
                        return false;
                    }
                    for (var _i = 0, _a = cfg.outlook; _i < _a.length; _i++) {
                        var id = _a[_i];
                        if (this.getSurfaceSingleHint(id)) {
                            return true;
                        }
                    }
                    return false;
                };
                //单个外显红点
                HuanjingProxy.prototype.getSurfaceSingleHint = function (id) {
                    var hint = mod.SurfaceUtil.canUpStar(id, true);
                    if (hint) {
                        return hint;
                    }
                    var headType = game.PropData.getPropParse(id);
                    if (headType == 400 /* Shenling */) {
                        return this.getShenlingShenjiHint(id);
                    }
                    var surfaceProxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                    return surfaceProxy.getSurfacePerHint(game.getConfigById(id));
                };
                //神灵神迹红点
                HuanjingProxy.prototype.getShenlingShenjiHint = function (id) {
                    var headType = game.PropData.getPropParse(id);
                    if (headType == 400 /* Shenling */) {
                        var shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                        var rewardHint = shenlingProxy ? shenlingProxy.getShenJiRewardHint(id) : false;
                        if (rewardHint) {
                            return true;
                        }
                    }
                    return false;
                };
                //获取红点（不包含浮尘灵壶、幻境榜、幻境之海，可供外部使用）todo
                HuanjingProxy.prototype.getHintBySystemId = function (systemId) {
                    if (!this.checkSystemOpen(systemId)) {
                        return false;
                    }
                    return this.getGrowHint(systemId) || this.getSurfaceHint(systemId);
                };
                //收集界面红点（包含养成界面红点、浮尘灵壶等）
                HuanjingProxy.prototype.getCollectHint = function (systemId) {
                    if (!this.checkSystemOpen(systemId)) {
                        return false;
                    }
                    return this.getGrowHint(systemId) || this.getSurfaceHint(systemId)
                        || this.getFuchenlinghuHint() || this.getSeaRankHint() || this.getSeaMainHint();
                };
                //养成红点
                HuanjingProxy.prototype.updateGrowHint = function () {
                    var cfgs = this.getHuanjingParamCfgs();
                    for (var _i = 0, cfgs_4 = cfgs; _i < cfgs_4.length; _i++) {
                        var cfg = cfgs_4[_i];
                        if (!this.checkSystemOpen(cfg.system_id)) {
                            continue;
                        }
                        var growHintPath = this.getGrowHintPath(cfg.system_id);
                        var growHint = this.getGrowHint(cfg.system_id);
                        mod.HintMgr.setHint(growHint, growHintPath);
                    }
                };
                //收集红点
                HuanjingProxy.prototype.updateCollectHint = function () {
                    var cfgs = this.getHuanjingParamCfgs();
                    for (var _i = 0, cfgs_5 = cfgs; _i < cfgs_5.length; _i++) {
                        var cfg = cfgs_5[_i];
                        if (!this.checkSystemOpen(cfg.system_id)) {
                            continue;
                        }
                        var collectHintPath = this.getCollectHintPath(cfg.system_id);
                        var collectHint = this.getCollectHint(cfg.system_id);
                        mod.HintMgr.setHint(collectHint, collectHintPath);
                    }
                };
                HuanjingProxy.prototype.updateHint = function () {
                    this.updateGrowHint();
                    this.updateCollectHint();
                };
                //外显表头
                HuanjingProxy.prototype.getOutlookHeadType = function () {
                    if (this._model.headTypes && this._model.headTypes.length) {
                        return this._model.headTypes;
                    }
                    var cfgs = this.getHuanjingParamCfgs();
                    var headTypes = [];
                    for (var _i = 0, cfgs_6 = cfgs; _i < cfgs_6.length; _i++) {
                        var cfg = cfgs_6[_i];
                        if (cfg.outlook) {
                            for (var _a = 0, _b = cfg.outlook; _a < _b.length; _a++) {
                                var item = _b[_a];
                                var type = game.PropData.getPropParse(item);
                                if (headTypes.indexOf(type) < 0) {
                                    headTypes.push(type);
                                }
                            }
                        }
                    }
                    return this._model.headTypes = headTypes;
                };
                //神灵id
                HuanjingProxy.prototype.getShenlingIds = function () {
                    if (this._model.shenlingIds && this._model.shenlingIds.length) {
                        return this._model.shenlingIds;
                    }
                    var ids = [];
                    var cfgs = this.getHuanjingParamCfgs();
                    for (var _i = 0, cfgs_7 = cfgs; _i < cfgs_7.length; _i++) {
                        var cfg = cfgs_7[_i];
                        if (!cfg || !cfg.outlook) {
                            continue;
                        }
                        for (var _a = 0, _b = cfg.outlook; _a < _b.length; _a++) {
                            var id = _b[_a];
                            var head = game.PropData.getPropParse(id);
                            if (head == 400 /* Shenling */ && ids.indexOf(id) < 0) {
                                ids.push(id);
                            }
                        }
                    }
                    return this._model.shenlingIds = ids;
                };
                //神灵激活、升星、觉醒升星，刷新
                HuanjingProxy.prototype.onShenlingInfoUpdate = function () {
                    var headTypes = this.getOutlookHeadType();
                    if (headTypes.indexOf(400 /* Shenling */) > -1) {
                        var shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                        var actedList = shenlingProxy.getActedList();
                        var shenlingIds = this.getShenlingIds();
                        for (var _i = 0, shenlingIds_1 = shenlingIds; _i < shenlingIds_1.length; _i++) {
                            var id = shenlingIds_1[_i];
                            if (actedList.indexOf(id) > -1) {
                                this.updateHint();
                            }
                        }
                    }
                };
                //外显激活，刷新
                HuanjingProxy.prototype.onSurfaceInfoUpdate = function (n) {
                    var type = n.body;
                    var headTypes = this.getOutlookHeadType();
                    if (headTypes.indexOf(type) > -1) {
                        this.updateHint();
                    }
                };
                //消耗道具id
                HuanjingProxy.prototype.getCostIndexs = function () {
                    if (this._model.costIndexs && this._model.costIndexs.length) {
                        return this._model.costIndexs;
                    }
                    var costIndexs = [];
                    var cfgs = this.getHuanjingParamCfgs();
                    for (var _i = 0, cfgs_8 = cfgs; _i < cfgs_8.length; _i++) {
                        var cfg = cfgs_8[_i];
                        var systemId = cfg.system_id;
                        //进阶
                        var stageCfg = this.getStageCfg(systemId, 1);
                        if (stageCfg && stageCfg.cost && costIndexs.indexOf(stageCfg.cost[0]) < 0) {
                            costIndexs.push(stageCfg.cost[0]);
                        }
                        //升星
                        for (var i = 1; i <= cfg.star_max_pos; i++) {
                            var starCfg = this.getStarCfg(systemId, i, 1);
                            if (starCfg && starCfg.cost) {
                                for (var _a = 0, _b = starCfg.cost; _a < _b.length; _a++) {
                                    var costItem = _b[_a];
                                    if (costIndexs.indexOf(costItem[0]) < 0) {
                                        costIndexs.push(costItem[0]);
                                    }
                                }
                            }
                        }
                        //幻灵
                        for (var i = 1; i <= game.ShenLingTypeAry.length; i++) {
                            var huanlingCfg = this.getHuanlingCfg(systemId, i, 1);
                            if (huanlingCfg && huanlingCfg.cost && costIndexs.indexOf(huanlingCfg.cost[0]) < 0) {
                                costIndexs.push(huanlingCfg.cost[0]);
                            }
                        }
                        //驻神
                        for (var i = 1; i <= cfg.zushen_skill.length; i++) {
                            var zhushenCfg = this.getZhushenCfg(systemId, i, 1);
                            if (zhushenCfg && zhushenCfg.cost && costIndexs.indexOf(zhushenCfg.cost[0]) < 0) {
                                costIndexs.push(zhushenCfg.cost[0]);
                            }
                        }
                    }
                    this._model.costIndexs = costIndexs;
                    return costIndexs;
                };
                HuanjingProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var costIndexs = this.getCostIndexs();
                    var shenlingCost = this.getShenlingStarCost();
                    for (var _i = 0, indexs_1 = indexs; _i < indexs_1.length; _i++) {
                        var idx = indexs_1[_i];
                        if ((costIndexs && costIndexs.indexOf(idx) > -1)
                            || (shenlingCost && shenlingCost.indexOf(idx) > -1)) {
                            this.updateHint();
                            break;
                        }
                    }
                    //浮尘灵壶红点
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670263 /* Fuchenlinghu */)) {
                        var fuchenlinghuProxy = facade.retMod("27" /* Activity */).retProxy(266 /* Fuchenlinghu */);
                        var costIds = fuchenlinghuProxy ? fuchenlinghuProxy.getCostIds() : [];
                        for (var _a = 0, indexs_2 = indexs; _a < indexs_2.length; _a++) {
                            var idx = indexs_2[_a];
                            if (costIds && costIds.indexOf(idx) > -1) {
                                this.updateCollectHint();
                            }
                        }
                    }
                };
                HuanjingProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("gold" /* gold */) > -1) {
                        this.updateHint();
                    }
                };
                HuanjingProxy.prototype.onBagUpdateByPropTypeAndSubType = function (n) {
                    var list = n.body;
                    //5种，神灵，坐骑，羽翼，神兵，时装（策划确定的5种类型）
                    for (var key in list) {
                        var propType = +key;
                        var types = list[propType];
                        if (propType == 11 /* Surface */) {
                            var subTypes11 = [1 /* Horse */, 3 /* Shenling */, 6 /* Weapon */, 7 /* Wing */, 8 /* Body */];
                            for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
                                var subType = types_1[_i];
                                if (subTypes11.indexOf(subType) > -1) {
                                    this.updateCollectHint();
                                    break;
                                }
                            }
                        }
                        else if (propType == 17 /* Lianshendan */) {
                            var subType17 = [1 /* Horse */, 3 /* Wing */, 4 /* Weapon */, 5 /* Body */];
                            for (var _a = 0, types_2 = types; _a < types_2.length; _a++) {
                                var subType = types_2[_a];
                                if (subType17[subType]) {
                                    this.updateCollectHint();
                                    break;
                                }
                            }
                        }
                    }
                };
                //神灵升星和觉醒消耗
                HuanjingProxy.prototype.getShenlingStarCost = function () {
                    if (this._model.shenlingStarCost && this._model.shenlingStarCost.length) {
                        return this._model.shenlingStarCost;
                    }
                    var starCost = [];
                    var shenlingIds = this.getShenlingIds();
                    var shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    for (var _i = 0, shenlingIds_2 = shenlingIds; _i < shenlingIds_2.length; _i++) {
                        var id = shenlingIds_2[_i];
                        var cfgObj = shenlingProxy.getStarCfgList(id);
                        if (cfgObj[1]) {
                            var cost = cfgObj[1].star_consume[0];
                            if (cost && starCost.indexOf(cost[0]) < 0) {
                                starCost.push(cost[0]);
                            }
                        }
                        if (cfgObj[6] && cfgObj[6].star_consume) {
                            for (var _a = 0, _b = cfgObj[6].star_consume; _a < _b.length; _a++) {
                                var cost = _b[_a];
                                if (starCost.indexOf(cost[0]) < 0) {
                                    starCost.push(cost[0]);
                                }
                            }
                        }
                    }
                    this._model.shenlingStarCost = starCost;
                    return starCost;
                };
                HuanjingProxy.prototype.onSeaInfoUpdate = function (n) {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670244 /* Sea */)) {
                        return; //功能未开启
                    }
                    this.updateHint();
                };
                //浮尘灵壶红点
                HuanjingProxy.prototype.getFuchenlinghuHint = function () {
                    return mod.HintMgr.getHint(["27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */]);
                };
                //幻境之海排行榜红点
                HuanjingProxy.prototype.getSeaRankHint = function (type) {
                    var seaProxy = facade.retMod("56" /* Yijie */).retProxy(262 /* Sea */);
                    if (type != undefined) {
                        var hintPath = seaProxy.getRankHintType(type);
                        return mod.HintMgr.getHint(hintPath);
                    }
                    var hint = false;
                    for (var _i = 0, SeaTypeAry_1 = game.SeaTypeAry; _i < SeaTypeAry_1.length; _i++) {
                        var type_1 = SeaTypeAry_1[_i];
                        if (mod.HintMgr.getHint(seaProxy.getRankHintType(type_1))) {
                            hint = true;
                            break;
                        }
                    }
                    return hint;
                };
                //幻境之海红点 todo 幻境之海也耦合了幻境系统的红点，不能使用红点路径获取
                HuanjingProxy.prototype.getSeaMainHint = function () {
                    return mod.HintMgr.getHint(["56" /* Yijie */, "01" /* YijieMain */ + "03" /* Sea */]);
                };
                //浮尘灵壶红点
                HuanjingProxy.prototype.onUpdateFuchenlinghuInfo = function () {
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670263 /* Fuchenlinghu */)) {
                        this.updateCollectHint();
                    }
                };
                //神灵神迹红点
                HuanjingProxy.prototype.onUpdateShenlingShenjiInfo = function () {
                    if (mod.ViewMgr.getIns().checkViewOpen(1041670102 /* Shenling */)) {
                        this.updateCollectHint();
                    }
                };
                return HuanjingProxy;
            }(game.ProxyBase));
            more.HuanjingProxy = HuanjingProxy;
            __reflect(HuanjingProxy.prototype, "game.mod.more.HuanjingProxy", ["game.mod.IHuanjingProxy", "base.IProxy"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingCollectItem = /** @class */ (function (_super) {
                __extends(HuanjingCollectItem, _super);
                function HuanjingCollectItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingCollectItemSkin";
                    return _this;
                }
                HuanjingCollectItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                HuanjingCollectItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                HuanjingCollectItem.prototype.dataChanged = function () {
                    var index = this.data;
                    if (!index) {
                        return;
                    }
                    var cfg = game.getConfigById(index);
                    // this.avatarItem.updateShow(cfg);
                    this.img_icon.source = game.ResUtil.getBigIcon(cfg.icon);
                    this.img_frame.source = "huanjing_avatar_frame_" + cfg.quality;
                    this.img_quality.source = "avatarquality" + cfg.quality;
                    this.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name, game.ColorUtil.getColorByQuality2(cfg.quality)));
                    this.img_gray.visible = !mod.SurfaceUtil.isAct(index);
                    this.redPoint.visible = this._proxy.getSurfaceSingleHint(index);
                };
                HuanjingCollectItem.prototype.onClick = function () {
                    facade.showView("61" /* More */, "137" /* HuanjingCollectItemTips */, this.data);
                };
                return HuanjingCollectItem;
            }(mod.BaseListenerRenderer));
            more.HuanjingCollectItem = HuanjingCollectItem;
            __reflect(HuanjingCollectItem.prototype, "game.mod.more.HuanjingCollectItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingCollectItemTipsView = /** @class */ (function (_super) {
                __extends(HuanjingCollectItemTipsView, _super);
                function HuanjingCollectItemTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingCollectItemTipsSkin";
                    return _this;
                }
                return HuanjingCollectItemTipsView;
            }(eui.Component));
            more.HuanjingCollectItemTipsView = HuanjingCollectItemTipsView;
            __reflect(HuanjingCollectItemTipsView.prototype, "game.mod.more.HuanjingCollectItemTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingCollectView = /** @class */ (function (_super) {
                __extends(HuanjingCollectView, _super);
                function HuanjingCollectView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingCollectSkin";
                    return _this;
                }
                return HuanjingCollectView;
            }(eui.Component));
            more.HuanjingCollectView = HuanjingCollectView;
            __reflect(HuanjingCollectView.prototype, "game.mod.more.HuanjingCollectView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingEntranceItem = /** @class */ (function (_super) {
                __extends(HuanjingEntranceItem, _super);
                function HuanjingEntranceItem() {
                    var _this = _super.call(this) || this;
                    _this._clickBtn = false;
                    _this.skinName = "skins.more.HuanjingEntranceItemSkin";
                    return _this;
                }
                HuanjingEntranceItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn0, this.onClick, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClickThis, this);
                    this.btn0.setHintStyle(5, 5);
                };
                HuanjingEntranceItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this._clickBtn = false;
                };
                HuanjingEntranceItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_bg.source = game.ResUtil.getUiPng("huanjing_img_bg" + data.system_id);
                    this.btn0.icon = "huanjing_btn" + data.system_id;
                    this.img_name.source = "huanjing_img_name" + data.system_id;
                    this.img_text.source = "huanjing_list_lb" + data.system_id;
                    this.lb_lv.text = this._proxy.getSurfaceActedNum(data.system_id) + '';
                    this.btn0.setHint(this._proxy.getGrowHint(data.system_id));
                    this.redPoint.visible = this._proxy.getCollectHint(data.system_id);
                    this.skillItem.visible = data.system_id == 1;
                    if (this.skillItem.visible) {
                        var skillCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, data.stage_skill);
                        this.skillItem.setIcon(skillCfg && skillCfg.icon || '');
                        var strAttr = this._proxy.getAttr(data.system_id);
                        this.addBmpFont(strAttr / 10000 + "" + "%", game.BmpTextCfg[228 /* HuanJingFont */], this.gr_font);
                    }
                    if (this._proxy.checkSystemOpen(data.system_id)) {
                        this.img_gray.visible = false;
                    }
                    else {
                        var openCfg = game.getConfigByNameId("open_function.json" /* OpenFunction */, data.open_id);
                        this.img_gray.visible = openCfg && openCfg.attendre && openCfg.attendre == 1;
                    }
                };
                HuanjingEntranceItem.prototype.onClick = function () {
                    this._clickBtn = true;
                    this._proxy.canOpenGrow(this.data.system_id, true);
                };
                HuanjingEntranceItem.prototype.onClickThis = function () {
                    if (this._clickBtn) {
                        this._clickBtn = false;
                        return;
                    }
                    if (!this._proxy.checkSystemOpen(this.data.system_id, true)) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "147" /* HuanjingCollectMain */, ["01" /* TabBtnType01 */, this.data.system_id]);
                };
                return HuanjingEntranceItem;
            }(mod.BaseRenderer));
            more.HuanjingEntranceItem = HuanjingEntranceItem;
            __reflect(HuanjingEntranceItem.prototype, "game.mod.more.HuanjingEntranceItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingEntranceView = /** @class */ (function (_super) {
                __extends(HuanjingEntranceView, _super);
                function HuanjingEntranceView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingEntranceSkin";
                    return _this;
                }
                return HuanjingEntranceView;
            }(eui.Component));
            more.HuanjingEntranceView = HuanjingEntranceView;
            __reflect(HuanjingEntranceView.prototype, "game.mod.more.HuanjingEntranceView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingGrowBtnItem = /** @class */ (function (_super) {
                __extends(HuanjingGrowBtnItem, _super);
                function HuanjingGrowBtnItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuanjingGrowBtnItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.redPoint.visible = !!data.showHint;
                    this.lb_lv.text = data.lv + '阶';
                    this.img_icon.source = "huanjing_icon" + data.type;
                    this.img_type.source = "huanjing_img_type" + data.type;
                };
                return HuanjingGrowBtnItem;
            }(mod.BaseListenerRenderer));
            more.HuanjingGrowBtnItem = HuanjingGrowBtnItem;
            __reflect(HuanjingGrowBtnItem.prototype, "game.mod.more.HuanjingGrowBtnItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingGrowView = /** @class */ (function (_super) {
                __extends(HuanjingGrowView, _super);
                function HuanjingGrowView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingGrowSkin";
                    return _this;
                }
                return HuanjingGrowView;
            }(eui.Component));
            more.HuanjingGrowView = HuanjingGrowView;
            __reflect(HuanjingGrowView.prototype, "game.mod.more.HuanjingGrowView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingHuanlingView = /** @class */ (function (_super) {
                __extends(HuanjingHuanlingView, _super);
                function HuanjingHuanlingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingHuanlingSkin";
                    return _this;
                }
                return HuanjingHuanlingView;
            }(eui.Component));
            more.HuanjingHuanlingView = HuanjingHuanlingView;
            __reflect(HuanjingHuanlingView.prototype, "game.mod.more.HuanjingHuanlingView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStageBar = /** @class */ (function (_super) {
                __extends(HuanjingStageBar, _super);
                function HuanjingStageBar() {
                    var _this = _super.call(this) || this;
                    _this._singleBar = 40; // 40 * 9
                    _this.skinName = "skins.more.HuanjingStageBarSkin";
                    return _this;
                }
                HuanjingStageBar.prototype.updateShow = function (systemId) {
                    if (!this._proxy) {
                        this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                    }
                    var stageLv = this._proxy.getStageLv(systemId);
                    var lv = Math.max(stageLv - 1, 0) % 10;
                    for (var i = 0; i <= 9; i++) {
                        this["img" + i].visible = stageLv != 0 && i <= lv;
                    }
                    if (stageLv != 0) {
                        this.img_xian.width = lv * this._singleBar;
                    }
                    else {
                        this.img_xian.width = 0;
                    }
                };
                return HuanjingStageBar;
            }(eui.Component));
            more.HuanjingStageBar = HuanjingStageBar;
            __reflect(HuanjingStageBar.prototype, "game.mod.more.HuanjingStageBar");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingStageSkillItem = /** @class */ (function (_super) {
                __extends(HuanjingStageSkillItem, _super);
                function HuanjingStageSkillItem() {
                    var _this = _super.call(this) || this;
                    _this._effHub = new game.UIEftHub(_this);
                    _this.skinName = "skins.more.HuanjingStageSkillItemSkin";
                    return _this;
                }
                HuanjingStageSkillItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.img_icon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                HuanjingStageSkillItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this.img_icon.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                };
                HuanjingStageSkillItem.prototype.onClick = function () {
                    facade.showView("61" /* More */, "143" /* HuanjingStageSkillTips */, this._systemId);
                };
                HuanjingStageSkillItem.prototype.addBmpFont = function (text, font, container, horizontal, scale, center, gap, expandParent) {
                    if (horizontal === void 0) { horizontal = true; }
                    if (scale === void 0) { scale = 1; }
                    if (center === void 0) { center = false; }
                    if (gap === void 0) { gap = 0; }
                    if (expandParent === void 0) { expandParent = false; }
                    this._effHub.addBmpFont(text, font, container, horizontal, scale, center, gap, expandParent);
                };
                HuanjingStageSkillItem.prototype.updateShow = function (systemId) {
                    if (!this._proxy) {
                        this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                    }
                    this._systemId = systemId;
                    this.img_title.source = "huanjing_list_lb" + systemId;
                    //判断第一个添加美术字体
                    if (systemId == 1) {
                        var strAttr = this._proxy.getAttr(this._systemId);
                        this.addBmpFont(strAttr / 10000 + "" + "%", game.BmpTextCfg[228 /* HuanJingFont */], this.gr_font, true, 1, false, 0, true);
                    }
                    else {
                        this.gr_font.removeChildren();
                    }
                    var skillId = this._proxy.getStageSkill(systemId);
                    this.skillItem.setData(skillId);
                    var stage = this._proxy.getStageNum(systemId);
                    this.lb_lv.text = stage + '阶';
                };
                return HuanjingStageSkillItem;
            }(mod.BaseStageEventItem));
            more.HuanjingStageSkillItem = HuanjingStageSkillItem;
            __reflect(HuanjingStageSkillItem.prototype, "game.mod.more.HuanjingStageSkillItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStageSkillTipsView = /** @class */ (function (_super) {
                __extends(HuanjingStageSkillTipsView, _super);
                function HuanjingStageSkillTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingStageSkillTipsSkin";
                    return _this;
                }
                return HuanjingStageSkillTipsView;
            }(eui.Component));
            more.HuanjingStageSkillTipsView = HuanjingStageSkillTipsView;
            __reflect(HuanjingStageSkillTipsView.prototype, "game.mod.more.HuanjingStageSkillTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStageView = /** @class */ (function (_super) {
                __extends(HuanjingStageView, _super);
                function HuanjingStageView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingStageSkin";
                    return _this;
                }
                return HuanjingStageView;
            }(eui.Component));
            more.HuanjingStageView = HuanjingStageView;
            __reflect(HuanjingStageView.prototype, "game.mod.more.HuanjingStageView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStarComp = /** @class */ (function (_super) {
                __extends(HuanjingStarComp, _super);
                function HuanjingStarComp() {
                    var _this = _super.call(this) || this;
                    _this._maxNum = 5;
                    _this._singleLine = 115;
                    _this.skinName = "skins.more.HuanjingStarCompSkin";
                    return _this;
                }
                HuanjingStarComp.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                };
                HuanjingStarComp.prototype.updateShow = function (systemId) {
                    this._systemId = systemId;
                    var posNum = this.getPosNum();
                    var linePos = 0;
                    for (var i = 1; i <= this._maxNum; i++) {
                        var starItem = this["starItem" + (i - 1)];
                        starItem.visible = i <= posNum;
                        if (starItem.visible) {
                            var star = this.getPosStar(i);
                            starItem.data = {
                                systemId: systemId,
                                pos: i,
                                star: star,
                                showHint: this._proxy.canActOrUpStarPos(systemId, i) //todo
                            };
                            if (star > 0) {
                                linePos = i - 1;
                            }
                        }
                    }
                    this.img_line.width = this._singleLine * linePos;
                };
                //配置的槽位
                HuanjingStarComp.prototype.getPosNum = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    return cfg.star_max_pos;
                };
                HuanjingStarComp.prototype.getPosStar = function (pos) {
                    var info = this._proxy.getStarPosData(this._systemId, pos);
                    return info && info.star || 0;
                };
                return HuanjingStarComp;
            }(mod.BaseStageEventItem));
            more.HuanjingStarComp = HuanjingStarComp;
            __reflect(HuanjingStarComp.prototype, "game.mod.more.HuanjingStarComp");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingStarItem = /** @class */ (function (_super) {
                __extends(HuanjingStarItem, _super);
                function HuanjingStarItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingStarItemSkin";
                    return _this;
                }
                HuanjingStarItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                HuanjingStarItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                HuanjingStarItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.currentState = data.star > 0 ? 'light' : 'dark';
                    this.redPoint.visible = !!data.showHint;
                };
                //todo
                HuanjingStarItem.prototype.onClick = function () {
                    facade.showView("61" /* More */, "138" /* HuanjingStarSkillTips */, {
                        systemId: this.data.systemId,
                        pos: this.data.pos
                    });
                };
                return HuanjingStarItem;
            }(mod.BaseListenerRenderer));
            more.HuanjingStarItem = HuanjingStarItem;
            __reflect(HuanjingStarItem.prototype, "game.mod.more.HuanjingStarItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStarStageItem = /** @class */ (function (_super) {
                __extends(HuanjingStarStageItem, _super);
                function HuanjingStarStageItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingStarStageItemSkin";
                    return _this;
                }
                HuanjingStarStageItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                };
                HuanjingStarStageItem.prototype.updateShow = function (title, actDesc, desc) {
                    this.baseNameItem.setTitle(title);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(actDesc);
                    this.baseZhuangshiItem.updateShow(desc);
                };
                return HuanjingStarStageItem;
            }(mod.BaseListenerRenderer));
            more.HuanjingStarStageItem = HuanjingStarStageItem;
            __reflect(HuanjingStarStageItem.prototype, "game.mod.more.HuanjingStarStageItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStarStageTipsView = /** @class */ (function (_super) {
                __extends(HuanjingStarStageTipsView, _super);
                function HuanjingStarStageTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingStarStageTipsSkin";
                    return _this;
                }
                return HuanjingStarStageTipsView;
            }(eui.Component));
            more.HuanjingStarStageTipsView = HuanjingStarStageTipsView;
            __reflect(HuanjingStarStageTipsView.prototype, "game.mod.more.HuanjingStarStageTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStarView = /** @class */ (function (_super) {
                __extends(HuanjingStarView, _super);
                function HuanjingStarView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingStarSkin";
                    return _this;
                }
                return HuanjingStarView;
            }(eui.Component));
            more.HuanjingStarView = HuanjingStarView;
            __reflect(HuanjingStarView.prototype, "game.mod.more.HuanjingStarView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingZhushenSkillItem = /** @class */ (function (_super) {
                __extends(HuanjingZhushenSkillItem, _super);
                function HuanjingZhushenSkillItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingZhushenSkillItemSkin";
                    return _this;
                }
                HuanjingZhushenSkillItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 264 /* Huanjing */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                HuanjingZhushenSkillItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                HuanjingZhushenSkillItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var info = this._proxy.getZhushenInfo(data.systemId, data.pos);
                    var isActed = !!info;
                    this.gr_lv.visible = isActed;
                    this.lb_num.text = (info && info.star || 0) + '';
                    this.redPoint.visible = this._proxy.canActOrUpZhushen(data.systemId, data.pos);
                    this.skillItem.data = {
                        skillId: data.skillId,
                        isAct: isActed
                    };
                };
                HuanjingZhushenSkillItem.prototype.onClick = function () {
                    facade.showView("61" /* More */, "148" /* HuanjingZhushenSkillTips */, {
                        systemId: this.data.systemId,
                        pos: this.data.pos,
                        skillId: this.data.skillId
                    });
                };
                return HuanjingZhushenSkillItem;
            }(mod.BaseListenerRenderer));
            more.HuanjingZhushenSkillItem = HuanjingZhushenSkillItem;
            __reflect(HuanjingZhushenSkillItem.prototype, "game.mod.more.HuanjingZhushenSkillItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingZhushenSkillTipsView = /** @class */ (function (_super) {
                __extends(HuanjingZhushenSkillTipsView, _super);
                function HuanjingZhushenSkillTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingZhushenSkillTipsSkin";
                    return _this;
                }
                //更新基础视图
                HuanjingZhushenSkillTipsView.prototype.updateBaseView = function (skillId) {
                    var cfg = game.getConfigByNameId("battle_skill.json" /* Skill */, skillId);
                    if (!cfg) {
                        return;
                    }
                    this.baseQualityTips.updateShow(cfg.quality);
                    this.img_skilltype.source = game.ResUtil.getSkillShowType(skillId);
                    this.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name || '', game.ColorUtil.getColorByQuality2(cfg.quality)));
                };
                return HuanjingZhushenSkillTipsView;
            }(eui.Component));
            more.HuanjingZhushenSkillTipsView = HuanjingZhushenSkillTipsView;
            __reflect(HuanjingZhushenSkillTipsView.prototype, "game.mod.more.HuanjingZhushenSkillTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingZhushenView = /** @class */ (function (_super) {
                __extends(HuanjingZhushenView, _super);
                function HuanjingZhushenView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuanjingZhushenSkin";
                    return _this;
                }
                return HuanjingZhushenView;
            }(eui.Component));
            more.HuanjingZhushenView = HuanjingZhushenView;
            __reflect(HuanjingZhushenView.prototype, "game.mod.more.HuanjingZhushenView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingCollectItemTipsMdr = /** @class */ (function (_super) {
                __extends(HuanjingCollectItemTipsMdr, _super);
                function HuanjingCollectItemTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingCollectItemTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingCollectItemTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    this._surfaceProxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                };
                HuanjingCollectItemTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_shangzhen, egret.TouchEvent.TOUCH_TAP, this.onClickBtnShangzhen, this);
                    addEventListener(this._view.btn_shenji, egret.TouchEvent.TOUCH_TAP, this.onClickBtnShenji, this);
                    addEventListener(this._view.btn_shenlingskill, egret.TouchEvent.TOUCH_TAP, this.onClickBtnShenlingSKill, this);
                    addEventListener(this._view.power2.btn_desc, egret.TouchEvent.TOUCH_TAP, this.onClickAttr, this);
                    addEventListener(this._view.btn_upstar, egret.TouchEvent.TOUCH_TAP, this.onClickBtnUpstar, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updatePower, this);
                    this.onNt("on_shen_ling_update_info" /* ON_SHEN_LING_UPDATE_INFO */, this.updateView, this);
                    this.onNt("on_shen_ling_reward_update" /* ON_SHEN_LING_REWARD_UPDATE */, this.onUpdateShenlingShenjiHint, this);
                    this.onNt("surface_info_update" /* SURFACE_INFO_UPDATE */, this.updateView, this);
                };
                HuanjingCollectItemTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._index = this._showArgs;
                    if (!this._index) {
                        return;
                    }
                    this._cfg = game.getConfigById(this._index);
                    if (!this._cfg) {
                        return;
                    }
                    this.updateView();
                };
                HuanjingCollectItemTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._index = null;
                    this._cfg = null;
                    this.removeEffect(this._modelIdx);
                    this._modelIdx = null;
                    this._itemData = null;
                    this._modelSrc = null;
                };
                //为神灵类型
                HuanjingCollectItemTipsMdr.prototype.isShenling = function () {
                    var headType = game.PropData.getPropParse(this._index);
                    return headType == 400 /* Shenling */;
                };
                //为仙剑类型
                HuanjingCollectItemTipsMdr.prototype.isXianjian = function () {
                    var headType = game.PropData.getPropParse(this._index);
                    return headType == 408 /* Xianjian */;
                };
                HuanjingCollectItemTipsMdr.prototype.updateView = function () {
                    var isShenling = this.isShenling();
                    this._view.currentState = isShenling ? 'shenling' : 'base';
                    if (isShenling) {
                        this.updateShenlingSkill();
                    }
                    else {
                        this.updateSurfacePill();
                    }
                    var isAct = mod.SurfaceUtil.isAct(this._index);
                    this._view.power2.btn_desc.visible = isAct;
                    this._view.starListView.visible = isAct;
                    if (isAct) {
                        this._view.starListView.updateSurfaceStar(this._index);
                    }
                    this.updateModel();
                    this.updatePower();
                };
                //基础
                HuanjingCollectItemTipsMdr.prototype.updateSurfacePill = function () {
                    var surfaceProxy = this._surfaceProxy;
                    var itemData = {
                        cfg: this._cfg,
                        star: surfaceProxy.getSurfacePerStar(this._cfg.index)
                    };
                    this._itemData = itemData;
                    surfaceProxy.selData = itemData;
                    var headType = game.PropData.getPropParse(this._index);
                    surfaceProxy.headType = headType;
                    var pillList = [this._view.item_pill0, this._view.item_pill1, this._view.item_pill2];
                    var infos = surfaceProxy.getSurfacePillCost(this._cfg.quality, itemData.star, headType) || [];
                    for (var i = 0; i < pillList.length; i++) {
                        pillList[i].data = infos[i];
                    }
                    var maxStar = surfaceProxy.getSurfaceMaxStar(headType);
                    var isMaxStar = itemData.star >= maxStar;
                    if (isMaxStar) {
                        this._view.btn_upstar.updateMaxStar();
                        this._view.btn_upstar.redPoint.visible = false;
                    }
                    else {
                        var isAct = itemData.star > 0;
                        var tips = '';
                        if (isAct) {
                            var starPower = this._cfg.star_power[itemData.star];
                            starPower = Math.floor(starPower / 100);
                            tips = game.getLanById("upstar" /* upstar */) + game.getLanById("showpower" /* showpower */) + "\n" + game.TextUtil.addColor("+" + starPower + "%", 2330156 /* GREEN */);
                        }
                        var cost = this._cfg.material[itemData.star];
                        var idx = cost[0];
                        var costCnt = cost[1];
                        var curCnt = surfaceProxy.getStarPropCnt(headType, this._cfg.quality, idx, itemData.star);
                        this._view.btn_upstar.updateCost(cost, isAct, tips, true, curCnt);
                        this._view.btn_upstar.redPoint.visible = curCnt >= costCnt;
                    }
                };
                //神灵神迹红点
                HuanjingCollectItemTipsMdr.prototype.onUpdateShenlingShenjiHint = function () {
                    this._view.btn_shenji.redPoint.visible = this._proxy.getShenlingShenjiHint(this._index);
                };
                //神灵
                HuanjingCollectItemTipsMdr.prototype.updateShenlingSkill = function () {
                    this.onUpdateShenlingShenjiHint();
                    var cfg = this._cfg;
                    var info = this._shenlingProxy.getInfoByIndex(this._index);
                    this._view.btn_shenlingskill.data = {
                        skill_index: cfg.common,
                        skill_type: 3 /* PuGong */,
                        is_act: !!info
                    };
                    var skillList = [this._view.item_skill0, this._view.item_skill1, this._view.item_skill2, this._view.item_skill3];
                    for (var i = 0; i < cfg.talent1.length; i++) {
                        var item = cfg.talent1[i];
                        var is_act = false;
                        if (info && item[0] <= info.star) {
                            is_act = true;
                        }
                        if (skillList[i]) {
                            this.onEgret(skillList[i], egret.TouchEvent.TOUCH_TAP, this.onClickShenlingTalentSkill, this);
                            skillList[i].data = {
                                skill_index: item[1],
                                is_act: is_act
                            };
                        }
                    }
                    var isAwaken = this._shenlingProxy.isAwaken(this._index);
                    var isLvMax = info ? info.star >= this._shenlingProxy.getMaxStar(this._index) : false;
                    //觉醒状态
                    if (isAwaken) {
                        this._view.btn_upstar.updateJuexing();
                        this._view.btn_upstar.setHint(this._shenlingProxy.canAwaken(this._index));
                        return;
                    }
                    //满级状态
                    if (isLvMax) {
                        this._view.btn_upstar.updateMaxStar();
                        this._view.btn_upstar.setHint(false);
                        return;
                    }
                    var starCfg = this._shenlingProxy.getStarCfg(this._index, info ? info.star + 1 : 1);
                    if (!starCfg || !starCfg.star_consume) {
                        return;
                    }
                    var tips = '';
                    var isAct = info && info.star;
                    if (isAct) {
                        var cfg1 = this._shenlingProxy.getStarCfg(this._index, info.star);
                        var starPower = Math.floor(cfg1.star_power / 100);
                        tips = game.getLanById("upstar" /* upstar */) + game.getLanById("showpower" /* showpower */) + "\n"
                            + game.TextUtil.addColor("+" + starPower + "%", 2330156 /* GREEN */);
                    }
                    var cost = starCfg.star_consume[0];
                    var commonCostId = this._shenlingProxy.getCommonCost(this._index);
                    var costCnt = mod.BagUtil.getPropCntByIdx(cost[0]);
                    if (commonCostId) {
                        costCnt += mod.BagUtil.getPropCntByIdx(commonCostId);
                    }
                    this._view.btn_upstar.updateCost(cost, !!isAct, tips, true, costCnt);
                    var canUp = this._shenlingProxy.canUpStar(this._index);
                    this._view.btn_upstar.setHint(canUp);
                };
                HuanjingCollectItemTipsMdr.prototype.updateModel = function () {
                    if (!this._modelSrc || this._modelSrc != this._cfg.icon) {
                        this._modelSrc = this._cfg.icon;
                        this.removeEffect(this._modelIdx);
                        this._modelIdx = this.addAnimate(this._index, this._view.gr_eft);
                        this.isXianjian() ? this._view.gr_eft.y = 600 : this._view.gr_eft.y = 770;
                    }
                    this._view.nameItem.updateShow(this._cfg.name, this._cfg.quality);
                    this._view.specialAttrView.updateDesc(this._cfg);
                };
                HuanjingCollectItemTipsMdr.prototype.getAttr = function () {
                    var isShenling = this.isShenling();
                    var attr;
                    if (isShenling) {
                        var info = this._shenlingProxy.getInfoByIndex(this._index);
                        attr = info && info.attrs;
                        if (!attr || !Object.keys(attr).length) {
                            var cfg = this._shenlingProxy.getStarCfg(this._index, 1);
                            if (cfg && cfg.star_property) {
                                attr = mod.RoleUtil.getAttr(cfg.star_property[0]);
                            }
                        }
                    }
                    else {
                        attr = this._surfaceProxy.getSurfacePerAttr(this._index);
                        if (!attr || !Object.keys(attr).length) {
                            attr = mod.RoleUtil.getAttr(this._cfg.attr_id[0]);
                        }
                    }
                    return attr;
                };
                HuanjingCollectItemTipsMdr.prototype.updatePower = function () {
                    var attr = this.getAttr();
                    this._view.power2.setPowerValue(attr && attr.showpower ? attr.showpower : 0);
                    this._view.btn_god.updateGod(attr && attr.god ? attr.god : 0);
                };
                HuanjingCollectItemTipsMdr.prototype.onClickBtnShangzhen = function () {
                    mod.ViewMgr.getIns().showSecondPop("45" /* Shenling */, "02" /* ShenLingShangZhen */);
                };
                HuanjingCollectItemTipsMdr.prototype.onClickBtnShenji = function () {
                    var type = this._cfg.type; //神灵类型
                    mod.ViewMgr.getIns().showSecondPop("45" /* Shenling */, "06" /* ShenLingShenJi */, [type, this._index]);
                };
                HuanjingCollectItemTipsMdr.prototype.onClickBtnShenlingSKill = function (e) {
                    var sData = e.currentTarget.data;
                    var data = {
                        index: this._index,
                        skill_index: sData.skill_index,
                        skill_type: 3 /* PuGong */
                    };
                    facade.showView("45" /* Shenling */, "05" /* ShenLingSkill */, data);
                };
                HuanjingCollectItemTipsMdr.prototype.onClickAttr = function () {
                    if (this.isShenling()) {
                        mod.ViewMgr.getIns().showSecondPop("45" /* Shenling */, "03" /* ShenLingAttr */, [this._cfg.type, this._index]);
                    }
                    else {
                        var attr = this.getAttr();
                        var headType = game.PropData.getPropParse(this._index);
                        mod.ViewMgr.getIns().showAttrTips(game.getLanById(game.SurfaceConfigList[headType] + "_attr"), attr);
                    }
                };
                HuanjingCollectItemTipsMdr.prototype.onClickShenlingTalentSkill = function (e) {
                    var sData = e.currentTarget.data;
                    var data = {
                        index: this._index || 0,
                        skill_index: sData.skill_index,
                        skill_type: 4 /* Talent */
                    };
                    facade.showView("45" /* Shenling */, "05" /* ShenLingSkill */, data);
                };
                HuanjingCollectItemTipsMdr.prototype.onClickBtnUpstar = function () {
                    if (this.isShenling()) {
                        if (this._shenlingProxy.isAwaken(this._index)) {
                            var cfg = this._shenlingProxy.getShenLingCfg(this._index);
                            mod.ViewMgr.getIns().showSecondPop("45" /* Shenling */, "04" /* ShenLingAwaken */, {
                                type: cfg.type,
                                index: this._index
                            });
                            return;
                        }
                        if (this._shenlingProxy.canUpStar(this._index, true)) {
                            this._shenlingProxy.c2s_god_brother_starup(this._index);
                        }
                        return;
                    }
                    var headType = game.PropData.getPropParse(this._index);
                    var isMaxStar = this._itemData.star >= this._surfaceProxy.getSurfaceMaxStar(headType);
                    if (isMaxStar) {
                        game.PromptBox.getIns().show(game.getLanById("maxstar" /* maxstar */));
                        return;
                    }
                    if (!this._surfaceProxy.canUpStar(this._index)) {
                        var cost = this._cfg.material[this._itemData.star];
                        mod.BagUtil.checkPropCntUp(cost[0], cost[1]);
                        return;
                    }
                    this._surfaceProxy.c2s_ride_oper_up_star(1 /* Act */, this._index, headType);
                };
                return HuanjingCollectItemTipsMdr;
            }(game.EffectMdrBase));
            more.HuanjingCollectItemTipsMdr = HuanjingCollectItemTipsMdr;
            __reflect(HuanjingCollectItemTipsMdr.prototype, "game.mod.more.HuanjingCollectItemTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingCollectMainMdr = /** @class */ (function (_super) {
                __extends(HuanjingCollectMainMdr, _super);
                function HuanjingCollectMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "huanjingbiaoqiantubiao",
                            mdr: more.HuanjingCollectMdr,
                            title: "huanjing_tips6" /* huanjing_tips6 */,
                            bg: ""
                        }
                    ];
                    return _this;
                }
                HuanjingCollectMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingCollectMainMdr.prototype.updateBtnList = function () {
                    if (this._showArgs && Array.isArray(this._showArgs)) {
                        var btnType = this._showArgs[0];
                        var systemId = this._showArgs[1];
                        if (btnType == "01" /* Btn1 */) {
                            var btnData = this._btnData[0];
                            btnData.hintTypes = this._proxy.getCollectHintPath(systemId);
                        }
                    }
                    _super.prototype.updateBtnList.call(this);
                };
                return HuanjingCollectMainMdr;
            }(mod.WndBaseMdr));
            more.HuanjingCollectMainMdr = HuanjingCollectMainMdr;
            __reflect(HuanjingCollectMainMdr.prototype, "game.mod.more.HuanjingCollectMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingCollectMdr = /** @class */ (function (_super) {
                __extends(HuanjingCollectMdr, _super);
                function HuanjingCollectMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuanjingCollectView);
                    return _this;
                }
                HuanjingCollectMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._view.list.itemRenderer = more.HuanjingCollectItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn0.setHintStyle(5, 5);
                    this._view.btn1.setHintStyle(5, 5);
                    this._view.btn2.setHintStyle(5, 5);
                    this._view.btn3.setHintStyle(5, 5);
                };
                HuanjingCollectMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn0, egret.TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.btn1, egret.TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.btn2, egret.TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    addEventListener(this._view.btn3, egret.TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    this.onNt("on_shen_ling_update_info" /* ON_SHEN_LING_UPDATE_INFO */, this.updateView, this);
                    this.onNt("on_shen_ling_reward_update" /* ON_SHEN_LING_REWARD_UPDATE */, this.updateView, this);
                    this.onNt("surface_info_update" /* SURFACE_INFO_UPDATE */, this.updateView, this);
                    this.onNt("on_bag_update_by_prop_type_and_subtype" /* ON_BAG_UPDATE_BY_PROP_TYPE_AND_SUBTYPE */, this.onBagUpdateByPropTypeAndSubType, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onUpdateHint, this);
                };
                HuanjingCollectMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this.decodeShowArgs();
                    if (!this._systemId) {
                        return;
                    }
                    this._view.btn0.icon = "huanjing_btn" + this._systemId;
                    this._view.img_name.source = "huanjing_img_name" + this._systemId;
                    this._view.img_title.source = "huanjing_list_lb" + this._systemId;
                    this._view.skillItem.visible = this._systemId == 1;
                    if (this._view.skillItem.visible) {
                        var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                        var skillCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, cfg.stage_skill);
                        this._view.skillItem.setIcon(skillCfg && skillCfg.icon || '');
                        var strAttr = this._proxy.getAttr(this._systemId);
                        this.addBmpFont(strAttr / 10000 + "" + "%", game.BmpTextCfg[228 /* HuanJingFont */], this._view.gr_font);
                    }
                    this.updateView();
                    this.updateBtnHint();
                };
                HuanjingCollectMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingCollectMdr.prototype.updateView = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    this._view.lb_name.text = cfg.name;
                    this._listData.replaceAll(cfg.outlook || []);
                };
                HuanjingCollectMdr.prototype.onClickBtn = function (e) {
                    var target = e.currentTarget;
                    switch (target) {
                        case this._view.btn0:
                            //养成界面
                            this._proxy.canOpenGrow(this._systemId, true);
                            break;
                        case this._view.btn1:
                            //浮尘灵壶
                            var linghuProxy = facade.retMod("27" /* Activity */).retProxy(266 /* Fuchenlinghu */);
                            if (linghuProxy.isOpenSea(1 /* Sea1 */, true)) {
                                mod.ViewMgr.getIns().showView("27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */);
                            }
                            break;
                        case this._view.btn2:
                            //幻境榜
                            if (mod.ViewMgr.getIns().checkViewOpen(1041670244 /* Sea */, true)) {
                                var seaProxy = game.getProxy("56" /* Yijie */, 262 /* Sea */);
                                if (seaProxy.canOpenRank()) {
                                    //对应的排行榜开启就打开，否则默认仙界之海的排行榜 策划需求
                                    mod.ViewMgr.getIns().showView("56" /* Yijie */, "26" /* SeaRankMain */, "0" + this._systemId);
                                }
                                else {
                                    game.PromptBox.getIns().show(game.getLanById("huanjing_tips12" /* huanjing_tips12 */));
                                }
                            }
                            break;
                        case this._view.btn3:
                            //幻境之海
                            if (mod.ViewMgr.getIns().checkViewOpen(1041670244 /* Sea */, true)) {
                                mod.ViewMgr.getIns().showView("56" /* Yijie */, "01" /* YijieMain */, "03" /* Sea */);
                            }
                            break;
                    }
                };
                // todo
                HuanjingCollectMdr.prototype.updateBtnHint = function () {
                    this._view.btn0.setHint(mod.HintMgr.getHint(this._proxy.getGrowHintPath(this._systemId)));
                    this._view.btn1.setHint(this._proxy.getFuchenlinghuHint());
                    this._view.btn2.setHint(this._proxy.getSeaRankHint());
                    this._view.btn3.setHint(this._proxy.getSeaMainHint());
                };
                // todo
                HuanjingCollectMdr.prototype.onUpdateHint = function (n) {
                    var data = n.body;
                    // 收集界面外显红点
                    if (data.node == mod.HintMgr.getType(this._proxy.collectHintPath)) {
                        this.updateView();
                    }
                    // 养成界面红点
                    if (data.node == mod.HintMgr.getType(this._proxy.growHintPath)) {
                        // this.updateBtnHint();
                        this._view.btn0.setHint(data.value);
                    }
                    //浮尘灵壶红点
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */])) {
                        this._view.btn1.setHint(data.value);
                    }
                    //幻境之海红点
                    if (data.node == mod.HintMgr.getType(["56" /* Yijie */, "01" /* YijieMain */ + "03" /* Sea */])) {
                        this._view.btn3.setHint(data.value);
                    }
                };
                HuanjingCollectMdr.prototype.onBagUpdateByPropTypeAndSubType = function (n) {
                    var list = n.body;
                    //5种，神灵，坐骑，羽翼，神兵，时装
                    var subTypes = [1 /* Horse */, 3 /* Shenling */, 6 /* Weapon */, 7 /* Wing */, 8 /* Body */];
                    for (var type in list) {
                        if ((+type) == 11 /* Surface */) {
                            var types = list[type];
                            for (var _i = 0, types_3 = types; _i < types_3.length; _i++) {
                                var subType = types_3[_i];
                                if (subTypes.indexOf(subType) > -1) {
                                    this.updateView();
                                    break;
                                }
                            }
                        }
                    }
                };
                return HuanjingCollectMdr;
            }(game.EffectMdrBase));
            more.HuanjingCollectMdr = HuanjingCollectMdr;
            __reflect(HuanjingCollectMdr.prototype, "game.mod.more.HuanjingCollectMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingEntranceMdr = /** @class */ (function (_super) {
                __extends(HuanjingEntranceMdr, _super);
                function HuanjingEntranceMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuanjingEntranceView);
                    return _this;
                }
                HuanjingEntranceMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._view.list.itemRenderer = more.HuanjingEntranceItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.btn0.setHintStyle(5, 5);
                    this._view.btn1.setHintStyle(5, 5);
                };
                HuanjingEntranceMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn0, egret.TouchEvent.TOUCH_TAP, this.onClickBtn0, this);
                    addEventListener(this._view.btn1, egret.TouchEvent.TOUCH_TAP, this.onClickBtn1, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onUpdateHint, this);
                };
                HuanjingEntranceMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                HuanjingEntranceMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingEntranceMdr.prototype.updateView = function () {
                    var cfgs = this._proxy.getHuanjingParamCfgs();
                    this._listData.replaceAll(cfgs);
                    this.updateBtnHint();
                };
                //浮尘灵壶
                HuanjingEntranceMdr.prototype.onClickBtn0 = function () {
                    var linghuProxy = facade.retMod("27" /* Activity */).retProxy(266 /* Fuchenlinghu */);
                    if (linghuProxy.isOpenSea(1 /* Sea1 */, true)) {
                        mod.ViewMgr.getIns().showView("27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */);
                    }
                };
                //仙界之海排行榜
                HuanjingEntranceMdr.prototype.onClickBtn1 = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670244 /* Sea */, true)) {
                        return;
                    }
                    var seaProxy = game.getProxy("56" /* Yijie */, 262 /* Sea */);
                    if (seaProxy.canOpenRank()) {
                        mod.ViewMgr.getIns().showView("56" /* Yijie */, "26" /* SeaRankMain */);
                    }
                    else {
                        game.PromptBox.getIns().show(game.getLanById("huanjing_tips12" /* huanjing_tips12 */));
                    }
                };
                HuanjingEntranceMdr.prototype.updateBtnHint = function () {
                    this._view.btn0.setHint(this._proxy.getFuchenlinghuHint());
                    this._view.btn1.setHint(this._proxy.getSeaRankHint());
                };
                // todo
                HuanjingEntranceMdr.prototype.onUpdateHint = function (n) {
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(this._proxy.collectHintPath)
                        || data.node == mod.HintMgr.getType(this._proxy.growHintPath)) {
                        this.updateView();
                    }
                    //浮尘灵壶
                    if (data.node == mod.HintMgr.getType(["27" /* Activity */, "31" /* SummonMain */, "03" /* Fuchenlinghu */])) {
                        this._view.btn0.setHint(data.value);
                    }
                };
                return HuanjingEntranceMdr;
            }(game.MdrBase));
            more.HuanjingEntranceMdr = HuanjingEntranceMdr;
            __reflect(HuanjingEntranceMdr.prototype, "game.mod.more.HuanjingEntranceMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingGrowMainMdr = /** @class */ (function (_super) {
                __extends(HuanjingGrowMainMdr, _super);
                function HuanjingGrowMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "",
                            mdr: more.HuanjingGrowMdr,
                            bg: "huanjing_bg1"
                        }
                    ];
                    return _this;
                }
                HuanjingGrowMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingGrowMainMdr.prototype.updateBtnList = function () {
                    //动态传入，修改页签资源等 todo
                    if (this._showArgs && Array.isArray(this._showArgs)) {
                        var arg0 = this._showArgs[0];
                        var systemId = this._showArgs[1];
                        if (arg0 == "01" /* Btn1 */) {
                            var cfg = game.getConfigByNameId("huanjin_param.json" /* HuanJingParam */, systemId);
                            var btnData = this._btnData[0]; //直接取第一个
                            if (btnData) {
                                btnData.icon = "huanjing_system" + systemId + "_"; // 动态修改icon
                                btnData.title = cfg ? cfg.name1 : '';
                                btnData.hintTypes = this._proxy.getGrowHintPath(systemId);
                            }
                        }
                    }
                    _super.prototype.updateBtnList.call(this);
                };
                return HuanjingGrowMainMdr;
            }(mod.WndBaseMdr));
            more.HuanjingGrowMainMdr = HuanjingGrowMainMdr;
            __reflect(HuanjingGrowMainMdr.prototype, "game.mod.more.HuanjingGrowMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ItemTapEvent = eui.ItemTapEvent;
            var facade = base.facade;
            var HuanjingGrowMdr = /** @class */ (function (_super) {
                __extends(HuanjingGrowMdr, _super);
                function HuanjingGrowMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuanjingGrowView);
                    _this._viewTypes = ["142" /* HuanjingStage */, "144" /* HuanjingStar */, "146" /* HuanjingZhushen */, "145" /* HuanjingHuanling */];
                    return _this;
                }
                HuanjingGrowMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._view.list_item.itemRenderer = more.HuanjingGrowBtnItem;
                    this._view.list_item.dataProvider = this._listData = new eui.ArrayCollection();
                };
                HuanjingGrowMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.power2.btn_desc, TouchEvent.TOUCH_TAP, this.onClickDesc);
                    addEventListener(this._view.list_item, ItemTapEvent.ITEM_TAP, this.onClickSkill);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updatePower, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                    this.onNt("on_role_update" /* ON_ROLE_UPDATE */, this.onRoleUpdate, this);
                };
                HuanjingGrowMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this.decodeShowArgs();
                    if (!this._systemId) {
                        return;
                    }
                    this._view.img_name.source = "huanjing_name" + this._systemId;
                    this._view.img_bg.source = game.ResUtil.getUiPng("huanjing_stage_bg" + this._systemId);
                    this.updateView();
                };
                HuanjingGrowMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingGrowMdr.prototype.updateView = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    this._view.name_item.updateShow(cfg.name1);
                    this._view.stageSkillItem.updateShow(this._systemId);
                    this.updatePower();
                    this.updateBtnList();
                };
                HuanjingGrowMdr.prototype.updateBtnList = function () {
                    var list = [];
                    for (var i = 1; i <= 4; i++) {
                        var lv = 0;
                        var hint = false;
                        if (i == 1) {
                            //进阶
                            lv = this._proxy.getStageNum(this._systemId);
                            hint = this._proxy.getStageHint(this._systemId);
                        }
                        else if (i == 2) {
                            //升星
                            lv = this._proxy.getStarLv(this._systemId);
                            hint = this._proxy.getStarHint(this._systemId);
                        }
                        else if (i == 3) {
                            //驻神
                            lv = this._proxy.getZhushenStarMax(this._systemId);
                            hint = this._proxy.getZhushenHint(this._systemId);
                        }
                        else if (i == 4) {
                            //幻灵
                            lv = this._proxy.getHuanlingStageMax(this._systemId);
                            hint = this._proxy.getHuanlingHint(this._systemId);
                        }
                        list.push({
                            systemId: this._systemId,
                            type: i,
                            showHint: hint,
                            lv: lv
                        });
                    }
                    this._listData.replaceAll(list);
                };
                HuanjingGrowMdr.prototype.onClickDesc = function () {
                    var attr = this._proxy.getGrowAttr(this._systemId);
                    mod.ViewMgr.getIns().showAttrTipsWithoutGod('属性', attr);
                };
                HuanjingGrowMdr.prototype.onClickSkill = function (e) {
                    var itemIdx = e.itemIndex;
                    var viewType = this._viewTypes[itemIdx];
                    facade.showView("61" /* More */, viewType, this._systemId);
                };
                // 这里存在被刷新两次的机会，其中一次是这里请求的，另外的是在 this._viewTypes 的界面请求的 todo
                HuanjingGrowMdr.prototype.updatePower = function () {
                    var attr = this._proxy.getGrowAttr(this._systemId);
                    this._view.power2.setPowerValue(attr && attr.showpower || 0);
                };
                HuanjingGrowMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    var costIndexs = this._proxy.getCostIndexs();
                    for (var _i = 0, indexs_3 = indexs; _i < indexs_3.length; _i++) {
                        var idx = indexs_3[_i];
                        if (costIndexs.indexOf(idx) > -1) {
                            this.updateBtnList();
                            break;
                        }
                    }
                };
                HuanjingGrowMdr.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("gold" /* gold */) > -1) {
                        this.updateBtnList();
                    }
                };
                return HuanjingGrowMdr;
            }(game.EffectMdrBase));
            more.HuanjingGrowMdr = HuanjingGrowMdr;
            __reflect(HuanjingGrowMdr.prototype, "game.mod.more.HuanjingGrowMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingHuanlingMdr = /** @class */ (function (_super) {
                __extends(HuanjingHuanlingMdr, _super);
                function HuanjingHuanlingMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingHuanlingView);
                    _this._selIdx = 0;
                    _this._skillItems = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingHuanlingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._view.list_btn.itemRenderer = mod.ShenlingTypeIconBase;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                };
                HuanjingHuanlingMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this._skillItems = [];
                    var i = 0;
                    while (this._view['skillItem' + i]) {
                        this._skillItems.push(this._view['skillItem' + i]);
                        addEventListener(this._view['skillItem' + i], egret.TouchEvent.TOUCH_TAP, this.onClickSkill, this);
                        i++;
                    }
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                };
                HuanjingHuanlingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this._showArgs;
                    if (!this._systemId) {
                        return;
                    }
                    this.updateView();
                    this._view.list_btn.selectedIndex = this._selIdx;
                };
                HuanjingHuanlingMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                    this._selIdx = 0;
                    this._skillItems = [];
                };
                HuanjingHuanlingMdr.prototype.updateView = function () {
                    var list = [];
                    var ary = game.ShenLingTypeAry;
                    for (var i = 0; i < ary.length; i++) {
                        var type = ary[i];
                        list.push({
                            type: type,
                            showHint: this._proxy.getHuanlingHintByType(this._systemId, i + 1) //todo
                        });
                    }
                    this._listBtn.replaceAll(list);
                    var info = this._proxy.getHuanlingInfo(this._systemId, this._selIdx + 1);
                    var stage = info && info.stage || 0;
                    if (stage > 0) {
                        this._view.btn_do.label = "进阶";
                    }
                    else {
                        this._view.btn_do.label = "激活";
                    }
                    var stageStr = game.ResUtil.getChineseFontStr(stage) + "j";
                    this.addBmpFont(stageStr, game.BmpTextCfg[204 /* Stage */], this._view.grp_lv, false, 1, true);
                    this._view.lb_lv.text = stage + '阶'; //todo
                    this.updateSkill();
                    var isMaxStage = this._proxy.isHuanlingMaxStage(this._systemId, this._selIdx + 1);
                    if (isMaxStage) {
                        this._view.currentState = 'max';
                        return;
                    }
                    this._view.currentState = 'default';
                    var cfg = this._proxy.getHuanlingCfg(this._systemId, this._selIdx + 1, stage + 1);
                    if (cfg) {
                        this._view.icon.data = cfg.cost;
                        this._view.icon.updateCostLab(cfg.cost);
                    }
                    this._view.btn_do.setHint(this._proxy.canHuanling(this._systemId, this._selIdx + 1));
                    this._view.img_bg.source = game.ResUtil.getUiPng("huanjing_huanling_bg" + this._systemId + "_" + (this._selIdx + 1));
                    this._view.img_huanlingname.source = "huanjing_huanling_name" + this._systemId + "_" + (this._selIdx + 1);
                };
                HuanjingHuanlingMdr.prototype.updateSkill = function () {
                    for (var i = 0; i < 4; i++) {
                        var skillItem = this._view["skillItem" + i];
                        if (!skillItem) {
                            continue;
                        }
                        var skillList = this._proxy.getHuanlingSkillData(this._systemId, this._selIdx + 1, i + 1);
                        var skillInfo = this._proxy.getHuanlingSkillInfo(this._systemId, this._selIdx + 1, i + 1);
                        var skillData = {
                            skillId: skillList[3],
                            isAct: !!skillInfo,
                            showHint: this._proxy.canHuanlingSkillAct(this._systemId, this._selIdx + 1, i + 1) //todo
                        };
                        skillItem.data = skillData; //todo
                    }
                };
                HuanjingHuanlingMdr.prototype.onClick = function () {
                    if (this._proxy.canHuanling(this._systemId, this._selIdx + 1, true)) {
                        this._proxy.c2s_huanjin_oper(this._systemId, 4, this._selIdx + 1);
                    }
                };
                HuanjingHuanlingMdr.prototype.onClickList = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIdx;
                    this.updateView();
                };
                HuanjingHuanlingMdr.prototype.onClickSkill = function (e) {
                    var target = e.currentTarget;
                    var idx = this._skillItems.indexOf(target);
                    facade.showView("61" /* More */, "149" /* HuanjingHuanlingSkillTips */, {
                        systemId: this._systemId,
                        pos: idx + 1,
                        type: this._selIdx + 1
                    });
                };
                return HuanjingHuanlingMdr;
            }(game.EffectMdrBase));
            more.HuanjingHuanlingMdr = HuanjingHuanlingMdr;
            __reflect(HuanjingHuanlingMdr.prototype, "game.mod.more.HuanjingHuanlingMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingHuanlingSkillTipsMdr = /** @class */ (function (_super) {
                __extends(HuanjingHuanlingSkillTipsMdr, _super);
                function HuanjingHuanlingSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingZhushenSkillTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingHuanlingSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingHuanlingSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClickBtnDo, this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                    this.onNt("surface_special_attr_update" /* SURFACE_SPECIAL_ATTR_UPDATE */, this.updateSpecialAttr, this);
                };
                HuanjingHuanlingSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                HuanjingHuanlingSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingHuanlingSkillTipsMdr.prototype.updateView = function () {
                    var data = this._showArgs;
                    var skillAry = this._proxy.getHuanlingSkillData(data.systemId, data.type, data.pos);
                    var skillId = skillAry[3];
                    if (!skillId) {
                        return;
                    }
                    this._view.updateBaseView(skillId);
                    var skillInfo = this._proxy.getHuanlingSkillInfo(data.systemId, data.type, data.pos);
                    var isActed = !!skillInfo;
                    var skillCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, skillId);
                    this._view.baseDescItem0.updateShow(game.TextUtil.addColor(skillCfg.describe, isActed ? 4435385 /* DEFAULT */ : 7835024 /* GRAY */), game.getLanById("maid_cue15" /* maid_cue15 */));
                    this.updateSpecialAttr();
                    if (isActed) {
                        this._view.currentState = 'huanlingActed';
                        return;
                    }
                    var cfg = this._proxy.getHuanjingParamCfg(data.systemId);
                    var name = cfg.name2.split('_')[data.type - 1];
                    var info = this._proxy.getHuanlingInfo(data.systemId, data.type);
                    var stage = info && info.stage || 0;
                    var canAct = stage >= skillAry[2];
                    if (canAct) {
                        this._view.currentState = 'huanlingAct';
                        this._view.btn_do.setHint(true);
                        return;
                    }
                    this._view.currentState = 'huanling';
                    var str = name + skillAry[2] + '阶激活' + game.TextUtil.addColor("(" + stage + "/" + skillAry[2] + ")", stage >= skillAry[2] ? 8585074 /* GREEN */ : 16731212 /* RED */);
                    this._view.lb_condition.textFlow = game.TextUtil.parseHtml(str);
                };
                // todo
                HuanjingHuanlingSkillTipsMdr.prototype.updateSpecialAttr = function () {
                    var data = this._showArgs;
                    var skillInfo = this._proxy.getHuanlingSkillInfo(data.systemId, data.type, data.pos);
                    var isActed = !!skillInfo;
                    var color = isActed ? 4435385 /* DEFAULT */ : 7835024 /* GRAY */;
                    var specialId = this._proxy.getHuanlingSpecialId(data.systemId, data.type, data.pos);
                    var surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    var desc = surfaceProxy.getSpecialAttrDesc(data.systemId, specialId);
                    this._view.baseDescItem1.updateShow(game.TextUtil.addColor(desc, color), '激活数量');
                };
                HuanjingHuanlingSkillTipsMdr.prototype.onClickBtnDo = function () {
                    var data = this._showArgs;
                    if (this._proxy.canHuanlingSkillAct(data.systemId, data.type, data.pos)) {
                        this._proxy.c2s_huanjin_oper(data.systemId, 5, data.type, data.pos);
                    }
                };
                return HuanjingHuanlingSkillTipsMdr;
            }(game.MdrBase));
            more.HuanjingHuanlingSkillTipsMdr = HuanjingHuanlingSkillTipsMdr;
            __reflect(HuanjingHuanlingSkillTipsMdr.prototype, "game.mod.more.HuanjingHuanlingSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingMainMdr = /** @class */ (function (_super) {
                __extends(HuanjingMainMdr, _super);
                function HuanjingMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "huanjingbiaoqiantubiao",
                            mdr: more.HuanjingEntranceMdr,
                            title: "huanjing_tips6" /* huanjing_tips6 */,
                            bg: "huanjingguanggao",
                            openIdx: 1041670248 /* Huanjing */,
                            hintTypes: ["61" /* More */, "140" /* HuanjingMain */, "01" /* Btn1 */]
                        }
                    ];
                    return _this;
                }
                return HuanjingMainMdr;
            }(mod.WndBaseMdr));
            more.HuanjingMainMdr = HuanjingMainMdr;
            __reflect(HuanjingMainMdr.prototype, "game.mod.more.HuanjingMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStageMdr = /** @class */ (function (_super) {
                __extends(HuanjingStageMdr, _super);
                function HuanjingStageMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingStageView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingStageMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._view.list_nextattr.itemRenderer = mod.AttrItemRender;
                    this._view.list_nextattr.dataProvider = this._listAttr = new eui.ArrayCollection();
                };
                HuanjingStageMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.power2.btn_desc, egret.TouchEvent.TOUCH_TAP, this.onClickAttr, this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClickBtnDo, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updateAttr, this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                };
                HuanjingStageMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this._showArgs;
                    if (!this._systemId) {
                        return;
                    }
                    this._view.img_name.source = "huanjing_name" + this._systemId;
                    this._view.img_bg.source = game.ResUtil.getUiPng("huanjing_stage_bg" + this._systemId);
                    this.updateView();
                };
                HuanjingStageMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingStageMdr.prototype.updateView = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    this._view.nameItem.updateShow(cfg.name);
                    var lv = this._proxy.getStageLv(this._systemId);
                    var stage = this._proxy.getStageNum(this._systemId);
                    var stageStr = game.ResUtil.getChineseFontStr(stage) + "j";
                    this.addBmpFont(stageStr, game.BmpTextCfg[204 /* Stage */], this._view.grp_lv, false, 1, true);
                    this._view.stageSkillItem.updateShow(this._systemId);
                    this._view.stageBar.updateShow(this._systemId);
                    var isMaxStageLv = this._proxy.isMaxStageLv(this._systemId);
                    if (isMaxStageLv) {
                        this._view.currentState = 'max';
                    }
                    else {
                        this._view.currentState = 'default';
                        var maxStageLv = this._proxy.getMaxStageLv(this._systemId);
                        var maxStageNum = Math.floor(Math.max(maxStageLv - 1, 0) / 10) % 10;
                        this._view.lb_nextstage.text = (maxStageNum == stage ? stage : stage + 1) + '阶激活：';
                        var stageCfg = this._proxy.getStageCfg(this._systemId, lv + 1);
                        this._view.costIcon.updateShow(stageCfg ? stageCfg.cost : []);
                        if (lv != 0 && lv % 10 == 0) {
                            this._view.btn_do.label = game.getLanById("weapon_tips34" /* weapon_tips34 */);
                        }
                        else {
                            this._view.btn_do.label = '升级';
                        }
                        this._view.btn_do.setHint(this._proxy.canUpStage(this._systemId));
                    }
                    this.updateAttr();
                };
                HuanjingStageMdr.prototype.updateAttr = function () {
                    var lv = this._proxy.getStageLv(this._systemId);
                    var stage = this._proxy.getStageNum(this._systemId);
                    var nextStageCfg = this._proxy.getStageCfg(this._systemId, (stage + 1) * 10 + 1); //下一阶
                    if (!nextStageCfg) {
                        nextStageCfg = this._proxy.getStageCfg(this._systemId, stage * 10 + 1); //没有下一阶了，则获取当前阶
                    }
                    var attr = mod.RoleUtil.getAttr(nextStageCfg ? nextStageCfg.attr_id : 0);
                    this._listAttr.replaceAll(attr ? game.TextUtil.getAttrTextInfos(attr, 0x55ff63, '\n', ' +', 0xfcf6d1) : []);
                    //未激活不显示1级战力，策划需求
                    var curCfg = this._proxy.getStageCfg(this._systemId, lv);
                    var curAttr = mod.RoleUtil.getAttr(curCfg && curCfg.attr_id || 0);
                    var power = curAttr && curAttr.showpower ? curAttr.showpower.toNumber() : 0;
                    this._view.power2.setPowerValue(power);
                    this._view.power2.btn_desc.visible = lv > 0;
                };
                HuanjingStageMdr.prototype.onClickAttr = function () {
                    var curCfg = this._proxy.getStageCfg(this._systemId);
                    var attr = mod.RoleUtil.getAttr(curCfg ? curCfg.attr_id : 0);
                    mod.ViewMgr.getIns().showAttrTipsWithoutGod('属性', attr);
                };
                HuanjingStageMdr.prototype.onClickBtnDo = function () {
                    if (this._proxy.canUpStage(this._systemId, true)) {
                        this._proxy.c2s_huanjin_oper(this._systemId, 1);
                    }
                };
                return HuanjingStageMdr;
            }(game.EffectMdrBase));
            more.HuanjingStageMdr = HuanjingStageMdr;
            __reflect(HuanjingStageMdr.prototype, "game.mod.more.HuanjingStageMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStageSkillTipsMdr = /** @class */ (function (_super) {
                __extends(HuanjingStageSkillTipsMdr, _super);
                function HuanjingStageSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingStageSkillTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingStageSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingStageSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updateView, this);
                };
                HuanjingStageSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this._showArgs;
                    if (!this._systemId) {
                        return;
                    }
                    this.updateView();
                };
                HuanjingStageSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingStageSkillTipsMdr.prototype.updateView = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    var skillCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, cfg.stage_skill);
                    this._view.skillItem.setIcon(skillCfg.icon);
                    var stageNum = this._proxy.getStageNum(this._systemId);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(skillCfg.name + ' ' + stageNum + '阶', game.ColorUtil.getColorByQuality2(skillCfg.quality)));
                    this._view.img_skilltype.source = game.ResUtil.getSkillShowType(cfg.stage_skill);
                    this._view.baseDescItem.updateShow(skillCfg.describe, game.getLanById("sp_tips1" /* sp_tips1 */));
                    // 技能属性 todo
                    this._view.skillAttrList.visible = false;
                    // 被动效果
                    var descList = [];
                    descList.push(this.getStageDesc());
                    descList.push(this.getHuanlingDesc());
                    descList.push(this.getZhushenDesc());
                    this._view.baseDescList2.updateShow(descList, game.getLanById("skill_tips2" /* skill_tips2 */));
                };
                //升星
                HuanjingStageSkillTipsMdr.prototype.getStageDesc = function () {
                    var stageLv = this._proxy.getStarLv(this._systemId);
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    var buffId = cfg.star_buff[stageLv == 0 ? stageLv : stageLv - 1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    var color = stageLv > 0 ? 15262666 /* WHITE */ : 7835024 /* GRAY */;
                    var str = game.TextUtil.addColor(buffCfg && buffCfg.des || '', color);
                    return [game.getLanById("huanjing_tips7" /* huanjing_tips7 */), str];
                };
                //幻灵
                HuanjingStageSkillTipsMdr.prototype.getHuanlingDesc = function () {
                    var str = '';
                    for (var i = 1; i <= game.ShenLingTypeAry.length; i++) {
                        var info = this._proxy.getHuanlingInfo(this._systemId, i);
                        var stage = info && info.stage || 0;
                        var cfg = this._proxy.getHuanlingCfg(this._systemId, i, stage || 1);
                        var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, cfg.buff_id);
                        str = str + game.TextUtil.addColor("\u3010" + buffCfg.name + "\u3011" + buffCfg.des, stage > 0 ? 15262666 /* WHITE */ : 7835024 /* GRAY */);
                        if (i != game.ShenLingTypeAry.length) {
                            str += '\n';
                        }
                    }
                    return [game.getLanById("huanjing_tips1" /* huanjing_tips1 */), str];
                };
                //驻神
                HuanjingStageSkillTipsMdr.prototype.getZhushenDesc = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    var stageLv = this._proxy.getZhushenStageLv(this._systemId);
                    var attrId = cfg.zushen_attr[stageLv == 0 ? 0 : stageLv - 1];
                    var attr = mod.RoleUtil.getAttr(attrId);
                    var color = stageLv > 0 ? 15262666 /* WHITE */ : 7835024 /* GRAY */;
                    var strDesc = '';
                    if (attr) {
                        strDesc = game.TextUtil.getAttrTextInfos(attr, color, '\n', '+', color).join('\n');
                    }
                    return [game.getLanById("huanjing_tips2" /* huanjing_tips2 */), strDesc];
                };
                return HuanjingStageSkillTipsMdr;
            }(game.MdrBase));
            more.HuanjingStageSkillTipsMdr = HuanjingStageSkillTipsMdr;
            __reflect(HuanjingStageSkillTipsMdr.prototype, "game.mod.more.HuanjingStageSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuanjingStarMdr = /** @class */ (function (_super) {
                __extends(HuanjingStarMdr, _super);
                function HuanjingStarMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingStarView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingStarMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingStarMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.img_icon, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updatePower, this);
                };
                HuanjingStarMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this._showArgs;
                    if (!this._systemId) {
                        return;
                    }
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(game.getLanById("huanjing_tips3" /* huanjing_tips3 */));
                    this.updateView();
                };
                HuanjingStarMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingStarMdr.prototype.updateView = function () {
                    var starCfg = this._proxy.getStarCfg(this._systemId, 1, 1);
                    var index = starCfg.cost[0][0];
                    this._view.costIcon.updateIndex(index);
                    var cnt = mod.BagUtil.getPropCntByIdx(index);
                    this._view.costIcon.setLabCost(cnt + '', cnt > 0 ? 8585074 /* GREEN */ : 16731212 /* RED */);
                    this._view.starComp.updateShow(this._systemId);
                    this._view.lb_lv.text = this._proxy.getStarLv(this._systemId) + '阶';
                    this._view.redPoint.visible = this._proxy.canActOrUpStar(this._systemId);
                    this.updateSkillView();
                    this.updatePower();
                };
                //todo
                HuanjingStarMdr.prototype.updateSkillView = function () {
                    var lv = this._proxy.getStarLv(this._systemId);
                    var isMax = this._proxy.isMaxStarLv(this._systemId);
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    var buffId = cfg.star_buff[lv == 0 ? lv : lv - 1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    if (!buffCfg) {
                        DEBUG && console.error("\u6CA1\u6709 " + buffId + " buff\u914D\u7F6E");
                        return;
                    }
                    this._view.img_icon.source = buffCfg.icon || 'linshijinengtu'; //todo
                    this._view.lb_skilldesc.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(buffCfg.des, lv > 0 ? 3496307 /* DEFAULT */ : 8618626 /* GRAY */));
                    var actedNum = this._proxy.getStarActNum(this._systemId, lv + 1);
                    var totalNum = cfg.star_max_pos;
                    var actStr = game.TextUtil.addColor(actedNum + "/" + totalNum, actedNum >= totalNum ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    var str = lv == 0
                        ? buffCfg.name + game.StringUtil.substitute(game.getLanById("huanjing_tips4" /* huanjing_tips4 */), [actStr])
                        : buffCfg.name + (lv + 1 + "\u9636") + game.StringUtil.substitute(game.getLanById("huanjing_tips5" /* huanjing_tips5 */), [lv, actStr]);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(str);
                };
                HuanjingStarMdr.prototype.updatePower = function () {
                    var attrList = [];
                    var starList = this._proxy.getStarList(this._systemId);
                    for (var _i = 0, starList_2 = starList; _i < starList_2.length; _i++) {
                        var item = starList_2[_i];
                        if (item && item.star) {
                            var starCfg = this._proxy.getStarCfg(this._systemId, item.pos, item.star);
                            if (starCfg && starCfg.attr_id) {
                                attrList.push(starCfg.attr_id);
                            }
                        }
                    }
                    var attrs = mod.RoleUtil.getAttrList(attrList);
                    var attr = game.TextUtil.calcAttrList(attrs);
                    this._view.power.setPowerValue(attr && attr.showpower ? attr.showpower : 0);
                };
                HuanjingStarMdr.prototype.onClick = function () {
                    facade.showView("61" /* More */, "139" /* HuanjingStarStageTips */, this._systemId);
                };
                return HuanjingStarMdr;
            }(game.MdrBase));
            more.HuanjingStarMdr = HuanjingStarMdr;
            __reflect(HuanjingStarMdr.prototype, "game.mod.more.HuanjingStarMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStarSkillTipsMdr = /** @class */ (function (_super) {
                __extends(HuanjingStarSkillTipsMdr, _super);
                function HuanjingStarSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingZhushenSkillTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingStarSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                    this._view.img_skilltype.visible = false;
                    this._view.list_cost.itemRenderer = mod.CostIcon;
                    this._view.list_cost.dataProvider = this._listCost = new eui.ArrayCollection();
                };
                HuanjingStarSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updateAttr, this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                };
                HuanjingStarSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                HuanjingStarSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingStarSkillTipsMdr.prototype.updateView = function () {
                    var data = this._showArgs;
                    var isMax = this._proxy.isStarPosMax(data.systemId, data.pos);
                    var info = this._proxy.getStarPosData(data.systemId, data.pos);
                    var star = info && info.star || 0;
                    var buffId;
                    if (isMax) {
                        this._view.currentState = 'zhushenMax';
                        var cfg = this._proxy.getStarCfg(data.systemId, data.pos, star);
                        buffId = cfg.starlevel_buff;
                    }
                    else {
                        this._view.currentState = 'starAct';
                        var cfg = this._proxy.getStarCfg(data.systemId, data.pos, star + 1);
                        this._listCost.replaceAll(cfg.cost);
                        buffId = cfg.starlevel_buff;
                        this._view.btn_do.setHint(this._proxy.canActOrUpStarPos(data.systemId, data.pos));
                        this._view.btn_do.labelDisplay.text = star > 0 ? '进阶' : '激活';
                    }
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffId);
                    this._view.baseDescItem1.updateShow(buffCfg && buffCfg.des || '', game.getLanById("huanjing_tips9" /* huanjing_tips9 */), 10, star > 0 ? 4435385 /* DEFAULT */ : 7835024 /* GRAY */);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(buffCfg.name + ' ' + star + '阶', game.ColorUtil.getColorByQuality2(buffCfg.buff_quality)));
                    this._view.baseQualityTips.updateShow(buffCfg.buff_quality);
                    this._view.skillItem.setIcon(buffCfg.icon);
                    this.updateAttr();
                };
                //todo
                HuanjingStarSkillTipsMdr.prototype.onClick = function () {
                    var data = this._showArgs;
                    if (this._proxy.canActOrUpStarPos(data.systemId, data.pos, true)) {
                        this._proxy.c2s_huanjin_oper(data.systemId, 2, data.pos);
                    }
                };
                HuanjingStarSkillTipsMdr.prototype.updateAttr = function () {
                    var data = this._showArgs;
                    var info = this._proxy.getStarPosData(data.systemId, data.pos);
                    var star = info && info.star || 0;
                    var cfg = this._proxy.getStarCfg(data.systemId, data.pos, star || 1);
                    var color = star > 0 ? 4435385 /* DEFAULT */ : 7835024 /* GRAY */;
                    var attr = mod.RoleUtil.getAttr(cfg ? cfg.attr_id : 0);
                    this._view.baseDescItem0.updateShow(game.TextUtil.getAttrTextAdd(attr), game.getLanById("ywl_baseAttr" /* ywl_baseAttr */), 10, color);
                };
                return HuanjingStarSkillTipsMdr;
            }(game.MdrBase));
            more.HuanjingStarSkillTipsMdr = HuanjingStarSkillTipsMdr;
            __reflect(HuanjingStarSkillTipsMdr.prototype, "game.mod.more.HuanjingStarSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingStarStageTipsMdr = /** @class */ (function (_super) {
                __extends(HuanjingStarStageTipsMdr, _super);
                function HuanjingStarStageTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingStarStageTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingStarStageTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingStarStageTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                };
                HuanjingStarStageTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this._showArgs;
                    if (!this._systemId) {
                        return;
                    }
                    this.updateView();
                };
                HuanjingStarStageTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingStarStageTipsMdr.prototype.updateView = function () {
                    var starLv = this._proxy.getStarLv(this._systemId);
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    var starBuffId = cfg.star_buff[starLv == 0 ? starLv : starLv - 1];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, starBuffId);
                    this._view.baseQualityTips.updateShow(buffCfg.buff_quality);
                    this._view.skillItem.setIcon(buffCfg.icon);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(buffCfg.name + ' ' + starLv + '阶', game.ColorUtil.getColorByQuality2(buffCfg.buff_quality)));
                    if (this._proxy.isMaxStarLv(this._systemId)) {
                        this._view.currentState = 'max';
                        this._view.starstageItem1.visible = false;
                        var title = game.getLanById("general9" /* general9 */);
                        var actDesc_1 = game.StringUtil.substitute(game.getLanById("huanjing_tips10" /* huanjing_tips10 */), [starLv]) + "(\u5DF2\u6FC0\u6D3B)";
                        this._view.starStageItem0.updateShow(title, game.TextUtil.addColor(actDesc_1, 8585074 /* GREEN */), game.TextUtil.addColor(buffCfg.des, 4435385 /* DEFAULT */));
                        return;
                    }
                    this._view.currentState = 'default';
                    this._view.btn_do.setHint(this._proxy.canActOrUpStar(this._systemId));
                    if (starLv == 0) {
                        this._view.starstageItem1.visible = false;
                        var actNum = this._proxy.getStarActNum(this._systemId, starLv + 1);
                        var title = game.getLanById("lingpo_tips3" /* lingpo_tips3 */);
                        var actDesc_2 = game.StringUtil.substitute(game.getLanById("huanjing_tips10" /* huanjing_tips10 */), [starLv + 1]) + ("(" + actNum + "/" + cfg.star_max_pos + ")");
                        this._view.starStageItem0.updateShow(title, game.TextUtil.addColor(actDesc_2, actNum >= cfg.star_max_pos ? 8585074 /* GREEN */ : 16731212 /* RED */), game.TextUtil.addColor(buffCfg.des, 7835024 /* GRAY */));
                        return;
                    }
                    //当前
                    var curTitle = game.getLanById("general9" /* general9 */);
                    var actDesc = game.StringUtil.substitute(game.getLanById("huanjing_tips10" /* huanjing_tips10 */), [starLv]) + "(\u5DF2\u6FC0\u6D3B)";
                    this._view.starStageItem0.updateShow(curTitle, game.TextUtil.addColor(actDesc, 8585074 /* GREEN */), game.TextUtil.addColor(buffCfg.des, 4435385 /* DEFAULT */));
                    //下阶
                    this._view.starstageItem1.visible = true;
                    var nextActNum = this._proxy.getStarActNum(this._systemId, starLv + 1);
                    var nextTitle = game.getLanById("lingpo_tips3" /* lingpo_tips3 */);
                    var nextActDesc = game.StringUtil.substitute(game.getLanById("huanjing_tips10" /* huanjing_tips10 */), [starLv + 1]) + ("(" + nextActNum + "/" + cfg.star_max_pos + ")"); //todo
                    var nextBuffCfg = game.getConfigByNameId("buff.json" /* Buff */, cfg.star_buff[starLv]);
                    this._view.starstageItem1.updateShow(nextTitle, game.TextUtil.addColor(nextActDesc, nextActNum >= cfg.star_max_pos ? 8585074 /* GREEN */ : 16731212 /* RED */), game.TextUtil.addColor(nextBuffCfg && nextBuffCfg.des || '', 7835024 /* GRAY */));
                };
                HuanjingStarStageTipsMdr.prototype.onClick = function () {
                    if (this._proxy.canActOrUpStar(this._systemId, true)) {
                        this._proxy.c2s_huanjin_oper(this._systemId, 3);
                    }
                };
                return HuanjingStarStageTipsMdr;
            }(game.MdrBase));
            more.HuanjingStarStageTipsMdr = HuanjingStarStageTipsMdr;
            __reflect(HuanjingStarStageTipsMdr.prototype, "game.mod.more.HuanjingStarStageTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingZhushenMdr = /** @class */ (function (_super) {
                __extends(HuanjingZhushenMdr, _super);
                function HuanjingZhushenMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingZhushenView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingZhushenMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingZhushenMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updateAttr, this);
                };
                HuanjingZhushenMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._systemId = this._showArgs;
                    if (!this._systemId) {
                        return;
                    }
                    this.updateView();
                    this.updateAttr();
                };
                HuanjingZhushenMdr.prototype.updateAttr = function () {
                    var cfg = game.getConfigByNameId("huanjin_param.json" /* HuanJingParam */, this._systemId);
                    var stageLv = this._proxy.getZhushenStageLv(this._systemId);
                    var strAttr1 = "0" + "%";
                    var strAttr2 = "0" + "%";
                    if (stageLv > 0) {
                        var attrIndex = cfg.zushen_attr[stageLv - 1];
                        var attr = mod.RoleUtil.getAttr(attrIndex);
                        strAttr1 = attr.miemo_ratio / 10000 * 100 + "" + "%" || "0" + "%";
                        strAttr2 = attr.jewelry_atk_add_rate / 10000 * 100 + "" + "%" || "0" + "%";
                    }
                    this.addBmpFont(strAttr1 + "", game.BmpTextCfg[228 /* HuanJingFont */], this._view.gr_font1, true, 1, false, 0, true);
                    this.addBmpFont(strAttr2 + "", game.BmpTextCfg[228 /* HuanJingFont */], this._view.gr_font2, true, 1, false, 0, true);
                };
                HuanjingZhushenMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._systemId = null;
                };
                HuanjingZhushenMdr.prototype.updateView = function () {
                    var stageLv = this._proxy.getZhushenStageLv(this._systemId);
                    this._view.lb_lv.text = stageLv + '阶';
                    this.updateSkill();
                };
                HuanjingZhushenMdr.prototype.updateSkill = function () {
                    var cfg = this._proxy.getHuanjingParamCfg(this._systemId);
                    for (var i = 0; i < cfg.zushen_skill.length; i++) {
                        var skillItem = this._view["skillItem" + i];
                        if (!skillItem) {
                            continue;
                        }
                        skillItem.data = {
                            systemId: this._systemId,
                            pos: i + 1,
                            skillId: cfg.zushen_skill[i]
                        };
                    }
                };
                return HuanjingZhushenMdr;
            }(game.EffectMdrBase));
            more.HuanjingZhushenMdr = HuanjingZhushenMdr;
            __reflect(HuanjingZhushenMdr.prototype, "game.mod.more.HuanjingZhushenMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuanjingZhushenSkillTipsMdr = /** @class */ (function (_super) {
                __extends(HuanjingZhushenSkillTipsMdr, _super);
                function HuanjingZhushenSkillTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuanjingZhushenSkillTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                HuanjingZhushenSkillTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(264 /* Huanjing */);
                };
                HuanjingZhushenSkillTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.updateAttr, this);
                    this.onNt("on_update_huanjing_info" /* ON_UPDATE_HUANJING_INFO */, this.updateView, this);
                };
                HuanjingZhushenSkillTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                HuanjingZhushenSkillTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuanjingZhushenSkillTipsMdr.prototype.updateView = function () {
                    var data = this._showArgs;
                    var skillCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, data.skillId);
                    if (!skillCfg) {
                        return;
                    }
                    this._view.updateBaseView(data.skillId);
                    var info = this._proxy.getZhushenInfo(data.systemId, data.pos);
                    var star = info && info.star || 0;
                    if (star > 0) {
                        this._view.btn_do.label = "进阶";
                    }
                    else {
                        this._view.btn_do.label = "激活";
                    }
                    var str = (skillCfg.name || '') + ' ' + star + '阶';
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(str, game.ColorUtil.getColorByQuality2(skillCfg.quality)));
                    this.updateAttr();
                    var skillLvCfg = game.getConfigByNameId("skill_level.json" /* SkillLv */, data.skillId + star);
                    var desc = skillCfg.describe;
                    if (skillLvCfg) {
                        desc = skillLvCfg.describe;
                    }
                    this._view.baseDescItem1.updateShow(desc, game.getLanById("huanjing_tips8" /* huanjing_tips8 */));
                    var isMax = this._proxy.isZhushenSkillMax(data.systemId, data.pos);
                    this._view.currentState = isMax ? 'zhushenMax' : 'zhushen';
                    if (!isMax) {
                        var cfg = this._proxy.getZhushenCfg(data.systemId, data.pos, star + 1);
                        this._view.icon.data = cfg.cost;
                        this._view.icon.updateCostLab(cfg.cost);
                        this._view.btn_do.setHint(this._proxy.canActOrUpZhushen(data.systemId, data.pos));
                    }
                };
                HuanjingZhushenSkillTipsMdr.prototype.updateAttr = function () {
                    var data = this._showArgs;
                    var info = this._proxy.getZhushenInfo(data.systemId, data.pos);
                    var lv = info && info.star || 1;
                    var cfg = this._proxy.getZhushenCfg(data.systemId, data.pos, lv);
                    if (!cfg) {
                        return;
                    }
                    var attr = mod.RoleUtil.getAttr(cfg.attr_id);
                    this._view.baseDescItem0.updateShow(game.TextUtil.getAttrTextAdd(attr), game.getLanById("ywl_baseAttr" /* ywl_baseAttr */));
                };
                HuanjingZhushenSkillTipsMdr.prototype.onClick = function () {
                    var data = this._showArgs;
                    if (this._proxy.canActOrUpZhushen(data.systemId, data.pos, true)) {
                        this._proxy.c2s_huanjin_oper(data.systemId, 6, data.pos);
                    }
                };
                return HuanjingZhushenSkillTipsMdr;
            }(game.MdrBase));
            more.HuanjingZhushenSkillTipsMdr = HuanjingZhushenSkillTipsMdr;
            __reflect(HuanjingZhushenSkillTipsMdr.prototype, "game.mod.more.HuanjingZhushenSkillTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenModel = /** @class */ (function () {
                function HuashenModel() {
                    this.hintType = ["61" /* More */, "02" /* HuashenMain */, "00" /* HuashenTask */];
                    this.roadHint = ["61" /* More */, "02" /* HuashenMain */, "01" /* Huashen */, "125" /* HuashenZhilu */]; //化神之路红点
                    this.zhanshendianHint = ["61" /* More */, "02" /* HuashenMain */, "01" /* Huashen */, "10" /* ZhanshendianMain */]; //战神殿红点
                    this.tianfuOpen = false; //天赋是否开启，激活两个化神后开启
                    this.tianfuCfgList = {}; /**客户端分类*/
                    this.tianfuUpHint = ["61" /* More */, "02" /* HuashenMain */, "03" /* HuashenTianfu */]; //升级红点
                }
                return HuashenModel;
            }());
            more.HuashenModel = HuashenModel;
            __reflect(HuashenModel.prototype, "game.mod.more.HuashenModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var c2s_huashen_levelup = msg.c2s_huashen_levelup;
            var c2s_huashen_road_get_rewards = msg.c2s_huashen_road_get_rewards;
            var s2c_huashen_data_info = msg.s2c_huashen_data_info;
            var HuashenProxy = /** @class */ (function (_super) {
                __extends(HuashenProxy, _super);
                function HuashenProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.HuashenModel();
                    this.onProto(s2c_huashen_data_info, this.s2c_huashen_data_info, this);
                };
                Object.defineProperty(HuashenProxy.prototype, "selIndex", {
                    get: function () {
                        return this._model.selIndex;
                    },
                    set: function (index) {
                        this._model.selIndex = index;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**更新红点*/
                HuashenProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670202 /* Huashen */)) {
                        return; //功能未开启
                    }
                    var hint = mod.TaskUtil.getTaskHint(40 /* Huashen */); //任务可领取红点
                    if (!hint) {
                        //任务全部完成后，需要判断激活红点
                        var hasAllDraw = true; //是否全部领取奖励
                        var tasks = mod.TaskUtil.getTaskList(40 /* Huashen */);
                        for (var _i = 0, tasks_2 = tasks; _i < tasks_2.length; _i++) {
                            var task = tasks_2[_i];
                            if (task.status != 2 /* Draw */) {
                                hasAllDraw = false;
                                break;
                            }
                        }
                        if (hasAllDraw) {
                            var surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                            var isAct = surfaceProxy.isDefaultAct(409 /* Huashen */);
                            if (!isAct) {
                                //未激活
                                var defaultIndex = surfaceProxy.getDefaultId(409 /* Huashen */);
                                var canAct = surfaceProxy.canUpStar(defaultIndex);
                                hint = canAct; //可激活
                            }
                        }
                    }
                    var hintType = this._model.hintType;
                    mod.HintMgr.setHint(hint, hintType);
                };
                HuashenProxy.prototype.onTaskHint = function (n) {
                    var types = n.body;
                    if (types.indexOf(40 /* Huashen */) >= 0) {
                        this.updateHint();
                    }
                    if (types.indexOf(44 /* HuashenZhilu */) >= 0) {
                        this.updateRoadHint();
                    }
                    if (types.indexOf(45 /* HuashenZhanshendian */) >= 0) {
                        this.updateZhanshendianHint();
                    }
                };
                HuashenProxy.prototype.onSurfaceInfoUpdate = function (n) {
                    var type = n.body;
                    if (type == 409 /* Huashen */) {
                        this.updateHint();
                        this.updateTianfuOpen();
                    }
                };
                /***********************************化神之路*****************************************/
                HuashenProxy.prototype.c2s_huashen_levelup = function (index) {
                    var msg = new c2s_huashen_levelup();
                    msg.index = index;
                    this.sendProto(msg);
                };
                HuashenProxy.prototype.c2s_huashen_road_get_rewards = function () {
                    var msg = new c2s_huashen_road_get_rewards();
                    this.sendProto(msg);
                };
                HuashenProxy.prototype.s2c_huashen_data_info = function (n) {
                    var msg = n.body;
                    if (!msg) {
                        return;
                    }
                    if (msg.road_index != undefined) {
                        this._model.roadIndex = msg.road_index;
                        this.sendNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_ROAD_INFO */);
                    }
                    if (msg.now_id != undefined) {
                        this._model.nowId = msg.now_id;
                        this.updateZhanshendianHint();
                        this.sendNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_ZHANSHENDIAN_INFO */, this._model.nowId);
                    }
                    if (msg.list) {
                        if (!this._model.tianfuList) {
                            this._model.tianfuList = msg.list;
                        }
                        else {
                            for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                                var info = _a[_i];
                                var pos = this.getTianfuPos(info.index);
                                if (pos >= 0) {
                                    this._model.tianfuList[pos] = info;
                                }
                                else {
                                    this._model.tianfuList.push(info);
                                }
                            }
                        }
                        this.updateTianfuHint();
                        this.sendNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_TIANFU_INFO */);
                    }
                };
                HuashenProxy.prototype.getTianfuPos = function (index) {
                    if (!this._model.tianfuList || !this._model.tianfuList.length) {
                        return -1;
                    }
                    var len = this._model.tianfuList.length;
                    for (var i = 0; i < len; ++i) {
                        var info = this._model.tianfuList[i];
                        if (info.index == index) {
                            return i;
                        }
                    }
                    return -1;
                };
                HuashenProxy.prototype.checkRoadOpen = function (showTips) {
                    var cfg = game.GameConfig.getParamConfigById("huashenzhilu_open");
                    var limitCnt = cfg && cfg.value || 2;
                    var isOpen = this.checkActCnt(limitCnt);
                    if (!isOpen && showTips) {
                        var tipsStr = game.StringUtil.substitute(game.getLanById("huashen_zhilu_tips2" /* huashen_zhilu_tips2 */), [limitCnt]);
                        game.PromptBox.getIns().show(tipsStr);
                    }
                    return isOpen;
                };
                HuashenProxy.prototype.checkActCnt = function (limitCnt) {
                    var surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    var cnt = surfaceProxy.getSurfaceActCnt(409 /* Huashen */);
                    return cnt >= limitCnt;
                };
                Object.defineProperty(HuashenProxy.prototype, "roadIndex", {
                    get: function () {
                        return this._model.roadIndex || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                //是否是最后一个节点，大奖励
                HuashenProxy.prototype.isRoadEnd = function (index) {
                    return index != 0 && index % game.HuashenZhiluCnt == 0;
                };
                //是否位于起点
                HuashenProxy.prototype.isCur = function () {
                    var index = this.roadIndex;
                    if (!index) {
                        return true; //0的时候就是起点
                    }
                    var hasAllDraw = this.hasAllDraw(); //是否领完所有奖励
                    if (hasAllDraw) {
                        return false; //领完所有奖励的时候位于终点，不在起点
                    }
                    return this.isRoadEnd(index); //每一段的终点就是下一段的起点
                };
                HuashenProxy.prototype.getRoadStartIndex = function () {
                    var index = this.roadIndex;
                    //计算开启的index，当前领到10的话，显示11-20的，如果领完所有奖励，则不显示前面的
                    var hasAllDraw = this.hasAllDraw(); //是否领完所有奖励
                    if (hasAllDraw) {
                        //比如30，则取29
                        index--;
                    }
                    var startIndex = Math.floor(index / game.HuashenZhiluCnt) * game.HuashenZhiluCnt + 1;
                    return startIndex;
                };
                HuashenProxy.prototype.hasDraw = function (index) {
                    return this.roadIndex >= index;
                };
                HuashenProxy.prototype.canDraw = function (index) {
                    // if(this.hasDraw(index)){
                    //     return false;
                    // }
                    // if(index > this.roadIndex + 1){
                    //     return false;//只能按循序领取奖励
                    // }
                    // let propIndex = PropIndex.Huashenzhilujifen;
                    // let cfg: HuashenZhiluConfig = getConfigByNameId(ConfigName.HuashenZhilu, index);
                    // return BagUtil.checkPropCnt(propIndex, cfg.point);
                    return false; //改为自动领取奖励
                };
                //领完所有奖励
                HuashenProxy.prototype.hasAllDraw = function () {
                    var index = this.roadIndex;
                    if (!index) {
                        return false;
                    }
                    var nextIndex = index + 1;
                    var cfg = game.getConfigByNameId("huashen_zhilu.json" /* HuashenZhilu */, nextIndex);
                    return !cfg;
                };
                /**更新红点*/
                HuashenProxy.prototype.updateRoadHint = function () {
                    if (!this.checkRoadOpen()) {
                        return;
                    }
                    var hint = mod.TaskUtil.getTaskHint(44 /* HuashenZhilu */); //任务可领取红点
                    var hintType = this._model.roadHint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                HuashenProxy.prototype.getRoadHint = function () {
                    return this._model.roadHint;
                };
                Object.defineProperty(HuashenProxy.prototype, "nowId", {
                    /**************************************战神殿******************************************/
                    get: function () {
                        return this._model.nowId;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuashenProxy.prototype.checkShow = function () {
                    //全部激活后入口消失
                    var isOpen = this.checkOpen();
                    if (isOpen && !this.nowId) {
                        return false;
                    }
                    //激活2个化神的时候显示入口图标
                    var cfg = game.GameConfig.getParamConfigById("zhanshendian_open");
                    var limitCnt = cfg && cfg.value ? cfg.value - 1 : 2;
                    var isShow = this.checkActCnt(limitCnt);
                    return isShow;
                };
                HuashenProxy.prototype.checkOpen = function (showTips) {
                    var cfg = game.GameConfig.getParamConfigById("zhanshendian_open");
                    var limitCnt = cfg && cfg.value || 3;
                    var isOpen = this.checkActCnt(limitCnt);
                    if (!isOpen && showTips) {
                        var tipsStr = game.StringUtil.substitute(game.getLanById("huashen_zhilu_tips2" /* huashen_zhilu_tips2 */), [limitCnt]);
                        game.PromptBox.getIns().show(tipsStr);
                    }
                    return isOpen;
                };
                /**更新红点*/
                HuashenProxy.prototype.updateZhanshendianHint = function () {
                    if (!this.checkOpen()) {
                        return;
                    }
                    var hint = mod.TaskUtil.getTaskHint(45 /* HuashenZhanshendian */); //任务可领取红点
                    if (!hint) {
                        //任务全部完成后，需要判断激活红点
                        var hasAllDraw = true; //是否全部领取奖励
                        var tasks = mod.TaskUtil.getTaskList(45 /* HuashenZhanshendian */);
                        for (var _i = 0, tasks_3 = tasks; _i < tasks_3.length; _i++) {
                            var task = tasks_3[_i];
                            if (task.status != 2 /* Draw */) {
                                hasAllDraw = false;
                                break;
                            }
                        }
                        if (hasAllDraw) {
                            var surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                            var star = surfaceProxy.getSurfacePerStar(this.nowId);
                            if (!star) {
                                //未激活
                                var canAct = surfaceProxy.canUpStar(this.nowId);
                                hint = canAct; //可激活
                            }
                        }
                    }
                    var hintType = this._model.zhanshendianHint;
                    mod.HintMgr.setHint(hint, hintType);
                };
                HuashenProxy.prototype.getZhanshendianHint = function () {
                    return this._model.zhanshendianHint;
                };
                /**************************************天赋******************************************/
                HuashenProxy.prototype.checkTianfuOpen = function () {
                    var cfg = game.GameConfig.getParamConfigById("huashentianfu_open");
                    var limitCnt = cfg && cfg.value || 2; //激活2个化神后开启
                    return this.checkActCnt(limitCnt);
                };
                HuashenProxy.prototype.updateTianfuOpen = function () {
                    if (this.tianfuOpen) {
                        return; //已经开启的话不再检测
                    }
                    var isOpen = this.checkTianfuOpen();
                    if (isOpen != this.tianfuOpen) {
                        this._model.tianfuOpen = isOpen;
                        this.sendNt("on_update_huashen_road_open" /* ON_UPDATE_HUASHEN_TIANFU_OPEN */);
                    }
                };
                Object.defineProperty(HuashenProxy.prototype, "tianfuOpen", {
                    get: function () {
                        return this._model.tianfuOpen;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuashenProxy.prototype.getTianfuInfo = function (index) {
                    var pos = this.getTianfuPos(index);
                    if (pos >= 0) {
                        return this._model.tianfuList[pos];
                    }
                    return null;
                };
                HuashenProxy.prototype.isTianfuTypeOpen = function (cfg, showTips) {
                    var index = game.RoleVo.ins.reincarnate;
                    if (index < cfg.activate_condition) {
                        if (showTips) {
                            var lv = mod.RoleUtil.getRebirthLv(cfg.activate_condition);
                            var str = lv > 9 ? "common_act_tips5" /* common_act_tips5 */ : "common_act_tips1" /* common_act_tips1 */;
                            lv = lv > 9 ? (lv - 9) : lv;
                            var tipsStr = game.StringUtil.substitute(game.getLanById(str), [lv]);
                            game.PromptBox.getIns().show(tipsStr);
                        }
                        return false;
                    }
                    return true;
                };
                HuashenProxy.prototype.isTianfuOpen = function (cfg) {
                    var infos = cfg.premise;
                    if (!infos) {
                        return true;
                    }
                    for (var _i = 0, infos_3 = infos; _i < infos_3.length; _i++) {
                        var info = infos_3[_i];
                        var index = info[0];
                        var lv = info[1];
                        var curInfo = this.getTianfuInfo(index);
                        if (!curInfo || curInfo.lv < lv) {
                            return false;
                        }
                    }
                    return true;
                };
                HuashenProxy.prototype.getTianfuCfgList = function (type) {
                    if (!this._model.tianfuCfgList[type]) {
                        var typeCfg = game.getConfigByNameId("huashen_tianfu_leixing.json" /* HuashenTianfuLeixing */, type);
                        var indexList = typeCfg.tianfu_index;
                        for (var _i = 0, indexList_1 = indexList; _i < indexList_1.length; _i++) {
                            var i = indexList_1[_i];
                            var cfg = game.getConfigByNameId("huashen_tianfu.json" /* HuashenTianfu */, i);
                            if (!this._model.tianfuCfgList[type]) {
                                this._model.tianfuCfgList[type] = [];
                            }
                            this._model.tianfuCfgList[type].push(cfg);
                        }
                    }
                    return this._model.tianfuCfgList[type];
                };
                HuashenProxy.prototype.getTianfuHint = function (cfg) {
                    var isOpen = this.isTianfuOpen(cfg);
                    if (!isOpen) {
                        return false;
                    }
                    var info = this.getTianfuInfo(cfg.index);
                    var lv = info ? info.lv : 0;
                    var maxLv = cfg.upgrade_item.length;
                    var isMax = lv >= maxLv;
                    if (isMax) {
                        return false;
                    }
                    var cost = cfg.upgrade_item[lv];
                    return mod.BagUtil.checkPropCnt(cost[0], cost[1]);
                };
                HuashenProxy.prototype.getTianfuTypeHint = function (cfg) {
                    if (!this.isTianfuTypeOpen(cfg)) {
                        return false;
                    }
                    var cfgList = this.getTianfuCfgList(cfg.type);
                    for (var _i = 0, cfgList_12 = cfgList; _i < cfgList_12.length; _i++) {
                        var cfg_2 = cfgList_12[_i];
                        if (this.getTianfuHint(cfg_2)) {
                            return true;
                        }
                    }
                    return false;
                };
                HuashenProxy.prototype.updateTianfuHint = function () {
                    if (!this.tianfuOpen) {
                        return;
                    }
                    var cfgList = game.getConfigListByName("huashen_tianfu_leixing.json" /* HuashenTianfuLeixing */);
                    var hint = false;
                    for (var _i = 0, cfgList_13 = cfgList; _i < cfgList_13.length; _i++) {
                        var cfg = cfgList_13[_i];
                        if (this.getTianfuTypeHint(cfg)) {
                            hint = true;
                            break;
                        }
                    }
                    mod.HintMgr.setHint(hint, this._model.tianfuUpHint);
                };
                Object.defineProperty(HuashenProxy.prototype, "tianfuUpIndex", {
                    get: function () {
                        if (!this._model.tianfuUpIndex) {
                            var cfgList = game.getConfigListByName("huashen_tianfu.json" /* HuashenTianfu */);
                            var cfg = cfgList[0];
                            this._model.tianfuUpIndex = cfg.upgrade_item[0][0];
                        }
                        return this._model.tianfuUpIndex;
                    },
                    enumerable: true,
                    configurable: true
                });
                HuashenProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(this.tianfuUpIndex) >= 0) {
                        this.updateTianfuHint();
                    }
                };
                HuashenProxy.prototype.onRoleUpdate = function (n) {
                    var keys = n.body;
                    if (keys.indexOf("reincarnate" /* reincarnate */) >= 0) {
                        this.updateTianfuHint();
                    }
                };
                return HuashenProxy;
            }(game.ProxyBase));
            more.HuashenProxy = HuashenProxy;
            __reflect(HuashenProxy.prototype, "game.mod.more.HuashenProxy", ["game.mod.IHuashenProxy", "base.IProxy"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var HuashenBattleItem1 = /** @class */ (function (_super) {
                __extends(HuashenBattleItem1, _super);
                function HuashenBattleItem1() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenBattleItem1.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.item_skill, this.onClickSkill, this);
                };
                HuashenBattleItem1.prototype.onClickSkill = function () {
                    var data = this.item_skill.data;
                    if (!data) {
                        return;
                    }
                    mod.ViewMgr.getIns().showSkillNormalTips(data.skillId);
                };
                HuashenBattleItem1.prototype.dataChanged = function () {
                    if (this.data == null) {
                        return;
                    }
                    var limit = this.data; //仙力
                    var isOpen = mod.RoleUtil.isLimitOpen([3 /* God */, limit]);
                    this.grp_lock.visible = !isOpen;
                    this.grp_item.visible = isOpen;
                    if (isOpen) {
                        var pos = this.itemIndex + 1; //位置
                        var index = this._surfaceProxy.getPosIndex(409 /* Huashen */, pos);
                        if (index) {
                            //已上阵
                            this.grp_item2.visible = true;
                            this.img_add.visible = false;
                            var cfg = game.getConfigByNameId("huashen.json" /* Huashen */, index);
                            this.item.setData(cfg);
                            this.img_first.visible = pos == 1; //1号位是主位
                            var skillId = cfg.skill;
                            this.item_skill.setData(skillId);
                        }
                        else {
                            //未上阵
                            this.grp_item2.visible = false;
                            this.img_add.visible = true;
                        }
                        //红点
                        this.redPoint.visible = !index && this._surfaceProxy.canPosBattle(409 /* Huashen */);
                    }
                    else {
                        var lockStr = game.TextUtil.addColor(game.TextUtil.getAttrsText("god" /* god */) + limit, 16776960 /* YELLOW */);
                        this.lab_lock.textFlow = game.TextUtil.parseHtml(lockStr);
                        this.redPoint.visible = false;
                    }
                };
                return HuashenBattleItem1;
            }(mod.BaseListenerRenderer));
            more.HuashenBattleItem1 = HuashenBattleItem1;
            __reflect(HuashenBattleItem1.prototype, "game.mod.more.HuashenBattleItem1");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var HuashenBattleItem2 = /** @class */ (function (_super) {
                __extends(HuashenBattleItem2, _super);
                function HuashenBattleItem2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenBattleItem2.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = facade.retMod("61" /* More */).retProxy(241 /* Huashen */);
                    this._surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.item_skill, this.onClickSkill, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.item, this.onClick, this);
                };
                HuashenBattleItem2.prototype.onClickSkill = function () {
                    var data = this.item_skill.data;
                    if (!data) {
                        return;
                    }
                    mod.ViewMgr.getIns().showSkillNormalTips(data.skillId);
                };
                HuashenBattleItem2.prototype.onClick = function () {
                    if (this.data == null) {
                        return;
                    }
                    var index = this.data.index;
                    if (this._surfaceProxy.isBattle(409 /* Huashen */, index)) {
                        game.PromptBox.getIns().show(game.getLanById("huashen_battle_tips" /* huashen_battle_tips */));
                        return;
                    }
                    var pos = this._proxy.selIndex + 1;
                    this._surfaceProxy.c2s_ride_oper_up_star(2 /* Battle */, index, 409 /* Huashen */, pos); //上阵
                };
                HuashenBattleItem2.prototype.dataChanged = function () {
                    if (this.data == null) {
                        return;
                    }
                    var index = this.data.index;
                    var cfg = game.getConfigByNameId("huashen.json" /* Huashen */, index);
                    this.item.setData(cfg);
                    var skillId = cfg.skill;
                    this.item_skill.setData(skillId);
                    var isBattle = this._surfaceProxy.isBattle(409 /* Huashen */, index);
                    this.grp_sel.visible = isBattle;
                };
                return HuashenBattleItem2;
            }(mod.BaseListenerRenderer));
            more.HuashenBattleItem2 = HuashenBattleItem2;
            __reflect(HuashenBattleItem2.prototype, "game.mod.more.HuashenBattleItem2");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenBattleView = /** @class */ (function (_super) {
                __extends(HuashenBattleView, _super);
                function HuashenBattleView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuashenBattleSkin";
                    return _this;
                }
                return HuashenBattleView;
            }(eui.Component));
            more.HuashenBattleView = HuashenBattleView;
            __reflect(HuashenBattleView.prototype, "game.mod.more.HuashenBattleView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenOpenView = /** @class */ (function (_super) {
                __extends(HuashenOpenView, _super);
                function HuashenOpenView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuashenOpenSkin";
                    return _this;
                }
                return HuashenOpenView;
            }(eui.Component));
            more.HuashenOpenView = HuashenOpenView;
            __reflect(HuashenOpenView.prototype, "game.mod.more.HuashenOpenView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenTaskView = /** @class */ (function (_super) {
                __extends(HuashenTaskView, _super);
                function HuashenTaskView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuashenTaskSkin";
                    return _this;
                }
                return HuashenTaskView;
            }(eui.Component));
            more.HuashenTaskView = HuashenTaskView;
            __reflect(HuashenTaskView.prototype, "game.mod.more.HuashenTaskView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuashenTianfuItem = /** @class */ (function (_super) {
                __extends(HuashenTianfuItem, _super);
                function HuashenTianfuItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenTianfuItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data;
                    var _proxy = facade.retMod("61" /* More */).retProxy(241 /* Huashen */);
                    var isOpen = _proxy.isTianfuOpen(cfg);
                    this.img_lock.visible = !isOpen;
                    var maxLv = cfg.upgrade_item.length;
                    var info = _proxy.getTianfuInfo(cfg.index);
                    var curLv = info ? info.lv : 0;
                    var lvStr = curLv + "/" + maxLv;
                    if (curLv >= maxLv) {
                        lvStr = game.TextUtil.addColor(game.getLanById("maxlv" /* maxlv */), 16719376 /* RED */);
                    }
                    this.lab_lv.textFlow = game.TextUtil.parseHtml(lvStr);
                    this.redPoint.visible = _proxy.getTianfuHint(cfg);
                };
                return HuashenTianfuItem;
            }(eui.ItemRenderer));
            more.HuashenTianfuItem = HuashenTianfuItem;
            __reflect(HuashenTianfuItem.prototype, "game.mod.more.HuashenTianfuItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuashenTianfuTabItem = /** @class */ (function (_super) {
                __extends(HuashenTianfuTabItem, _super);
                function HuashenTianfuTabItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenTianfuTabItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data;
                    var _proxy = facade.retMod("61" /* More */).retProxy(241 /* Huashen */);
                    var isOpen = _proxy.isTianfuTypeOpen(cfg);
                    var iconStr = isOpen ? "huashen_icon_" : "huashen_icon_hui_";
                    this.img_icon.source = iconStr + cfg.type;
                    this.redPoint.visible = _proxy.getTianfuTypeHint(cfg);
                };
                return HuashenTianfuTabItem;
            }(eui.ItemRenderer));
            more.HuashenTianfuTabItem = HuashenTianfuTabItem;
            __reflect(HuashenTianfuTabItem.prototype, "game.mod.more.HuashenTianfuTabItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenTianfuView = /** @class */ (function (_super) {
                __extends(HuashenTianfuView, _super);
                function HuashenTianfuView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuashenTianfuSkin";
                    return _this;
                }
                return HuashenTianfuView;
            }(eui.Component));
            more.HuashenTianfuView = HuashenTianfuView;
            __reflect(HuashenTianfuView.prototype, "game.mod.more.HuashenTianfuView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenZhiluItem = /** @class */ (function (_super) {
                __extends(HuashenZhiluItem, _super);
                function HuashenZhiluItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenZhiluItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data.cfg;
                    var hasDraw = this.data.hasDraw;
                    var isCur = !!this.data.isCur;
                    var isEnd = this.data.isEnd;
                    var canDraw = !!this.data.canDraw;
                    this.grp_cnt.visible = true;
                    this.lab_cnt.text = cfg.point + "";
                    this.img_di.source = hasDraw ? "baoxingdiquan_2" : "baoxingdiquan_1"; //已领取的点亮
                    this.btn_draw.visible = !hasDraw; //已领取的不显示宝箱
                    this.btn_draw.redPoint.visible = canDraw;
                    this.currentState = isEnd ? "big" : "small";
                    this.setIsCur(isCur);
                };
                //起点设置
                HuashenZhiluItem.prototype.setDefault = function () {
                    this.grp_cnt.visible = false;
                    this.btn_draw.visible = false;
                    this.img_di.source = "baoxingdiquan_2"; //起点永远是点亮的
                };
                //当前位置是否起点
                HuashenZhiluItem.prototype.setIsCur = function (isCur) {
                    this.img_cur.visible = isCur;
                };
                HuashenZhiluItem.prototype.setSel = function (sel) {
                    if (!this.data) {
                        return;
                    }
                    var isEnd = this.data.isEnd;
                    var str = "";
                    if (isEnd) {
                        str = sel ? "baoxiang_state3" : "baoxiang_state4";
                    }
                    else {
                        str = sel ? "baoxiang_state1" : "baoxiang_state2";
                    }
                    this.btn_draw.iconDisplay.source = str;
                };
                HuashenZhiluItem.prototype.setData = function (cfg, isEnd, hasDraw, isCur, canDraw) {
                    this.data = { cfg: cfg, isEnd: isEnd, hasDraw: hasDraw, isCur: isCur, canDraw: canDraw };
                };
                return HuashenZhiluItem;
            }(eui.ItemRenderer));
            more.HuashenZhiluItem = HuashenZhiluItem;
            __reflect(HuashenZhiluItem.prototype, "game.mod.more.HuashenZhiluItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenZhiluView = /** @class */ (function (_super) {
                __extends(HuashenZhiluView, _super);
                function HuashenZhiluView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.HuashenZhiluSkin";
                    return _this;
                }
                return HuashenZhiluView;
            }(eui.Component));
            more.HuashenZhiluView = HuashenZhiluView;
            __reflect(HuashenZhiluView.prototype, "game.mod.more.HuashenZhiluView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanshendianView = /** @class */ (function (_super) {
                __extends(ZhanshendianView, _super);
                function ZhanshendianView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanshendianSkin";
                    return _this;
                }
                return ZhanshendianView;
            }(eui.Component));
            more.ZhanshendianView = ZhanshendianView;
            __reflect(ZhanshendianView.prototype, "game.mod.more.ZhanshendianView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenBattleMainMdr = /** @class */ (function (_super) {
                __extends(HuashenBattleMainMdr, _super);
                function HuashenBattleMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._height = 1064; //secondPop默认高度
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "huashen_battle",
                            mdr: more.HuashenBattleMdr,
                            title: "huashen_battle_tips2" /* huashen_battle_tips2 */,
                            hintTypes: ["61" /* More */, "02" /* HuashenMain */, "02" /* HuashenStar */, "04" /* HuashenBattleMain */, "01" /* TabBtnType01 */],
                        }
                    ];
                    return _this;
                }
                return HuashenBattleMainMdr;
            }(mod.WndSecondMainMdr));
            more.HuashenBattleMainMdr = HuashenBattleMainMdr;
            __reflect(HuashenBattleMainMdr.prototype, "game.mod.more.HuashenBattleMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var Event = egret.Event;
            var HuashenBattleMdr = /** @class */ (function (_super) {
                __extends(HuashenBattleMdr, _super);
                function HuashenBattleMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuashenBattleView);
                    _this._headType = 409 /* Huashen */;
                    return _this;
                }
                HuashenBattleMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._itemList1 = new ArrayCollection();
                    this._view.list_item1.itemRenderer = more.HuashenBattleItem1;
                    this._view.list_item1.dataProvider = this._itemList1;
                    this._itemList2 = new ArrayCollection();
                    this._view.list_item2.itemRenderer = more.HuashenBattleItem2;
                    this._view.list_item2.dataProvider = this._itemList2;
                    this._surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    this._proxy = this.retProxy(241 /* Huashen */);
                };
                HuashenBattleMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_onekey, TouchEvent.TOUCH_TAP, this.onClickOnekey);
                    addEventListener(this._view.list_item1, Event.CHANGING, this.onClickItem1);
                    this.onNt("surface_info_update" /* SURFACE_INFO_UPDATE */, this.onInfoUpdate, this);
                };
                HuashenBattleMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.selIndex = 0;
                    this.updateItemList1();
                    this.updateItemList2();
                };
                HuashenBattleMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuashenBattleMdr.prototype.onClickOnekey = function () {
                    //一键上阵
                    if (!this._itemList2.source || !this._itemList2.source.length) {
                        game.PromptBox.getIns().show(game.getLanById("huashen_battle_tips3" /* huashen_battle_tips3 */));
                        return;
                    }
                    this._surfaceProxy.c2s_ride_oper_up_star(2 /* Battle */, undefined, this._headType, 0); //0表示一键上阵
                };
                HuashenBattleMdr.prototype.onClickItem1 = function (e) {
                    var index = this._view.list_item1.selectedIndex;
                    if (index == this._proxy.selIndex) {
                        return;
                    }
                    var limit = this._view.list_item1.selectedItem; //仙力
                    if (!mod.RoleUtil.isLimitOpen([3 /* God */, limit])) {
                        game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("huashen_battle_tips4" /* huashen_battle_tips4 */), [limit]));
                        e.preventDefault();
                        return;
                    }
                    this._proxy.selIndex = index;
                    this.updateItemList2();
                };
                HuashenBattleMdr.prototype.onInfoUpdate = function (n) {
                    var headType = n.body;
                    if (headType == this._headType) {
                        this.updateItemList1();
                        this.updateItemList2();
                    }
                };
                HuashenBattleMdr.prototype.updateItemList1 = function () {
                    var cfg = game.GameConfig.getParamConfigById("huashen_battle_open");
                    var datas = cfg.value; //仙力开启条件
                    if (this._itemList1.source.length > 0) {
                        this._itemList1.replaceAll(datas);
                    }
                    else {
                        this._itemList1.source = datas;
                    }
                    this._view.list_item1.selectedIndex = this._proxy.selIndex;
                };
                HuashenBattleMdr.prototype.updateItemList2 = function () {
                    var pos = this._proxy.selIndex + 1;
                    var index = this._surfaceProxy.getPosIndex(409 /* Huashen */, pos);
                    var datas = [];
                    if (index) {
                        var battleInfo = this._surfaceProxy.getSurfacePerInfo(index);
                        datas.push(battleInfo);
                    }
                    var infos = this._surfaceProxy.getCanBattleInfos(this._headType); //未上阵的外显
                    var tmps = [];
                    for (var _i = 0, infos_4 = infos; _i < infos_4.length; _i++) {
                        var info = infos_4[_i];
                        var cfg = game.getConfigByNameId("huashen.json" /* Huashen */, info.index);
                        var sort = 10000000; //从小到大排序
                        //品质＞星级
                        sort -= 100000 * cfg.quality;
                        sort -= 100 * info.star;
                        tmps.push({ info: info, sort: sort });
                    }
                    tmps.sort(function (a, b) {
                        return a.sort - b.sort;
                    });
                    for (var _a = 0, tmps_1 = tmps; _a < tmps_1.length; _a++) {
                        var i = tmps_1[_a];
                        datas.push(i.info);
                    }
                    if (this._itemList2.source.length > 0) {
                        this._itemList2.replaceAll(datas);
                    }
                    else {
                        this._itemList2.source = datas;
                    }
                };
                return HuashenBattleMdr;
            }(game.MdrBase));
            more.HuashenBattleMdr = HuashenBattleMdr;
            __reflect(HuashenBattleMdr.prototype, "game.mod.more.HuashenBattleMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var HuashenMainMdr = /** @class */ (function (_super) {
                __extends(HuashenMainMdr, _super);
                function HuashenMainMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(241 /* Huashen */);
                    this._surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                };
                HuashenMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("surface_act_update" /* SURFACE_ACT_UPDATE */, this.surfaceActUpdate, this);
                    this.onNt("on_update_huashen_road_open" /* ON_UPDATE_HUASHEN_TIANFU_OPEN */, this.onTianfuOpen, this);
                };
                HuashenMainMdr.prototype.onShow = function () {
                    this.initBtnList();
                    this._surfaceProxy.headType = 409 /* Huashen */;
                    var index = this._surfaceProxy.getDefaultId(409 /* Huashen */);
                    this._index = index;
                    _super.prototype.onShow.call(this);
                };
                HuashenMainMdr.prototype.initBtnList = function () {
                    var isAct = this._surfaceProxy.isDefaultAct(409 /* Huashen */);
                    this._isAct = isAct;
                    if (!isAct) {
                        this._btnData = [
                            {
                                btnType: "00" /* HuashenTask */,
                                icon: "huashen_task_tab",
                                mdr: more.HuashenTaskMdr,
                                title: "huashen_task_tips" /* huashen_task_tips */,
                                bg: "horse_bg",
                                hintTypes: ["61" /* More */, "02" /* HuashenMain */, "00" /* HuashenTask */],
                            }
                        ];
                    }
                    else {
                        this.updateSelfBtnList();
                    }
                };
                HuashenMainMdr.prototype.updateSelfBtnList = function () {
                    if (!this._isAct) {
                        return;
                    }
                    this._btnData = [
                        {
                            btnType: "01" /* Huashen */,
                            icon: "huashen_tab",
                            mdr: more.HuashenMdr,
                            title: "huashen_tips" /* huashen_tips */,
                            bg: "horse_bg",
                            hintTypes: ["61" /* More */, "02" /* HuashenMain */, "01" /* Huashen */],
                        },
                        {
                            btnType: "02" /* HuashenStar */,
                            icon: "huanhua_tab",
                            mdr: more.HuashenStarMdr,
                            title: "huashen_tips" /* huashen_tips */,
                            bg: "horse_bg",
                            hintTypes: ["61" /* More */, "02" /* HuashenMain */, "02" /* HuashenStar */],
                        }
                    ];
                    var tianfuOpen = this._proxy.tianfuOpen;
                    if (tianfuOpen) {
                        this._btnData.push({
                            btnType: "03" /* HuashenTianfu */,
                            icon: "huashen_tianfu_tab",
                            mdr: more.HuashenTianfuMdr,
                            title: "huashen_tips" /* huashen_tips */,
                            bg: "tianfubeijingtu",
                            hintTypes: ["61" /* More */, "02" /* HuashenMain */, "03" /* HuashenTianfu */],
                        });
                    }
                };
                HuashenMainMdr.prototype.surfaceActUpdate = function (n) {
                    var index = n.body;
                    if (index == this._index) {
                        this.hide();
                        mod.ViewMgr.getIns().showView("61" /* More */, "02" /* HuashenMain */); //激活后重新打开界面
                    }
                };
                HuashenMainMdr.prototype.onTianfuOpen = function () {
                    this.updateSelfBtnList();
                    this.updateBtnList();
                };
                /**默认选中的BtnType，可重写*/
                HuashenMainMdr.prototype.getDefaultBtnType = function () {
                    if (this._surfaceProxy.getActHint(this._surfaceProxy.headType)) {
                        return "02" /* HuashenStar */;
                    }
                    return "";
                };
                return HuashenMainMdr;
            }(mod.WndBaseMdr));
            more.HuashenMainMdr = HuashenMainMdr;
            __reflect(HuashenMainMdr.prototype, "game.mod.more.HuashenMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var HuashenMdr = /** @class */ (function (_super) {
                __extends(HuashenMdr, _super);
                function HuashenMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.showLv = false; //默认显示技能等级，子类可重写
                    _this.showZero = true; //默认不显示0级技能，子类可重写
                    return _this;
                }
                HuashenMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._huashenProxy = this.retProxy(241 /* Huashen */);
                };
                HuashenMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_god, TouchEvent.TOUCH_TAP, this.onClickGod);
                    addEventListener(this._view.btn_zhanshendian, TouchEvent.TOUCH_TAP, this.onClickZhanshendian);
                };
                HuashenMdr.prototype.onClickGod = function () {
                    //化神之路
                    if (!this._huashenProxy.checkRoadOpen(true)) {
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "09" /* HuashenZhilu */);
                };
                HuashenMdr.prototype.onClickZhanshendian = function () {
                    //战神殿
                    if (!this._huashenProxy.checkOpen(true)) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "10" /* ZhanshendianMain */);
                };
                /**初始化显示不同的ui，子类可重写*/
                HuashenMdr.prototype.initView = function () {
                    this._view.btn_gift.visible = false;
                    this._view.btn_jiban.visible = false;
                    this._view.btn_huan.visible = false;
                    this._view.btn_god.visible = true;
                    this.updateZhanshendian();
                    this.updateHuashenHint();
                };
                HuashenMdr.prototype.updateZhanshendian = function () {
                    var isShow = this._huashenProxy.checkShow();
                    this._view.btn_zhanshendian.visible = isShow;
                };
                /** 通用红点事件监听 */
                HuashenMdr.prototype.onHintUpdate = function (n) {
                    _super.prototype.onHintUpdate.call(this, n);
                    var data = n.body;
                    if (data.node == mod.HintMgr.getType(this._huashenProxy.getRoadHint())) {
                        this.updateRoadHint(data.value);
                    }
                    if (data.node == mod.HintMgr.getType(this._huashenProxy.getZhanshendianHint())) {
                        this.updateZhanshendianHint(data.value);
                    }
                };
                HuashenMdr.prototype.updateHuashenHint = function () {
                    if (this._view.btn_god.visible) {
                        this.updateRoadHint(mod.HintMgr.getHint(this._huashenProxy.getRoadHint()));
                    }
                    if (this._view.btn_zhanshendian.visible) {
                        this.updateZhanshendianHint(mod.HintMgr.getHint(this._huashenProxy.getZhanshendianHint()));
                    }
                };
                HuashenMdr.prototype.updateRoadHint = function (hint) {
                    this._view.btn_god.redPoint.visible = hint;
                };
                HuashenMdr.prototype.updateZhanshendianHint = function (hint) {
                    this._view.btn_zhanshendian.redPoint.visible = hint;
                };
                return HuashenMdr;
            }(mod.SurfaceMdr));
            more.HuashenMdr = HuashenMdr;
            __reflect(HuashenMdr.prototype, "game.mod.more.HuashenMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenOpenMainMdr = /** @class */ (function (_super) {
                __extends(HuashenOpenMainMdr, _super);
                function HuashenOpenMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Huashen */,
                            icon: "huashen_tab",
                            mdr: more.HuashenOpenMdr,
                            title: "huashen_tips" /* huashen_tips */,
                            bg: "huashen_open_bg",
                        }
                    ];
                    return _this;
                }
                return HuashenOpenMainMdr;
            }(mod.WndBaseMdr));
            more.HuashenOpenMainMdr = HuashenOpenMainMdr;
            __reflect(HuashenOpenMainMdr.prototype, "game.mod.more.HuashenOpenMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var HuashenOpenMdr = /** @class */ (function (_super) {
                __extends(HuashenOpenMdr, _super);
                function HuashenOpenMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuashenOpenView);
                    return _this;
                }
                HuashenOpenMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                };
                HuashenOpenMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                HuashenOpenMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                };
                HuashenOpenMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return HuashenOpenMdr;
            }(game.MdrBase));
            more.HuashenOpenMdr = HuashenOpenMdr;
            __reflect(HuashenOpenMdr.prototype, "game.mod.more.HuashenOpenMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var HuashenStarMdr = /** @class */ (function (_super) {
                __extends(HuashenStarMdr, _super);
                function HuashenStarMdr() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                HuashenStarMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.item_skill, TouchEvent.TOUCH_TAP, this.onClickItemSkill);
                };
                HuashenStarMdr.prototype.onClickItemSkill = function () {
                    var data = this._view.item_skill.data;
                    if (!data) {
                        return;
                    }
                    mod.ViewMgr.getIns().showSkillNormalTips(data.skillId);
                };
                /**初始化显示不同的ui，子类可重写*/
                HuashenStarMdr.prototype.initView = function () {
                    this._view.btn_battle.iconDisplay.source = "chuzhananniu";
                    this._view.grp_skill.visible = true;
                    this._view.btn_battle.visible = true;
                };
                /**点击幻化或出战，子类可重写*/
                HuashenStarMdr.prototype.onClickBattle = function () {
                    //出战界面
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "04" /* HuashenBattleMain */);
                };
                /**刷新幻化或出战，子类可重写*/
                HuashenStarMdr.prototype.updateBattle = function () {
                };
                /**刷新选中，子类可重写*/
                HuashenStarMdr.prototype.indexUpdateInfo = function () {
                    _super.prototype.indexUpdateInfo.call(this);
                    this.updateSkill();
                };
                HuashenStarMdr.prototype.updateSkill = function () {
                    var cfg = this._selCfg;
                    var skillId = cfg.skill;
                    this._view.item_skill.setData(skillId);
                };
                return HuashenStarMdr;
            }(mod.SurfaceStarMdr));
            more.HuashenStarMdr = HuashenStarMdr;
            __reflect(HuashenStarMdr.prototype, "game.mod.more.HuashenStarMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var SkillEftMgr = game.scene.SkillEftMgr;
            var HuashenTaskMdr = /** @class */ (function (_super) {
                __extends(HuashenTaskMdr, _super);
                function HuashenTaskMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuashenTaskView);
                    return _this;
                }
                HuashenTaskMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(241 /* Huashen */);
                    this._surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    this._taskList = new ArrayCollection();
                    this._view.list_task.itemRenderer = mod.TaskRender2;
                    this._view.list_task.dataProvider = this._taskList;
                };
                HuashenTaskMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_play, TouchEvent.TOUCH_TAP, this.onClickPlay);
                    addEventListener(this._view.btn_open, TouchEvent.TOUCH_TAP, this.onClickOpen);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClickAct);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                };
                HuashenTaskMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateModel();
                    this.updateTaskList();
                };
                HuashenTaskMdr.prototype.onHide = function () {
                    this._view.grp_skill.removeChildren();
                    _super.prototype.onHide.call(this);
                };
                HuashenTaskMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(40 /* Huashen */) > -1) {
                        this.updateTaskList();
                    }
                };
                //播放技能
                HuashenTaskMdr.prototype.onClickPlay = function () {
                    var skillCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, this._cfg.skill);
                    var skillShowCfg = game.getConfigByNameId("skill_show.json" /* SkillShow */, skillCfg.skillshow);
                    if (!skillShowCfg || !skillShowCfg.res) {
                        console.error("技能未配置特效");
                        return;
                    }
                    SkillEftMgr.ins.showGroupUIEft(skillShowCfg.res, 0, 0, 2 /* RIGHT_UP */, null, null, 1, this._view.grp_skill);
                };
                HuashenTaskMdr.prototype.onClickOpen = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "03" /* HuashenOpenMain */);
                };
                HuashenTaskMdr.prototype.onClickAct = function () {
                    this._surfaceProxy.c2s_ride_oper_up_star(1 /* Act */, this._index, 409 /* Huashen */);
                };
                HuashenTaskMdr.prototype.updateModel = function () {
                    var index = this._surfaceProxy.getDefaultId(409 /* Huashen */);
                    this._index = index;
                    this.addAnimate(index, this._view.grp_eff);
                    var cfg = game.getConfigByNameId("huashen.json" /* Huashen */, index);
                    this._cfg = cfg;
                    this._view.img_type.source = "type_" + cfg.icon;
                    this._view.img_name.source = "name_" + cfg.icon;
                };
                HuashenTaskMdr.prototype.updateTaskList = function () {
                    var tasks = mod.TaskUtil.getTaskList(40 /* Huashen */);
                    var hasAllDraw = true; //是否全部领取奖励
                    for (var _i = 0, tasks_4 = tasks; _i < tasks_4.length; _i++) {
                        var task = tasks_4[_i];
                        if (task.status != 2 /* Draw */) {
                            hasAllDraw = false;
                            break;
                        }
                    }
                    this._view.scr.visible = this._view.img_task.visible = !hasAllDraw;
                    if (!hasAllDraw) {
                        if (this._taskList.source.length > 0) {
                            this._taskList.replaceAll(tasks);
                        }
                        else {
                            this._taskList.source = tasks;
                        }
                    }
                    this._view.btn_act.visible = hasAllDraw;
                    this._view.btn_act.redPoint.visible = true;
                };
                return HuashenTaskMdr;
            }(game.EffectMdrBase));
            more.HuashenTaskMdr = HuashenTaskMdr;
            __reflect(HuashenTaskMdr.prototype, "game.mod.more.HuashenTaskMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var Event = egret.Event;
            var HuashenTianfuMdr = /** @class */ (function (_super) {
                __extends(HuashenTianfuMdr, _super);
                function HuashenTianfuMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.HuashenTianfuView);
                    _this._itemList = [];
                    _this._maxNum = 7;
                    return _this;
                }
                HuashenTianfuMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._view.touchEnabled = false;
                    this._btnList = new ArrayCollection();
                    this._view.list_type.itemRenderer = more.HuashenTianfuTabItem;
                    this._view.list_type.dataProvider = this._btnList;
                    this._proxy = this.retProxy(241 /* Huashen */);
                };
                HuashenTianfuMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_up, TouchEvent.TOUCH_TAP, this.onClickUp);
                    this._itemList = [];
                    for (var i = 1; i <= this._maxNum; ++i) {
                        var btn = this._view["item" + i];
                        this._itemList.push(btn);
                        addEventListener(btn, TouchEvent.TOUCH_TAP, this.onClickIcon);
                    }
                    addEventListener(this._view.list_type, Event.CHANGING, this.onClickType);
                    this.onNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_TIANFU_INFO */, this.onInfoUpdate, this);
                };
                HuashenTianfuMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initTypeList();
                    this.typeUpdateInfo();
                };
                HuashenTianfuMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                HuashenTianfuMdr.prototype.onClickUp = function () {
                    if (!mod.BagUtil.checkPropCntUp(this._cost[0], this._cost[1])) {
                        return;
                    }
                    if (!this._selCfg) {
                        return;
                    }
                    this._proxy.c2s_huashen_levelup(this._selCfg.index);
                };
                HuashenTianfuMdr.prototype.onClickIcon = function (e) {
                    var imgBg = e.target;
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var btn = this._itemList[i];
                        if (btn.img_bg == imgBg) {
                            if (this._selIndex == i) {
                                return;
                            }
                            this._selIndex = i;
                            this.indexUpdateInfo();
                            break;
                        }
                    }
                };
                HuashenTianfuMdr.prototype.onInfoUpdate = function () {
                    this.typeUpdateInfo();
                    this.updateTypeListHint();
                };
                HuashenTianfuMdr.prototype.onClickType = function (e) {
                    var cfg = this._view.list_type.selectedItem;
                    if (!this._proxy.isTianfuTypeOpen(cfg, true)) {
                        e.preventDefault();
                        return;
                    }
                    var type = cfg.type;
                    if (type == this._selType) {
                        return;
                    }
                    this._selType = type;
                    this._selIndex = 0;
                    this.typeUpdateInfo();
                };
                HuashenTianfuMdr.prototype.initTypeList = function () {
                    this._cfgList = game.getConfigListByName("huashen_tianfu_leixing.json" /* HuashenTianfuLeixing */);
                    this._btnList.source = this._cfgList;
                    this._selType = 1;
                    this._view.list_type.selectedIndex = this._selType - 1;
                    this._selIndex = 0;
                };
                HuashenTianfuMdr.prototype.updateTypeListHint = function () {
                    this._btnList.replaceAll(this._btnList.source);
                };
                HuashenTianfuMdr.prototype.typeUpdateInfo = function () {
                    this.updateItemList();
                    this.indexUpdateInfo();
                };
                HuashenTianfuMdr.prototype.updateItemList = function () {
                    var items = this._proxy.getTianfuCfgList(this._selType);
                    for (var i = 0; i < this._itemList.length && i < items.length; ++i) {
                        var btn = this._itemList[i];
                        var data = items[i];
                        btn.data = data;
                    }
                    //todo
                    //this._selIndex = 0;
                };
                HuashenTianfuMdr.prototype.indexUpdateInfo = function () {
                    var items = this._proxy.getTianfuCfgList(this._selType);
                    this._selCfg = items[this._selIndex];
                    if (!this._selCfg) {
                        return;
                    }
                    this.updateItemSel();
                    this.updateDesc();
                };
                HuashenTianfuMdr.prototype.updateItemSel = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var btn = this._itemList[i];
                        var sel = this._selIndex == i;
                        btn.img_sel.visible = sel;
                    }
                };
                HuashenTianfuMdr.prototype.updateDesc = function () {
                    var lv = 0;
                    var nextLv = 0;
                    var isOpen = this._proxy.isTianfuOpen(this._selCfg);
                    if (!isOpen) {
                        //未开启
                        this._view.currentState = "lock";
                        var infos = this._selCfg.premise;
                        var info = infos[0];
                        var limitIndex = info[0];
                        var limitLv = info[1];
                        var limitCfg = game.getConfigByNameId("huashen_tianfu.json" /* HuashenTianfu */, limitIndex);
                        var limitStr = game.StringUtil.substitute(game.getLanById("linggen_tips2" /* linggen_tips2 */), [limitCfg.name, limitLv + ""]);
                        this._view.lab_limit.text = limitStr;
                        nextLv = lv + 1;
                    }
                    else {
                        var info = this._proxy.getTianfuInfo(this._selCfg.index);
                        lv = info ? info.lv : 0;
                        var maxLv = this._selCfg.upgrade_item.length;
                        var isMax = lv >= maxLv;
                        this._view.currentState = isMax ? "max" : "default";
                        if (!isMax) {
                            nextLv = lv + 1;
                            this._cost = this._selCfg.upgrade_item[lv];
                            this._view.cost.updateShow(this._cost);
                            this._view.btn_up.redPoint.visible = this._proxy.getTianfuHint(this._selCfg);
                        }
                    }
                    var lvStr = this._selCfg.name + "Lv." + lv;
                    this._view.lab_lv.text = lvStr;
                    var desc = "";
                    if (lv == 0) {
                        desc = game.getLanById("not_active" /* not_active */);
                    }
                    else {
                        var buffIndex = this._selCfg.buff_index[lv - 1];
                        var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, buffIndex);
                        desc = buffCfg.des;
                    }
                    this._view.lab_desc.textFlow = game.TextUtil.parseHtml(desc);
                    if (nextLv != 0) {
                        var nextLvStr = this._selCfg.name + "Lv." + nextLv;
                        this._view.lab_nextLv.text = nextLvStr;
                        var nextBuffIndex = this._selCfg.buff_index[nextLv - 1];
                        var nextBuffCfg = game.getConfigByNameId("buff.json" /* Buff */, nextBuffIndex);
                        var nextDesc = nextBuffCfg.des;
                        this._view.lab_nextDesc.textFlow = game.TextUtil.parseHtml(nextDesc);
                    }
                };
                return HuashenTianfuMdr;
            }(game.MdrBase));
            more.HuashenTianfuMdr = HuashenTianfuMdr;
            __reflect(HuashenTianfuMdr.prototype, "game.mod.more.HuashenTianfuMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArrayCollection = eui.ArrayCollection;
            var HuashenZhiluMdr = /** @class */ (function (_super) {
                __extends(HuashenZhiluMdr, _super);
                function HuashenZhiluMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.HuashenZhiluView);
                    _this._selIndex = 0; /**当前选中的奖励下标，从0开始*/
                    _this._lastIndex = 0; //上一端开始的节点
                    _this.isEasyHide = true;
                    return _this;
                }
                HuashenZhiluMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(241 /* Huashen */);
                    this._taskList = new ArrayCollection();
                    this._view.list_task.itemRenderer = mod.TaskRender;
                    this._view.list_task.dataProvider = this._taskList;
                    this._rewardList = new ArrayCollection();
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._rewardList;
                };
                HuashenZhiluMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, TouchEvent.TOUCH_TAP, this.hide);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                    this.onNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_ROAD_INFO */, this.onInfoUpdate, this);
                };
                HuashenZhiluMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initItemList();
                    this.updateItemList();
                    this.indexUpdateInfo();
                    this.updateTaskList();
                };
                HuashenZhiluMdr.prototype.onHide = function () {
                    this._selIndex = 0;
                    this._lastIndex = 0;
                    _super.prototype.onHide.call(this);
                };
                HuashenZhiluMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(44 /* HuashenZhilu */) > -1) {
                        this.updateTaskList();
                    }
                };
                HuashenZhiluMdr.prototype.onInfoUpdate = function (n) {
                    this.updateItemList();
                };
                HuashenZhiluMdr.prototype.initItemList = function () {
                    this._itemList = [
                        this._view.item1,
                        this._view.item2,
                        this._view.item3,
                        this._view.item4,
                        this._view.item5,
                        this._view.item6,
                        this._view.item7,
                        this._view.item8,
                        this._view.item9,
                        this._view.item10
                    ];
                    var addEventListener = this.onEgret.bind(this);
                    for (var _i = 0, _a = this._itemList; _i < _a.length; _i++) {
                        var item = _a[_i];
                        addEventListener(item.btn_draw, TouchEvent.TOUCH_TAP, this.onClickItem);
                    }
                    this._view.item0.setDefault(); //设置起点
                    this._lineList = [
                        this._view.img_line1,
                        this._view.img_line2,
                        this._view.img_line3,
                        this._view.img_line4,
                        this._view.img_line5,
                        this._view.img_line6,
                        this._view.img_line7,
                        this._view.img_line8,
                        this._view.img_line9,
                        this._view.img_line10
                    ];
                };
                HuashenZhiluMdr.prototype.onClickItem = function (e) {
                    var clickBtn = e.target;
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        if (item.btn_draw != clickBtn) {
                            continue;
                        }
                        //点击宝箱
                        var data = item.data;
                        if (data.canDraw) {
                            //领取奖励，领取奖励时候就不选中，返回数据后会自动选中
                            this._proxy.c2s_huashen_road_get_rewards();
                            break;
                        }
                        if (this._selIndex != i) {
                            this.setSelIndex(i);
                        }
                        break;
                    }
                };
                HuashenZhiluMdr.prototype.updateItemList = function () {
                    var startIndex = this._proxy.getRoadStartIndex();
                    var hasChange = this._lastIndex && this._lastIndex != startIndex; //是否切层
                    this._lastIndex = startIndex;
                    var roadIndex = this._proxy.roadIndex;
                    for (var i = 0; i < this._itemList.length && i < this._lineList.length; ++i) {
                        var item = this._itemList[i];
                        var line = this._lineList[i];
                        var index = startIndex + i;
                        var cfg = game.getConfigByNameId("huashen_zhilu.json" /* HuashenZhilu */, index);
                        var hasDraw = this._proxy.hasDraw(index);
                        var isCur_1 = roadIndex == index;
                        var isEnd = this._proxy.isRoadEnd(index);
                        var canDraw = this._proxy.canDraw(index);
                        item.setData(cfg, isEnd, hasDraw, isCur_1, canDraw);
                        if (roadIndex + 1 == index && (this._selIndex < i || hasChange)) {
                            //自动选中的时候，当前选中的已开启，才更新选中，全部领完奖励时候不会进这里
                            //切换层级时，重新选中
                            this.setSelIndex(i);
                        }
                        line.source = hasDraw ? "huashenzhilu_xian2" : "huashenzhilu_xian1";
                    }
                    var isCur = this._proxy.isCur();
                    this._view.item0.setIsCur(isCur); //设置起点
                    //全部领取完奖励的时候，设置不选中
                    var hasAllDraw = this._proxy.hasAllDraw();
                    if (hasAllDraw) {
                        this.setSelIndex(-1);
                    }
                };
                HuashenZhiluMdr.prototype.indexUpdateInfo = function () {
                    this.updateItemSel();
                    this.updateReward();
                };
                HuashenZhiluMdr.prototype.setSelIndex = function (index) {
                    this._selIndex = index;
                    this.indexUpdateInfo();
                };
                HuashenZhiluMdr.prototype.updateItemSel = function () {
                    for (var i = 0; i < this._itemList.length; ++i) {
                        var item = this._itemList[i];
                        var sel = this._selIndex == i;
                        item.setSel(sel);
                        if (sel) {
                            this._selItem = item;
                        }
                    }
                };
                HuashenZhiluMdr.prototype.updateReward = function () {
                    if (this._selIndex < 0) {
                        //没选中奖励的情况，已领完
                        this._view.currentState = "max";
                        return;
                    }
                    this._view.currentState = "default";
                    var data = this._selItem.data;
                    var cfg = data.cfg;
                    this._view.item_sel.setData(cfg, data.isEnd);
                    this._rewardList.source = cfg.reward;
                    var canDraw = this._proxy.canDraw(cfg.index);
                    //this._view.lab_tips.visible = canDraw;
                    this._view.grp_cnt.visible = !canDraw;
                    if (!canDraw) {
                        var curCnt = mod.BagUtil.getPropCntByIdx(1450000033 /* Huashenzhilujifen */);
                        var leftCnt = Math.max(cfg.point - curCnt, 0);
                        var cntStr = "再收集" + leftCnt;
                        this._view.lab_cnt.text = cntStr;
                    }
                };
                HuashenZhiluMdr.prototype.updateTaskList = function () {
                    var tasks = mod.TaskUtil.getTaskList(44 /* HuashenZhilu */, true, true);
                    if (this._taskList.source.length > 0) {
                        this._taskList.replaceAll(tasks);
                    }
                    else {
                        this._taskList.source = tasks;
                    }
                };
                return HuashenZhiluMdr;
            }(game.MdrBase));
            more.HuashenZhiluMdr = HuashenZhiluMdr;
            __reflect(HuashenZhiluMdr.prototype, "game.mod.more.HuashenZhiluMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanshendianMainMdr = /** @class */ (function (_super) {
                __extends(ZhanshendianMainMdr, _super);
                function ZhanshendianMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "zhanshendian_tab",
                            mdr: more.ZhanshendianMdr,
                            title: "zhanshendian_tips" /* zhanshendian_tips */,
                            bg: "huashenbeijingtu",
                            hintTypes: ["61" /* More */, "02" /* HuashenMain */, "01" /* Huashen */, "10" /* ZhanshendianMain */]
                        }
                    ];
                    return _this;
                }
                ZhanshendianMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_ZHANSHENDIAN_INFO */, this.onInfoUpdate, this);
                };
                ZhanshendianMainMdr.prototype.onInfoUpdate = function (n) {
                    var index = n.body;
                    if (!index) {
                        this.hide(); //全部激活，关闭界面
                    }
                };
                return ZhanshendianMainMdr;
            }(mod.WndBaseMdr));
            more.ZhanshendianMainMdr = ZhanshendianMainMdr;
            __reflect(ZhanshendianMainMdr.prototype, "game.mod.more.ZhanshendianMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var ZhanshendianMdr = /** @class */ (function (_super) {
                __extends(ZhanshendianMdr, _super);
                function ZhanshendianMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhanshendianView);
                    return _this;
                }
                ZhanshendianMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(241 /* Huashen */);
                    this._surfaceProxy = facade.retMod("46" /* Surface */).retProxy(190 /* Surface */);
                    this._taskList = new ArrayCollection();
                    this._view.list_task.itemRenderer = mod.TaskRender2;
                    this._view.list_task.dataProvider = this._taskList;
                };
                ZhanshendianMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_act, TouchEvent.TOUCH_TAP, this.onClickAct);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onTaskUpdate, this);
                    this.onNt("on_update_huashen_road_info" /* ON_UPDATE_HUASHEN_ZHANSHENDIAN_INFO */, this.onInfoUpdate, this);
                };
                ZhanshendianMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateModel();
                    this.updateTaskList();
                };
                ZhanshendianMdr.prototype.onHide = function () {
                    this._effIdx = 0;
                    _super.prototype.onHide.call(this);
                };
                ZhanshendianMdr.prototype.onTaskUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(45 /* HuashenZhanshendian */) > -1) {
                        this.updateTaskList();
                    }
                };
                ZhanshendianMdr.prototype.onInfoUpdate = function () {
                    this.updateModel();
                };
                ZhanshendianMdr.prototype.onClickAct = function () {
                    var index = this._proxy.nowId;
                    this._surfaceProxy.c2s_ride_oper_up_star(1 /* Act */, index, 409 /* Huashen */);
                };
                ZhanshendianMdr.prototype.updateModel = function () {
                    var index = this._proxy.nowId;
                    if (!index) {
                        return;
                    }
                    if (this._effIdx) {
                        this.removeEffect(this._effIdx);
                    }
                    this._effIdx = this.addAnimate(index, this._view.grp_eff);
                    var cfg = game.getConfigById(index);
                    this._view.name_item.updateShow(cfg.name, cfg.quality);
                };
                ZhanshendianMdr.prototype.updateTaskList = function () {
                    var index = this._proxy.nowId;
                    var cfg = game.getConfigByNameId("huashen.json" /* Huashen */, index);
                    if (!cfg) {
                        return;
                    }
                    var taskList = cfg.task;
                    var tasks = [];
                    var hasAllDraw = true; //是否全部领取奖励
                    for (var _i = 0, taskList_1 = taskList; _i < taskList_1.length; _i++) {
                        var taskId = taskList_1[_i];
                        var task = mod.TaskUtil.getTask(taskId);
                        if (!task) {
                            continue;
                        }
                        if (task.status != 2 /* Draw */) {
                            hasAllDraw = false;
                        }
                        tasks.push(task);
                    }
                    tasks.sort(game.SortTools.sortTask);
                    this._view.scr.visible = this._view.img_task.visible = !hasAllDraw;
                    if (!hasAllDraw) {
                        if (this._taskList.source.length > 0) {
                            this._taskList.replaceAll(tasks);
                        }
                        else {
                            this._taskList.source = tasks;
                        }
                    }
                    this._view.btn_act.visible = hasAllDraw;
                    this._view.btn_act.redPoint.visible = true;
                };
                return ZhanshendianMdr;
            }(game.EffectMdrBase));
            more.ZhanshendianMdr = ZhanshendianMdr;
            __reflect(ZhanshendianMdr.prototype, "game.mod.more.ZhanshendianMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var SkyPalaceModel = /** @class */ (function () {
                function SkyPalaceModel() {
                    this.cfg_index = 0;
                    this.infos = {};
                }
                return SkyPalaceModel;
            }());
            more.SkyPalaceModel = SkyPalaceModel;
            __reflect(SkyPalaceModel.prototype, "game.mod.more.SkyPalaceModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_huanggu_shenqi_oper = msg.c2s_huanggu_shenqi_oper;
            var s2c_huanggu_shenqi_info = msg.s2c_huanggu_shenqi_info;
            var SkyPalaceProxy = /** @class */ (function (_super) {
                __extends(SkyPalaceProxy, _super);
                function SkyPalaceProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SkyPalaceProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.SkyPalaceModel();
                    this.onProto(s2c_huanggu_shenqi_info, this.s2c_huanggu_shenqi_info, this);
                };
                Object.defineProperty(SkyPalaceProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                SkyPalaceProxy.prototype.c2s_huanggu_shenqi_oper = function (oper_type, index, pos) {
                    var msg = new c2s_huanggu_shenqi_oper();
                    msg.oper_type = oper_type;
                    msg.index = index;
                    if (pos) {
                        msg.pos = pos;
                    }
                    this.sendProto(msg);
                };
                SkyPalaceProxy.prototype.s2c_huanggu_shenqi_info = function (n) {
                    var msg = n.body;
                    if (msg.info) {
                        for (var _i = 0, _a = msg.info; _i < _a.length; _i++) {
                            var info = _a[_i];
                            this._model.infos[info.index] = info;
                        }
                    }
                    this.onUpdateHint();
                    if (this._model.cfg_index) {
                        this.sendNt("on_update_artifact_auto_info" /* ON_UPDATE_ARTIFACT_AUTO_INFO */, this._model.cfg_index);
                    }
                    else {
                        this.sendNt("on_update_artifact_info" /* ON_UPDATE_ARTIFACT_INFO */);
                    }
                    this.sendNt("on_update_artifact_attr_info" /* ON_UPDATE_ARTIFACT_ATTR_INFO */);
                };
                SkyPalaceProxy.prototype.getInfo = function (index) {
                    return this._model.infos[index] || null;
                };
                SkyPalaceProxy.prototype.getSkillLevel = function (index, skill_id) {
                    var skill = this.getSkill(index, skill_id);
                    return skill && skill.level || 0;
                };
                /**skill_id技能初始id */
                SkyPalaceProxy.prototype.getSkill = function (index, skill_id) {
                    var info = this.getInfo(index);
                    if (info && info.skill_info) {
                        for (var _i = 0, _a = info.skill_info; _i < _a.length; _i++) {
                            var skill = _a[_i];
                            if (skill.index == skill_id) {
                                return skill;
                            }
                        }
                    }
                    return null;
                };
                /**获取传入等级的技能解锁条件 */
                SkyPalaceProxy.prototype.getSkillAct = function (index, skill_id, level) {
                    if (level === void 0) { level = 1; }
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, index);
                    for (var i in cfg.skill_id) {
                        if (skill_id == cfg.skill_id[i]) {
                            var cfg_limit = game.getConfigByNameId("huanggu_shenqi_skill.json" /* HuangguShenqiSkill */, level);
                            return cfg_limit.condition[i];
                        }
                    }
                    return 0;
                };
                SkyPalaceProxy.prototype.getBuwei = function (index, pos) {
                    var info = this.getInfo(index);
                    if (info) {
                        for (var _i = 0, _a = info.pos_info; _i < _a.length; _i++) {
                            var pos_info = _a[_i];
                            if (pos == pos_info.pos) {
                                return pos_info;
                            }
                        }
                    }
                    return null;
                };
                SkyPalaceProxy.prototype.getBuweiCfg = function (index, level) {
                    if (level === void 0) { level = 1; }
                    var cfgs = game.getConfigByNameId("huanggu_shenqi_buwei.json" /* HuangguShenqiBuwei */, index);
                    for (var k in cfgs) {
                        var cfg = cfgs[k];
                        if (cfg.level == level) {
                            return cfg;
                        }
                    }
                    return null;
                };
                SkyPalaceProxy.prototype.getBuweiNextCost = function (index, pos) {
                    var lv = this.getBuweiLevel(index, pos) + 1;
                    var cfg = this.getBuweiCfg(index, lv);
                    return cfg && cfg.material[pos - 1] || [];
                };
                SkyPalaceProxy.prototype.getBuweiCost = function (index, pos) {
                    var lv = this.getBuweiLevel(index, pos) || 1;
                    var cfg = this.getBuweiCfg(index, lv);
                    return cfg && cfg.material[pos - 1] || [];
                };
                SkyPalaceProxy.prototype.getBuweiLevel = function (index, pos) {
                    var buwei = this.getBuwei(index, pos);
                    return buwei && buwei.level || 0;
                };
                SkyPalaceProxy.prototype.getBuweiAttr = function (index, pos) {
                    var buwei = this.getBuwei(index, pos);
                    if (buwei) {
                        return buwei.attr;
                    }
                    var cfg = this.getBuweiCfg(index);
                    return mod.RoleUtil.getAttr(cfg.attr_id[pos - 1]);
                };
                SkyPalaceProxy.prototype.getActStatus = function (index) {
                    var info = this.getInfo(index);
                    if (!info) {
                        return false;
                    }
                    var level = info.level;
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, index);
                    var limit_level = cfg.level_condition[level];
                    if (info.pos_info && info.pos_info.length == 4) {
                        for (var _i = 0, _a = info.pos_info; _i < _a.length; _i++) {
                            var buwei = _a[_i];
                            if (buwei.level < limit_level) {
                                return false;
                            }
                        }
                        return true;
                    }
                    return false;
                };
                SkyPalaceProxy.prototype.onUpdateHint = function () {
                    var root = ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "05" /* SkyPalace */];
                    var cfgArr = game.getConfigListByName("huanggu_shenqi.json" /* HuangguShenqi */);
                    this._model.cfg_index = 0;
                    for (var _i = 0, cfgArr_9 = cfgArr; _i < cfgArr_9.length; _i++) {
                        var cfg = cfgArr_9[_i];
                        var bool = false;
                        if (!bool) {
                            bool = this.checkBuweiHint(cfg.index);
                        }
                        if (!bool) {
                            bool = this.checkSkillHint(cfg.index);
                        }
                        if (!bool) {
                            bool = this.getActStatus(cfg.index);
                        }
                        if (bool && !this._model.cfg_index) {
                            this._model.cfg_index = cfg.index;
                        }
                        mod.HintMgr.setHint(bool, root.concat(["" + cfg.index]));
                    }
                };
                SkyPalaceProxy.prototype.checkBuweiHint = function (index) {
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, index);
                    for (var i = 0; i < 4; i++) {
                        var pos = i + 1;
                        var cost = this.getBuweiNextCost(cfg.index, pos);
                        if (!cost || !cost.length) {
                            continue;
                        }
                        if (mod.BagUtil.checkPropCnt(cost[0], cost[1])) {
                            return true;
                        }
                    }
                    return false;
                };
                SkyPalaceProxy.prototype.checkSkillHint = function (index) {
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, index);
                    var info = this.getInfo(cfg.index);
                    var info_level = info && info.level || 0;
                    for (var _i = 0, _a = cfg.skill_id; _i < _a.length; _i++) {
                        var id = _a[_i];
                        var level = this.getSkillLevel(cfg.index, id);
                        var level_up = this.getSkillAct(cfg.index, id, level + 1);
                        if (level_up && info_level >= level_up) {
                            return true;
                        }
                    }
                    return false;
                };
                SkyPalaceProxy.prototype.getListSelect = function (index) {
                    if (index === void 0) { index = this._model.cfg_index; }
                    var cfgArr = game.getConfigListByName("huanggu_shenqi.json" /* HuangguShenqi */);
                    for (var i = 0; i < cfgArr.length; i++) {
                        var cfg = cfgArr[i];
                        if (cfg.index == index) {
                            return i;
                        }
                    }
                    return 0;
                };
                return SkyPalaceProxy;
            }(game.ProxyBase));
            more.SkyPalaceProxy = SkyPalaceProxy;
            __reflect(SkyPalaceProxy.prototype, "game.mod.more.SkyPalaceProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactBuffTipsView = /** @class */ (function (_super) {
                __extends(ArtifactBuffTipsView, _super);
                function ArtifactBuffTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ArtifactBuffTipsSkin";
                    return _this;
                }
                return ArtifactBuffTipsView;
            }(eui.Component));
            more.ArtifactBuffTipsView = ArtifactBuffTipsView;
            __reflect(ArtifactBuffTipsView.prototype, "game.mod.more.ArtifactBuffTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactBuweiItem = /** @class */ (function (_super) {
                __extends(ArtifactBuweiItem, _super);
                function ArtifactBuweiItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ArtifactBuweiItem.prototype.onAddToStage = function () {
                    this._proxy = game.getProxy("61" /* More */, 244 /* SkyPalace */);
                };
                ArtifactBuweiItem.prototype.onRemoveFromStage = function () {
                };
                ArtifactBuweiItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cost = this._proxy.getBuweiCost(this.data.index, this.data.pos);
                    var prop = game.PropData.create(cost[0]);
                    var cfg = prop.cfg;
                    this.img_icon.source = cfg.icon;
                    var lv = this._proxy.getBuweiLevel(this.data.index, this.data.pos);
                    this.currentState = !lv ? "lock" : "default";
                    this.lab_level.text = "" + lv;
                    if (!this.data.setHint) {
                        this.redPoint.visible = false;
                        return;
                    }
                    var next = this._proxy.getBuweiNextCost(this.data.index, this.data.pos);
                    if (next && next.length) {
                        this.redPoint.visible = mod.BagUtil.checkPropCnt(next[0], next[1]);
                    }
                    else {
                        this.redPoint.visible = false;
                    }
                };
                ArtifactBuweiItem.prototype.setData = function (data) {
                    this.data = data;
                };
                return ArtifactBuweiItem;
            }(mod.BaseRenderer));
            more.ArtifactBuweiItem = ArtifactBuweiItem;
            __reflect(ArtifactBuweiItem.prototype, "game.mod.more.ArtifactBuweiItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactBuweiTipsView = /** @class */ (function (_super) {
                __extends(ArtifactBuweiTipsView, _super);
                function ArtifactBuweiTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ArtifactBuweiTipsSkin";
                    return _this;
                }
                return ArtifactBuweiTipsView;
            }(eui.Component));
            more.ArtifactBuweiTipsView = ArtifactBuweiTipsView;
            __reflect(ArtifactBuweiTipsView.prototype, "game.mod.more.ArtifactBuweiTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactIconBtn = /** @class */ (function (_super) {
                __extends(ArtifactIconBtn, _super);
                function ArtifactIconBtn() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ArtifactIconBtn.prototype.setData = function (index, level) {
                    this.clearEffect();
                    this.img_icon.source = "shenqi_" + index;
                    this.lb_num.text = "" + level;
                };
                ArtifactIconBtn.prototype.setUp = function (eft) {
                    if (eft === void 0) { eft = "shenqitupo" /* Shenqitupo */; }
                    this.img_icon.source = "";
                    if (eft) {
                        this.setEffect(eft);
                    }
                };
                return ArtifactIconBtn;
            }(mod.Btn));
            more.ArtifactIconBtn = ArtifactIconBtn;
            __reflect(ArtifactIconBtn.prototype, "game.mod.more.ArtifactIconBtn");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Event = egret.Event;
            var facade = base.facade;
            var ArtifactTipsItem = /** @class */ (function (_super) {
                __extends(ArtifactTipsItem, _super);
                function ArtifactTipsItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ArtifactTipsItemSkin";
                    _this.addEventListener(Event.ADDED_TO_STAGE, _this.onAddToStage, _this);
                    _this.addEventListener(Event.REMOVED_FROM_STAGE, _this.onRemove, _this);
                    return _this;
                }
                ArtifactTipsItem.prototype.onAddToStage = function () {
                    this._proxy = facade.retMod("61" /* More */).retProxy(244 /* SkyPalace */);
                };
                ArtifactTipsItem.prototype.onRemove = function () {
                };
                ArtifactTipsItem.prototype.setData = function (index) {
                    for (var i = 0; i < 4; i++) {
                        var pos = i + 1;
                        var item = this["item_" + pos];
                        item.setData({ index: index, pos: pos });
                    }
                    var info = this._proxy.getInfo(index);
                    var level = info && info.level || 0;
                    this.btn_suit.setData(index, level);
                };
                return ArtifactTipsItem;
            }(eui.Component));
            more.ArtifactTipsItem = ArtifactTipsItem;
            __reflect(ArtifactTipsItem.prototype, "game.mod.more.ArtifactTipsItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactTipsView = /** @class */ (function (_super) {
                __extends(ArtifactTipsView, _super);
                function ArtifactTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ArtifactTipsSkin";
                    return _this;
                }
                return ArtifactTipsView;
            }(eui.Component));
            more.ArtifactTipsView = ArtifactTipsView;
            __reflect(ArtifactTipsView.prototype, "game.mod.more.ArtifactTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactTypeItem = /** @class */ (function (_super) {
                __extends(ArtifactTypeItem, _super);
                function ArtifactTypeItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ArtifactTypeItem.prototype.onAddToStage = function () {
                };
                ArtifactTypeItem.prototype.onRemoveFromStage = function () {
                };
                ArtifactTypeItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = this.data;
                    // this.lab_name.text = cfg.name;
                    this.img_name.source = "shenqi_name_" + cfg.index;
                    this.img_icon.source = "shenqi_" + cfg.index;
                    var proxy = game.getProxy("61" /* More */, 244 /* SkyPalace */);
                    var info = proxy.getInfo(cfg.index);
                    this.img_mask.visible = !info || !info.level;
                    this.redPoint.visible = mod.HintMgr.getHint(["61" /* More */, "05" /* SkyPalace */, "01" /* TabBtnType01 */, "" + cfg.index]);
                };
                return ArtifactTypeItem;
            }(mod.BaseRenderer));
            more.ArtifactTypeItem = ArtifactTypeItem;
            __reflect(ArtifactTypeItem.prototype, "game.mod.more.ArtifactTypeItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            /**���� */
            var ArtifactView = /** @class */ (function (_super) {
                __extends(ArtifactView, _super);
                // public btn_up: Btn;
                function ArtifactView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ArtifactSkin";
                    return _this;
                }
                return ArtifactView;
            }(eui.Component));
            more.ArtifactView = ArtifactView;
            __reflect(ArtifactView.prototype, "game.mod.more.ArtifactView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var ArtifactBuffTipsMdr = /** @class */ (function (_super) {
                __extends(ArtifactBuffTipsMdr, _super);
                function ArtifactBuffTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ArtifactBuffTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ArtifactBuffTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(244 /* SkyPalace */);
                };
                ArtifactBuffTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickAct);
                };
                ArtifactBuffTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                ArtifactBuffTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ArtifactBuffTipsMdr.prototype.onClickAct = function () {
                    var condHandler = this._showArgs.condHandler;
                    var condRst = true; //其他激活条件
                    if (condHandler) {
                        condRst = condHandler.exec();
                    }
                    if (!condRst) {
                        return;
                    }
                    var confirm = this._showArgs.confirm;
                    confirm && confirm.exec();
                    this.hide();
                };
                ArtifactBuffTipsMdr.prototype.updateView = function () {
                    var skillId = this._showArgs.skillId;
                    this._view.skill.setData(skillId);
                    var cfg = game.getConfigByNameId("battle_skill.json" /* Skill */, this._showArgs.skillId);
                    var level = this._proxy.getSkillLevel(this._showArgs.index, this._showArgs.skillId);
                    this._view.lab_name.text = cfg.name + " " + level + "\u7EA7";
                    var level_up = this._proxy.getSkillAct(this._showArgs.index, this._showArgs.skillId, level + 1);
                    if (level) {
                        this._view.baseDescItem.updateShow(game.TextUtil.getSkillDesc(cfg, level, false, true), "当前效果");
                        this._view.baseDescItem2.updateShow(game.TextUtil.getSkillDesc(cfg, level + 1, false, true), "下阶效果", 10, 7835024 /* GRAY */);
                        this._view.baseDescItem.visible = this._view.baseDescItem2.visible = true;
                    }
                    else {
                        this._view.baseDescItem.updateShow(game.TextUtil.getSkillDesc(cfg, level + 1, false, true), "下阶效果", 10, 7835024 /* GRAY */);
                        this._view.baseDescItem2.visible = false;
                    }
                    if (level_up) {
                        var cfg_shenqi = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, this._showArgs.index);
                        var info = this._proxy.getInfo(this._showArgs.index);
                        var info_level = info && info.level || 0;
                        if (info_level < level_up) {
                            this._view.lab_limit.text = "" + cfg_shenqi.name + level_up + "\u9636\u53EF" + (info_level ? "升级" : "激活") + "(" + info_level + "/" + level_up + ")";
                            this._view.btn.visible = false;
                        }
                        else {
                            this._view.lab_limit.text = "";
                            this._view.btn.visible = true;
                        }
                    }
                    else {
                        this._view.lab_limit.text = "";
                        this._view.btn.visible = false;
                    }
                };
                return ArtifactBuffTipsMdr;
            }(game.MdrBase));
            more.ArtifactBuffTipsMdr = ArtifactBuffTipsMdr;
            __reflect(ArtifactBuffTipsMdr.prototype, "game.mod.more.ArtifactBuffTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactBuweiTipsMdr = /** @class */ (function (_super) {
                __extends(ArtifactBuweiTipsMdr, _super);
                function ArtifactBuweiTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ArtifactBuweiTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ArtifactBuweiTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(244 /* SkyPalace */);
                };
                ArtifactBuweiTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_up, egret.TouchEvent.TOUCH_TAP, this.onClickBtn, this);
                    this.onNt("update_common_attr" /* UPDATE_COMMON_ATTR */, this.onUpdateAttr, this);
                    this.onNt("on_update_artifact_attr_info" /* ON_UPDATE_ARTIFACT_ATTR_INFO */, this.updateView, this);
                };
                ArtifactBuweiTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                ArtifactBuweiTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                ArtifactBuweiTipsMdr.prototype.onClickBtn = function () {
                    var cost = this._proxy.getBuweiCost(this._showArgs.index, this._showArgs.pos);
                    if (!mod.BagUtil.checkPropCnt(cost[0], cost[1], 1 /* Dialog */)) {
                        return;
                    }
                    this._proxy.c2s_huanggu_shenqi_oper(2, this._showArgs.index, this._showArgs.pos);
                };
                ArtifactBuweiTipsMdr.prototype.updateView = function () {
                    this.updateTopView();
                    this.updateMiddleView();
                    this.updateBottomView();
                };
                ArtifactBuweiTipsMdr.prototype.updateTopView = function () {
                    var cost = this._proxy.getBuweiCost(this._showArgs.index, this._showArgs.pos);
                    var prop = game.PropData.create(cost[0]);
                    var cfg = prop.cfg;
                    if (!cfg) {
                        return;
                    }
                    this._view.qualityTips.updateShow(cfg.quality);
                    this._view.icon.setData(cfg.index, 3 /* NotTips */);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name, game.ColorUtil.getColorByQuality1(cfg.quality)));
                };
                ArtifactBuweiTipsMdr.prototype.onUpdateAttr = function (buwei_level) {
                    var attr = this._proxy.getBuweiAttr(this._showArgs.index, this._showArgs.pos);
                    var color = buwei_level > 0 ? 4435385 /* DEFAULT */ : 8618626 /* GRAY */;
                    this._view.baseAttrItem.updateShow(attr, true, game.getLanById("ywl_baseAttr" /* ywl_baseAttr */), color);
                    this._view.power.setPowerValue(attr && attr.showpower && attr.showpower.toNumber() || 0);
                };
                ArtifactBuweiTipsMdr.prototype.updateMiddleView = function () {
                    var info = this._proxy.getInfo(this._showArgs.index);
                    var info_level = info && info.level || 0;
                    var buwei_level = this._proxy.getBuweiLevel(this._showArgs.index, this._showArgs.pos);
                    this.onUpdateAttr(buwei_level);
                    var desc = "";
                    var level = buwei_level || 1;
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, this._showArgs.index);
                    var limit_level = cfg.level_condition[info_level];
                    var cfg_buwei = this._proxy.getBuweiCfg(this._showArgs.index, level);
                    for (var i in cfg_buwei.material) {
                        var pos = +i + 1;
                        var buwei = this._proxy.getBuwei(this._showArgs.index, pos);
                        var prop = game.GameConfig.getPropConfigById(cfg_buwei.material[i][0]);
                        if (desc.length) {
                            desc += "#N";
                        }
                        if (buwei && buwei.level) {
                            var color = buwei.level >= limit_level ? 2330156 /* GREEN */ : 16719376 /* RED */;
                            desc += game.TextUtil.addColor("[" + buwei.level + "\u9636]" + prop.name, color);
                        }
                        else {
                            desc += game.TextUtil.addColor("[1\u9636]" + prop.name, 8618626 /* GRAY */);
                        }
                    }
                    // let title: string = "";
                    this._view.taozhuangItem.updateShow(desc);
                    var strs = [];
                    for (var _i = 0, _a = cfg.skill_id; _i < _a.length; _i++) {
                        var id = _a[_i];
                        var skill = game.getConfigByNameId("battle_skill.json" /* Skill */, id);
                        var level_1 = this._proxy.getSkillLevel(this._showArgs.index, id);
                        var skillLvCfg = game.getConfigByNameId("battle_skill.json" /* Skill */, id + level_1);
                        var limit = this._proxy.getSkillAct(this._showArgs.index, id);
                        var str_lv = game.TextUtil.addColor(level_1 ? "(" + level_1 + "\u7EA7)" : "(" + limit + "\u9636\u6FC0\u6D3B)", level_1 ? 2330156 /* GREEN */ : 16719376 /* RED */);
                        var title = game.TextUtil.addColor("[" + skill.name + "]", level_1 ? 15262666 /* WHITE */ : 8618626 /* GRAY */);
                        var desc_1 = game.TextUtil.addColor(game.TextUtil.getSkillDesc(skill, level_1, false, true), level_1 ? 15262666 /* WHITE */ : 8618626 /* GRAY */);
                        strs.push([title + str_lv, desc_1]);
                    }
                    this._view.skillItem.updateShow(strs, game.getLanById("maid_cue15" /* maid_cue15 */));
                };
                ArtifactBuweiTipsMdr.prototype.updateBottomView = function () {
                    var next = this._proxy.getBuweiNextCost(this._showArgs.index, this._showArgs.pos);
                    this._view.img_max.visible = !next || !next.length;
                    this._view.btn_up.visible = !this._view.img_max.visible;
                    this._view.cost.visible = !this._view.img_max.visible;
                    if (!next || !next.length) {
                        return;
                    }
                    var cnt = mod.BagUtil.getPropCntByIdx(next[0]);
                    this._view.cost.setData(next);
                    this._view.cost.updateCnt(game.TextUtil.addEnoughColor(cnt, next[1]));
                    var info = this._proxy.getInfo(this._showArgs.index);
                    var info_level = info && info.level || 0;
                    this._view.btn_up.label = info_level ? "升阶" : "激活";
                };
                return ArtifactBuweiTipsMdr;
            }(game.EffectMdrBase));
            more.ArtifactBuweiTipsMdr = ArtifactBuweiTipsMdr;
            __reflect(ArtifactBuweiTipsMdr.prototype, "game.mod.more.ArtifactBuweiTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var ItemTapEvent = eui.ItemTapEvent;
            var Handler = base.Handler;
            var ArtifactMdr = /** @class */ (function (_super) {
                __extends(ArtifactMdr, _super);
                function ArtifactMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ArtifactView);
                    _this._listData = new ArrayCollection();
                    _this._listSkill = new ArrayCollection();
                    _this.isUp = false;
                    _this.len = 4;
                    return _this;
                }
                ArtifactMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(244 /* SkyPalace */);
                    this._view.list_item.itemRenderer = more.ArtifactTypeItem;
                    this._view.list_item.dataProvider = this._listData;
                    this._view.list_skill.itemRenderer = mod.SkillItemRender;
                    this._view.list_skill.dataProvider = this._listSkill;
                };
                ArtifactMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_onekey, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.list_item, ItemTapEvent.ITEM_TAP, this.onClickTypes);
                    addEventListener(this._view.list_skill, ItemTapEvent.ITEM_TAP, this.onClickSkill);
                    addEventListener(this._view.item_1, TouchEvent.TOUCH_TAP, this.onClickItem);
                    addEventListener(this._view.item_2, TouchEvent.TOUCH_TAP, this.onClickItem);
                    addEventListener(this._view.item_3, TouchEvent.TOUCH_TAP, this.onClickItem);
                    addEventListener(this._view.item_4, TouchEvent.TOUCH_TAP, this.onClickItem);
                    addEventListener(this._view.btn_suit, TouchEvent.TOUCH_TAP, this.onClickSuit);
                    addEventListener(this._view.power2.btn_desc, TouchEvent.TOUCH_TAP, this.onClickDesc);
                    this.onNt("on_update_artifact_info" /* ON_UPDATE_ARTIFACT_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_artifact_auto_info" /* ON_UPDATE_ARTIFACT_AUTO_INFO */, this.onUpdateType, this);
                    this.onNt("on_common_hint_update" /* ON_COMMON_HINT_UPDATE */, this.onUpdateHint, this);
                };
                ArtifactMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onInitType();
                };
                ArtifactMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ArtifactMdr.prototype.onInitType = function () {
                    var cfgArr = game.getConfigListByName("huanggu_shenqi.json" /* HuangguShenqi */);
                    this._listData.replaceAll(cfgArr);
                    this._view.list_item.selectedIndex = this._proxy.getListSelect();
                    this.onUpdateView();
                };
                ArtifactMdr.prototype.onUpdateType = function (n) {
                    var index = n.body;
                    if (!index || this._view.list_item.selectedIndex == index) {
                        this.onUpdateView();
                    }
                    else {
                        this._view.list_item.selectedIndex = this._proxy.getListSelect();
                        this.onUpdateView();
                    }
                };
                ArtifactMdr.prototype.onClickTypes = function (e) {
                    this._view.list_item.selectedIndex = e.itemIndex;
                    this.onUpdateView();
                };
                ArtifactMdr.prototype.onUpdateView = function () {
                    var cfg = this._listData.source[this._view.list_item.selectedIndex];
                    for (var i = 0; i < this.len; i++) {
                        var pos = i + 1;
                        var item = this._view["item_" + pos];
                        item.setData({ index: cfg.index, pos: pos, setHint: true });
                    }
                    var info = this._proxy.getInfo(cfg.index);
                    var info_level = info && info.level || 0;
                    this._view.btn_suit.setData(cfg.index, info_level);
                    this.isUp = this._proxy.getActStatus(cfg.index);
                    if (!this.isUp) {
                        this._view.btn_suit.setData(cfg.index, info_level);
                        this._view.btn_suit.setHint(false);
                    }
                    else {
                        this._view.btn_suit.setUp("shenqitupo" /* Shenqitupo */);
                        this._view.btn_suit.setHint(this.isUp);
                    }
                    var attr = info && info.attr;
                    var power = attr && attr.showpower && attr.showpower.toNumber() || 0;
                    this._view.power2.setPowerValue(power);
                    this._view.name_item.updateShow(cfg.name, cfg.quality);
                    this._view.img_name.source = "shenqi_name_" + cfg.index;
                    var list = [];
                    var lockStr = "zhezhaosuo";
                    for (var _i = 0, _a = cfg.skill_id; _i < _a.length; _i++) {
                        var id = _a[_i];
                        var level = this._proxy.getSkillLevel(cfg.index, id);
                        var level_up = this._proxy.getSkillAct(cfg.index, id, level + 1);
                        var showHint = level_up && info_level >= level_up;
                        var skillId = id;
                        var isAct = level > 0;
                        var limit = this._proxy.getSkillAct(cfg.index, id);
                        var limitStr = limit + "\u9636\u89E3\u9501";
                        list.push({ showHint: showHint, skillId: skillId, isAct: isAct, level: level, lockStr: lockStr, limitStr: limitStr });
                    }
                    this._listSkill.replaceAll(list);
                    this._view.btn_onekey.setHint(this._proxy.checkBuweiHint(cfg.index));
                    this.onUpdateTypeData();
                };
                ArtifactMdr.prototype.onUpdateTypeData = function () {
                    this._listData.itemUpdated(this._listData.source[this._lastIndex]);
                    this._lastIndex = this._view.list_item.selectedIndex;
                };
                ArtifactMdr.prototype.onClickBtn = function () {
                    var cfg = this._listData.source[this._view.list_item.selectedIndex];
                    var bool = this._proxy.checkBuweiHint(cfg.index);
                    if (!bool) {
                        game.PromptBox.getIns().show("暂无可升级部位");
                        return;
                    }
                    this._proxy.c2s_huanggu_shenqi_oper(1, cfg.index);
                };
                ArtifactMdr.prototype.onClickSkill = function (e) {
                    var _this = this;
                    var cfg = this._listData.source[this._view.list_item.selectedIndex];
                    var skillId = cfg.skill_id[e.itemIndex];
                    var isAct = this._proxy.getSkillLevel(cfg.index, skillId) > 0;
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "07" /* ArtifactBuff */, {
                        confirm: Handler.alloc(this, function () {
                            //激活技能
                            _this._proxy.c2s_huanggu_shenqi_oper(4, cfg.index, e.itemIndex + 1);
                        }),
                        index: cfg.index,
                        skillId: skillId,
                        isAct: isAct,
                    });
                };
                ArtifactMdr.prototype.onClickSuit = function (e) {
                    var cfg = this._listData.source[this._view.list_item.selectedIndex];
                    if (this.isUp) {
                        this._proxy.c2s_huanggu_shenqi_oper(3, cfg.index);
                    }
                    else {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "08" /* ArtifactTips */, { index: cfg.index });
                    }
                };
                ArtifactMdr.prototype.onClickItem = function (e) {
                    var cfg = this._listData.source[this._view.list_item.selectedIndex];
                    for (var pos = 1; pos <= this.len; pos++) {
                        if (e.currentTarget == this._view["item_" + pos]) {
                            mod.ViewMgr.getIns().showSecondPop("61" /* More */, "06" /* ArtifactBuwei */, { index: cfg.index, pos: pos });
                            return;
                        }
                    }
                };
                ArtifactMdr.prototype.onClickDesc = function () {
                    var cfg = this._listData.source[this._view.list_item.selectedIndex];
                    var info = this._proxy.getInfo(cfg.index);
                    var attr = info && info.attr;
                    mod.ViewMgr.getIns().showAttrTips(game.getLanById("huuangushenqi_tips2" /* huuangushenqi_tips2 */), attr);
                };
                ArtifactMdr.prototype.onUpdateHint = function (n) {
                    var data = n.body;
                    var root = ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "05" /* SkyPalace */];
                    if (data.node.indexOf(mod.HintMgr.getType(root)) == -1) {
                        return;
                    }
                    for (var _i = 0, _a = this._listData.source; _i < _a.length; _i++) {
                        var cfg = _a[_i];
                        if (data.node == mod.HintMgr.getType(root.concat(["" + cfg.index]))) {
                            this._listData.itemUpdated(cfg);
                            break;
                        }
                    }
                };
                return ArtifactMdr;
            }(game.MdrBase));
            more.ArtifactMdr = ArtifactMdr;
            __reflect(ArtifactMdr.prototype, "game.mod.more.ArtifactMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArtifactTipsMdr = /** @class */ (function (_super) {
                __extends(ArtifactTipsMdr, _super);
                function ArtifactTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ArtifactTipsView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ArtifactTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(244 /* SkyPalace */);
                };
                ArtifactTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                ArtifactTipsMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                };
                ArtifactTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                ArtifactTipsMdr.prototype.updateView = function () {
                    this.updateTopView();
                    this.updateMiddleView();
                };
                ArtifactTipsMdr.prototype.updateTopView = function () {
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, this._showArgs.index);
                    this._view.qualityTips.updateShow(cfg.quality);
                    this._view.lb_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name, game.ColorUtil.getColorByQuality1(cfg.quality)));
                    var info = this._proxy.getInfo(this._showArgs.index);
                    // this._view.img_status.visible = !info || !info.level;
                    this._view.img_status.source = !info || !info.level ? "weijihuo" : "yijihuo";
                    this._view.img_icon.source = "shenqi_" + cfg.index;
                };
                ArtifactTipsMdr.prototype.updateMiddleView = function () {
                    var info = this._proxy.getInfo(this._showArgs.index);
                    this._view.artifact_item.setData(this._showArgs.index);
                    var attr = info && info.attr;
                    this._view.power.setPowerValue(attr && attr.showpower && attr.showpower.toNumber() || 0);
                    var strs = [];
                    var cfg = game.getConfigByNameId("huanggu_shenqi.json" /* HuangguShenqi */, this._showArgs.index);
                    for (var _i = 0, _a = cfg.skill_id; _i < _a.length; _i++) {
                        var id = _a[_i];
                        var skill = game.getConfigByNameId("battle_skill.json" /* Skill */, id);
                        var level = this._proxy.getSkillLevel(this._showArgs.index, id);
                        var limit = this._proxy.getSkillAct(this._showArgs.index, id);
                        var str_lv = game.TextUtil.addColor(level ? "(" + level + "\u7EA7)" : "(" + limit + "\u7EA7\u6FC0\u6D3B)", level ? 2330156 /* GREEN */ : 16719376 /* RED */);
                        var title = "[" + skill.name + "]" + str_lv;
                        var desc = game.TextUtil.getSkillDesc(skill, level, false);
                        strs.push([title, desc]);
                    }
                    this._view.skill_item.updateShow(strs, "技能效果");
                };
                return ArtifactTipsMdr;
            }(game.MdrBase));
            more.ArtifactTipsMdr = ArtifactTipsMdr;
            __reflect(ArtifactTipsMdr.prototype, "game.mod.more.ArtifactTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var SkyPalaceMainMdr = /** @class */ (function (_super) {
                __extends(SkyPalaceMainMdr, _super);
                function SkyPalaceMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: 'huanggushenqi_',
                            mdr: more.ArtifactMdr,
                            title: "huanggushenqi_tips1" /* huanggushenqi_tips1 */,
                            bg: "huanggushenqi_bg",
                            openIdx: 1041670206 /* SkyPalace */,
                            hintTypes: ["61" /* More */, "30" /* HuangguMain */, "01" /* Huanggu */, "05" /* SkyPalace */]
                        }
                    ];
                    return _this;
                }
                return SkyPalaceMainMdr;
            }(mod.WndBaseMdr));
            more.SkyPalaceMainMdr = SkyPalaceMainMdr;
            __reflect(SkyPalaceMainMdr.prototype, "game.mod.more.SkyPalaceMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var CommonChatRender = /** @class */ (function (_super) {
                __extends(CommonChatRender, _super);
                function CommonChatRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CommonChatRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._rewardList = new ArrayCollection();
                    this.list_reward.itemRenderer = mod.Icon;
                    this.list_reward.dataProvider = this._rewardList;
                    this._proxy = facade.retMod("61" /* More */).retProxy(255 /* Huanggu */);
                    this._goddessRecordProxy = facade.retMod("61" /* More */).retProxy(259 /* GoddessRecord */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                CommonChatRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var type = data.type;
                    var desc = data.desc;
                    var reward = data.reward; //对话的奖励
                    var status = data.status; //奖励状态，RewardStatus
                    var notShowDesc = data.notShowDesc; //初始不显示文字
                    var isSelf = type == 2 /* Self */;
                    this.currentState = isSelf ? "right" : "left";
                    if (isSelf) {
                        this.head.updateMyHead();
                    }
                    else {
                        var cfgStr = this._proxy.curChatType == 1 /* Goddess */ ? "huanggu_nvshen_touxiang" : "chuangshi_nvshen_touxiang";
                        var pCfg = game.GameConfig.getParamConfigById(cfgStr);
                        var systemInfo = pCfg && pCfg.value; //头像ID、相框ID、性别1男2女
                        this.head.updateHeadShow(systemInfo[0], systemInfo[1], systemInfo[2]);
                    }
                    this.list_reward.visible = !!reward;
                    if (this.list_reward.visible) {
                        this._rewardList.source = reward.slice(0, 4);
                    }
                    this.redPoint.visible = status == 1 /* Finish */;
                    this.img_draw.visible = status == 2 /* Draw */;
                    if (notShowDesc) {
                        this.lab_txt.text = "";
                        data.notShowDesc = false;
                    }
                    else {
                        this.lab_txt.textFlow = game.TextUtil.parseHtml(desc || "");
                    }
                };
                CommonChatRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    if (data.status == 1 /* Finish */) {
                        if (this._proxy.curChatType == 1 /* Goddess */) {
                            this._proxy.c2s_huanggu_nvshen_op(5 /* ChatReward */);
                        }
                        else {
                            this._goddessRecordProxy.c2s_chuang_shi_nv_shen_system_click(2 /* ChatReward */);
                        }
                    }
                };
                return CommonChatRender;
            }(mod.BaseListenerRenderer));
            more.CommonChatRender = CommonChatRender;
            __reflect(CommonChatRender.prototype, "game.mod.more.CommonChatRender");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TouchEvent = egret.TouchEvent;
            var CommonChatSelRender = /** @class */ (function (_super) {
                __extends(CommonChatSelRender, _super);
                function CommonChatSelRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CommonChatSelRender.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    //this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_sel, this.onClick, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                CommonChatSelRender.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var desc = data.desc;
                    this.lab_txt.textFlow = game.TextUtil.parseHtml(desc);
                };
                CommonChatSelRender.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    facade.sendNt("on_goddess_chat_sel" /* ON_GODDESS_CHAT_SEL */, data);
                };
                return CommonChatSelRender;
            }(mod.BaseListenerRenderer));
            more.CommonChatSelRender = CommonChatSelRender;
            __reflect(CommonChatSelRender.prototype, "game.mod.more.CommonChatSelRender");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var EventChatView = /** @class */ (function (_super) {
                __extends(EventChatView, _super);
                function EventChatView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.EventChatSkin";
                    return _this;
                }
                return EventChatView;
            }(eui.Component));
            more.EventChatView = EventChatView;
            __reflect(EventChatView.prototype, "game.mod.more.EventChatView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoBossGridView = /** @class */ (function (_super) {
                __extends(XujieTansuoBossGridView, _super);
                function XujieTansuoBossGridView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoBossGridSkin";
                    return _this;
                }
                return XujieTansuoBossGridView;
            }(eui.Component));
            more.XujieTansuoBossGridView = XujieTansuoBossGridView;
            __reflect(XujieTansuoBossGridView.prototype, "game.mod.more.XujieTansuoBossGridView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var EventChatMdr = /** @class */ (function (_super) {
                __extends(EventChatMdr, _super);
                function EventChatMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.EventChatView);
                    _this.content = "";
                    _this.contentLen = -1;
                    _this.startContent = false;
                    return _this;
                }
                EventChatMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                };
                EventChatMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view, TouchEvent.TOUCH_TAP, this.jumpChat);
                };
                EventChatMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.isEasyHide = false;
                    this.updateView();
                };
                EventChatMdr.prototype.onHide = function () {
                    this.resetData();
                    _super.prototype.onHide.call(this);
                };
                EventChatMdr.prototype.jumpChat = function () {
                    if (this.startContent) {
                        this.contentLen = this.content.length;
                        this._view.lab_desc.textFlow = game.TextUtil.parseHtml(this.content);
                    }
                    this.isEasyHide = true;
                };
                EventChatMdr.prototype.updateView = function () {
                    var systemInfo = this._showArgs.systemInfo;
                    this._view.head.updateHeadShow(systemInfo[0], systemInfo[1], systemInfo[2]);
                    this.content = this._showArgs.desc;
                    this.startContent = true;
                    this.updateContent();
                    TimeMgr.addUpdateItem(this, 25); //用于对话文本表现
                };
                EventChatMdr.prototype.resetData = function () {
                    this.content = "";
                    this.contentLen = -1;
                    this.startContent = false;
                    this.isEasyHide = true;
                    TimeMgr.removeUpdateItem(this);
                };
                EventChatMdr.prototype.update = function (time) {
                    this.updateContent();
                };
                EventChatMdr.prototype.updateContent = function () {
                    if (this.contentLen == this.content.length) {
                        this.resetData();
                    }
                    else {
                        this.contentLen++;
                        var tmpContent = this.content.substring(0, this.contentLen);
                        this._view.lab_desc.textFlow = game.TextUtil.parseHtml(tmpContent);
                    }
                };
                return EventChatMdr;
            }(game.MdrBase));
            more.EventChatMdr = EventChatMdr;
            __reflect(EventChatMdr.prototype, "game.mod.more.EventChatMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningModel = /** @class */ (function () {
                function MiningModel() {
                    this.list = [];
                    this.total = 0;
                    this.conquer_num = 0;
                    this.dail_buy_num = 0;
                    this.rescue_num = 0;
                    this.logs = [];
                    this.lingbao_cnt = 0;
                    this.buy_list = [];
                    this.conquest_list = [];
                    this.refresh_list = false;
                }
                MiningModel.prototype.exitTeam = function () {
                    this.list = [];
                    this.total = 0;
                    this.conquer_num = 0;
                    this.team_conquest_num = null;
                    this.team_rescue_num = null;
                    this.dail_buy_num = 0;
                    this.team_buy_num = null;
                    this.team_buy_pay_num = null;
                    this.rescue_num = 0;
                    this.logs = [];
                    this.lingbao_cnt = 0;
                    this.team_lingbao_cishuxianzhi = null;
                    this.buy_list = [];
                    this.conquest_list = [];
                    this.team_lingbao_cost = null;
                    this.team_kuanmai_item = null;
                };
                return MiningModel;
            }());
            more.MiningModel = MiningModel;
            __reflect(MiningModel.prototype, "game.mod.more.MiningModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_zhandui_zhanbao_show = msg.c2s_zhandui_zhanbao_show;
            var c2s_zhandui_conquer_show = msg.c2s_zhandui_conquer_show;
            var s2c_zhandui_zhanbao_show = msg.s2c_zhandui_zhanbao_show;
            var s2c_zhandui_conquer_show = msg.s2c_zhandui_conquer_show;
            var c2s_zhandui_buy_conquer_num = msg.c2s_zhandui_buy_conquer_num;
            var s2c_zhandui_buy_conquer_num = msg.s2c_zhandui_buy_conquer_num;
            var c2s_zhandui_helot_operate = msg.c2s_zhandui_helot_operate;
            var c2s_zhandui_helot_target_show = msg.c2s_zhandui_helot_target_show;
            var s2c_zhandui_helot_target_show = msg.s2c_zhandui_helot_target_show;
            var c2s_zhandui_lingbao = msg.c2s_zhandui_lingbao;
            var s2c_zhandui_update_call_num = msg.s2c_zhandui_update_call_num;
            var c2s_zhandui_kuanzhu_show = msg.c2s_zhandui_kuanzhu_show;
            var s2c_zhandui_kuanzhu_show = msg.s2c_zhandui_kuanzhu_show;
            var c2s_zhandui_target_buy = msg.c2s_zhandui_target_buy;
            var MiningProxy = /** @class */ (function (_super) {
                __extends(MiningProxy, _super);
                function MiningProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Object.defineProperty(MiningProxy.prototype, "model", {
                    get: function () {
                        return this._model;
                    },
                    enumerable: true,
                    configurable: true
                });
                //退出战队
                MiningProxy.prototype.onExitZhanduiTeam = function () {
                    if (this._model) {
                        this._model.exitTeam();
                    }
                };
                MiningProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.MiningModel();
                    this.onProto(s2c_zhandui_zhanbao_show, this.s2c_zhandui_zhanbao_show, this);
                    this.onProto(s2c_zhandui_conquer_show, this.s2c_zhandui_conquer_show, this);
                    this.onProto(s2c_zhandui_buy_conquer_num, this.s2c_zhandui_buy_conquer_num, this);
                    this.onProto(s2c_zhandui_helot_target_show, this.s2c_zhandui_helot_target_show, this);
                    this.onProto(s2c_zhandui_update_call_num, this.s2c_zhandui_update_call_num, this);
                    this.onProto(s2c_zhandui_kuanzhu_show, this.s2c_zhandui_kuanzhu_show, this);
                };
                MiningProxy.prototype.c2s_zhandui_zhanbao_show = function () {
                    var msg = new c2s_zhandui_zhanbao_show();
                    this.sendProto(msg);
                };
                MiningProxy.prototype.c2s_zhandui_conquer_show = function () {
                    var msg = new c2s_zhandui_conquer_show();
                    this.sendProto(msg);
                };
                MiningProxy.prototype.c2s_zhandui_buy_conquer_num = function (count) {
                    var msg = new c2s_zhandui_buy_conquer_num();
                    msg.count = count;
                    this.sendProto(msg);
                };
                MiningProxy.prototype.c2s_zhandui_helot_operate = function (type, role_id, kuanzhu_id) {
                    if (kuanzhu_id === void 0) { kuanzhu_id = game.RoleVo.ins.role_id; }
                    var msg = new c2s_zhandui_helot_operate();
                    msg.type = type;
                    msg.role_id = role_id;
                    msg.kuanzhu_id = kuanzhu_id;
                    this.sendProto(msg);
                };
                MiningProxy.prototype.c2s_zhandui_helot_target_show = function () {
                    var msg = new c2s_zhandui_helot_target_show();
                    this.sendProto(msg);
                };
                MiningProxy.prototype.c2s_zhandui_target_buy = function (index) {
                    var msg = new c2s_zhandui_target_buy();
                    msg.index = index;
                    this.sendProto(msg);
                };
                MiningProxy.prototype.c2s_zhandui_lingbao = function () {
                    var msg = new c2s_zhandui_lingbao();
                    this.sendProto(msg);
                };
                /**type2用于矿脉界面领取奖励 */
                MiningProxy.prototype.c2s_zhandui_kuanzhu_show = function (type) {
                    var msg = new c2s_zhandui_kuanzhu_show();
                    msg.type = type;
                    this.sendProto(msg);
                };
                MiningProxy.prototype.s2c_zhandui_zhanbao_show = function (n) {
                    var msg = n.body;
                    if (msg.logs) {
                        this._model.logs = msg.logs;
                    }
                    this.sendNt("on_update_mining_logs_info" /* ON_UPDATE_MINING_LOGS_INFO */);
                };
                MiningProxy.prototype.s2c_zhandui_conquer_show = function (n) {
                    var msg = n.body;
                    this._model.conquer_num = msg.conquer_num || 0;
                    this._model.dail_buy_num = msg.dail_buy_num || 0;
                    this._model.conquest_list = msg.list || [];
                    this.sendNt("on_update_mining_fight_info" /* ON_UPDATE_MINING_FIGHT_INFO */);
                };
                MiningProxy.prototype.s2c_zhandui_buy_conquer_num = function (n) {
                    var msg = n.body;
                    this._model.conquer_num = msg.conquer_num || 0;
                    this._model.dail_buy_num = msg.dail_buy_num || 0;
                    this.sendNt("on_update_mining_cnt_info" /* ON_UPDATE_MINING_CNT_INFO */);
                };
                MiningProxy.prototype.s2c_zhandui_helot_target_show = function (n) {
                    var msg = n.body;
                    this._model.buy_list = msg.buy_list || [];
                    this.sendNt("on_update_mining_gift_info" /* ON_UPDATE_MINING_GIFT_INFO */);
                };
                MiningProxy.prototype.s2c_zhandui_update_call_num = function (n) {
                    var msg = n.body;
                    this._model.lingbao_cnt = msg.num || 0;
                    this.sendNt("on_update_mining_lingbao_cnt_info" /* ON_UPDATE_MINING_LINGBAO_CNT_INFO */);
                };
                MiningProxy.prototype.s2c_zhandui_kuanzhu_show = function (n) {
                    var msg = n.body;
                    if (msg.list) {
                        this._model.list = msg.list;
                    }
                    this._model.total = msg.total || 0;
                    this._model.conquer_num = msg.conquer_num || 0;
                    this._model.rescue_num = msg.rescue_num || 0;
                    this.onUpdateHint();
                    this.sendNt("on_update_mining_master_info" /* ON_UPDATE_MINING_MASTER_INFO */);
                };
                Object.defineProperty(MiningProxy.prototype, "list", {
                    /**------------------------- 协议end ----------------------------- */
                    get: function () {
                        return this._model.list.sort(function (a, b) {
                            if (a.memeber.role_id.eq(game.RoleVo.ins.role_id)) {
                                return -1;
                            }
                            else if (b.memeber.role_id.eq(game.RoleVo.ins.role_id)) {
                                return 1;
                            }
                            else {
                                return 0;
                            }
                        }) || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "conquest_list", {
                    get: function () {
                        if (this.my_info && this.my_info.members) {
                            var members_1 = this.my_info.members;
                            return this._model.conquest_list.filter(function (v) {
                                for (var _i = 0, members_2 = members_1; _i < members_2.length; _i++) {
                                    var member = members_2[_i];
                                    if (member.role_id.eq(v.data.role_id)) {
                                        return false;
                                    }
                                }
                                return true;
                            }) || [];
                        }
                        return this._model.conquest_list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "total", {
                    get: function () {
                        return this._model.total || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "rescue_num", {
                    get: function () {
                        return this._model.rescue_num || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "conquer_num", {
                    get: function () {
                        return this._model.conquer_num || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "dail_buy_num", {
                    get: function () {
                        return this._model.dail_buy_num || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "team_conquest_num", {
                    get: function () {
                        if (!this._model.team_conquest_num) {
                            var param = game.GameConfig.getParamConfigById("team_conquest_num");
                            this._model.team_conquest_num = param.value;
                        }
                        return this._model.team_conquest_num;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "team_rescue_num", {
                    get: function () {
                        if (!this._model.team_rescue_num) {
                            var param = game.GameConfig.getParamConfigById("team_rescue_num");
                            this._model.team_rescue_num = param.value;
                        }
                        return this._model.team_rescue_num;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "team_buy_num", {
                    get: function () {
                        if (!this._model.team_buy_num) {
                            var param = game.GameConfig.getParamConfigById("team_buy_num");
                            this._model.team_buy_num = param.value[2];
                        }
                        return this._model.team_buy_num;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "team_buy_pay_num", {
                    get: function () {
                        if (!this._model.team_buy_pay_num) {
                            var param = game.GameConfig.getParamConfigById("team_buy_num");
                            this._model.team_buy_pay_num = param.value[1];
                        }
                        return this._model.team_buy_pay_num;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "team_lingbao_cost", {
                    get: function () {
                        if (!this._model.team_lingbao_cost) {
                            var param = game.GameConfig.getParamConfigById("team_lingbao_cost");
                            this._model.team_lingbao_cost = param.value;
                        }
                        return this._model.team_lingbao_cost;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "logs", {
                    get: function () {
                        return this._model.logs || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "my_info", {
                    get: function () {
                        return this._model.list.find(function (v) {
                            return v.memeber.role_id.eq(game.RoleVo.ins.role_id);
                        });
                    },
                    enumerable: true,
                    configurable: true
                });
                MiningProxy.prototype.getSlaveOper = function (roleId, oper) {
                    var info = this.my_info;
                    if (!info || !info.oper_list) {
                        return null;
                    }
                    var opers = info.oper_list.find(function (v) {
                        return v.role_id.eq(roleId);
                    });
                    if (!oper) {
                        return opers;
                    }
                    return opers && opers.list && opers.list.indexOf(oper) > -1;
                };
                Object.defineProperty(MiningProxy.prototype, "my_slave_list", {
                    get: function () {
                        if (!this.my_info) {
                            return [];
                        }
                        return this.my_info.members;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "slave_list", {
                    /**战队其他队员奴隶 */
                    get: function () {
                        var list = this._model.list.filter(function (v) {
                            return !v.memeber.role_id.eq(game.RoleVo.ins.role_id);
                        });
                        var slave_list = [];
                        if (!list || !list.length) {
                            return slave_list;
                        }
                        for (var i in list) {
                            var info = list[i];
                            if (info && info.members) {
                                slave_list.push.apply(slave_list, info.members);
                            }
                        }
                        return slave_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "lingbao_cnt", {
                    get: function () {
                        return this._model.lingbao_cnt;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "team_lingbao_cishuxianzhi", {
                    get: function () {
                        if (!this._model.team_lingbao_cishuxianzhi) {
                            var param = game.GameConfig.getParamConfigById("team_lingbao_cishuxianzhi");
                            this._model.team_lingbao_cishuxianzhi = param.value;
                        }
                        return this._model.team_lingbao_cishuxianzhi;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "mdrType", {
                    get: function () {
                        return this._model.mdrType || 1;
                    },
                    set: function (v) {
                        this._model.mdrType = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(MiningProxy.prototype, "refresh_list", {
                    get: function () {
                        return this._model.refresh_list;
                    },
                    set: function (v) {
                        this._model.refresh_list = v;
                    },
                    enumerable: true,
                    configurable: true
                });
                MiningProxy.prototype.getGiftList = function (type) {
                    var cfgArr = game.getConfigListByName("helot_target_reward.json" /* HelotTargetReward */);
                    var list = [];
                    for (var _i = 0, cfgArr_10 = cfgArr; _i < cfgArr_10.length; _i++) {
                        var cfg = cfgArr_10[_i];
                        if (cfg.type == type) {
                            list.push(cfg);
                        }
                    }
                    return list;
                };
                MiningProxy.prototype.getGiftBought = function (index) {
                    return this._model.buy_list.indexOf(index) > -1;
                };
                Object.defineProperty(MiningProxy.prototype, "team_kuanmai_item", {
                    get: function () {
                        if (!this._model.team_kuanmai_item) {
                            var param = game.GameConfig.getParamConfigById("team_kuanmai_item");
                            this._model.team_kuanmai_item = param.value;
                        }
                        return this._model.team_kuanmai_item;
                    },
                    enumerable: true,
                    configurable: true
                });
                MiningProxy.prototype.onUpdateHint = function () {
                    var root = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "40" /* MiningMain */];
                    var info = this.my_info;
                    if (!info) {
                        mod.HintMgr.setHint(false, root);
                        return;
                    }
                    /**可收奴隶 */
                    var bool = (!this.my_slave_list || this.my_slave_list.length < 2) && this.conquer_num > 0;
                    if (bool) {
                        mod.HintMgr.setHint(bool, root.concat(["01" /* TabBtnType01 */]));
                        mod.HintMgr.setHint(bool, root.concat(["02" /* TabBtnType02 */]));
                        return;
                    }
                    else {
                        mod.HintMgr.setHint(bool, root.concat(["01" /* TabBtnType01 */]));
                    }
                    if (this.getHintByLingbao()) {
                        mod.HintMgr.setHint(true, root.concat(["02" /* TabBtnType02 */]));
                        return;
                    }
                    if (!this.my_slave_list) {
                        mod.HintMgr.setHint(false, root.concat(["02" /* TabBtnType02 */]));
                        return;
                    }
                    if (!info.oper_list || !info.oper_list.length) {
                        mod.HintMgr.setHint(true, root.concat(["02" /* TabBtnType02 */]));
                        return;
                    }
                    for (var _i = 0, _a = info.oper_list; _i < _a.length; _i++) {
                        var opers = _a[_i];
                        if (!opers.list || opers.list.length < 3) {
                            mod.HintMgr.setHint(true, root.concat(["02" /* TabBtnType02 */]));
                            return;
                        }
                    }
                    mod.HintMgr.setHint(false, root.concat(["02" /* TabBtnType02 */]));
                };
                MiningProxy.prototype.getHintByLingbao = function () {
                    return this.lingbao_cnt < this.team_lingbao_cishuxianzhi && mod.BagUtil.checkPropCnt(this.team_lingbao_cost[0], this.team_lingbao_cost[1]);
                };
                return MiningProxy;
            }(game.ProxyBase));
            more.MiningProxy = MiningProxy;
            __reflect(MiningProxy.prototype, "game.mod.more.MiningProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanModel = /** @class */ (function () {
                function XujieJitanModel() {
                    var _a;
                    /** 供奉的道具列表（顺序的） */
                    this.prop_list = [];
                    /** 已激活幻化的列表 */
                    this.ids = {};
                    /** 已经领取过的礼包索引列表（前端根据等级和列表判断是否可以领取） */
                    this.index_get_list = [];
                    /** 祭坛等级 */
                    this.jitan_level = 0;
                    this.jitanHintPath = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "01" /* Btn1 */];
                    this.lingbaoHintPaths = (_a = {},
                        _a[1] = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "02" /* Btn2 */, "01" /* TabBtnType01 */],
                        _a[2] = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "02" /* Btn2 */, "02" /* TabBtnType02 */],
                        _a);
                }
                XujieJitanModel.prototype.exitTeam = function () {
                    this.prop_list = [];
                    this.total_speed_time = null;
                    this.value = null;
                    this.ids = {};
                    this.now_use_id = null;
                    this.index_get_list = [];
                    this.jitan_level = 0;
                    this.shuijin_value = null;
                    mod.HintMgr.setHint(false, this.jitanHintPath);
                    mod.HintMgr.setHint(false, this.lingbaoHintPaths[1]);
                    mod.HintMgr.setHint(false, this.lingbaoHintPaths[2]);
                };
                return XujieJitanModel;
            }());
            more.XujieJitanModel = XujieJitanModel;
            __reflect(XujieJitanModel.prototype, "game.mod.more.XujieJitanModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var s2c_zhandui_jitan_base_info = msg.s2c_zhandui_jitan_base_info;
            var s2c_zhandui_jitan_gongfeng_info = msg.s2c_zhandui_jitan_gongfeng_info;
            var TimeMgr = base.TimeMgr;
            var c2s_zhandui_button_click = msg.c2s_zhandui_button_click;
            var facade = base.facade;
            /**
             * @description 墟界祭坛系统
             */
            var XujieJitanProxy = /** @class */ (function (_super) {
                __extends(XujieJitanProxy, _super);
                function XujieJitanProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XujieJitanProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.XujieJitanModel();
                    this.onProto(s2c_zhandui_jitan_base_info, this.s2c_zhandui_jitan_base_info, this);
                    this.onProto(s2c_zhandui_jitan_gongfeng_info, this.s2c_zhandui_jitan_gongfeng_info, this);
                    facade.onNt("on_update_amass_info" /* ON_UPDATE_AMASS_INFO */, this.updateLingbaoHint, this);
                };
                //退出战队
                XujieJitanProxy.prototype.onExitZhanduiTeam = function () {
                    if (this._model) {
                        this._model.exitTeam();
                    }
                };
                /**
                 * 200 供奉道具和一键放入
                 * 201回收道具
                 * 202道具加速
                 * 203领取道具供奉奖励
                 * 204幻化激活升级
                 * 205使用幻化
                 * 206领取等级礼包
                 * 207请求战队祭坛供奉信息
                 * @param type
                 * @param index 206领取等级礼包
                 * @param use_id (204幻化激活升级 205使用幻化传0表示卸下)
                 * @param idxs 放入供奉id的列表(200供奉道具和一键放入)
                 * @param oper 202战队祭坛供奉加速：1表示单个加速，2表示全部加速   203领取道具供奉奖励1单个领取 2全部领取
                 * @param pos 201回收道具的位置  203领取道具的位置
                 */
                XujieJitanProxy.prototype.sendJitanButtonClick = function (type, index, use_id, idxs, oper, pos) {
                    var msg = new c2s_zhandui_button_click();
                    msg.button_type = type;
                    if (index != null) {
                        msg.index = index;
                    }
                    if (use_id != null) {
                        msg.use_id = Long.fromValue(use_id);
                    }
                    if (idxs != null) {
                        var longIdxs = [];
                        for (var _i = 0, idxs_1 = idxs; _i < idxs_1.length; _i++) {
                            var idx = idxs_1[_i];
                            longIdxs.push(Long.fromValue(idx));
                        }
                        msg.idxs = longIdxs;
                    }
                    if (oper != null) {
                        msg.oper = oper;
                    }
                    if (pos != null) {
                        msg.pos = pos;
                    }
                    this.sendProto(msg);
                };
                XujieJitanProxy.prototype.s2c_zhandui_jitan_base_info = function (n) {
                    var msg = n.body;
                    if (msg.value != null) {
                        this._model.value = msg.value;
                    }
                    if (msg.now_use_id != null) {
                        this._model.now_use_id = msg.now_use_id;
                    }
                    if (msg.index_get_list != null) {
                        this._model.index_get_list = msg.index_get_list;
                    }
                    if (msg.jitan_level != null) {
                        this._model.jitan_level = msg.jitan_level;
                    }
                    if (msg.ids != null) {
                        for (var _i = 0, _a = msg.ids; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.ids[item.id.toNumber()] = item;
                        }
                    }
                    if (msg.shuijin_value != null) {
                        this._model.shuijin_value = msg.shuijin_value;
                    }
                    this.updateJitanHint();
                    this.sendNt("on_update_zhandui_jitan_base_info" /* ON_UPDATE_ZHANDUI_JITAN_BASE_INFO */);
                };
                XujieJitanProxy.prototype.s2c_zhandui_jitan_gongfeng_info = function (n) {
                    var msg = n.body;
                    this._model.prop_list = msg.prop_list != null ? msg.prop_list : [];
                    this._model.total_speed_time = msg.total_speed_time != null ? msg.total_speed_time : null;
                    game.RoleVo.ins.setValueByKey("zhandui_jitan_total_speed_time" /* zhandui_jitan_total_speed_time */, this.total_speed_time); //设置到角色身上，用于mdr顶部道具变化
                    this.updateJitanHint();
                    this.sendNt("on_update_zhandui_jitan_gongfeng_info" /* ON_UPDATE_ZHANDUI_JITAN_GONGFENG_INFO */);
                };
                /**================================ 协议end ================================*/
                //todo 待处理
                XujieJitanProxy.prototype.getGainId = function () {
                    return 1453502001;
                };
                //礼包是否已领取
                XujieJitanProxy.prototype.isGiftReceived = function (idx) {
                    return this._model.index_get_list.indexOf(idx) > -1;
                };
                //礼包配置
                XujieJitanProxy.prototype.getGiftConfig = function (idx) {
                    return game.getConfigByNameId("zhandui_jitan_libao.json" /* ZhanduiJitanLibao */, idx);
                };
                //礼包可否领取
                XujieJitanProxy.prototype.canReceiveGift = function (idx) {
                    if (this.isGiftReceived(idx)) {
                        return false;
                    }
                    var cfg = this.getGiftConfig(idx);
                    if (!cfg) {
                        return false;
                    }
                    var needLv = cfg.level;
                    var curLv = this.jitan_level;
                    return curLv >= needLv;
                };
                Object.defineProperty(XujieJitanProxy.prototype, "jitan_level", {
                    //祭坛等级
                    get: function () {
                        return this._model.jitan_level;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieJitanProxy.prototype, "value", {
                    //战队拥有的能源石
                    get: function () {
                        return this._model.value && this._model.value.toNumber() || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieJitanProxy.prototype, "shuijin_value", {
                    //战队拥有的水晶数量
                    get: function () {
                        return this._model.shuijin_value && this._model.shuijin_value.toNumber() || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieJitanProxy.prototype, "prop_list", {
                    //供奉数据
                    get: function () {
                        return this._model.prop_list || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieJitanProxy.prototype, "total_speed_time", {
                    //累计加速时间
                    get: function () {
                        return this._model.total_speed_time ? this._model.total_speed_time.toNumber() : 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieJitanProxy.prototype, "now_use_id", {
                    //当前使用的幻化id
                    get: function () {
                        return this._model.now_use_id ? this._model.now_use_id.toNumber() : 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                //获取展示模型配置
                XujieJitanProxy.prototype.getHuanhuaCfg = function (index) {
                    if (index) {
                        return game.getConfigByNameId("zhandui_jitan_huanhua.json" /* ZhanduiJitanHuanhua */, index);
                    }
                    var curIndex = this._model.now_use_id;
                    if (curIndex && curIndex.notEquals(Long.ZERO)) {
                        return game.getConfigByNameId("zhandui_jitan_huanhua.json" /* ZhanduiJitanHuanhua */, curIndex.toNumber());
                    }
                    var list = game.getConfigListByName("zhandui_jitan_huanhua.json" /* ZhanduiJitanHuanhua */);
                    return list[0];
                };
                //是否激活
                XujieJitanProxy.prototype.isHuanhuaActed = function (index) {
                    var item = this._model.ids[index];
                    return item && item.star > 0;
                };
                //幻化信息
                XujieJitanProxy.prototype.getHuanhuaInfo = function (index) {
                    return this._model.ids[index];
                };
                //最大幻化星级
                XujieJitanProxy.prototype.isMaxHuanhuaStar = function (index) {
                    var info = this.getHuanhuaInfo(index);
                    var star = info && info.star || 0;
                    var cfg = this.getHuanhuaCfg(index);
                    if (!cfg || !cfg.costs) {
                        return false;
                    }
                    var maxStar = cfg.costs.length;
                    return star >= maxStar;
                };
                //幻化，能否激活或升星
                XujieJitanProxy.prototype.canActOrUpstar = function (index, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    //队长判断
                    var zhanduiPorxy = game.getProxy("61" /* More */, 251 /* Zhandui */);
                    if (zhanduiPorxy && !zhanduiPorxy.isCaption()) {
                        //仅队长可操作点击激活和升星
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("zhandui_tips10" /* zhandui_tips10 */));
                        }
                        return false;
                    }
                    //星级判断
                    var info = this.getHuanhuaInfo(index);
                    var star = info && info.star || 0;
                    var huanhuaCfg = this.getHuanhuaCfg(index);
                    var maxStar = huanhuaCfg.costs.length;
                    if (star >= maxStar) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("lingqi_tips8" /* lingqi_tips8 */));
                        }
                        return false;
                    }
                    //消耗判断
                    var cost = huanhuaCfg.costs[star];
                    var costCnt = cost[1]; //升星所需值
                    var curCnt = this.shuijin_value; //战队拥有的水晶数量
                    if (curCnt < costCnt) {
                        if (isTips) {
                            mod.ViewMgr.getIns().showGainWaysTips(cost[0]);
                        }
                        return false;
                    }
                    return curCnt >= costCnt;
                };
                //是否祭坛等级满级
                XujieJitanProxy.prototype.isMaxLv = function () {
                    var lv = this.jitan_level;
                    var maxLv = this.getMaxLv();
                    return lv >= maxLv;
                };
                //最大祭坛等级
                XujieJitanProxy.prototype.getMaxLv = function () {
                    var cfgs = game.getConfigListByName("zhandui_jitan_dengji.json" /* ZhanduiJitanDengji */);
                    return cfgs && cfgs.length || 0;
                };
                //等级配置，
                XujieJitanProxy.prototype.getLvConfig = function (lv) {
                    if (lv == null) {
                        lv = this.jitan_level + 1;
                    }
                    return game.getConfigByNameId("zhandui_jitan_dengji.json" /* ZhanduiJitanDengji */, lv);
                };
                //祭坛等级提升
                XujieJitanProxy.prototype.canUpstar = function (isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var nextCfg = this.getLvConfig();
                    if (!nextCfg) {
                        if (isTips) {
                            game.PromptBox.getIns().show("\u5F53\u524D\u796D\u4E3B\u5DF2\u6EE1\u661F");
                        }
                        return false;
                    }
                    //消耗判断
                    var costCnt = nextCfg.cost[1]; //当次提升所需值
                    var curCnt = this.value; //战队拥有的能源石
                    if (curCnt < costCnt) {
                        if (isTips) {
                            mod.ViewMgr.getIns().showGainWaysTips(nextCfg.cost[0]);
                        }
                        return false;
                    }
                    return curCnt >= costCnt;
                };
                //获取空格数量
                XujieJitanProxy.prototype.getSpaceCount = function () {
                    var listCnt = this.prop_list.length;
                    return game.XujieJitanSacrificeCnt - listCnt;
                };
                //有正在献祭的道具否
                XujieJitanProxy.prototype.getSacrificeInfo = function () {
                    if (!this.prop_list || !this.prop_list.length) {
                        return null;
                    }
                    var curTime = TimeMgr.time.serverTimeSecond;
                    for (var _i = 0, _a = this.prop_list; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (item && item.endtime.toNumber() > curTime) {
                            return item;
                        }
                    }
                    return null;
                };
                //9类型背包数据，1为加速道具，2为献祭道具
                XujieJitanProxy.prototype.getBagDatas = function (subType) {
                    if (subType === void 0) { subType = 2; }
                    var datas = mod.BagUtil.getBagsByType(9 /* XujieJitan */) || [];
                    // let rst: PropData[] = [];
                    // for (let item of datas) {
                    //     if (item.propSubType == subType) {
                    //         rst.push(item);
                    //     }
                    // }
                    // return rst;
                    return datas.filter(function (a) { return a.propSubType == subType; });
                };
                //献祭完毕所有，所需时间
                XujieJitanProxy.prototype.getTotalPropTime = function () {
                    var propList = this.prop_list;
                    if (!propList || !propList.length) {
                        return 0;
                    }
                    var rst = 0;
                    // for (let prop of propList) {
                    //     if (!prop) {
                    //         continue;
                    //     }
                    //     let endTime = prop.endtime.toNumber();
                    //     let disTime = Math.max(0, endTime - TimeMgr.time.serverTimeSecond);
                    //     rst += disTime;
                    // }
                    propList.forEach(function (a) {
                        var endTime = a.endtime.toNumber();
                        if (endTime == 0) {
                            //为0表示正在排队的，读配置时间
                            var propCfg = game.GameConfig.getPropConfigById(a.idx.toNumber());
                            if (propCfg && propCfg.param1) {
                                var second = propCfg.param1[0][0];
                                rst += second;
                            }
                        }
                        else {
                            var dis = Math.max(0, endTime - TimeMgr.time.serverTimeSecond);
                            rst += dis;
                        }
                    });
                    return rst;
                };
                //礼包红点
                XujieJitanProxy.prototype.getLibaoHint = function () {
                    var curLv = this.jitan_level;
                    var cfgs = game.getConfigListByName("zhandui_jitan_libao.json" /* ZhanduiJitanLibao */);
                    var receivedList = this._model.index_get_list || [];
                    if (receivedList.length >= cfgs.length) {
                        return false;
                    }
                    for (var _i = 0, cfgs_9 = cfgs; _i < cfgs_9.length; _i++) {
                        var cfg = cfgs_9[_i];
                        if (receivedList.indexOf(cfg.index) > -1) {
                            continue;
                        }
                        if (curLv >= cfg.level) {
                            return true;
                        }
                    }
                    return false;
                };
                //幻化红点
                XujieJitanProxy.prototype.getHuanhuaHint = function () {
                    var cfgs = game.getConfigListByName("zhandui_jitan_huanhua.json" /* ZhanduiJitanHuanhua */);
                    for (var _i = 0, cfgs_10 = cfgs; _i < cfgs_10.length; _i++) {
                        var cfg = cfgs_10[_i];
                        if (this.canActOrUpstar(cfg.index)) {
                            return true;
                        }
                    }
                    return false;
                };
                //献祭红点
                XujieJitanProxy.prototype.getSacrificeHint = function () {
                    var propList = this.prop_list;
                    var curTime = TimeMgr.time.serverTimeSecond;
                    for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {
                        var item = propList_1[_i];
                        if (!item) {
                            continue;
                        }
                        var endTime = item.endtime.toNumber();
                        if (endTime && curTime >= endTime) {
                            return true; //领取奖励红点
                        }
                    }
                    var spaceCnt = this.getSpaceCount();
                    if (spaceCnt <= 0) {
                        return false;
                    }
                    //背包有道具时候，可献祭红点
                    var bagDatas = this.getBagDatas();
                    return bagDatas && bagDatas.length > 0;
                };
                //祭坛红点
                XujieJitanProxy.prototype.updateJitanHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670226 /* XujieJitan */)) {
                        return;
                    }
                    var hint = this.getLibaoHint() || this.getHuanhuaHint() || this.getSacrificeHint();
                    mod.HintMgr.setHint(hint, this._model.jitanHintPath);
                };
                //灵宝红点
                XujieJitanProxy.prototype.updateLingbaoHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670226 /* XujieJitan */)) {
                        return;
                    }
                    var classId = 3 /* Amass3 */;
                    var proxy = game.getProxy("57" /* Consecrate */, 225 /* Consecrate */);
                    var types = proxy.getAmassTypes(classId) || [];
                    for (var i = 0; i < types.length; i++) {
                        var type = types[i];
                        var hint = proxy.canAmassTypeUp(classId, type);
                        mod.HintMgr.setHint(hint, this._model.lingbaoHintPaths[i + 1]);
                    }
                };
                XujieJitanProxy.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(9 /* XujieJitan */) > -1) {
                        this.updateJitanHint();
                    }
                };
                XujieJitanProxy.prototype.onBagUpdateByPropType = function (n) {
                    var types = n.body;
                    if (types.indexOf(36 /* ZhanduiLingbao */) > -1) {
                        this.updateLingbaoHint();
                    }
                };
                return XujieJitanProxy;
            }(game.ProxyBase));
            more.XujieJitanProxy = XujieJitanProxy;
            __reflect(XujieJitanProxy.prototype, "game.mod.more.XujieJitanProxy");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoModel = /** @class */ (function () {
                function XujieTansuoModel() {
                    /** 当前参与搜索的战队数量 */
                    this.team_count = 0;
                    // /** 区域层数据 */
                    // public map_datas: msg.xujietansuo_struct = null;
                    // /**区域 数据缓存*/
                    // public map_datas_map: { [type: number]: msg.xujietansuo_struct } = {};
                    /**区域-层 数据缓存*/
                    this.map_layer_datas_map = {};
                    /** 战利品记录 */
                    this.rewards_records = [];
                    /**阵容军团列表*/
                    this.legion_list = {};
                    //探索区域红点
                    this.hintPath1 = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */, "01" /* Btn1 */];
                    //探索令红点
                    this.hintPath2 = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */, "02" /* Btn2 */];
                    //探索层数红点
                    this.layerHintPath = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */, "01" /* Btn1 */, "01" /* TabBtnType01 */];
                }
                XujieTansuoModel.prototype.exitTeam = function () {
                    this.team_count = 0;
                    this.map_layer_datas_map = {};
                    this.rewards_records = [];
                    this.now_map_index = null;
                    this.now_layer = null;
                    this.expedition_info = null;
                    this.legion_list = {};
                    this.legion_attrs = null;
                    this.tansuo_ranks = null;
                    this.my_team_rank = null;
                    this.round_records = null;
                    this.myself_info = null;
                    this.boss_id = null;
                    this.target_info = null;
                    mod.HintMgr.setHint(false, this.hintPath1);
                    mod.HintMgr.setHint(false, this.hintPath2);
                    mod.HintMgr.setHint(false, this.layerHintPath);
                };
                return XujieTansuoModel;
            }());
            more.XujieTansuoModel = XujieTansuoModel;
            __reflect(XujieTansuoModel.prototype, "game.mod.more.XujieTansuoModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_zhandui_xujietansuo_quyu_info = msg.c2s_zhandui_xujietansuo_quyu_info;
            var s2c_zhandui_xujietansuo_base_info = msg.s2c_zhandui_xujietansuo_base_info;
            var c2s_zhandui_xujietansuo_role_click = msg.c2s_zhandui_xujietansuo_role_click;
            var TimeMgr = base.TimeMgr;
            var zhandui_legion_type_struct = msg.zhandui_legion_type_struct;
            var c2s_zhandui_legion_shangzheng = msg.c2s_zhandui_legion_shangzheng;
            var s2c_zhandui_legion_shangzheng_list = msg.s2c_zhandui_legion_shangzheng_list;
            var s2c_zhandui_legion_result_info = msg.s2c_zhandui_legion_result_info;
            var s2c_zhandui_legion_battle_info = msg.s2c_zhandui_legion_battle_info;
            var facade = base.facade;
            var s2c_zhandui_xujietansuo_records_info = msg.s2c_zhandui_xujietansuo_records_info;
            var s2c_zhandui_legion_rank_list = msg.s2c_zhandui_legion_rank_list;
            var s2c_zhandui_xujietansuo_single_grid = msg.s2c_zhandui_xujietansuo_single_grid;
            var s2c_zhandui_kuanmai_pvp_ret = msg.s2c_zhandui_kuanmai_pvp_ret;
            /**
             * @description 墟界探索系统
             */
            var XujieTansuoProxy = /** @class */ (function (_super) {
                __extends(XujieTansuoProxy, _super);
                function XujieTansuoProxy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //每个格子的配置数据 index = type * 1000000 + layer * 1000 + row * 10 + col
                    _this._gridColMap = {};
                    //区域-层-排 是否激活缓存 index = type * 100000 + layer * 100 + row
                    _this.getProgressRowMap = {};
                    _this._maxLayerMap = {};
                    _this._gameOrderHint = false;
                    return _this;
                }
                XujieTansuoProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.XujieTansuoModel();
                    this.onProto(s2c_zhandui_xujietansuo_base_info, this.s2c_zhandui_xujietansuo_base_info, this);
                    this.onProto(s2c_zhandui_xujietansuo_records_info, this.s2c_zhandui_xujietansuo_records_info, this);
                    this.onProto(s2c_zhandui_legion_shangzheng_list, this.s2c_zhandui_legion_shangzheng_list, this);
                    this.onProto(s2c_zhandui_legion_battle_info, this.s2c_zhandui_legion_battle_info, this);
                    this.onProto(s2c_zhandui_legion_result_info, this.s2c_zhandui_legion_result_info, this);
                    this.onProto(s2c_zhandui_legion_rank_list, this.s2c_zhandui_legion_rank_list, this);
                    this.onProto(s2c_zhandui_xujietansuo_single_grid, this.s2c_zhandui_xujietansuo_single_grid, this);
                    this.onProto(s2c_zhandui_kuanmai_pvp_ret, this.s2c_zhandui_kuanmai_pvp_ret, this);
                };
                //退出战队
                XujieTansuoProxy.prototype.onExitZhanduiTeam = function () {
                    if (this._model) {
                        this._model.exitTeam();
                    }
                };
                /// 请求某个地图区域信息
                XujieTansuoProxy.prototype.c2s_zhandui_xujietansuo_quyu_info = function (type, layer) {
                    var msg = new c2s_zhandui_xujietansuo_quyu_info();
                    msg.map_index = type;
                    msg.layer = layer;
                    this.sendProto(msg);
                };
                /// 推送当前所属战队探索信息（当前最新进度）
                XujieTansuoProxy.prototype.s2c_zhandui_xujietansuo_base_info = function (n) {
                    var msg = n.body;
                    if (msg.oper == 1) {
                        this._model.team_count = msg.team_count || 0;
                        this._model.now_map_index = msg.now_map_index != null ? msg.now_map_index : 0;
                        this._model.now_layer = msg.now_layer != null ? msg.now_layer : 0;
                        if (msg.map_datas != null) {
                            var type = msg.map_datas.map_index;
                            if (!this._model.map_layer_datas_map[type]) {
                                this._model.map_layer_datas_map[type] = {};
                            }
                            this._model.map_layer_datas_map[type][msg.map_datas.layer] = msg.map_datas; //区域layer缓存
                        }
                    }
                    else {
                        if (msg.team_count != null) {
                            this._model.team_count = msg.team_count;
                        }
                        if (msg.map_datas != null) {
                            var type = msg.map_datas.map_index;
                            if (!this._model.map_layer_datas_map[type]) {
                                this._model.map_layer_datas_map[type] = {};
                            }
                            this._model.map_layer_datas_map[type][msg.map_datas.layer] = msg.map_datas;
                        }
                        if (msg.now_map_index != null) {
                            this._model.now_map_index = msg.now_map_index;
                        }
                        if (msg.now_layer != null) {
                            this._model.now_layer = msg.now_layer;
                        }
                    }
                    this.updateHint();
                    this.sendNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */);
                };
                XujieTansuoProxy.prototype.s2c_zhandui_xujietansuo_records_info = function (n) {
                    var msg = n.body;
                    if (msg.rewards_records != null) {
                        this._model.rewards_records = msg.rewards_records;
                    }
                    else {
                        this._model.rewards_records = [];
                    }
                    this.updateHint();
                    this.sendNt("on_update_xujietansuo_records_info" /* ON_UPDATE_XUJIETANSUO_RECORDS_INFO */);
                };
                /**
                 * 玩家操作墟界探索
                 * @param button_type 1为领取战利品  2商店格子购买  3上阵神灵 4领取远征奖励 5挑战怪物 6扫荡怪物 7请求排行榜
                 * @param type
                 * @param layer
                 * @param row
                 * @param pos
                 * @param shenlingList
                 * @param cnt 扫荡次数
                 * @private
                 */
                XujieTansuoProxy.prototype.c2s_zhandui_xujietansuo_role_click = function (button_type, type, layer, row, pos, shenlingList, cnt) {
                    var msg = new c2s_zhandui_xujietansuo_role_click();
                    msg.button_type = button_type;
                    if (type != null) {
                        msg.map_index = type;
                    }
                    if (layer != null) {
                        msg.layer = layer;
                    }
                    if (row != null) {
                        msg.row = row;
                    }
                    if (pos != null) {
                        msg.pos = pos;
                    }
                    if (shenlingList != null) {
                        msg.unitlist = shenlingList;
                    }
                    if (cnt != null) {
                        msg.use_sweep_cnt = cnt;
                    }
                    this.sendProto(msg);
                };
                XujieTansuoProxy.prototype.s2c_zhandui_legion_rank_list = function (n) {
                    var msg = n.body;
                    if (msg.tansuo_ranks != null) {
                        this._model.tansuo_ranks = msg.tansuo_ranks;
                    }
                    if (msg.my_team_rank != null) {
                        this._model.my_team_rank = msg.my_team_rank;
                    }
                    this.sendNt("on_update_xujietansuo_rank_info" /* ON_UPDATE_XUJIETANSUO_RANK_INFO */);
                };
                /// 更新单个格子数据
                XujieTansuoProxy.prototype.s2c_zhandui_xujietansuo_single_grid = function (n) {
                    var msg = n.body;
                    if (msg.map_index == null) {
                        return;
                    }
                    //当前操作区域更新
                    var type = msg.map_index;
                    var layer = msg.layer;
                    var row = msg.row;
                    var pos = msg.pos;
                    var mapData = this.getMapLayerData(type, layer);
                    if (mapData && mapData.row_list) {
                        var rowList = mapData.row_list || [];
                        for (var _i = 0, rowList_1 = rowList; _i < rowList_1.length; _i++) {
                            var rowInfo = rowList_1[_i];
                            if (rowInfo && rowInfo.row == row) {
                                var gridList = rowInfo.grid_list || [];
                                for (var i = 0; i < gridList.length; i++) {
                                    var posData = gridList[i];
                                    if (posData && posData.grid_pos == pos) {
                                        gridList[i] = msg.grid;
                                        break;
                                    }
                                }
                                break;
                            }
                        }
                    }
                    //远征数据处理
                    if (msg.update_type && msg.update_type == 1) {
                        this._model.expedition_info = msg;
                        // 判断远征是否已领取奖励，领取就置空
                        if (msg.grid != null) {
                            var endTime = msg.grid.endtime;
                            if (endTime && endTime.eq(Long.ZERO)) {
                                this._model.expedition_info = null;
                            }
                        }
                    }
                    this.updateHint();
                    this.sendNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */);
                    // this.sendNt(MoreEvent.ON_UPDATE_XUJIETANSUO_SINGLE_GRID_INFO);
                };
                /**================================== 协议end ==================================*/
                //某区域类型的层数据
                XujieTansuoProxy.prototype.getMapLayerData = function (type, layer) {
                    var data = this._model.map_layer_datas_map[type];
                    if (!data) {
                        return null;
                    }
                    return data[layer] ? data[layer] : null;
                };
                Object.defineProperty(XujieTansuoProxy.prototype, "team_count", {
                    //当前参与搜索的战队数量
                    get: function () {
                        return this._model.team_count || 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "rewards_records", {
                    //战利品记录
                    get: function () {
                        return this._model.rewards_records || [];
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "now_type", {
                    //当前区域类型
                    get: function () {
                        return this._model.now_map_index || 1;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "now_layer", {
                    //当前区域的当前层数
                    get: function () {
                        return this._model.now_layer || 1;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "my_team_rank", {
                    //玩家所属战队数据
                    get: function () {
                        return this._model.my_team_rank;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "expedition_info", {
                    //正在远征格子的数据
                    get: function () {
                        var info = this._model.expedition_info;
                        if (info && info.grid) {
                            var endTime = info.grid.endtime;
                            if (endTime && endTime.eq(Long.ZERO)) {
                                return null; //再做一步判断，领取了奖励返回null
                            }
                        }
                        return info;
                    },
                    enumerable: true,
                    configurable: true
                });
                //排名
                XujieTansuoProxy.prototype.getRankInfo = function (rankNo) {
                    var list = this._model.tansuo_ranks || [];
                    for (var _i = 0, list_9 = list; _i < list_9.length; _i++) {
                        var item = list_9[_i];
                        if (item && item.rank_num == rankNo) {
                            return item;
                        }
                    }
                    return null;
                };
                //区域类型数据
                XujieTansuoProxy.prototype.getTypeList = function () {
                    if (this._typeList) {
                        return this._typeList;
                    }
                    var list = [];
                    var cfgs = game.getConfigListByName("zhandui_tansuo_type.json" /* ZhanduiTansuoType */);
                    for (var _i = 0, cfgs_11 = cfgs; _i < cfgs_11.length; _i++) {
                        var cfg = cfgs_11[_i];
                        list.push(cfg.type);
                    }
                    return this._typeList = list;
                };
                //区域类型配置
                XujieTansuoProxy.prototype.getTypeCfg = function (type) {
                    return game.getConfigByNameId("zhandui_tansuo_type.json" /* ZhanduiTansuoType */, type);
                };
                //排配置
                XujieTansuoProxy.prototype.getCfgByRow = function (type, layer, row) {
                    var obj = game.getConfigByNameId("zhandui_tansuo_map.json" /* ZhanduiTansuoMap */, type);
                    return obj && obj[layer * 100 + row];
                };
                //获取每个格子的配置数据
                XujieTansuoProxy.prototype.getGridByCol = function (type, layer, row, col) {
                    var buildId = type * 1000000 + layer * 1000 + row * 10 + col;
                    if (this._gridColMap[buildId]) {
                        return this._gridColMap[buildId];
                    }
                    var cfg = this.getCfgByRow(type, layer, row);
                    if (!cfg || !cfg.grid) {
                        return null;
                    }
                    var grid;
                    for (var i = 0; i < cfg.grid.length; i++) {
                        if (i + 1 == col) {
                            grid = cfg.grid[i];
                            break;
                        }
                    }
                    this._gridColMap[buildId] = grid;
                    return grid;
                };
                //某排是否解锁
                XujieTansuoProxy.prototype.isActedByRow = function (type, layer, row) {
                    var nowType = this.now_type; //正在进行的区域
                    if (type < nowType) {
                        return true; //前面区域必定解锁了
                    }
                    if (type > nowType) {
                        return false; //后面区域未解锁
                    }
                    var nowLayer = this.now_layer; //正在进行的区域的层
                    if (layer < nowLayer) {
                        return true; //当前区域的前层数必定解锁
                    }
                    if (layer > nowLayer) {
                        return false; //后面层数未解锁
                    }
                    var lastRow = row - 1;
                    if (lastRow == 0) {
                        return true; //第一排默认解锁
                    }
                    //判断上一排是否挑战成功过
                    var rowInfo = this.getRowInfo(type, layer, lastRow);
                    var rowMap = {};
                    if (rowInfo) {
                        for (var _i = 0, rowInfo_1 = rowInfo; _i < rowInfo_1.length; _i++) {
                            var grid = rowInfo_1[_i];
                            rowMap[grid.grid_pos] = grid;
                        }
                    }
                    var cfg = this.getCfgByRow(type, layer, lastRow);
                    if (cfg && cfg.grid) {
                        for (var pos = 0; pos < cfg.grid.length; pos++) {
                            var type_2 = cfg.grid[pos][0];
                            if (type_2 == 1 /* Monster */ && rowMap[pos + 1] && rowMap[pos + 1].grid_type == 0 /* Null */) {
                                return true;
                            }
                        }
                    }
                    return false;
                };
                //某层是否解锁
                XujieTansuoProxy.prototype.isActedByLayer = function (type, layer, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var nowType = this.now_type; //正在进行的区域
                    //前面区域的必定解锁了
                    if (type < nowType) {
                        return true;
                    }
                    //后面的区域都未开启
                    if (type > nowType) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips10" /* xujietansuo_tips10 */));
                        }
                        return false;
                    }
                    //当前区域的判断
                    var nowLayer = this.now_layer; //正在进行的区域的层
                    var isActed = layer <= nowLayer;
                    if (!isActed) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips10" /* xujietansuo_tips10 */));
                        }
                        return false;
                    }
                    return isActed;
                };
                //某区域是否解锁
                XujieTansuoProxy.prototype.isActedByType = function (type, isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var nowType = this.now_type; //正在进行的区域
                    var isActed = type <= nowType;
                    if (!isActed) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips9" /* xujietansuo_tips9 */));
                        }
                        return false;
                    }
                    return isActed;
                };
                //某区域是否可达最大层级
                XujieTansuoProxy.prototype.canGotoMaxLayer = function (type) {
                    var nowType = this.now_type; //正在进行的区域
                    if (type < nowType) {
                        return true;
                    }
                    if (type > nowType) {
                        return false;
                    }
                    if (type == nowType) {
                        var nowLayer = this.now_layer;
                        var maxLayer = this.getMaxLayerByType(type);
                        if (nowLayer >= maxLayer) {
                            return true;
                        }
                    }
                    return false;
                };
                /**
                 * 排能否获取当前进度（击杀一个怪物即可）
                 * @param type
                 * @param layer
                 * @param row
                 */
                XujieTansuoProxy.prototype.canGetProgressByRow = function (type, layer, row) {
                    var buildId = type * 100000 + layer * 100 + row;
                    if (this.getProgressRowMap[buildId]) {
                        return this.getProgressRowMap[buildId];
                    }
                    if (!this.isActedByLayer(type, layer)) {
                        return false;
                    }
                    var rowInfo = this.getRowInfo(type, layer, row);
                    var rowMap = {};
                    if (rowInfo) {
                        for (var _i = 0, rowInfo_2 = rowInfo; _i < rowInfo_2.length; _i++) {
                            var grid = rowInfo_2[_i];
                            rowMap[grid.grid_pos] = grid;
                        }
                    }
                    var cfg = this.getCfgByRow(type, layer, row);
                    if (cfg && cfg.grid) {
                        for (var pos = 0; pos < cfg.grid.length; pos++) {
                            var type_3 = cfg.grid[pos][0];
                            if (type_3 == 1 /* Monster */ && rowMap[pos + 1] && rowMap[pos + 1].grid_type == 0 /* Null */) {
                                this.getProgressRowMap[buildId] = true;
                                return true; //有一个怪物挑战成功过
                            }
                        }
                    }
                    return false;
                };
                /**
                 * 某区域进度
                 * 外部“区域总进度”显示：非boss排每排x%，第12排进度y%，x和y读配置，配在参数表内
                 * @param type
                 */
                XujieTansuoProxy.prototype.getProgressByType = function (type) {
                    var nowType = this.now_type;
                    if (type < nowType) {
                        return 100; //上个进度100%才能进入下个进度，故小于当前区域，即100%
                    }
                    if (type > nowType) {
                        return 0;
                    }
                    var rst = 0;
                    var cfgObj = game.getConfigByNameId("zhandui_tansuo_map.json" /* ZhanduiTansuoMap */, type);
                    for (var key in cfgObj) {
                        var rowIdx = +key;
                        var cfg = cfgObj[rowIdx];
                        var layer = Math.floor(rowIdx / 100) % 10;
                        if (layer < this.now_layer) {
                            rst += (+cfg.jindu);
                            continue;
                        }
                        var row = rowIdx % 100;
                        if (this.canGetProgressByRow(type, layer, row)) {
                            rst += (+cfg.jindu);
                        }
                    }
                    // return +(rst.toFixed(2));
                    return Math.floor(rst);
                };
                /**
                 * 获取某区域某层进度
                 * 每一排仅一个战斗格计算进度，只要本排战胜1个怪物即可获得本排进度，未完全击杀怪物不获得进度。
                 * 如本排4个怪物，挑战1个并击杀后获得8%的层进度，击杀本排第二个后依然为8%
                 * 每层内部的“排进度”显示：非boss排每排进度8%，第12排进度12%，11排+boss合计共100%
                 * @param type
                 * @param layer
                 */
                XujieTansuoProxy.prototype.getProgressByLayer = function (type, layer) {
                    var mapData = this.getMapLayerData(type, layer);
                    if (!mapData) {
                        return 0;
                    }
                    var rst = 0;
                    var rowList = mapData.row_list || [];
                    for (var _i = 0, rowList_2 = rowList; _i < rowList_2.length; _i++) {
                        var rowInfo = rowList_2[_i];
                        var gridList = rowInfo.grid_list || [];
                        var gridMap = {};
                        for (var _a = 0, gridList_1 = gridList; _a < gridList_1.length; _a++) {
                            var grid = gridList_1[_a];
                            gridMap[grid.grid_pos] = grid;
                        }
                        for (var _b = 0, gridList_2 = gridList; _b < gridList_2.length; _b++) {
                            var item = gridList_2[_b];
                            var isCalc = false;
                            if (rowInfo.row == game.XujieTansuoRowCnt && (item.grid_type == 0 /* Null */ || item.grid_type == 5 /* Transfer */)) {
                                rst += 12; //boss进度
                                isCalc = true;
                            }
                            else {
                                var cfgRow = this.getCfgByRow(type, layer, rowInfo.row); //配置上每排数据
                                if (!cfgRow || !cfgRow.grid) {
                                    rst += 8;
                                    continue;
                                }
                                var grids = cfgRow.grid;
                                for (var pos = 0; pos < grids.length; pos++) {
                                    var posData = grids[pos];
                                    if (posData[0] == 1 /* Monster */ && gridMap[pos + 1] && gridMap[pos + 1].grid_type == 0 /* Null */) {
                                        rst += 8; //格子怪物被击杀
                                        isCalc = true;
                                        break; //只要一个怪物被击杀即可
                                    }
                                }
                            }
                            if (isCalc) {
                                break;
                            }
                        }
                    }
                    return rst;
                };
                //获取进度，用于排行榜
                XujieTansuoProxy.prototype.getRankProgressByRow = function (type, layer, row) {
                    var cfgObj = game.getConfigByNameId("zhandui_tansuo_map.json" /* ZhanduiTansuoMap */, type);
                    var layerRowId = layer * 100 + row;
                    var cnt = 0;
                    for (var key in cfgObj) {
                        var cfg = cfgObj[key];
                        if (cfg && cfg.layer <= layerRowId) {
                            cnt += (+cfg.jindu);
                        }
                    }
                    // return +(cnt.toFixed(2));
                    return Math.floor(cnt);
                };
                //排数据
                XujieTansuoProxy.prototype.getRowInfo = function (type, layer, row) {
                    var mapData = this.getMapLayerData(type, layer);
                    if (!mapData) {
                        return null;
                    }
                    var rowList = mapData.row_list || [];
                    for (var _i = 0, rowList_3 = rowList; _i < rowList_3.length; _i++) {
                        var rowInfo = rowList_3[_i];
                        if (rowInfo.row == row) {
                            return rowInfo.grid_list;
                        }
                    }
                    return null;
                };
                //格子数据
                XujieTansuoProxy.prototype.getGridInfo = function (type, layer, row, col) {
                    var mapData = this.getMapLayerData(type, layer);
                    if (!mapData) {
                        return null;
                    }
                    var rowList = mapData.row_list || [];
                    for (var _i = 0, rowList_4 = rowList; _i < rowList_4.length; _i++) {
                        var rowInfo = rowList_4[_i];
                        if (rowInfo.row != row) {
                            continue;
                        }
                        var gridList = rowInfo.grid_list || [];
                        for (var _a = 0, gridList_3 = gridList; _a < gridList_3.length; _a++) {
                            var grid = gridList_3[_a];
                            if (grid && grid.grid_pos == col) {
                                return grid;
                            }
                        }
                    }
                    return null;
                };
                //正在远征格子信息
                XujieTansuoProxy.prototype.getExpeditionGridInfo = function () {
                    var info = this.expedition_info;
                    if (info && info.grid) {
                        return info.grid;
                    }
                    //全局遍历获取
                    var typeList = this.getTypeList();
                    for (var _i = 0, typeList_1 = typeList; _i < typeList_1.length; _i++) {
                        var type = typeList_1[_i];
                        var layerCnt = this.getMaxLayerByType(type);
                        for (var layer = 1; layer <= layerCnt; layer++) {
                            var info_3 = this.getExpeditionGridInfoByLayer(type, layer);
                            if (info_3) {
                                return info_3;
                            }
                        }
                    }
                    return null;
                };
                //正在远征格子信息或者待领取远征奖励的格子
                XujieTansuoProxy.prototype.getExpeditionGridInfoByLayer = function (type, layer) {
                    var info = this.expedition_info;
                    if (info && info.grid && info.map_index == type && info.layer == layer) {
                        return info.grid;
                    }
                    var mapData = this.getMapLayerData(type, layer);
                    if (!mapData) {
                        return null;
                    }
                    var rowList = mapData.row_list || [];
                    for (var _i = 0, rowList_5 = rowList; _i < rowList_5.length; _i++) {
                        var rowInfo = rowList_5[_i];
                        var gridList = rowInfo.grid_list || [];
                        for (var _a = 0, gridList_4 = gridList; _a < gridList_4.length; _a++) {
                            var gridInfo = gridList_4[_a];
                            if (!gridInfo || gridInfo.grid_type != 4 /* Expedition */) {
                                continue;
                            }
                            if (gridInfo && gridInfo.grid_type == 4 /* Expedition */) {
                                var endTime = gridInfo.endtime ? gridInfo.endtime.toNumber() : 0;
                                if (endTime /*&& TimeMgr.time.serverTimeSecond <= endTime*/) {
                                    return gridInfo;
                                }
                            }
                        }
                    }
                    return null;
                };
                //正在远征的格子数据
                XujieTansuoProxy.prototype.getExpeditionGridItemData = function () {
                    var info = this.expedition_info;
                    if (info && info.grid) {
                        var itemData = {
                            type: info.map_index,
                            layer: info.layer,
                            row: info.row,
                            col: info.pos,
                            status: 4 /* Expedition */,
                            grid: []
                        };
                        var cfgRow = this.getCfgByRow(info.map_index, info.layer, info.row);
                        if (cfgRow && cfgRow.grid && cfgRow.grid[info.pos - 1]) {
                            itemData.grid = cfgRow.grid[info.pos - 1];
                        }
                        return itemData;
                    }
                    return null;
                };
                //正在远征的格子，非0表示有倒计时
                XujieTansuoProxy.prototype.getExpeditionGridEndTimeByLayer = function (type, layer) {
                    var gridInfo = this.getExpeditionGridInfoByLayer(type, layer);
                    if (!gridInfo) {
                        return 0;
                    }
                    var endTime = gridInfo.endtime && gridInfo.endtime.toNumber() || 0;
                    if (endTime /*&& TimeMgr.time.serverTimeSecond < endTime*/) {
                        return endTime;
                    }
                    return 0;
                };
                //区域总层数
                XujieTansuoProxy.prototype.getMaxLayerByType = function (type) {
                    if (this._maxLayerMap[type]) {
                        return this._maxLayerMap[type];
                    }
                    var cfgObj = game.getConfigByNameId("zhandui_tansuo_map.json" /* ZhanduiTansuoMap */, type);
                    if (!cfgObj) {
                        return 0;
                    }
                    var i = 1;
                    var cnt = 0;
                    while (cfgObj[i * 100 + 1]) {
                        cnt++;
                        i++;
                    }
                    return this._maxLayerMap[type] = cnt;
                };
                //获取战利品
                XujieTansuoProxy.prototype.canGetZhanlipin = function (isTips) {
                    if (isTips === void 0) { isTips = false; }
                    var list = this.rewards_records;
                    if (!list || !list.length) {
                        if (isTips) {
                            game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips31" /* xujietansuo_tips31 */));
                        }
                        return false;
                    }
                    return list && list.length > 0;
                };
                /**============================= hint start =============================*/
                //战利品红点
                XujieTansuoProxy.prototype.getZhanlipinHint = function () {
                    return this.canGetZhanlipin();
                };
                //远征红点
                XujieTansuoProxy.prototype.getExpeditionHint = function () {
                    var info = this.getExpeditionGridInfo();
                    if (!info) {
                        return false;
                    }
                    var endTime = info && info.endtime ? info.endtime.toNumber() : 0;
                    var curTime = TimeMgr.time.serverTimeSecond;
                    return endTime && curTime >= endTime;
                };
                //能否探索
                XujieTansuoProxy.prototype.canTansuo = function () {
                    var cnt = mod.BagUtil.getPropCntByIdx(1450100154 /* XujieTansuoling */);
                    return cnt > 0;
                };
                //探索按钮红点 todo
                XujieTansuoProxy.prototype.getTansuoHint = function () {
                    return this.canTansuo() || this.getZhanlipinHint() || this.getExpeditionHint();
                };
                //战令红点
                XujieTansuoProxy.prototype.onUpdateGivingList = function (n) {
                    var types = n.body;
                    if (types.indexOf(5 /* Tansuo */) > -1) {
                        var hintPath = ["27" /* Activity */, "38" /* Giving */, "05" /* TabBtnType05 */];
                        this._gameOrderHint = mod.HintMgr.getHint(hintPath);
                        this.updateGameOrderHint();
                    }
                };
                //战令红点
                XujieTansuoProxy.prototype.updateGameOrderHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670223 /* XujieTansuo */)) {
                        return;
                    }
                    mod.HintMgr.setHint(this._gameOrderHint, this._model.hintPath2);
                };
                XujieTansuoProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670223 /* XujieTansuo */)) {
                        return;
                    }
                    var layerHint = this.getZhanlipinHint() || this.getExpeditionHint() || this.getZhenrongHint();
                    mod.HintMgr.setHint(layerHint, this._model.layerHintPath);
                    mod.HintMgr.setHint(layerHint || this.canTansuo(), this._model.hintPath1);
                    this.updateGameOrderHint();
                };
                XujieTansuoProxy.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(1450100154 /* XujieTansuoling */) > -1) {
                        this.updateHint();
                    }
                };
                XujieTansuoProxy.prototype.onSurfaceInfoUpdate = function (n) {
                    var type = n.body;
                    if (type == 409 /* Huashen */) {
                        this.updateHint();
                    }
                };
                XujieTansuoProxy.prototype.onShenlingInfoUpdate = function (n) {
                    this.updateHint();
                };
                XujieTansuoProxy.prototype.onOpenFuncUpdate = function (n) {
                    var addIdx = n.body;
                    if (addIdx.indexOf(1041670202 /* Huashen */) > -1 || addIdx.indexOf(1041670102 /* Shenling */) > -1) {
                        this.updateHint();
                    }
                };
                /**============================= hint end =============================*/
                /**============================= 阵容 =============================*/
                //一键上阵，上阵三个大类型
                XujieTansuoProxy.prototype.sendShangzhenOnekey = function () {
                    this.c2s_zhandui_legion_shangzheng(1);
                };
                //一键上阵某类型，或者上阵list的数据
                XujieTansuoProxy.prototype.sendShangzhen = function (type, operType, list) {
                    var msg = new zhandui_legion_type_struct();
                    msg.itype = type;
                    if (list) {
                        var longList = [];
                        for (var _i = 0, list_10 = list; _i < list_10.length; _i++) {
                            var id = list_10[_i];
                            longList.push(Long.fromValue(id));
                        }
                        msg.unitlist = longList;
                    }
                    this.c2s_zhandui_legion_shangzheng(operType, msg);
                };
                //1全部一键上阵   2某类一键上阵  3某类手动上阵或者下载
                XujieTansuoProxy.prototype.c2s_zhandui_legion_shangzheng = function (type, list) {
                    var msg = new c2s_zhandui_legion_shangzheng();
                    msg.button_type = type;
                    if (list) {
                        msg.list = list;
                    }
                    this.sendProto(msg);
                };
                XujieTansuoProxy.prototype.s2c_zhandui_legion_shangzheng_list = function (n) {
                    var msg = n.body;
                    if (msg.list != null) {
                        for (var _i = 0, _a = msg.list; _i < _a.length; _i++) {
                            var item = _a[_i];
                            this._model.legion_list[item.itype] = item;
                        }
                    }
                    if (msg.attrs != null) {
                        this._model.legion_attrs = msg.attrs;
                    }
                    this.updateHint();
                    this.sendNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */);
                };
                //获取上阵类型信息
                XujieTansuoProxy.prototype.getShangzhenInfo = function (type) {
                    return this._model.legion_list[type];
                };
                //某阵容类型上阵id列表
                XujieTansuoProxy.prototype.getShangzhenIdList = function (type) {
                    var list = [];
                    var info = this.getShangzhenInfo(type);
                    if (info && info.unitlist) {
                        for (var _i = 0, _a = info.unitlist; _i < _a.length; _i++) {
                            var id = _a[_i];
                            list.push(id.toNumber());
                        }
                    }
                    return list;
                };
                Object.defineProperty(XujieTansuoProxy.prototype, "legion_attr", {
                    //军团属性
                    get: function () {
                        return this._model.legion_attrs;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "shenling_list", {
                    //军团神灵列表
                    get: function () {
                        var info = this._model.legion_list[1 /* Shenling */];
                        return info && info.unitlist || null;
                    },
                    enumerable: true,
                    configurable: true
                });
                //化神开启否
                XujieTansuoProxy.prototype.isHuashenOpen = function (isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670202 /* Huashen */, isTips)) {
                        return false;
                    }
                    var surfaceProxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                    var isAct = surfaceProxy.isDefaultAct(409 /* Huashen */);
                    if (isTips && !isAct) {
                        game.PromptBox.getIns().show("\u5316\u795E\u6682\u672A\u5F00\u542F");
                        return false;
                    }
                    return isAct;
                };
                //女神是否开启 todo
                XujieTansuoProxy.prototype.isNvshenOpen = function (isTips) {
                    if (isTips === void 0) { isTips = false; }
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670239 /* GoddessRecord */, true)) {
                        return false;
                    }
                    if (isTips) {
                        game.PromptBox.getIns().show("\u6682\u672A\u5F00\u542F");
                    }
                    return false;
                    // let proxy: GoddessRecordProxy = facade.retMod(ModName.More).retProxy(ProxyType.GoddessRecord);
                    // let cfgList: NvshenIndexConfig[] = getConfigListByName(ConfigName.NvshenIndex);
                    // let list: number[] = [];
                    // for (let cfg of cfgList) {
                    //     if (proxy.isAct(cfg.index)) {
                    //         list.push(cfg.index);
                    //     }
                    // }
                    // let isAct = list && list.length > 0;
                    // if (isTips && !isAct) {
                    //     PromptBox.getIns().show(`女神暂未开启`);
                    // }
                    // return isAct;
                };
                //阵容红点 todo
                XujieTansuoProxy.prototype.getZhenrongHint = function () {
                    return this.getZhenrongShenlingHint() || this.getZhenrongHuashenHint();
                };
                //神灵上阵品质要求
                XujieTansuoProxy.prototype.getShenlingLimitQuality = function () {
                    var cfg = game.GameConfig.getParamConfigById('zhandui_shangzhen');
                    return cfg && cfg.value;
                };
                //阵容神灵红点
                XujieTansuoProxy.prototype.getZhenrongShenlingHint = function () {
                    var shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    var shangzhenList = this.getShangzhenIdList(1 /* Shenling */);
                    var maxCnt = game.LegionTypeCnt[1 /* Shenling */]; //可以上阵的神灵个数
                    //已上阵的最低阵容仙力
                    var minPower;
                    shangzhenList.forEach(function (item) {
                        var info = shenlingProxy.getInfoByIndex(item);
                        if (info && info.legion_attr && info.legion_attr.legion_god) {
                            if (minPower == undefined) {
                                minPower = info.legion_attr.legion_god;
                            }
                            else {
                                minPower = minPower.lessThan(info.legion_attr.legion_god) ? minPower : info.legion_attr.legion_god;
                            }
                        }
                    });
                    for (var _i = 0, ShenLingTypeAry_1 = game.ShenLingTypeAry; _i < ShenLingTypeAry_1.length; _i++) {
                        var type = ShenLingTypeAry_1[_i];
                        var typeList = this.getShenlingList(type);
                        if (shangzhenList.length < maxCnt && typeList && typeList.length > 0) {
                            return true; //有可以上阵位置，且有可以上阵的神灵
                        }
                        for (var _a = 0, typeList_2 = typeList; _a < typeList_2.length; _a++) {
                            var id = typeList_2[_a];
                            var info = shenlingProxy.getInfoByIndex(id);
                            var legionGod = info && info.legion_attr && info.legion_attr.legion_god ? info.legion_attr.legion_god : null;
                            if (legionGod && minPower != null && legionGod.greaterThan(minPower)) {
                                return true; //阵容仙力比上阵的最低仙力高
                            }
                        }
                    }
                    return false;
                };
                //某类型激活的神灵列表
                XujieTansuoProxy.prototype.getShenlingList = function (type) {
                    var list = [];
                    var shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    var limitQuality = this.getShenlingLimitQuality();
                    var infoList = shenlingProxy.getActedListByType(type);
                    var shangzhenList = this.getShangzhenIdList(1 /* Shenling */);
                    for (var _i = 0, infoList_1 = infoList; _i < infoList_1.length; _i++) {
                        var info = infoList_1[_i];
                        if (!info) {
                            continue;
                        }
                        var cfg = shenlingProxy.getShenLingCfg(info.index.toNumber());
                        //过滤品质不满足和已上阵军团的
                        if (!cfg || cfg.quality < limitQuality || shangzhenList.indexOf(info.index.toNumber()) > -1) {
                            continue;
                        }
                        list.push(info.index.toNumber());
                    }
                    return list;
                };
                //阵容化神红点
                XujieTansuoProxy.prototype.getZhenrongHuashenHint = function () {
                    var surfaceProxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                    var shangzhenList = this.getShangzhenIdList(2 /* Huashen */);
                    var maxCnt = game.LegionTypeCnt[2 /* Huashen */]; //可以上阵的个数
                    var minPower;
                    shangzhenList.forEach(function (id) {
                        var info = surfaceProxy.getSurfacePerInfo(id);
                        if (info && info.legion_attr && info.legion_attr.legion_god) {
                            if (minPower == undefined) {
                                minPower = info.legion_attr.legion_god;
                            }
                            else {
                                minPower = minPower.lessThan(info.legion_attr.legion_god) ? minPower : info.legion_attr.legion_god;
                            }
                        }
                    });
                    var huashenList = this.getZhenrongHuashenList();
                    if (shangzhenList.length < maxCnt && huashenList && huashenList.length > 0) {
                        return true;
                    }
                    for (var _i = 0, huashenList_1 = huashenList; _i < huashenList_1.length; _i++) {
                        var id = huashenList_1[_i];
                        var info = surfaceProxy.getSurfacePerInfo(id);
                        var legionGod = info && info.legion_attr && info.legion_attr.legion_god ? info.legion_attr.legion_god : null;
                        if (legionGod && minPower != null && legionGod.greaterThan(minPower)) {
                            return true;
                        }
                    }
                    return false;
                };
                //化神id列表
                XujieTansuoProxy.prototype.getZhenrongHuashenList = function () {
                    var surfaceProxy = game.getProxy("46" /* Surface */, 190 /* Surface */);
                    var cfgList = surfaceProxy.getSurfaceCfgList(409 /* Huashen */, 1);
                    var shangzhenList = this.getShangzhenIdList(2 /* Huashen */);
                    var list = [];
                    for (var _i = 0, cfgList_14 = cfgList; _i < cfgList_14.length; _i++) {
                        var cfg = cfgList_14[_i];
                        var star = surfaceProxy.getSurfacePerStar(cfg.index);
                        if (!star) {
                            continue;
                        }
                        if (shangzhenList.indexOf(cfg.index) > -1) {
                            continue;
                        }
                        list.push(cfg.index);
                    }
                    return list;
                };
                /**============================= 阵容end =============================*/
                /**============================= 回合制 =============================*/
                /// 各个回合战斗记录
                XujieTansuoProxy.prototype.s2c_zhandui_legion_battle_info = function (n) {
                    var msg = n.body;
                    if (msg.round_records != null) {
                        this._model.round_records = msg.round_records;
                    }
                    if (msg.myself_info != null) {
                        this._model.myself_info = msg.myself_info;
                    }
                    else {
                        this._model.myself_info = null;
                    }
                    if (msg.target_info != null) {
                        this._model.target_info = msg.target_info;
                    }
                    else {
                        this._model.target_info = null;
                    }
                    facade.showView("61" /* More */, "65" /* TBSFight */);
                    // this.sendNt(MoreEvent.ON_UPDATE_TBS_INFO);
                };
                ///战斗结束，结算界面信息 todo 前端播放完全部动作，再处理结算界面
                XujieTansuoProxy.prototype.s2c_zhandui_legion_result_info = function (n) {
                    var msg = n.body;
                    if (msg != null) {
                        this._model.result_info = msg;
                    }
                    // this.sendNt(MoreEvent.ON_UPDATE_TBS_RESULT_INFO);
                };
                Object.defineProperty(XujieTansuoProxy.prototype, "round_records", {
                    //回合战斗记录
                    get: function () {
                        return this._model.round_records || [];
                    },
                    //回合战队记录，清空处理
                    set: function (records) {
                        this._model.round_records = records;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "result_info", {
                    //结算信息
                    get: function () {
                        return this._model.result_info;
                    },
                    set: function (data) {
                        this._model.result_info = data;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "myself_id", {
                    //我方role_id
                    get: function () {
                        return this._model.myself_info ? this._model.myself_info.role_id : null;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "myself_info", {
                    //我方信息
                    get: function () {
                        return this._model.myself_info;
                    },
                    enumerable: true,
                    configurable: true
                });
                //是否是我方
                XujieTansuoProxy.prototype.isMyself = function (id) {
                    var myId = this.myself_id;
                    return myId && id && myId.equals(id);
                };
                Object.defineProperty(XujieTansuoProxy.prototype, "target_id", {
                    //对手id（玩家role_id或者boss_id）
                    get: function () {
                        if (this._model.target_info.role_id) {
                            return this._model.target_info.role_id;
                        }
                        return this._model.target_info.boss_id;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "target_info", {
                    //对手是玩家
                    get: function () {
                        return this._model.target_info;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "is_legion_speed_equal", {
                    //两者速度相同
                    get: function () {
                        var myInfo = this.myself_info;
                        var targetInfo = this.target_info;
                        var mySpeed = myInfo && myInfo.legion_data && myInfo.legion_data.legion_speed ? myInfo.legion_data.legion_speed : null;
                        var targetSpeed = targetInfo && targetInfo.legion_data && targetInfo.legion_data.legion_speed ? targetInfo.legion_data.legion_speed : null;
                        return mySpeed && targetSpeed && mySpeed.equals(targetSpeed);
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "is_legion_speed_greater", {
                    //我方速度大
                    get: function () {
                        var myInfo = this.myself_info;
                        var targetInfo = this.target_info;
                        var mySpeed = myInfo && myInfo.legion_data && myInfo.legion_data.legion_speed ? myInfo.legion_data.legion_speed : null;
                        var targetSpeed = targetInfo && targetInfo.legion_data && targetInfo.legion_data.legion_speed ? targetInfo.legion_data.legion_speed : null;
                        return mySpeed && targetSpeed && mySpeed.greaterThan(targetSpeed);
                    },
                    enumerable: true,
                    configurable: true
                });
                /**============================= 回合制end =============================*/
                //---------------------------矿脉协议-------------------------
                XujieTansuoProxy.prototype.s2c_zhandui_kuanmai_pvp_ret = function (n) {
                    this._model.msg = n.body;
                };
                Object.defineProperty(XujieTansuoProxy.prototype, "msg", {
                    get: function () {
                        return this._model.msg;
                    },
                    set: function (data) {
                        this._model.msg = data;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(XujieTansuoProxy.prototype, "seledArea", {
                    //----------------------------------------------------
                    //当前点击探索的区域
                    get: function () {
                        return this._model.seledArea;
                    },
                    set: function (area) {
                        this._model.seledArea = area;
                    },
                    enumerable: true,
                    configurable: true
                });
                return XujieTansuoProxy;
            }(game.ProxyBase));
            more.XujieTansuoProxy = XujieTansuoProxy;
            __reflect(XujieTansuoProxy.prototype, "game.mod.more.XujieTansuoProxy", ["game.mod.IXujieTansuoProxy", "base.IProxy"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiModel = /** @class */ (function () {
                function ZhanduiModel() {
                    /** 战队名称 */
                    this.team_name = '';
                    /** 战队等级 */
                    this.team_level = 0;
                    /** 战队成员（顺序1234，第一个为队长，其余成员依照加入时间顺延） */
                    this.team_roles = [];
                    /** 玩家申请列表 */
                    this.role_apply_list = [];
                    /** 战队每日奖励 当天是否可以领取  1可领取   2已领取 */
                    this.today_is_get = 0;
                    /** 已创建的战队数量 */
                    this.total_team_count = 0;
                    /** 进入要求的最低战力（0为不限制） */
                    this.limit_showpower = 0;
                    /** 是否需要审核 true为需要   false为不需要 */
                    this.is_check_apply = false;
                    /** 是否需要限制战力 true为需要   false为不需要 */
                    this.is_check_power = false;
                    /** 已购买的旗帜 */
                    this.flag_list = [];
                    /**当前使用的旗帜*/
                    this.flag_index = 0;
                    /**累计活跃度*/
                    this.team_point = 0;
                    /** 仙纪功绩 */
                    this.strs1 = [];
                    /** 仙纪事件 */
                    this.strs2 = [];
                    /** 可以申请的战队列表 */
                    this.can_apply_list = [];
                    this.applyHintPath = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, 'apply'];
                    this.rewardHintPath = ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "01" /* TabBtnType01 */];
                }
                //退出队伍，清空数据
                ZhanduiModel.prototype.exitTeam = function () {
                    this.team_id = null;
                    this.team_name = '';
                    this.team_level = 0;
                    this.team_roles = [];
                    this.role_apply_list = [];
                    this.today_is_get = 0;
                    this.total_team_count = 0;
                    this.limit_showpower = null;
                    this.is_check_apply = false;
                    this.is_check_power = false;
                    this.flag_list = [];
                    this.can_apply_list = [];
                    this.join_time = null;
                    mod.HintMgr.setHint(false, this.applyHintPath);
                    mod.HintMgr.setHint(false, this.rewardHintPath);
                };
                return ZhanduiModel;
            }());
            more.ZhanduiModel = ZhanduiModel;
            __reflect(ZhanduiModel.prototype, "game.mod.more.ZhanduiModel");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var c2s_zhandui_button_click = msg.c2s_zhandui_button_click;
            var c2s_zhandui_get_day_rewards = msg.c2s_zhandui_get_day_rewards;
            var s2c_zhandui_base_info = msg.s2c_zhandui_base_info;
            var s2c_zhandui_apply_list = msg.s2c_zhandui_apply_list;
            var s2c_zhandui_team_role_apply_list = msg.s2c_zhandui_team_role_apply_list;
            var s2c_zhandui_get_thing_records = msg.s2c_zhandui_get_thing_records;
            /**
             * @description 战队系统
             */
            var ZhanduiProxy = /** @class */ (function (_super) {
                __extends(ZhanduiProxy, _super);
                function ZhanduiProxy() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ZhanduiProxy.prototype.initialize = function () {
                    _super.prototype.initialize.call(this);
                    this._model = new more.ZhanduiModel();
                    this.onProto(s2c_zhandui_base_info, this.s2c_zhandui_base_info, this);
                    this.onProto(s2c_zhandui_apply_list, this.s2c_zhandui_apply_list, this);
                    this.onProto(s2c_zhandui_team_role_apply_list, this.s2c_zhandui_team_role_apply_list, this);
                    this.onProto(s2c_zhandui_get_thing_records, this.s2c_zhandui_get_thing_records, this);
                };
                /**
                 * 1为创建战队
                 * @param flagIndex
                 * @param teamName
                 */
                ZhanduiProxy.prototype.sendButtonClickCreate = function (flagIndex, teamName) {
                    this.c2s_zhandui_button_click(1 /* Oper1 */, flagIndex, null, teamName);
                };
                /**
                 * 2为购买战队旗帜
                 * 8战队使用旗帜（仅队长）
                 * @param type
                 * @param flagIndex 旗帜
                 */
                ZhanduiProxy.prototype.sendButtonClickQizhi = function (type, flagIndex) {
                    this.c2s_zhandui_button_click(type, flagIndex);
                };
                /**
                 * 4申请加入
                 * @param teamId
                 */
                ZhanduiProxy.prototype.sendButtonClickTeamId = function (teamId) {
                    this.c2s_zhandui_button_click(4 /* Oper4 */, null, teamId);
                };
                /**
                 * 6搜索战队
                 * 7战队改名（仅队长）
                 * @param type
                 * @param teamName
                 */
                ZhanduiProxy.prototype.sendButtonClickTeamname = function (type, teamName) {
                    this.c2s_zhandui_button_click(type, null, null, teamName);
                };
                /**
                 * 12转移队长（仅队长）
                 * 13踢出战队（仅队长）
                 * @param type
                 * @param roleId
                 */
                ZhanduiProxy.prototype.sendButtonClickRoleId = function (type, roleId) {
                    this.c2s_zhandui_button_click(type, null, null, null, roleId);
                };
                /**
                 * 10操作申请人员（仅队长）
                 * @param roleId
                 * @param isPass 0为拒绝申请  1为同意申请
                 */
                ZhanduiProxy.prototype.sendButtonClickIspass = function (roleId, isPass) {
                    this.c2s_zhandui_button_click(10 /* Oper10 */, null, null, null, roleId, isPass);
                    for (var i = 0; i < this._model.role_apply_list.length; i++) {
                        var item = this._model.role_apply_list[i];
                        if (item && item.role_id.eq(roleId)) {
                            this._model.role_apply_list.splice(i, 1);
                            break;
                        }
                    }
                    this.updateHint();
                    this.sendNt("on_update_zhandui_team_role_apply_list_info" /* ON_UPDATE_ZHANDUI_TEAM_ROLE_APPLY_LIST_INFO */);
                };
                /**
                 * 3请求战队列表，默认最多10个战队数据（用于查看可以加入哪些战队）
                 * 5刷新战队列表
                 * 9请求申请列表（仅队长）
                 * 11发送招募聊天
                 * 14玩家自己退出战队
                 * 16设置申请审核（仅队长)
                 * 17请求仙纪功绩
                 * 18请求仙纪事件
                 * 100 请求战队数据
                 * @param type
                 */
                ZhanduiProxy.prototype.sendButtonClick = function (type) {
                    this.c2s_zhandui_button_click(type);
                };
                /**
                 * 15设置进入战力条件（仅队长）
                 * @param power
                 */
                ZhanduiProxy.prototype.sendButtonClickPower = function (power) {
                    this.c2s_zhandui_button_click(15 /* Oper15 */, null, null, null, null, null, power);
                };
                /**
                 * 战队操作 请使用上面的 sendButtonClick函数，不要外部调用这个
                 * button_type字段备注
                 *      1为创建战队
                 *      2为购买战队旗帜
                 *      3请求战队列表，默认最多10个战队数据（用于查看可以加入哪些战队）
                 *      4申请加入
                 *      5刷新战队列表
                 *      6搜索战队
                 *      7战队改名（仅队长）
                 *      8战队使用旗帜（仅队长）
                 *      9请求申请列表（仅队长）
                 *      10操作申请人员（仅队长）
                 *      11发送招募聊天
                 *      12转移队长（仅队长）
                 *      13踢出战队（仅队长）
                 *      14玩家自己退出战队
                 *      15设置进入要求的最低战力
                 *      16设置申请审核（仅队长)
                 *      17请求仙纪功绩
                 *      18请求仙纪事件
                 *      100 请求战队数据
                 * @param type
                 * @param index 旗帜索引（1创建战队、2购买战队、8旗帜使用旗帜需要)
                 * @param teamId 战队id（4申请加入战队需要）
                 * @param teamName 战队名称（6搜索战队  7战队改名需要)
                 * @param roleId 10操作申请人员、12转移队长、13踢出战队 需要
                 * @param isPass 0为拒绝申请  1为同意申请 10
                 * @param setPower 15设置进入要求的最低战力
                 * @private
                 */
                ZhanduiProxy.prototype.c2s_zhandui_button_click = function (type, index, teamId, teamName, roleId, isPass, setPower) {
                    var msg = new c2s_zhandui_button_click();
                    msg.button_type = type;
                    if (index) {
                        msg.index = index;
                    }
                    if (teamId) {
                        msg.team_id = teamId;
                    }
                    if (teamName) {
                        msg.team_name = teamName;
                    }
                    if (roleId) {
                        msg.role_id = roleId;
                    }
                    if (isPass != null) {
                        msg.is_pass = isPass;
                    }
                    if (setPower) {
                        msg.set_showpower = Long.fromNumber(setPower);
                    }
                    this.sendProto(msg);
                };
                /// 战队每日奖励领取
                ZhanduiProxy.prototype.c2s_zhandui_get_day_rewards = function () {
                    var msg = new c2s_zhandui_get_day_rewards();
                    this.sendProto(msg);
                };
                /// 战队信息
                ZhanduiProxy.prototype.s2c_zhandui_base_info = function (n) {
                    var msg = n.body;
                    if (msg.team_id != null) {
                        this._model.team_id = msg.team_id;
                    }
                    //退出队伍，清空数据
                    if (msg.team_id != null && msg.team_id.eq(Long.ZERO)) {
                        this.doExitTeam();
                        this.sendNt("on_exit_zhandui_team" /* ON_EXIT_ZHANDUI_TEAM */); //退出战队抛出事件
                    }
                    if (msg.team_name != null) {
                        this._model.team_name = msg.team_name;
                    }
                    if (msg.team_level != null) {
                        this._model.team_level = msg.team_level;
                    }
                    if (msg.team_roles != null) {
                        this._model.team_roles = msg.team_roles;
                    }
                    if (msg.today_is_get != null) {
                        this._model.today_is_get = msg.today_is_get;
                    }
                    if (msg.total_team_count != null) {
                        this._model.total_team_count = msg.total_team_count;
                    }
                    if (msg.is_check_apply != null) {
                        this._model.is_check_apply = msg.is_check_apply;
                    }
                    if (msg.is_check_power != null) {
                        this._model.is_check_power = msg.is_check_power;
                    }
                    if (msg.limit_showpower != null) {
                        this._model.limit_showpower = msg.limit_showpower.toNumber();
                    }
                    if (msg.flag_list != null) {
                        this._model.flag_list = msg.flag_list;
                    }
                    if (msg.flag_index != null) {
                        this._model.flag_index = msg.flag_index;
                    }
                    if (msg.team_point != null) {
                        this._model.team_point = msg.team_point;
                    }
                    if (msg.join_time != null) {
                        this._model.join_time = msg.join_time;
                    }
                    this.updateHint();
                    this.sendNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */);
                };
                /// 可以申请的战队列表
                ZhanduiProxy.prototype.s2c_zhandui_apply_list = function (n) {
                    var msg = n.body;
                    if (msg.can_apply_list != null) {
                        this._model.can_apply_list = msg.can_apply_list;
                    }
                    this.sendNt("on_update_zhandui_apply_list_info" /* ON_UPDATE_ZHANDUI_APPLY_LIST_INFO */);
                };
                ///向该战队发了申请的 玩家申请列表
                ZhanduiProxy.prototype.s2c_zhandui_team_role_apply_list = function (n) {
                    var msg = n.body;
                    if (msg.role_apply_list != null) {
                        this._model.role_apply_list = msg.role_apply_list;
                    }
                    else {
                        this._model.role_apply_list = [];
                    }
                    this.updateHint();
                    this.sendNt("on_update_zhandui_team_role_apply_list_info" /* ON_UPDATE_ZHANDUI_TEAM_ROLE_APPLY_LIST_INFO */);
                };
                ZhanduiProxy.prototype.s2c_zhandui_get_thing_records = function (n) {
                    var msg = n.body;
                    if (msg.strs1 != null) {
                        this._model.strs1 = msg.strs1;
                    }
                    if (msg.strs2 != null) {
                        this._model.strs2 = msg.strs2;
                    }
                    this.sendNt("on_update_zhandui_records" /* ON_UPDATE_ZHANDUI_RECORDS */);
                };
                //退出战队数据清理
                ZhanduiProxy.prototype.doExitTeam = function () {
                    this._model.exitTeam();
                    var xujiejitanProxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                    if (xujiejitanProxy) {
                        xujiejitanProxy.onExitZhanduiTeam();
                    }
                    var xujietansuoProxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                    if (xujietansuoProxy) {
                        xujietansuoProxy.onExitZhanduiTeam();
                    }
                    var miningProxy = game.getProxy("61" /* More */, 254 /* Mining */);
                    if (miningProxy) {
                        miningProxy.onExitZhanduiTeam();
                    }
                };
                /**================================= 协议end =================================*/
                //战队旗帜，创建
                ZhanduiProxy.prototype.getQizhiCfgList = function () {
                    var cfgList = game.getConfigListByName("zhandui_qizhi.json" /* ZhanduiQizhi */);
                    var list = [];
                    for (var _i = 0, cfgList_15 = cfgList; _i < cfgList_15.length; _i++) {
                        var cfg = cfgList_15[_i];
                        if (cfg && !cfg.cond && !cfg.costs) {
                            list.push(cfg);
                        }
                    }
                    return list;
                };
                //等级配置
                ZhanduiProxy.prototype.getLevelCfg = function (lv) {
                    return game.getConfigByNameId("zhandui_dengji.json" /* ZhanduiDengji */, lv);
                };
                Object.defineProperty(ZhanduiProxy.prototype, "total_team_count", {
                    //已创建的战队数量
                    get: function () {
                        return this._model.total_team_count;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "can_apply_list", {
                    //可以申请的战队列表
                    get: function () {
                        return this._model.can_apply_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "team_name", {
                    //战队名称
                    get: function () {
                        return this._model.team_name;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "team_level", {
                    //战队等级
                    get: function () {
                        return this._model.team_level;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "team_roles", {
                    //战队成员
                    get: function () {
                        return this._model.team_roles;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "role_apply_list", {
                    //玩家申请列表
                    get: function () {
                        return this._model.role_apply_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "limit_showpower", {
                    // 进入要求的最低战力（0为不限制）
                    get: function () {
                        return this._model.limit_showpower;
                    },
                    set: function (power) {
                        this._model.limit_showpower = power;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "is_check_apply", {
                    //是否需要审核 true为需要   false为不需要
                    get: function () {
                        return this._model.is_check_apply;
                    },
                    set: function (bool) {
                        this._model.is_check_apply = bool;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "is_check_power", {
                    //是否需要限制战力 true为需要   false为不需要
                    get: function () {
                        return this._model.is_check_power;
                    },
                    set: function (bool) {
                        this._model.is_check_power = bool;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "flag_index", {
                    //当前使用的旗帜
                    get: function () {
                        return this._model.flag_index;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "flag_list", {
                    get: function () {
                        return this._model.flag_list;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "team_point", {
                    get: function () {
                        return this._model.team_point;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(ZhanduiProxy.prototype, "join_time", {
                    get: function () {
                        var joinTime = this._model.join_time;
                        if (joinTime && joinTime.notEquals(Long.ZERO)) {
                            return joinTime.toNumber();
                        }
                        return 0;
                    },
                    enumerable: true,
                    configurable: true
                });
                //是否是队长
                ZhanduiProxy.prototype.isCaption = function () {
                    var info = this._model.team_roles[0];
                    return info && info.role_id.eq(game.RoleVo.ins.role_id);
                };
                //是否是本人
                ZhanduiProxy.prototype.isMyself = function (mate) {
                    return mate && mate.role_id.eq(game.RoleVo.ins.role_id);
                };
                //拥有队伍
                ZhanduiProxy.prototype.haveTeam = function () {
                    return this._model.team_id && this._model.team_id.notEquals(Long.ZERO);
                };
                Object.defineProperty(ZhanduiProxy.prototype, "team_id", {
                    //战队ID
                    get: function () {
                        return this._model.team_id;
                    },
                    enumerable: true,
                    configurable: true
                });
                //改名消耗
                ZhanduiProxy.prototype.getRenameCost = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('zhandui_created');
                    return paramCfg.value[1];
                };
                //创建战队消耗
                ZhanduiProxy.prototype.getCreateCost = function () {
                    var paramCfg = game.GameConfig.getParamConfigById('zhandui_created');
                    return paramCfg.value[0];
                };
                //奖励是否领取
                ZhanduiProxy.prototype.isGotReward = function () {
                    return this._model.today_is_get == 2;
                };
                //能否获取奖励
                ZhanduiProxy.prototype.canGetReward = function () {
                    return this._model.today_is_get == 1;
                };
                //仙纪 1功绩 2事件
                ZhanduiProxy.prototype.getStrs = function (type) {
                    if (type === void 0) { type = 1; }
                    return type == 1 ? this._model.strs1 : this._model.strs2;
                };
                //申请列表有玩家的时候给队长显示红点
                ZhanduiProxy.prototype.getApplyHint = function () {
                    if (!this.isCaption()) {
                        return false;
                    }
                    var list = this.role_apply_list;
                    return list && list.length > 0;
                };
                ZhanduiProxy.prototype.isMaxLv = function () {
                    var cfgs = game.getConfigListByName("zhandui_dengji.json" /* ZhanduiDengji */);
                    var lv = cfgs && cfgs.length;
                    return lv <= this.team_level;
                };
                //每日福利
                ZhanduiProxy.prototype.getRewardHint = function () {
                    return this.canGetReward();
                };
                ZhanduiProxy.prototype.updateHint = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670222 /* Zhandui */) || !this.haveTeam()) {
                        return;
                    }
                    mod.HintMgr.setHint(this.getApplyHint(), this._model.applyHintPath);
                    mod.HintMgr.setHint(this.getRewardHint(), this._model.rewardHintPath);
                };
                return ZhanduiProxy;
            }(game.ProxyBase));
            more.ZhanduiProxy = ZhanduiProxy;
            __reflect(ZhanduiProxy.prototype, "game.mod.more.ZhanduiProxy", ["game.mod.IZhanduiProxy", "base.IProxy"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningBuyCntView = /** @class */ (function (_super) {
                __extends(MiningBuyCntView, _super);
                function MiningBuyCntView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningBuyCntSkin";
                    return _this;
                }
                return MiningBuyCntView;
            }(eui.Component));
            more.MiningBuyCntView = MiningBuyCntView;
            __reflect(MiningBuyCntView.prototype, "game.mod.more.MiningBuyCntView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var facade = base.facade;
            var MiningFightItem = /** @class */ (function (_super) {
                __extends(MiningFightItem, _super);
                function MiningFightItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MiningFightItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_fight, this.onClickFight, this);
                    this._proxy = game.getProxy("61" /* More */, 254 /* Mining */);
                };
                MiningFightItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    this.lab_master.text = "";
                    if (this.data.name && this.data.role_id) {
                        this.lab_master.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("zhanduishengxu_tips8" /* zhanduishengxu_tips8 */), [this.data.name]));
                    }
                    var info = this.data.data;
                    this.headVip.updateShow(info.head, info.head_frame, info.sex, info.vip, info.role_id);
                    this.lab_name.text = info.name;
                    this.power.setPowerValue(info && info.god || 0);
                    this.lab_rate.text = "\u80DC\u7387\uFF1A" + (info.value || 0) + "%";
                    if (this.data.name) {
                        var str = game.StringUtil.substitute(game.getLanById("zhanduishengxu_tips8" /* zhanduishengxu_tips8 */), [this.data.name]);
                        this.lab_master.textFlow = game.TextUtil.parseHtml(str);
                    }
                    else {
                        this.lab_master.text = "";
                    }
                };
                MiningFightItem.prototype.onClickFight = function () {
                    if (!this._proxy.conquer_num) {
                        if (!this._proxy.dail_buy_num) {
                            game.PromptBox.getIns().show(game.getLanById("guaji_shouyi_tips07" /* guaji_shouyi_tips07 */));
                            return;
                        }
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "46" /* MiningBuy */);
                        return;
                    }
                    var proxy = game.getProxy("59" /* Friend */, 231 /* Friend */);
                    if (this.data.role_id) {
                        proxy.c2s_friend_pvp_challenge(this.data.role_id, { type: 2, target_id: this.data.data.role_id });
                    }
                    else {
                        proxy.c2s_friend_pvp_challenge(this.data.data.role_id, { type: 2, target_id: null });
                    }
                    this._proxy.refresh_list = true;
                    facade.hideView("61" /* More */, "42" /* MiningFight */);
                };
                return MiningFightItem;
            }(mod.BaseRenderer));
            more.MiningFightItem = MiningFightItem;
            __reflect(MiningFightItem.prototype, "game.mod.more.MiningFightItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningFightListView = /** @class */ (function (_super) {
                __extends(MiningFightListView, _super);
                function MiningFightListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningFightListSkin";
                    return _this;
                }
                return MiningFightListView;
            }(eui.Component));
            more.MiningFightListView = MiningFightListView;
            __reflect(MiningFightListView.prototype, "game.mod.more.MiningFightListView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningGiftItem = /** @class */ (function (_super) {
                __extends(MiningGiftItem, _super);
                function MiningGiftItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MiningGiftItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 254 /* Mining */);
                };
                MiningGiftItem.prototype.dataChanged = function () {
                    var cfg = this.data;
                    if (!cfg) {
                        return;
                    }
                    this._listData.source = cfg.reward;
                    var is_bought = this._proxy.getGiftBought(cfg.index);
                    var task_data = mod.TaskUtil.getTask(cfg.task_id);
                    var color_str = game.TextUtil.addEnoughColor(task_data.schedule, task_data.target);
                    var task_cfg = mod.TaskUtil.getCfg(cfg.task_id);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(task_cfg.desc + color_str);
                    var bool = task_data.schedule >= task_data.target;
                    this.img_bought.visible = is_bought || !bool;
                    if (this.img_bought.visible) {
                        this.img_bought.source = is_bought ? "lvseyigoumai" : "hongseweiwancheng";
                    }
                    this.btn_buy.visible = !is_bought && bool;
                    if (this.btn_buy.visible) {
                        this.btn_buy.resetCost();
                        if (bool) {
                            if (cfg.cost) {
                                this.btn_buy.label = "";
                                this.btn_buy.setCost(cfg.cost);
                            }
                            else {
                                this.btn_buy.label = "领取";
                            }
                        }
                        this.btn_buy.setHint(!is_bought && bool);
                    }
                };
                MiningGiftItem.prototype.onClick = function () {
                    if (this.data.cost && !mod.BagUtil.checkPropCnt(this.data.cost[0], this.data.cost[1], 1 /* Dialog */)) {
                        return;
                    }
                    this._proxy.c2s_zhandui_target_buy(this.data.index);
                };
                return MiningGiftItem;
            }(mod.BaseGiftItemRender));
            more.MiningGiftItem = MiningGiftItem;
            __reflect(MiningGiftItem.prototype, "game.mod.more.MiningGiftItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningGiftView = /** @class */ (function (_super) {
                __extends(MiningGiftView, _super);
                function MiningGiftView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningGiftSkin";
                    return _this;
                }
                return MiningGiftView;
            }(eui.Component));
            more.MiningGiftView = MiningGiftView;
            __reflect(MiningGiftView.prototype, "game.mod.more.MiningGiftView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var MiningItem = /** @class */ (function (_super) {
                __extends(MiningItem, _super);
                function MiningItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //玩家自己
                    _this.is_self = false;
                    return _this;
                }
                MiningItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 254 /* Mining */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.head_master, this.onFight, this);
                };
                MiningItem.prototype.dataChanged = function () {
                    this.setMaster();
                    var member = this.data && this.data.memeber;
                    if (member) {
                        this.is_self = member.role_id.eq(game.RoleVo.ins.role_id);
                        this.head_self.updateShow(member.head, member.head_frame, member.sex, member.vip, member.role_id);
                        this.lab_self.text = member.name;
                        this.power_label.setPowerValue(member.showpower, 0xad3c1a);
                    }
                    for (var i = 0; i < 2; i++) {
                        var key = i + 1;
                        var info = this.data && this.data.members && this.data.members[i] || null;
                        var item = this["slaveItem" + key];
                        item.setData(info, this.is_self);
                        if (this.is_self) {
                            item.setHint(!info && this._proxy.conquer_num > 0);
                        }
                        else {
                            item.setHint(false);
                        }
                        var lab = this["lab_time" + key];
                        this.onUpdateTime(lab, info && info.value.toNumber() || 0);
                    }
                };
                MiningItem.prototype.setMaster = function () {
                    var master = this.data && this.data.kuanzhu;
                    var bool = !!master;
                    if (!bool) {
                        this.currentState = "1";
                    }
                    else {
                        this.currentState = "2";
                        this.head_master.updateShow(master.head, master.head_frame, master.sex, master.vip);
                        this.onUpdateTime(this.lab_slavetime, master.value.toNumber());
                        var str = game.StringUtil.substitute(game.getLanById("zhanduishengxu_tips7" /* zhanduishengxu_tips7 */), [master.name]);
                        this.lab_tips.textFlow = game.TextUtil.parseHtml(str);
                    }
                };
                MiningItem.prototype.onFight = function () {
                    if (!mod.ViewMgr.getIns().checkZhenrongGod(1)) {
                        game.PromptBox.getIns().show("请先上阵军团阵容");
                        return;
                    }
                    if (!this._proxy.rescue_num) {
                        game.PromptBox.getIns().show("次数不足");
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "43" /* MiningSave */, this.data);
                };
                MiningItem.prototype.onUpdateTime = function (lab, endTime) {
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    var timeStr = game.TimeUtil.formatSecond(leftTime, 'd天H时', true);
                    lab.text = leftTime > 0 ? timeStr : "";
                };
                MiningItem.prototype.onUpdateTimes = function () {
                    if (!this.data) {
                        return;
                    }
                    if (this.data.members) {
                        for (var i in this.data.members) {
                            var info = this.data.members[i];
                            var lab = this["lab_time" + (+i + 1)];
                            if (lab) {
                                this.onUpdateTime(lab, info.value.toNumber());
                            }
                        }
                    }
                    if (this.currentState == "2" && this.data.kuanzhu) {
                        this.onUpdateTime(this.lab_slavetime, this.data.kuanzhu.value.toNumber());
                    }
                };
                return MiningItem;
            }(mod.BaseRenderer));
            more.MiningItem = MiningItem;
            __reflect(MiningItem.prototype, "game.mod.more.MiningItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningLingbaoView = /** @class */ (function (_super) {
                __extends(MiningLingbaoView, _super);
                function MiningLingbaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningLingbaoSkin";
                    return _this;
                }
                return MiningLingbaoView;
            }(eui.Component));
            more.MiningLingbaoView = MiningLingbaoView;
            __reflect(MiningLingbaoView.prototype, "game.mod.more.MiningLingbaoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningMasterView = /** @class */ (function (_super) {
                __extends(MiningMasterView, _super);
                function MiningMasterView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningMasterSkin";
                    return _this;
                }
                return MiningMasterView;
            }(eui.Component));
            more.MiningMasterView = MiningMasterView;
            __reflect(MiningMasterView.prototype, "game.mod.more.MiningMasterView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var MiningModalItem = /** @class */ (function (_super) {
                __extends(MiningModalItem, _super);
                function MiningModalItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MiningModalItem.prototype.setModal = function (info) {
                    this.grp_info.visible = this.img_head.visible = !!info;
                    this.img_add.visible = !info;
                    if (!info) {
                        return;
                    }
                    this.lab_name.text = info.name;
                    this.timeItem.visible = !!info.value;
                    if (info.value) {
                        this.timeItem.updateLeftTime(info.value.toNumber() - TimeMgr.time.serverTimeSecond);
                    }
                };
                MiningModalItem.prototype.setCurrentState = function (state) {
                    if (state === void 0) { state = "2"; }
                    this.currentState = state;
                };
                return MiningModalItem;
            }(mod.Btn));
            more.MiningModalItem = MiningModalItem;
            __reflect(MiningModalItem.prototype, "game.mod.more.MiningModalItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var AchieveTaskRender = /** @class */ (function (_super) {
                __extends(AchieveTaskRender, _super);
                function AchieveTaskRender() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                AchieveTaskRender.prototype.onClickDraw = function () {
                    mod.TaskUtil.clickTask(this.data, this.btn_go);
                };
                return AchieveTaskRender;
            }(mod.TaskRenderIcon));
            more.AchieveTaskRender = AchieveTaskRender;
            __reflect(AchieveTaskRender.prototype, "game.mod.more.AchieveTaskRender");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningResultWinView = /** @class */ (function (_super) {
                __extends(MiningResultWinView, _super);
                function MiningResultWinView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningResultWinSkin";
                    return _this;
                }
                return MiningResultWinView;
            }(eui.Component));
            more.MiningResultWinView = MiningResultWinView;
            __reflect(MiningResultWinView.prototype, "game.mod.more.MiningResultWinView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningSaveView = /** @class */ (function (_super) {
                __extends(MiningSaveView, _super);
                function MiningSaveView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningSaveSkin";
                    return _this;
                }
                return MiningSaveView;
            }(eui.Component));
            more.MiningSaveView = MiningSaveView;
            __reflect(MiningSaveView.prototype, "game.mod.more.MiningSaveView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var Handler = base.Handler;
            var MiningSlaveEftItem = /** @class */ (function (_super) {
                __extends(MiningSlaveEftItem, _super);
                function MiningSlaveEftItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._show = false;
                    return _this;
                }
                MiningSlaveEftItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 254 /* Mining */);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_modal, this.onClickModal, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_ot, this.onClickOt, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_check, this.onClickCheck, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_free, this.onClickFree, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_out, this.onClickOut, this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_goon, this.onClickGoOn, this);
                };
                MiningSlaveEftItem.prototype.dataChanged = function () {
                    this.btn_modal.setModal(this.data);
                    this._show = false;
                    this.btn_ot.visible = this.btn_check.visible = this.btn_free.visible = this.btn_out.visible = this.btn_goon.visible = this._show;
                    if (!this.data || !this.data.role_id) {
                        this.setHint = false;
                        this.btn_modal.setHint(this._proxy.conquer_num > 0);
                        return;
                    }
                    var opers = this._proxy.getSlaveOper(this.data.role_id);
                    if (!opers || !opers.list) {
                        this.setHint = true;
                        this.btn_modal.setHint(true);
                        return;
                    }
                    var list = opers.list;
                    this.btn_ot.setHint(list.indexOf(1 /* Ot */) == -1);
                    this.btn_check.setHint(list.indexOf(2 /* Check */) == -1);
                    this.btn_goon.setHint(list.indexOf(4 /* GoOn */) == -1);
                    this.btn_modal.setHint(list.length < 3);
                };
                Object.defineProperty(MiningSlaveEftItem.prototype, "setHint", {
                    set: function (bool) {
                        this.btn_ot.setHint(bool);
                        this.btn_check.setHint(bool);
                        this.btn_goon.setHint(bool);
                    },
                    enumerable: true,
                    configurable: true
                });
                MiningSlaveEftItem.prototype.setData = function (data, dir) {
                    this.data = data;
                    if (dir == 2) {
                        this.btn_modal.setCurrentState();
                    }
                };
                MiningSlaveEftItem.prototype.onClickModal = function () {
                    if (this.data && this.data.role_id) {
                        this._show = !this._show;
                        this.btn_ot.visible = this.btn_check.visible = this.btn_free.visible = this.btn_out.visible = this.btn_goon.visible = this._show;
                    }
                    else {
                        // PromptBox.getIns().show("征服");
                        if (!mod.ViewMgr.getIns().checkZhenrongGod(1)) {
                            game.PromptBox.getIns().show("请先上阵军团阵容");
                            return;
                        }
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "42" /* MiningFight */);
                    }
                };
                MiningSlaveEftItem.prototype.onClickOt = function () {
                    var _this = this;
                    var bool = this._proxy.getSlaveOper(this.data.role_id, 1 /* Ot */);
                    if (bool) {
                        game.PromptBox.getIns().show(game.getLanById("zhanduishengxu_tips19" /* zhanduishengxu_tips19 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("zhanduishengxu_tips1" /* zhanduishengxu_tips1 */), Handler.alloc(this, function () {
                        _this._proxy.c2s_zhandui_helot_operate(1 /* Ot */, _this.data.role_id, game.RoleVo.ins.role_id);
                    }));
                };
                MiningSlaveEftItem.prototype.onClickCheck = function () {
                    var _this = this;
                    var bool = this._proxy.getSlaveOper(this.data.role_id, 2 /* Check */);
                    if (bool) {
                        game.PromptBox.getIns().show(game.getLanById("zhanduishengxu_tips18" /* zhanduishengxu_tips18 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("zhanduishengxu_tips2" /* zhanduishengxu_tips2 */), Handler.alloc(this, function () {
                        _this._proxy.c2s_zhandui_helot_operate(2 /* Check */, _this.data.role_id, game.RoleVo.ins.role_id);
                    }));
                };
                MiningSlaveEftItem.prototype.onClickFree = function () {
                    var _this = this;
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("zhanduishengxu_tips3" /* zhanduishengxu_tips3 */), Handler.alloc(this, function () {
                        _this._proxy.c2s_zhandui_helot_operate(5 /* Free */, _this.data.role_id, game.RoleVo.ins.role_id);
                    }));
                };
                MiningSlaveEftItem.prototype.onClickOut = function () {
                    var _this = this;
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("zhanduishengxu_tips4" /* zhanduishengxu_tips4 */), Handler.alloc(this, function () {
                        _this._proxy.c2s_zhandui_helot_operate(3 /* Out */, _this.data.role_id, game.RoleVo.ins.role_id);
                    }));
                };
                MiningSlaveEftItem.prototype.onClickGoOn = function () {
                    var _this = this;
                    var bool = this._proxy.getSlaveOper(this.data.role_id, 4 /* GoOn */);
                    if (bool) {
                        game.PromptBox.getIns().show(game.getLanById("zhanduishengxu_tips21" /* zhanduishengxu_tips21 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showConfirm(game.getLanById("zhanduishengxu_tips5" /* zhanduishengxu_tips5 */), Handler.alloc(this, function () {
                        _this._proxy.c2s_zhandui_helot_operate(4 /* GoOn */, _this.data.role_id, game.RoleVo.ins.role_id);
                    }));
                };
                return MiningSlaveEftItem;
            }(mod.BaseRenderer));
            more.MiningSlaveEftItem = MiningSlaveEftItem;
            __reflect(MiningSlaveEftItem.prototype, "game.mod.more.MiningSlaveEftItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var MiningSlaveItem = /** @class */ (function (_super) {
                __extends(MiningSlaveItem, _super);
                function MiningSlaveItem() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.is_self = false;
                    return _this;
                }
                MiningSlaveItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(TouchEvent.TOUCH_TAP, this.btn_add, this.onFight, this);
                    this._proxy = game.getProxy("61" /* More */, 254 /* Mining */);
                };
                MiningSlaveItem.prototype.dataChanged = function () {
                    // if (!this.data) {
                    //     return;
                    // }
                    var info = this.data;
                    if (!info) {
                        this.img_lock.visible = this.lab_slave.visible = this.grp_count.visible = this.head_slave.visible = false;
                        this.btn_add.visible = this.is_self;
                        return;
                    }
                    this.btn_add.visible = false;
                    this.img_lock.visible = this.lab_slave.visible = this.grp_count.visible = this.head_slave.visible = true;
                    this.head_slave.updateHeadShow(info.head, info.head_frame, info.sex, info.role_id);
                    this.lab_slave.text = info.name;
                    this.lab_count.text = info.rank_num + "/\u5C0F\u65F6";
                    var prop = game.GameConfig.getPropConfigById(this._proxy.team_kuanmai_item);
                    this.img_icon.source = prop.icon;
                };
                MiningSlaveItem.prototype.setData = function (data, self) {
                    if (self === void 0) { self = false; }
                    this.is_self = self;
                    this.data = data;
                };
                MiningSlaveItem.prototype.onFight = function () {
                    if (!mod.ViewMgr.getIns().checkZhenrongGod(1)) {
                        game.PromptBox.getIns().show("请先上阵军团阵容");
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "42" /* MiningFight */);
                };
                MiningSlaveItem.prototype.setHint = function (bool) {
                    this.redPoint.visible = bool;
                };
                return MiningSlaveItem;
            }(mod.BaseRenderer));
            more.MiningSlaveItem = MiningSlaveItem;
            __reflect(MiningSlaveItem.prototype, "game.mod.more.MiningSlaveItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningTipsItem = /** @class */ (function (_super) {
                __extends(MiningTipsItem, _super);
                function MiningTipsItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                MiningTipsItem.prototype.dataChanged = function () {
                    if (!this.data) {
                        return;
                    }
                    var cfg = game.getConfigByNameId("helot_text.json" /* HelotText */, this.data.index);
                    this.lab.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(cfg.text, [this.data.one_name, this.data.two_name]));
                };
                return MiningTipsItem;
            }(mod.BaseRenderer));
            more.MiningTipsItem = MiningTipsItem;
            __reflect(MiningTipsItem.prototype, "game.mod.more.MiningTipsItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningTipsView = /** @class */ (function (_super) {
                __extends(MiningTipsView, _super);
                function MiningTipsView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningTipsSkin";
                    return _this;
                }
                return MiningTipsView;
            }(eui.Component));
            more.MiningTipsView = MiningTipsView;
            __reflect(MiningTipsView.prototype, "game.mod.more.MiningTipsView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningView = /** @class */ (function (_super) {
                __extends(MiningView, _super);
                function MiningView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.MiningSkin";
                    return _this;
                }
                return MiningView;
            }(eui.Component));
            more.MiningView = MiningView;
            __reflect(MiningView.prototype, "game.mod.more.MiningView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XujieJitanHuanhuaItem = /** @class */ (function (_super) {
                __extends(XujieJitanHuanhuaItem, _super);
                function XujieJitanHuanhuaItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanHuanhuaItemSkin";
                    return _this;
                }
                XujieJitanHuanhuaItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list_star.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieJitanHuanhuaItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieJitanHuanhuaItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        this.lb_name.text = "\u796D\u4E3B\u540D\u79F0";
                        this.img_icon.source = 'kapai_wenhao';
                        this.gr_star.visible = this.gr_time.visible = false;
                        this.redPoint.visible = false;
                        return;
                    }
                    this.redPoint.visible = !!data.showHint;
                    this.lb_name.text = data.cfg.name;
                    this.img_icon.source = game.ResUtil.getBigIcon(data.cfg.icon);
                    this.img_gray.visible = data.star < 1;
                    this.updateTime();
                    var starList = [];
                    if (data.star) {
                        for (var i = 0; i < data.star; i++) {
                            starList.push('jitan_star_6');
                        }
                    }
                    this.gr_star.visible = starList && starList.length > 0;
                    this._listData.replaceAll(starList);
                    if (this.data.isSel != undefined) {
                        this.removeEft(); //移除选中特效
                        //防止刷新其他数据时影响到选中特效
                        if (this.data.isSel) {
                            //选中添加特效
                            this.addEftByParent("surface_sel" /* SurfaceSel */, this.gr_eft);
                        }
                    }
                };
                //todo 赛季期限 期限获得赛季效果，赛季功能后再处理
                XujieJitanHuanhuaItem.prototype.updateTime = function (endTime) {
                    if (endTime === void 0) { endTime = 0; }
                    var curTime = TimeMgr.time.serverTimeSecond;
                    var leftTime = endTime - curTime;
                    if (leftTime <= 0) {
                        this.gr_time.visible = false;
                        return;
                    }
                    this.gr_time.visible = true;
                    this.lb_time.text = game.TimeUtil.formatSecond(leftTime, 'd天H时', true);
                };
                return XujieJitanHuanhuaItem;
            }(mod.BaseRenderer));
            more.XujieJitanHuanhuaItem = XujieJitanHuanhuaItem;
            __reflect(XujieJitanHuanhuaItem.prototype, "game.mod.more.XujieJitanHuanhuaItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanHuanhuaView = /** @class */ (function (_super) {
                __extends(XujieJitanHuanhuaView, _super);
                function XujieJitanHuanhuaView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanHuanhuaSkin";
                    return _this;
                }
                return XujieJitanHuanhuaView;
            }(eui.Component));
            more.XujieJitanHuanhuaView = XujieJitanHuanhuaView;
            __reflect(XujieJitanHuanhuaView.prototype, "game.mod.more.XujieJitanHuanhuaView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanIconItem = /** @class */ (function (_super) {
                __extends(XujieJitanIconItem, _super);
                function XujieJitanIconItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanIconItemSkin";
                    return _this;
                }
                XujieJitanIconItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                XujieJitanIconItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieJitanIconItem.prototype.dataChanged = function () {
                    var data = this.data;
                    this.redPoint.visible = !!data.showHint;
                    if (!data || !data.info) {
                        this.grp_name.visible = this.grp_tips.visible = false;
                        this.img_icon.source = "jiatubiao1";
                        return;
                    }
                    this.grp_name.visible = true;
                    this.grp_tips.visible = data.status == 2;
                    var index = data.info.idx.toNumber();
                    // data.status == 3 ? PropIndex.XujieNengliangshi : data.info.idx.toNumber();
                    var cfg = game.getConfigById(index);
                    if (!cfg) {
                        return;
                    }
                    this.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name, game.ColorUtil.getColorByQuality1(cfg.quality)));
                    var propData = game.PropData.create(data.info.idx);
                    if (propData && propData.cfg) {
                        this.img_icon.source = propData.cfg.icon;
                    }
                };
                XujieJitanIconItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    //显示+号，获取道具弹窗或者放入道具弹窗
                    if (!data.info) {
                        if (!data.showHint) {
                            mod.ViewMgr.getIns().showGainWaysTips(this._proxy.getGainId());
                        }
                        else {
                            mod.ViewMgr.getIns().showSecondPop("61" /* More */, "24" /* XujieJitanShelf */);
                        }
                        return;
                    }
                    if (data.status == 1) {
                        //回收
                        this._proxy.sendJitanButtonClick(201 /* Oper201 */, null, null, null, null, data.idx);
                    }
                    else if (data.status == 2) {
                        //道具tips
                        mod.ViewMgr.getIns().showPropTips(data.info.idx.toNumber());
                    }
                    else if (data.status == 3) {
                        //获取奖励
                        this._proxy.sendJitanButtonClick(203 /* Oper203 */, null, null, null, 1, data.idx);
                    }
                };
                return XujieJitanIconItem;
            }(mod.BaseListenerRenderer));
            more.XujieJitanIconItem = XujieJitanIconItem;
            __reflect(XujieJitanIconItem.prototype, "game.mod.more.XujieJitanIconItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XujieJitanIconItemComp = /** @class */ (function (_super) {
                __extends(XujieJitanIconItemComp, _super);
                function XujieJitanIconItemComp() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanIconItemCompSkin";
                    return _this;
                }
                XujieJitanIconItemComp.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                };
                //todo
                XujieJitanIconItemComp.prototype.updateShow = function () {
                    var propList = this._proxy.prop_list;
                    for (var i = 0; i < game.XujieJitanSacrificeCnt; i++) {
                        var showHint = this.getIconHint(i);
                        var status = this.getStatus(i);
                        // console.log(`zhandui_jitan ${i} --- showHint:${showHint}, status:${status}`);
                        var itemData = {
                            info: propList[i],
                            showHint: showHint,
                            status: status,
                            idx: i + 1
                        };
                        this["item" + i].data = itemData;
                    }
                };
                //icon红点，可以获取奖励或者有道具放入
                XujieJitanIconItemComp.prototype.getIconHint = function (index) {
                    var propList = this._proxy.prop_list;
                    var propItem = propList[index];
                    if (propItem) {
                        var curTime = TimeMgr.time.serverTimeSecond;
                        var endTime = propItem.endtime.toNumber();
                        if (endTime) {
                            return curTime >= endTime; //时间到就可以领取奖励
                        }
                        else {
                            return false;
                        }
                    }
                    var datas = this._proxy.getBagDatas();
                    return datas && datas.length > 0;
                };
                //0空，1排队，2正在供奉，3可领取奖励
                XujieJitanIconItemComp.prototype.getStatus = function (idx) {
                    var propList = this._proxy.prop_list;
                    var propItem = propList[idx];
                    if (!propItem) {
                        return 0;
                    }
                    var endTime = propItem.endtime.toNumber();
                    if (endTime == 0) {
                        return 1; //时间为0，则是正在排队
                    }
                    var curTime = TimeMgr.time.serverTimeSecond;
                    if (curTime >= endTime) {
                        return 3;
                    }
                    var preProp = propList[idx - 1];
                    if (preProp) {
                        var preEndTime = preProp.endtime.toNumber();
                        if (curTime >= preEndTime) {
                            return 2; //上一个时间已到且当前这个时间未完成，则表示正在供奉
                        }
                    }
                    else {
                        if (idx == 0) {
                            return 2; //如果是第一个，默认就是正在供奉
                        }
                    }
                    return 0;
                };
                return XujieJitanIconItemComp;
            }(mod.BaseStageEventItem));
            more.XujieJitanIconItemComp = XujieJitanIconItemComp;
            __reflect(XujieJitanIconItemComp.prototype, "game.mod.more.XujieJitanIconItemComp");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanLingbaoView = /** @class */ (function (_super) {
                __extends(XujieJitanLingbaoView, _super);
                function XujieJitanLingbaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanLingbaoSkin";
                    return _this;
                }
                return XujieJitanLingbaoView;
            }(eui.Component));
            more.XujieJitanLingbaoView = XujieJitanLingbaoView;
            __reflect(XujieJitanLingbaoView.prototype, "game.mod.more.XujieJitanLingbaoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanSeacomItem = /** @class */ (function (_super) {
                __extends(XujieJitanSeacomItem, _super);
                function XujieJitanSeacomItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanSeacomItemSkin";
                    return _this;
                }
                XujieJitanSeacomItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(data.txt, data.isActed ? 15262666 /* WHITE */ : 7835024 /* GRAY */));
                    this.img_flag.source = data.isActed ? 'jiyuantubiaolvse' : 'jiyuantubiaohuise';
                };
                return XujieJitanSeacomItem;
            }(mod.BaseListenerRenderer));
            more.XujieJitanSeacomItem = XujieJitanSeacomItem;
            __reflect(XujieJitanSeacomItem.prototype, "game.mod.more.XujieJitanSeacomItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanSeasonComp = /** @class */ (function (_super) {
                __extends(XujieJitanSeasonComp, _super);
                function XujieJitanSeasonComp() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanSeasonCompSkin";
                    return _this;
                }
                XujieJitanSeasonComp.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                    this.list.itemRenderer = more.XujieJitanSeacomItem;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieJitanSeasonComp.prototype.updateShow = function () {
                    var list = [];
                    var lv = this._proxy.jitan_level;
                    var lvCfg = this._proxy.getLvConfig(lv || 1); // 若为0级时，则展示1级的buff效果等
                    if (lvCfg && lvCfg.buff_ids) {
                        for (var _i = 0, _a = lvCfg.buff_ids; _i < _a.length; _i++) {
                            var buffId = _a[_i];
                            var buffCfg = this.getBuffCfg(buffId);
                            if (buffCfg) {
                                list.push({
                                    txt: buffCfg.des,
                                    isActed: lvCfg.level <= lv
                                });
                            }
                        }
                    }
                    if (lvCfg && lvCfg.special_ids) {
                        for (var _b = 0, _c = lvCfg.special_ids; _b < _c.length; _b++) {
                            var id = _c[_b];
                            var cfg = this.getPrivilegeCfg(id);
                            if (cfg) {
                                list.push({
                                    txt: cfg.desc,
                                    isActed: lvCfg.level >= lv
                                });
                            }
                        }
                    }
                    var huanhuaCfgs = game.getConfigListByName("zhandui_jitan_huanhua.json" /* ZhanduiJitanHuanhua */);
                    for (var _d = 0, huanhuaCfgs_1 = huanhuaCfgs; _d < huanhuaCfgs_1.length; _d++) {
                        var huanhuaCfg = huanhuaCfgs_1[_d];
                        var info = this._proxy.getHuanhuaInfo(huanhuaCfg.index);
                        var star = info && info.star || 0;
                        var maxStar = huanhuaCfg.costs.length;
                        if (star >= maxStar) {
                            star--;
                        }
                        var isActed = star > 0;
                        if (huanhuaCfg.buff_ids) {
                            var buffId = huanhuaCfg.buff_ids[star];
                            var buffCfg = this.getBuffCfg(buffId);
                            if (buffCfg) {
                                list.push({
                                    txt: buffCfg.des,
                                    isActed: isActed
                                });
                            }
                        }
                        if (huanhuaCfg.special_ids) {
                            var id = huanhuaCfg.special_ids[star];
                            var cfg = this.getPrivilegeCfg(id);
                            if (cfg) {
                                list.push({
                                    txt: cfg.desc,
                                    isActed: isActed
                                });
                            }
                        }
                    }
                    this._listData.replaceAll(list);
                };
                XujieJitanSeasonComp.prototype.getBuffCfg = function (id) {
                    return game.getConfigByNameId("buff.json" /* Buff */, id);
                };
                XujieJitanSeasonComp.prototype.getPrivilegeCfg = function (id) {
                    return game.getConfigByNameId("new_privilege.json" /* NewPrivilege */, id);
                };
                return XujieJitanSeasonComp;
            }(mod.BaseStageEventItem));
            more.XujieJitanSeasonComp = XujieJitanSeasonComp;
            __reflect(XujieJitanSeasonComp.prototype, "game.mod.more.XujieJitanSeasonComp");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XujieJitanShelfItem = /** @class */ (function (_super) {
                __extends(XujieJitanShelfItem, _super);
                function XujieJitanShelfItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.consecrate.ConsecrateShelfItemSkin";
                    return _this;
                }
                XujieJitanShelfItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this, this.onClick, this);
                };
                XujieJitanShelfItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieJitanShelfItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.icon.setData(this.data);
                    this.lab_name.textFlow = this.icon.getPropName();
                    var cfg = this.data.cfg;
                    var score = cfg.param1[1][0];
                    // this.lab_score.text = `${getLanById(LanDef.consecrate_title3)}：+${score}`;
                    this.lab_score.text = '';
                    var seconds = cfg.param1[0][0];
                    this.addBmpFont(game.TimeUtil.getConsecrateTime(seconds), game.BmpTextCfg[104 /* MainVip */], this.grp_time);
                };
                XujieJitanShelfItem.prototype.onClick = function () {
                    this._proxy.sendJitanButtonClick(200 /* Oper200 */, null, null, [this.data.index]);
                    facade.sendNt("on_close_zhandui_jitan_shelf" /* ON_CLOSE_ZHANDUI_JITAN_SHELF */);
                };
                return XujieJitanShelfItem;
            }(mod.BaseRenderer));
            more.XujieJitanShelfItem = XujieJitanShelfItem;
            __reflect(XujieJitanShelfItem.prototype, "game.mod.more.XujieJitanShelfItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanShelfView = /** @class */ (function (_super) {
                __extends(XujieJitanShelfView, _super);
                function XujieJitanShelfView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.consecrate.ConsecrateShelfSkin";
                    return _this;
                }
                return XujieJitanShelfView;
            }(eui.Component));
            more.XujieJitanShelfView = XujieJitanShelfView;
            __reflect(XujieJitanShelfView.prototype, "game.mod.more.XujieJitanShelfView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanSpeedUpView = /** @class */ (function (_super) {
                __extends(XujieJitanSpeedUpView, _super);
                function XujieJitanSpeedUpView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.consecrate.ConsecrateSpeedUpSkin";
                    return _this;
                }
                return XujieJitanSpeedUpView;
            }(eui.Component));
            more.XujieJitanSpeedUpView = XujieJitanSpeedUpView;
            __reflect(XujieJitanSpeedUpView.prototype, "game.mod.more.XujieJitanSpeedUpView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanView = /** @class */ (function (_super) {
                __extends(XujieJitanView, _super);
                function XujieJitanView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieJitanSkin";
                    return _this;
                }
                return XujieJitanView;
            }(eui.Component));
            more.XujieJitanView = XujieJitanView;
            __reflect(XujieJitanView.prototype, "game.mod.more.XujieJitanView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XujiejitanSacrificeItem = /** @class */ (function (_super) {
                __extends(XujiejitanSacrificeItem, _super);
                function XujiejitanSacrificeItem() {
                    var _this = _super.call(this) || this;
                    _this._endTime = 0;
                    _this.skinName = "skins.more.XujiejitanSacrificeItemSkin";
                    return _this;
                }
                XujiejitanSacrificeItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                };
                XujiejitanSacrificeItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                    this._endTime = 0;
                };
                XujiejitanSacrificeItem.prototype.updateShow = function () {
                    var info = this._proxy.getSacrificeInfo();
                    if (!info) {
                        return;
                    }
                    var cfg = game.GameConfig.getPropConfigById(info.idx.toNumber());
                    if (!cfg) {
                        return;
                    }
                    this.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(cfg.name, game.ColorUtil.getColorByQuality1(cfg.quality)));
                    this._endTime = info.endtime.toNumber();
                    this.updateTime();
                };
                XujiejitanSacrificeItem.prototype.updateTime = function () {
                    var leftTime = this._endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime < 1) {
                        this._proxy.sendJitanButtonClick(207 /* Oper207 */); //正在献祭的完成了，请求数据
                        return;
                    }
                    this.lab_time.text = game.TimeUtil.formatSecond(leftTime, "d天H时", true);
                };
                return XujiejitanSacrificeItem;
            }(mod.BaseStageEventItem));
            more.XujiejitanSacrificeItem = XujiejitanSacrificeItem;
            __reflect(XujiejitanSacrificeItem.prototype, "game.mod.more.XujiejitanSacrificeItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoAreaItem = /** @class */ (function (_super) {
                __extends(XujieTansuoAreaItem, _super);
                function XujieTansuoAreaItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoAreaItemSkin";
                    return _this;
                }
                XujieTansuoAreaItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_bg.source = "xjts_area_icon_" + data.cfg.type;
                    this.lb_name.text = data.cfg.name;
                    this.img_gray.visible = !data.isActed;
                    if (data.isActed && data.progress != null) {
                        var progressStr = Math.floor(data.progress) + '%';
                        this.addBmpFont(progressStr, game.BmpTextCfg[209 /* CommonStage */], this.gr_num, true, 0.7, true, -3);
                    }
                    else {
                        this.clearFont(this.gr_num);
                    }
                };
                return XujieTansuoAreaItem;
            }(mod.BaseRenderer));
            more.XujieTansuoAreaItem = XujieTansuoAreaItem;
            __reflect(XujieTansuoAreaItem.prototype, "game.mod.more.XujieTansuoAreaItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoBusinessGridView = /** @class */ (function (_super) {
                __extends(XujieTansuoBusinessGridView, _super);
                function XujieTansuoBusinessGridView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoBusinessGridSkin";
                    return _this;
                }
                return XujieTansuoBusinessGridView;
            }(eui.Component));
            more.XujieTansuoBusinessGridView = XujieTansuoBusinessGridView;
            __reflect(XujieTansuoBusinessGridView.prototype, "game.mod.more.XujieTansuoBusinessGridView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoExpeditionGridView = /** @class */ (function (_super) {
                __extends(XujieTansuoExpeditionGridView, _super);
                function XujieTansuoExpeditionGridView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoExpeditionGridSkin";
                    return _this;
                }
                return XujieTansuoExpeditionGridView;
            }(eui.Component));
            more.XujieTansuoExpeditionGridView = XujieTansuoExpeditionGridView;
            __reflect(XujieTansuoExpeditionGridView.prototype, "game.mod.more.XujieTansuoExpeditionGridView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoExpeditionShenLingView = /** @class */ (function (_super) {
                __extends(XujieTansuoExpeditionShenLingView, _super);
                function XujieTansuoExpeditionShenLingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoExpeditionShenLingSkin";
                    return _this;
                }
                return XujieTansuoExpeditionShenLingView;
            }(eui.Component));
            more.XujieTansuoExpeditionShenLingView = XujieTansuoExpeditionShenLingView;
            __reflect(XujieTansuoExpeditionShenLingView.prototype, "game.mod.more.XujieTansuoExpeditionShenLingView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var Handler = base.Handler;
            var TimeMgr = base.TimeMgr;
            var XujieTansuoGridItem = /** @class */ (function (_super) {
                __extends(XujieTansuoGridItem, _super);
                function XujieTansuoGridItem() {
                    var _a;
                    var _this = _super.call(this) || this;
                    _this._transferUrl = 'assets/anim/creature/door_01/std_4'; //传送格资源
                    _this._imgBg = (_a = {},
                        _a[2 /* Reward */] = 'tubiao_shangdian',
                        _a[3 /* Business */] = 'tubiao_xianren',
                        _a[4 /* Expedition */] = 'tubiao_baoxiang',
                        _a);
                    _this.skinName = "skins.more.XujieTansuoGridItemSkin";
                    return _this;
                }
                XujieTansuoGridItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.rect, this.onClick, this);
                    this.gr_eft.scaleX = 0.5;
                    this.gr_eft.scaleY = 0.5;
                    this.img_light.touchEnabled = false;
                    this.touchEnabled = false;
                    this.gr_eft.y = 80;
                };
                XujieTansuoGridItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoGridItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        this.defaultView();
                        this.img_gray.visible = true;
                        this.img_light.visible = false;
                        return;
                    }
                    var isActed = this._proxy.isActedByRow(data.type, data.layer, data.row);
                    this.img_gray.visible = !isActed;
                    if (isActed) {
                        this.img_light.visible = data.status != 0 /* Null */;
                    }
                    else {
                        this.img_light.visible = data.status == 2 /* Reward */
                            || data.status == 3 /* Business */
                            || data.status == 4 /* Expedition */
                            || (data.status == 1 /* Monster */ && data.row == game.XujieTansuoRowCnt);
                    }
                    this._isActed = isActed;
                    // todo
                    if (data.status == 1 /* Monster */) {
                        this.monsterView();
                        if (data.row == game.XujieTansuoRowCnt) {
                            //boss格
                            this.addMonster(data.grid[1], this.gr_eft);
                        }
                        else {
                            //怪物格
                            if (isActed) {
                                this.addMonster(data.grid[1], this.gr_eft);
                            }
                            else {
                                this.defaultView();
                            }
                        }
                    }
                    else if (data.status == 2 /* Reward */) {
                        this.rewardView();
                    }
                    else if (data.status == 3 /* Business */) {
                        this.businessView();
                    }
                    else if (data.status == 4 /* Expedition */) {
                        var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                        var isExpedition = false;
                        if (gridInfo && gridInfo.endtime) {
                            var endTime = gridInfo.endtime.toNumber();
                            if (endTime && TimeMgr.time.serverTimeSecond < endTime) {
                                isExpedition = true; //正在远征
                            }
                        }
                        this.expeditionView(isExpedition);
                    }
                    else if (data.status == 5 /* Transfer */) {
                        //传送特效
                        this.transferView();
                    }
                    else {
                        this.nullView();
                    }
                };
                //空格子和未解锁的怪物格子， 不可点击
                XujieTansuoGridItem.prototype.onClick = function () {
                    var data = this.data;
                    if (!data || data.status == 0 /* Null */ /*|| !this._isActed*/) { //todo
                        return;
                    }
                    if (!this._isActed) {
                        game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips28" /* xujietansuo_tips28 */));
                        return;
                    }
                    // todo
                    if (!mod.BagUtil.checkPropCntUp(1450100154 /* XujieTansuoling */, 1)) {
                        return;
                    }
                    if (data.status == 3 /* Business */) {
                        //格子数据，3_消耗货币id_消耗货币的数量_掉落id(奖励为必掉的)_奖励预览id
                        facade.showView("61" /* More */, "56" /* XujieTansuoBusinessGrid */, data);
                    }
                    else if (data.status == 2 /* Reward */) {
                        //2_任务id
                        facade.showView("61" /* More */, "57" /* XujieTansuoRewardGrid */, data);
                    }
                    else if (data.status == 1 /* Monster */) {
                        if (!this._isActed) {
                            return;
                        }
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "60" /* XujieTansuoBossGrid */, data);
                    }
                    else if (data.status == 4 /* Expedition */) {
                        //格子数据，4_数量_品质_需要挂机时长（秒）_掉落id_展示id
                        var curInfo = this._proxy.expedition_info;
                        if (!curInfo || (curInfo && curInfo.map_index == data.type && curInfo.layer == data.layer && curInfo.row == data.row && curInfo.pos == data.col)) {
                            facade.showView("61" /* More */, "58" /* XujieTansuoExpeditionGrid */, data);
                        }
                        else {
                            game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips32" /* xujietansuo_tips32 */));
                            return;
                        }
                    }
                    else if (data.status == 5 /* Transfer */) {
                        var maxLayer = this._proxy.getMaxLayerByType(data.type);
                        if (maxLayer <= data.layer) {
                            game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips29" /* xujietansuo_tips29 */));
                            return;
                        }
                        mod.ViewMgr.getIns().showConfirm(game.getLanById("xujietansuo_tips30" /* xujietansuo_tips30 */), Handler.alloc(this, function () {
                            facade.sendNt("on_goto_xujietansuo_next_layer" /* ON_GOTO_XUJIETANSUO_NEXT_LAYER */, data.layer + 1);
                        }));
                    }
                };
                //未激活空格
                XujieTansuoGridItem.prototype.defaultView = function () {
                    this.img_bg.visible = this.head.visible
                        = this.img_yuanzhengzhong.visible = this.timeItem.visible = false;
                    this.gr_eft.removeChildren();
                    this.gr_eft.visible = false;
                    // this.img_gray.visible = true;
                };
                //空格子
                XujieTansuoGridItem.prototype.nullView = function () {
                    this.defaultView();
                };
                //怪物格，boss格
                XujieTansuoGridItem.prototype.monsterView = function () {
                    this.defaultView();
                    this.gr_eft.visible = true;
                    this.gr_eft.y = 80;
                };
                //奖励格
                XujieTansuoGridItem.prototype.rewardView = function () {
                    this.defaultView();
                    this.img_bg.visible = true;
                    this.img_bg.source = this._imgBg[2 /* Reward */];
                    this.img_bg.bottom = 70;
                };
                //商人格
                XujieTansuoGridItem.prototype.businessView = function () {
                    this.rewardView();
                    this.img_bg.source = this._imgBg[3 /* Business */];
                };
                //远征格
                XujieTansuoGridItem.prototype.expeditionView = function (inExpedition) {
                    if (inExpedition === void 0) { inExpedition = false; }
                    this.defaultView();
                    this.img_yuanzhengzhong.visible = this.timeItem.visible = this.head.visible = inExpedition;
                    this.img_bg.visible = !inExpedition;
                    if (this.img_bg.visible) {
                        this.img_bg.source = this._imgBg[4 /* Expedition */];
                        this.img_bg.bottom = 58;
                    }
                };
                //传送格
                XujieTansuoGridItem.prototype.transferView = function () {
                    this.defaultView();
                    this.gr_eft.visible = true;
                    this.addEftByParent(this._transferUrl, this.gr_eft, 0, 0, -1, null, 0);
                    this.gr_eft.y = 50;
                };
                //远征格子倒计时
                XujieTansuoGridItem.prototype.updateTime = function () {
                    var data = this.data;
                    if (!data || data.status != 4 /* Expedition */) {
                        return;
                    }
                    var endTime = this._proxy.getExpeditionGridEndTimeByLayer(data.type, data.layer);
                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                    if (leftTime <= 0) {
                        this.expeditionView(false);
                        return;
                    }
                    this.timeItem.updateLeftTime(leftTime);
                };
                return XujieTansuoGridItem;
            }(mod.BaseRenderer));
            more.XujieTansuoGridItem = XujieTansuoGridItem;
            __reflect(XujieTansuoGridItem.prototype, "game.mod.more.XujieTansuoGridItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XujieTansuoGridView = /** @class */ (function (_super) {
                __extends(XujieTansuoGridView, _super);
                function XujieTansuoGridView() {
                    var _this = _super.call(this) || this;
                    _this._expeditionItemList = []; //远征格子
                    _this.skinName = "skins.more.XujieTansuoGridSkin";
                    return _this;
                }
                XujieTansuoGridView.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                };
                XujieTansuoGridView.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                /**
                 * 更新层的格子内容
                 * @param type
                 * @param layer
                 */
                XujieTansuoGridView.prototype.updateView = function (type, layer) {
                    this._expeditionItemList = [];
                    for (var row = 1; row <= game.XujieTansuoRowCnt; row++) {
                        var grids = this.getGrids(type, layer, row);
                        if (grids && grids.length) {
                            for (var col = 1; col <= grids.length; col++) {
                                if (!this["item" + row + "_" + col]) {
                                    continue; //过滤
                                }
                                var status = this.getStatus(type, layer, row, col);
                                var itemData = {
                                    type: type,
                                    layer: layer,
                                    row: row,
                                    col: col,
                                    // isActed: this._proxy.isActedByRow(type, layer, row),
                                    status: status,
                                    grid: status == 0 /* Null */ ? null : grids[col - 1]
                                };
                                var gridInfo = this._proxy.getGridInfo(type, layer, row, col);
                                if (status == 4 /* Expedition */ && gridInfo && gridInfo.endtime) {
                                    var endTime = gridInfo.endtime.toNumber();
                                    var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                                    if (leftTime > 0) {
                                        this._expeditionItemList.push(this["item" + row + "_" + col]);
                                    }
                                }
                                this["item" + row + "_" + col].data = itemData;
                            }
                        }
                    }
                };
                //某排的格子配置表数据
                XujieTansuoGridView.prototype.getGrids = function (type, layer, row) {
                    var cfgObj = game.getConfigByNameId("zhandui_tansuo_map.json" /* ZhanduiTansuoMap */, type);
                    var layerId = layer * 100 + row;
                    if (!cfgObj || !cfgObj[layerId]) {
                        return null;
                    }
                    var cfg = cfgObj[layerId];
                    return cfg.grid;
                };
                //某一格子的状态，处理服务端下发的。如果null了，就是空格子 todo
                XujieTansuoGridView.prototype.getStatus = function (type, layer, row, col) {
                    var gridInfo = this._proxy.getGridInfo(type, layer, row, col);
                    if (gridInfo) {
                        if (row == game.XujieTansuoRowCnt && gridInfo.grid_type == 0 /* Null */) {
                            return 5 /* Transfer */;
                        }
                        return gridInfo.grid_type;
                    }
                    return 0 /* Null */;
                    // //若没有，表示已经变成空格子了
                    // if (!gridInfo) {
                    //     if (row == XujieTansuoRowCnt) {
                    //         return XujieTansuoGridStatus.Transfer;//boss格子变成传送格子
                    //     }
                    //     return XujieTansuoGridStatus.Null;
                    // }
                    // return gridInfo.grid_type;
                    // let grids = this.getGrids(type, layer, row);
                    // if (grids && grids[col - 1]) {
                    //     return grids[col - 1][0];//配置表状态
                    // }
                    // return XujieTansuoGridStatus.Null;
                };
                //远征格子倒计时，只存在一个远征
                XujieTansuoGridView.prototype.updateTime = function () {
                    if (this._expeditionItemList && this._expeditionItemList.length) {
                        var item = this._expeditionItemList[0];
                        item.updateTime();
                    }
                };
                return XujieTansuoGridView;
            }(mod.BaseStageEventItem));
            more.XujieTansuoGridView = XujieTansuoGridView;
            __reflect(XujieTansuoGridView.prototype, "game.mod.more.XujieTansuoGridView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoLayerItem = /** @class */ (function (_super) {
                __extends(XujieTansuoLayerItem, _super);
                function XujieTansuoLayerItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XujieTansuoLayerItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_layer.text = game.StringUtil.substitute(game.getLanById("xujietansuo_tips14" /* xujietansuo_tips14 */), [data]);
                };
                return XujieTansuoLayerItem;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoLayerItem = XujieTansuoLayerItem;
            __reflect(XujieTansuoLayerItem.prototype, "game.mod.more.XujieTansuoLayerItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoLayerView = /** @class */ (function (_super) {
                __extends(XujieTansuoLayerView, _super);
                function XujieTansuoLayerView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoLayerSkin";
                    return _this;
                }
                return XujieTansuoLayerView;
            }(eui.Component));
            more.XujieTansuoLayerView = XujieTansuoLayerView;
            __reflect(XujieTansuoLayerView.prototype, "game.mod.more.XujieTansuoLayerView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoMapItem = /** @class */ (function (_super) {
                __extends(XujieTansuoMapItem, _super);
                function XujieTansuoMapItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XujieTansuoMapItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                };
                XujieTansuoMapItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoMapItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_sel.visible = data.isSel;
                    this.bossItem.visible = data.isSel;
                    if (data.isSel) {
                        this.bossItem.data = data.type;
                    }
                    this.img_gray.visible = !data.isAct;
                    var topTeam = this._proxy.getRankInfo(1);
                    if (!topTeam || topTeam.map_index != data.type) {
                        this.teamItem.visible = false;
                    }
                    else {
                        this.teamItem.visible = true;
                        this.teamItem.data = topTeam;
                    }
                };
                return XujieTansuoMapItem;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoMapItem = XujieTansuoMapItem;
            __reflect(XujieTansuoMapItem.prototype, "game.mod.more.XujieTansuoMapItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoMapItemBoss = /** @class */ (function (_super) {
                __extends(XujieTansuoMapItemBoss, _super);
                function XujieTansuoMapItemBoss() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoMapItemBossSkin";
                    return _this;
                }
                XujieTansuoMapItemBoss.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                };
                XujieTansuoMapItemBoss.prototype.dataChanged = function () {
                    this.img_boss.source = '';
                    var type = this.data;
                    if (!type) {
                        return;
                    }
                    var maxLayer = this._proxy.getMaxLayerByType(type);
                    var rowCfg = this._proxy.getCfgByRow(type, maxLayer, game.XujieTansuoRowCnt);
                    if (rowCfg && rowCfg.grid && rowCfg.grid[0]) {
                        var grid = rowCfg.grid[0];
                        if (grid[0] == 1 /* Monster */) {
                            var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, grid[1]);
                            this.img_boss.source = monsterCfg && monsterCfg.res_id || '';
                        }
                    }
                };
                return XujieTansuoMapItemBoss;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoMapItemBoss = XujieTansuoMapItemBoss;
            __reflect(XujieTansuoMapItemBoss.prototype, "game.mod.more.XujieTansuoMapItemBoss");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoMapItemTeam = /** @class */ (function (_super) {
                __extends(XujieTansuoMapItemTeam, _super);
                function XujieTansuoMapItemTeam() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoMapItemTeamSkin";
                    return _this;
                }
                XujieTansuoMapItemTeam.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XujieTansuoMapItemTeam.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoMapItemTeam.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_flag.source = game.ResUtil.getZhanduiFlag(data.flag_index);
                    this.lb_name.text = data.team_name;
                };
                return XujieTansuoMapItemTeam;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoMapItemTeam = XujieTansuoMapItemTeam;
            __reflect(XujieTansuoMapItemTeam.prototype, "game.mod.more.XujieTansuoMapItemTeam");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoMapView = /** @class */ (function (_super) {
                __extends(XujieTansuoMapView, _super);
                function XujieTansuoMapView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoMapSkin";
                    return _this;
                }
                /**
                 *
                 * @param selType 选中的区域
                 * @param curType 当前正在探索的区域
                 */
                XujieTansuoMapView.prototype.updateView = function (selType, curType) {
                    var cfgs = game.getConfigListByName("zhandui_tansuo_type.json" /* ZhanduiTansuoType */);
                    for (var _i = 0, cfgs_12 = cfgs; _i < cfgs_12.length; _i++) {
                        var cfg = cfgs_12[_i];
                        var itemData = {
                            type: cfg.type,
                            isAct: cfg.type <= curType,
                            isSel: cfg.type == selType
                        };
                        this["map" + cfg.type].data = itemData;
                    }
                };
                return XujieTansuoMapView;
            }(eui.Component));
            more.XujieTansuoMapView = XujieTansuoMapView;
            __reflect(XujieTansuoMapView.prototype, "game.mod.more.XujieTansuoMapView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankItem = /** @class */ (function (_super) {
                __extends(XujieTansuoRankItem, _super);
                function XujieTansuoRankItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoRankItemSkin";
                    return _this;
                }
                XujieTansuoRankItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.addEventListenerEx(egret.TextEvent.LINK, this.lab_name, this.onClick, this);
                };
                XujieTansuoRankItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoRankItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rank = data.rank;
                    if (rank[0] == rank[1]) {
                        //具体名次
                        var rankNo = rank[0];
                        if (rankNo <= 3) {
                            this.currentState = rankNo == 1 ? 'first' : 'default';
                            this.img_rank.visible = true;
                            this.img_rank.source = "rank" + rankNo;
                            this.lab_rank.text = '';
                        }
                        else {
                            this.currentState = 'default';
                            this.img_rank.visible = false;
                            this.lab_rank.text = rankNo + '';
                        }
                        this.img_flag.source = data.info ? game.ResUtil.getZhanduiFlag(data.info.flag_index) : '';
                        this.lab_name.text = data.info ? "" + (data.info.team_name + '\n' + game.getLanById("guild_mengzhu" /* guild_mengzhu */) + ': ' + data.info.caption_name) : game.getLanById("tishi_2" /* tishi_2 */);
                        if (data.info) {
                            var cfg = game.getConfigByNameId("zhandui_tansuo_type.json" /* ZhanduiTansuoType */, data.info.map_index);
                            this.lab_num.text = cfg.name + '\n' + data.progress + '%';
                        }
                        else {
                            this.lab_num.text = '';
                        }
                    }
                    else if (rank.length == 1) {
                        //20+
                        this.currentState = 'default';
                        this.img_rank.visible = false;
                        this.img_flag.source = '';
                        this.lab_rank.text = rank[0] + '+';
                        this.lab_name.text = '';
                        this.lab_num.text = '';
                    }
                    else {
                        //范围排名（比如6-10）
                        this.currentState = 'default';
                        this.img_rank.visible = false;
                        this.lab_rank.text = rank[0] + '-' + rank[1];
                        this.img_flag.source = '';
                        this.lab_name.textFlow = game.TextUtil.parseHtml(game.TextUtil.addLinkHtmlTxt(game.getLanById("tongtiange_tips12" /* tongtiange_tips12 */), 16748553 /* ORANGE */, ''));
                        this.lab_num.text = '';
                    }
                };
                XujieTansuoRankItem.prototype.onClick = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "55" /* XujieTansuoRankSection */, this.data.rank);
                };
                return XujieTansuoRankItem;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoRankItem = XujieTansuoRankItem;
            __reflect(XujieTansuoRankItem.prototype, "game.mod.more.XujieTansuoRankItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankItem2 = /** @class */ (function (_super) {
                __extends(XujieTansuoRankItem2, _super);
                function XujieTansuoRankItem2() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoRankItemSkin2";
                    return _this;
                }
                XujieTansuoRankItem2.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    //this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this., this.onClick, this);
                };
                XujieTansuoRankItem2.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoRankItem2.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rankNo = data.rankNo;
                    // this.lb_rankno.text = rankNo == 1 ? '天下第一' : '第' + StringUtil.ChineseNum[rankNo] + '名';
                    if (data.rankInfo) {
                        this.img_flag.source = game.ResUtil.getZhanduiFlag(data.rankInfo.flag_index);
                        this.lb_name.text = data.rankInfo.team_name;
                    }
                    else {
                        this.img_flag.source = "";
                        this.lb_name.text = game.getLanById("tishi_2" /* tishi_2 */);
                    }
                    this.lb_name.textColor = rankNo == 1 ? 0xf8ff45 : 0xfdffd1;
                };
                return XujieTansuoRankItem2;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoRankItem2 = XujieTansuoRankItem2;
            __reflect(XujieTansuoRankItem2.prototype, "game.mod.more.XujieTansuoRankItem2");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankSectionItem = /** @class */ (function (_super) {
                __extends(XujieTansuoRankSectionItem, _super);
                function XujieTansuoRankSectionItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoRankItemSkin";
                    return _this;
                }
                XujieTansuoRankSectionItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.width = 642;
                };
                XujieTansuoRankSectionItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoRankSectionItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var rank = data.rank;
                    this.img_rank.visible = false;
                    this.lab_rank.text = rank[0] + '';
                    this.img_flag.source = data.info ? game.ResUtil.getZhanduiFlag(data.info.flag_index) : '';
                    this.lab_name.text = data.info ? "" + (data.info.team_name + '\n' + game.getLanById("guild_mengzhu" /* guild_mengzhu */) + ': ' + data.info.caption_name) : game.getLanById("tishi_2" /* tishi_2 */);
                    if (data.info) {
                        var cfg = game.getConfigByNameId("zhandui_tansuo_type.json" /* ZhanduiTansuoType */, data.info.map_index);
                        this.lab_num.text = cfg.name + '\n' + data.progress + '%';
                    }
                    else {
                        this.lab_num.text = '';
                    }
                };
                return XujieTansuoRankSectionItem;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoRankSectionItem = XujieTansuoRankSectionItem;
            __reflect(XujieTansuoRankSectionItem.prototype, "game.mod.more.XujieTansuoRankSectionItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankView = /** @class */ (function (_super) {
                __extends(XujieTansuoRankView, _super);
                function XujieTansuoRankView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoRankSkin";
                    return _this;
                }
                return XujieTansuoRankView;
            }(eui.Component));
            more.XujieTansuoRankView = XujieTansuoRankView;
            __reflect(XujieTansuoRankView.prototype, "game.mod.more.XujieTansuoRankView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRewardGridView = /** @class */ (function (_super) {
                __extends(XujieTansuoRewardGridView, _super);
                function XujieTansuoRewardGridView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoRewardGridSkin";
                    return _this;
                }
                return XujieTansuoRewardGridView;
            }(eui.Component));
            more.XujieTansuoRewardGridView = XujieTansuoRewardGridView;
            __reflect(XujieTansuoRewardGridView.prototype, "game.mod.more.XujieTansuoRewardGridView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoSaodangView = /** @class */ (function (_super) {
                __extends(XujieTansuoSaodangView, _super);
                function XujieTansuoSaodangView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoSaodangSkin";
                    return _this;
                }
                return XujieTansuoSaodangView;
            }(eui.Component));
            more.XujieTansuoSaodangView = XujieTansuoSaodangView;
            __reflect(XujieTansuoSaodangView.prototype, "game.mod.more.XujieTansuoSaodangView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoView = /** @class */ (function (_super) {
                __extends(XujieTansuoView, _super);
                function XujieTansuoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoSkin";
                    return _this;
                }
                return XujieTansuoView;
            }(eui.Component));
            more.XujieTansuoView = XujieTansuoView;
            __reflect(XujieTansuoView.prototype, "game.mod.more.XujieTansuoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XujieTansuoZhanbaoItem = /** @class */ (function (_super) {
                __extends(XujieTansuoZhanbaoItem, _super);
                function XujieTansuoZhanbaoItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoZhanbaoItemSkin";
                    return _this;
                }
                XujieTansuoZhanbaoItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                XujieTansuoZhanbaoItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoZhanbaoItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(data.str);
                    if (data.atk_role) {
                        this.headVip.updateShow(data.atk_role.head, data.atk_role.head_frame, data.atk_role.sex, data.atk_role.vip);
                    }
                    var timeStr = '';
                    if (data.time) {
                        var time = data.time && data.time.toNumber() || 0;
                        var leaveTime = TimeMgr.time.serverTimeSecond - time;
                        var day = Math.floor(leaveTime / game.Second.Day);
                        if (day > 0) {
                            timeStr = game.StringUtil.substitute(game.getLanById("xujietansuo_tips26" /* xujietansuo_tips26 */), [day]);
                        }
                        else {
                            var hour = Math.floor(leaveTime / game.Second.Hour);
                            timeStr = game.StringUtil.substitute(game.getLanById("xujietansuo_tips27" /* xujietansuo_tips27 */), [hour > 0 ? hour : 1]);
                        }
                    }
                    this.lb_time.text = timeStr;
                };
                return XujieTansuoZhanbaoItem;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoZhanbaoItem = XujieTansuoZhanbaoItem;
            __reflect(XujieTansuoZhanbaoItem.prototype, "game.mod.more.XujieTansuoZhanbaoItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoZhanbaoView = /** @class */ (function (_super) {
                __extends(XujieTansuoZhanbaoView, _super);
                function XujieTansuoZhanbaoView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoZhanbaoSkin";
                    return _this;
                }
                return XujieTansuoZhanbaoView;
            }(eui.Component));
            more.XujieTansuoZhanbaoView = XujieTansuoZhanbaoView;
            __reflect(XujieTansuoZhanbaoView.prototype, "game.mod.more.XujieTansuoZhanbaoView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoZhanlipinItem = /** @class */ (function (_super) {
                __extends(XujieTansuoZhanlipinItem, _super);
                function XujieTansuoZhanlipinItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoZhanlipinItemSkin";
                    return _this;
                }
                XujieTansuoZhanlipinItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this.list.itemRenderer = mod.Icon;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoZhanlipinItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                XujieTansuoZhanlipinItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(data.str || '');
                    this._listData.replaceAll(data.props);
                };
                return XujieTansuoZhanlipinItem;
            }(mod.BaseListenerRenderer));
            more.XujieTansuoZhanlipinItem = XujieTansuoZhanlipinItem;
            __reflect(XujieTansuoZhanlipinItem.prototype, "game.mod.more.XujieTansuoZhanlipinItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoZhanlipinView = /** @class */ (function (_super) {
                __extends(XujieTansuoZhanlipinView, _super);
                function XujieTansuoZhanlipinView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoZhanlipinSkin";
                    return _this;
                }
                return XujieTansuoZhanlipinView;
            }(eui.Component));
            more.XujieTansuoZhanlipinView = XujieTansuoZhanlipinView;
            __reflect(XujieTansuoZhanlipinView.prototype, "game.mod.more.XujieTansuoZhanlipinView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TBSFightView = /** @class */ (function (_super) {
                __extends(TBSFightView, _super);
                function TBSFightView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.TBSFightSkin";
                    _this.gr_model0.touchEnabled = false;
                    _this.gr_model1.touchEnabled = false;
                    return _this;
                }
                return TBSFightView;
            }(eui.Component));
            more.TBSFightView = TBSFightView;
            __reflect(TBSFightView.prototype, "game.mod.more.TBSFightView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoSceneResultFailView = /** @class */ (function (_super) {
                __extends(XujieTansuoSceneResultFailView, _super);
                function XujieTansuoSceneResultFailView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoSceneResultFailSkin";
                    return _this;
                }
                return XujieTansuoSceneResultFailView;
            }(eui.Component));
            more.XujieTansuoSceneResultFailView = XujieTansuoSceneResultFailView;
            __reflect(XujieTansuoSceneResultFailView.prototype, "game.mod.more.XujieTansuoSceneResultFailView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoSceneResultKillView = /** @class */ (function (_super) {
                __extends(XujieTansuoSceneResultKillView, _super);
                function XujieTansuoSceneResultKillView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoSceneResultKillSkin";
                    return _this;
                }
                return XujieTansuoSceneResultKillView;
            }(eui.Component));
            more.XujieTansuoSceneResultKillView = XujieTansuoSceneResultKillView;
            __reflect(XujieTansuoSceneResultKillView.prototype, "game.mod.more.XujieTansuoSceneResultKillView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoSceneResultView = /** @class */ (function (_super) {
                __extends(XujieTansuoSceneResultView, _super);
                function XujieTansuoSceneResultView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.XujieTansuoSceneResultSkin";
                    return _this;
                }
                return XujieTansuoSceneResultView;
            }(eui.Component));
            more.XujieTansuoSceneResultView = XujieTansuoSceneResultView;
            __reflect(XujieTansuoSceneResultView.prototype, "game.mod.more.XujieTansuoSceneResultView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongAttrView = /** @class */ (function (_super) {
                __extends(ZhenrongAttrView, _super);
                function ZhenrongAttrView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhenrongAttrSkin";
                    return _this;
                }
                return ZhenrongAttrView;
            }(eui.Component));
            more.ZhenrongAttrView = ZhenrongAttrView;
            __reflect(ZhenrongAttrView.prototype, "game.mod.more.ZhenrongAttrView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongHuashenView = /** @class */ (function (_super) {
                __extends(ZhenrongHuashenView, _super);
                function ZhenrongHuashenView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhenrongHuashenSkin";
                    return _this;
                }
                return ZhenrongHuashenView;
            }(eui.Component));
            more.ZhenrongHuashenView = ZhenrongHuashenView;
            __reflect(ZhenrongHuashenView.prototype, "game.mod.more.ZhenrongHuashenView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongItem = /** @class */ (function (_super) {
                __extends(ZhenrongItem, _super);
                function ZhenrongItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhenrongItemSkin";
                    return _this;
                }
                ZhenrongItem.prototype.dataChanged = function () {
                    var data = this.data;
                    this.removeEffect(this._effId);
                    if (!data) {
                        this.img_add.visible = true;
                        return;
                    }
                    this.img_add.visible = false;
                    this._effId = this.addAnimate(data, this.gr_eft);
                    var type = game.PropData.getPropParse(data);
                    if (type == 400 /* Shenling */ || type == 409 /* Huashen */) {
                        this.gr_eft.scaleX = 0.5;
                        this.gr_eft.scaleY = 0.5;
                    }
                    else {
                        this.gr_eft.scaleX = 1;
                        this.gr_eft.scaleY = 1;
                    }
                };
                return ZhenrongItem;
            }(mod.BaseRenderer));
            more.ZhenrongItem = ZhenrongItem;
            __reflect(ZhenrongItem.prototype, "game.mod.more.ZhenrongItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongShenlingView = /** @class */ (function (_super) {
                __extends(ZhenrongShenlingView, _super);
                function ZhenrongShenlingView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhenrongShenlingSkin";
                    return _this;
                }
                return ZhenrongShenlingView;
            }(eui.Component));
            more.ZhenrongShenlingView = ZhenrongShenlingView;
            __reflect(ZhenrongShenlingView.prototype, "game.mod.more.ZhenrongShenlingView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongView = /** @class */ (function (_super) {
                __extends(ZhenrongView, _super);
                function ZhenrongView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhenrongSkin";
                    return _this;
                }
                return ZhenrongView;
            }(eui.Component));
            more.ZhenrongView = ZhenrongView;
            __reflect(ZhenrongView.prototype, "game.mod.more.ZhenrongView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiBuildView = /** @class */ (function (_super) {
                __extends(ZhanduiBuildView, _super);
                function ZhanduiBuildView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiBuildSkin";
                    return _this;
                }
                return ZhanduiBuildView;
            }(eui.Component));
            more.ZhanduiBuildView = ZhanduiBuildView;
            __reflect(ZhanduiBuildView.prototype, "game.mod.more.ZhanduiBuildView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiConstructBtn = /** @class */ (function (_super) {
                __extends(ZhanduiConstructBtn, _super);
                function ZhanduiConstructBtn() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiConstructBtnSkin";
                    return _this;
                }
                ZhanduiConstructBtn.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                };
                ZhanduiConstructBtn.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZhanduiConstructBtn.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.iconDisplay.scaleX = this.iconDisplay.scaleY = 1;
                    this.clearFont(this.gr_font);
                    //跳转id
                    if (data.gainId) {
                        var cfg = game.getConfigByNameId("jump.json" /* Jump */, data.gainId);
                        this.iconDisplay.source = cfg && cfg.icon || '';
                        return;
                    }
                    //福利
                    if (data.bonus) {
                        this.iconDisplay.source = "icon_fuli";
                        this.addBmpFont(data.bonus + '级福', game.BmpTextCfg[225 /* Zhandui */], this.gr_font, true, 1, true, -2);
                        return;
                    }
                    //战旗
                    if (data.flag) {
                        this.iconDisplay.source = game.ResUtil.getZhanduiFlag(data.flag);
                        this.iconDisplay.scaleX = this.iconDisplay.scaleY = 0.7;
                        var cfg = game.getConfigByNameId("zhandui_qizhi.json" /* ZhanduiQizhi */, data.flag);
                        this.addBmpFont((cfg.cond || 0) + '级战', game.BmpTextCfg[225 /* Zhandui */], this.gr_font, true, 1, true, -2);
                    }
                };
                return ZhanduiConstructBtn;
            }(mod.BaseRenderer));
            more.ZhanduiConstructBtn = ZhanduiConstructBtn;
            __reflect(ZhanduiConstructBtn.prototype, "game.mod.more.ZhanduiConstructBtn");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiConstructItem = /** @class */ (function (_super) {
                __extends(ZhanduiConstructItem, _super);
                function ZhanduiConstructItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiConstructItemSkin";
                    return _this;
                }
                ZhanduiConstructItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 251 /* Zhandui */);
                    this.list.itemRenderer = more.ZhanduiConstructBtn;
                    this.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.list, this.onClick, this);
                };
                ZhanduiConstructItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZhanduiConstructItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_val.text = data.cfg.level + game.getLanById("lv" /* lv */);
                    this.vBar.setData(data.vBarData);
                    var list = [];
                    if (data.cfg.gain_id) {
                        for (var _i = 0, _a = data.cfg.gain_id; _i < _a.length; _i++) {
                            var gainId = _a[_i];
                            if (gainId) {
                                list.push({
                                    gainId: gainId
                                });
                            }
                        }
                    }
                    var specialGain = data.cfg.special_gain || [];
                    if (specialGain[0]) {
                        list.push({
                            bonus: specialGain[0]
                        });
                    }
                    if (specialGain[1]) {
                        list.push({
                            flag: specialGain[1]
                        });
                    }
                    this._listData.replaceAll(list);
                };
                ZhanduiConstructItem.prototype.onClick = function () {
                    var data = this.list.selectedItem;
                    if (!data) {
                        return;
                    }
                    if (data.gainId) {
                        mod.ViewMgr.getIns().showViewByID(data.gainId);
                        return;
                    }
                    var teamLv = this._proxy.team_level;
                    var lv = data.bonus;
                    if (data.flag) {
                        var cfg = game.getConfigByNameId("zhandui_qizhi.json" /* ZhanduiQizhi */, data.flag);
                        lv = cfg.cond || 0;
                    }
                    if (lv <= teamLv) {
                        game.PromptBox.getIns().show("\u5DF2\u89E3\u9501");
                    }
                    else {
                        game.PromptBox.getIns().show("\u672A\u89E3\u9501");
                    }
                };
                return ZhanduiConstructItem;
            }(mod.BaseListenerRenderer));
            more.ZhanduiConstructItem = ZhanduiConstructItem;
            __reflect(ZhanduiConstructItem.prototype, "game.mod.more.ZhanduiConstructItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiConstructView = /** @class */ (function (_super) {
                __extends(ZhanduiConstructView, _super);
                function ZhanduiConstructView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiConstructSkin";
                    return _this;
                }
                return ZhanduiConstructView;
            }(eui.Component));
            more.ZhanduiConstructView = ZhanduiConstructView;
            __reflect(ZhanduiConstructView.prototype, "game.mod.more.ZhanduiConstructView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiCreateView = /** @class */ (function (_super) {
                __extends(ZhanduiCreateView, _super);
                function ZhanduiCreateView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiCreateSkin";
                    return _this;
                }
                return ZhanduiCreateView;
            }(eui.Component));
            more.ZhanduiCreateView = ZhanduiCreateView;
            __reflect(ZhanduiCreateView.prototype, "game.mod.more.ZhanduiCreateView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiFlagItem = /** @class */ (function (_super) {
                __extends(ZhanduiFlagItem, _super);
                function ZhanduiFlagItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ZhanduiFlagItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_tag.visible = data.type == 2;
                    var notAct = data.type == 0;
                    this.img_gray.visible = notAct;
                    if (notAct && data.cfg.cond) {
                        this.lb_cond.visible = true;
                        this.lb_cond.text = game.StringUtil.substitute(game.getLanById("medal_cond0" /* medal_cond0 */), [data.cfg.cond]);
                    }
                    else {
                        this.lb_cond.visible = false;
                    }
                    if (this.img_flag)
                        this.img_flag.source = game.ResUtil.getZhanduiFlag(data.cfg.index);
                };
                return ZhanduiFlagItem;
            }(mod.IconSel));
            more.ZhanduiFlagItem = ZhanduiFlagItem;
            __reflect(ZhanduiFlagItem.prototype, "game.mod.more.ZhanduiFlagItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiFlagView = /** @class */ (function (_super) {
                __extends(ZhanduiFlagView, _super);
                function ZhanduiFlagView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiFlagSkin";
                    return _this;
                }
                return ZhanduiFlagView;
            }(eui.Component));
            more.ZhanduiFlagView = ZhanduiFlagView;
            __reflect(ZhanduiFlagView.prototype, "game.mod.more.ZhanduiFlagView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiInviteItem = /** @class */ (function (_super) {
                __extends(ZhanduiInviteItem, _super);
                function ZhanduiInviteItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.union.UnionApplyItemSkin";
                    return _this;
                }
                ZhanduiInviteItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 251 /* Zhandui */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_agree, this.onClickAgree, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_refuse, this.onClickRefuse, this);
                };
                ZhanduiInviteItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZhanduiInviteItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lab_name.text = data.name;
                    this.lab_power.text = game.StringUtil.getPowerNumStr(data.showpower.toNumber());
                    this.head.updateShow(data.head, data.head_frame, data.sex, data.vip);
                };
                ZhanduiInviteItem.prototype.onClickAgree = function () {
                    this._proxy.sendButtonClickIspass(this.data.role_id, 1);
                };
                ZhanduiInviteItem.prototype.onClickRefuse = function () {
                    this._proxy.sendButtonClickIspass(this.data.role_id, 0);
                };
                return ZhanduiInviteItem;
            }(mod.BaseListenerRenderer));
            more.ZhanduiInviteItem = ZhanduiInviteItem;
            __reflect(ZhanduiInviteItem.prototype, "game.mod.more.ZhanduiInviteItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiInviteListView = /** @class */ (function (_super) {
                __extends(ZhanduiInviteListView, _super);
                function ZhanduiInviteListView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiInviteListSkin";
                    return _this;
                }
                return ZhanduiInviteListView;
            }(eui.Component));
            more.ZhanduiInviteListView = ZhanduiInviteListView;
            __reflect(ZhanduiInviteListView.prototype, "game.mod.more.ZhanduiInviteListView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiItem = /** @class */ (function (_super) {
                __extends(ZhanduiItem, _super);
                function ZhanduiItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiItemSkin";
                    return _this;
                }
                ZhanduiItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._jitanProxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                };
                ZhanduiItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZhanduiItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.redPoint.visible = !!data.showHint;
                    this.removeEffect(this._jitanEft);
                    if (data.type == 3) {
                        var cfg = this._jitanProxy.getHuanhuaCfg();
                        if (cfg) {
                            this._jitanEft = this.addAnimate(cfg.index, this.gr_eft);
                        }
                        var lv = this._jitanProxy.jitan_level;
                        this.lb_lv.text = lv + '';
                    }
                    else {
                        this.img_name.source = "zhandui_jianzhu_name" + data.type;
                        this.img_bg.source = "zhandui_jianzhu" + data.type;
                    }
                };
                ZhanduiItem.prototype.setData = function (type, showHint) {
                    if (showHint === void 0) { showHint = false; }
                    this.data = { type: type, showHint: showHint };
                };
                return ZhanduiItem;
            }(mod.BaseRenderer));
            more.ZhanduiItem = ZhanduiItem;
            __reflect(ZhanduiItem.prototype, "game.mod.more.ZhanduiItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiJoinItem = /** @class */ (function (_super) {
                __extends(ZhanduiJoinItem, _super);
                function ZhanduiJoinItem() {
                    var _this = _super.call(this) || this;
                    _this._teamCnt = 4; //战队人员数量
                    _this.skinName = "skins.more.ZhanduiJoinItemSkin";
                    return _this;
                }
                ZhanduiJoinItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 251 /* Zhandui */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.btn_do, this.onClick, this);
                };
                ZhanduiJoinItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZhanduiJoinItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.lb_name.text = game.getLanById("zhandui_tips1" /* zhandui_tips1 */) + '：' + data.team_name;
                    this.lb_captain.text = game.getLanById("guild_mengzhu" /* guild_mengzhu */) + "\uFF1A" + data.name;
                    this.lb_num.text = game.getLanById("relic6" /* relic6 */) + "\uFF1A" + data.role_count + '/' + this._teamCnt;
                    this.powerLabel.setPowerValue(data.total_showpower);
                    this.img_flag.source = game.ResUtil.getZhanduiFlag(data.flag_index);
                    if (data.limit_showpower && data.limit_showpower.notEquals(Long.ZERO)) {
                        this.lb_limit.text = game.getLanById("showpower" /* showpower */) + '：' + game.StringUtil.getPowerNumStr(data.limit_showpower.toNumber());
                    }
                    else {
                        this.lb_limit.text = game.getLanById("zhandui_tips6" /* zhandui_tips6 */);
                    }
                };
                ZhanduiJoinItem.prototype.onClick = function () {
                    if (this.lb_limit.text == game.getLanById("zhandui_tips6" /* zhandui_tips6 */)) {
                        if (this.data.role_count >= this._teamCnt) {
                            game.PromptBox.getIns().show(game.getLanById("zhandui_tips26" /* zhandui_tips26 */));
                        }
                        else {
                            this._proxy.sendButtonClickTeamId(this.data.team_id);
                        }
                        return;
                    }
                    var limitPower = this.data.limit_showpower;
                    var myPower = game.RoleVo.ins.showpower;
                    if (myPower.lessThan(limitPower)) {
                        game.PromptBox.getIns().show(game.getLanById("tiaojianbuzu" /* tiaojianbuzu */));
                        return;
                    }
                    this._proxy.sendButtonClickTeamId(this.data.team_id);
                };
                return ZhanduiJoinItem;
            }(mod.BaseListenerRenderer));
            more.ZhanduiJoinItem = ZhanduiJoinItem;
            __reflect(ZhanduiJoinItem.prototype, "game.mod.more.ZhanduiJoinItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiJoinView = /** @class */ (function (_super) {
                __extends(ZhanduiJoinView, _super);
                function ZhanduiJoinView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiJoinSkin";
                    return _this;
                }
                return ZhanduiJoinView;
            }(eui.Component));
            more.ZhanduiJoinView = ZhanduiJoinView;
            __reflect(ZhanduiJoinView.prototype, "game.mod.more.ZhanduiJoinView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiRenameView = /** @class */ (function (_super) {
                __extends(ZhanduiRenameView, _super);
                function ZhanduiRenameView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiRenameSkin";
                    return _this;
                }
                return ZhanduiRenameView;
            }(eui.Component));
            more.ZhanduiRenameView = ZhanduiRenameView;
            __reflect(ZhanduiRenameView.prototype, "game.mod.more.ZhanduiRenameView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiTeammateCheckView = /** @class */ (function (_super) {
                __extends(ZhanduiTeammateCheckView, _super);
                function ZhanduiTeammateCheckView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.friend.FriendCheckSkin";
                    return _this;
                }
                return ZhanduiTeammateCheckView;
            }(eui.Component));
            more.ZhanduiTeammateCheckView = ZhanduiTeammateCheckView;
            __reflect(ZhanduiTeammateCheckView.prototype, "game.mod.more.ZhanduiTeammateCheckView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var ZhanduiTeammateItem = /** @class */ (function (_super) {
                __extends(ZhanduiTeammateItem, _super);
                function ZhanduiTeammateItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiTeammateItemSkin";
                    return _this;
                }
                ZhanduiTeammateItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 251 /* Zhandui */);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.group_head, this.onClick, this);
                    this.addEventListenerEx(egret.TouchEvent.TOUCH_TAP, this.img_add, this.onClickAdd, this);
                };
                ZhanduiTeammateItem.prototype.onRemoveFromStage = function () {
                    _super.prototype.onRemoveFromStage.call(this);
                };
                ZhanduiTeammateItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        this.defaultView();
                        return;
                    }
                    this.currentState = 'head';
                    var itemIdx = this.itemIndex;
                    this.img_captain.visible = itemIdx == 0;
                    var name = data.name;
                    var index = name.indexOf(".");
                    var result = name.slice(index + 1);
                    this.lb_name.text = result;
                    this.img_online.source = data.is_online == 1 ? 'zaixian_lv' : 'zaixian_hui';
                    this.headVip.updateShow(data.head, data.head_frame, data.sex, data.vip);
                };
                ZhanduiTeammateItem.prototype.defaultView = function () {
                    this.currentState = 'add';
                };
                ZhanduiTeammateItem.prototype.onClick = function () {
                    var _this = this;
                    if (!this.data) {
                        return;
                    }
                    var pt = this.localToGlobal();
                    var point = new egret.Point(pt.x, pt.y + 80);
                    egret.callLater(function () {
                        facade.showView("61" /* More */, "18" /* ZhanduiTeammateCheck */, {
                            data: _this.data,
                            point: point
                        });
                    }, this);
                };
                ZhanduiTeammateItem.prototype.onClickAdd = function () {
                    if (!this._proxy.isCaption()) {
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips10" /* zhandui_tips10 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "16" /* ZhanduiInviteList */);
                };
                return ZhanduiTeammateItem;
            }(mod.BaseListenerRenderer));
            more.ZhanduiTeammateItem = ZhanduiTeammateItem;
            __reflect(ZhanduiTeammateItem.prototype, "game.mod.more.ZhanduiTeammateItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiView = /** @class */ (function (_super) {
                __extends(ZhanduiView, _super);
                function ZhanduiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiSkin";
                    return _this;
                }
                return ZhanduiView;
            }(eui.Component));
            more.ZhanduiView = ZhanduiView;
            __reflect(ZhanduiView.prototype, "game.mod.more.ZhanduiView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiXianjiItem = /** @class */ (function (_super) {
                __extends(ZhanduiXianjiItem, _super);
                function ZhanduiXianjiItem() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiXianjiItemSkin";
                    return _this;
                }
                ZhanduiXianjiItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var ary = data.split('#n') || [];
                    this.lb_name.textFlow = game.TextUtil.parseHtml(ary[0] || '');
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(ary[1] || '');
                };
                return ZhanduiXianjiItem;
            }(mod.BaseListenerRenderer));
            more.ZhanduiXianjiItem = ZhanduiXianjiItem;
            __reflect(ZhanduiXianjiItem.prototype, "game.mod.more.ZhanduiXianjiItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiXianjiView = /** @class */ (function (_super) {
                __extends(ZhanduiXianjiView, _super);
                function ZhanduiXianjiView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.ZhanduiXianjiSkin";
                    return _this;
                }
                return ZhanduiXianjiView;
            }(eui.Component));
            more.ZhanduiXianjiView = ZhanduiXianjiView;
            __reflect(ZhanduiXianjiView.prototype, "game.mod.more.ZhanduiXianjiView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var MiningBuyCntMdr = /** @class */ (function (_super) {
                __extends(MiningBuyCntMdr, _super);
                function MiningBuyCntMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningBuyCntView);
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningBuyCntMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(254 /* Mining */);
                };
                MiningBuyCntMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_cancel, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_confirm, egret.TouchEvent.TOUCH_TAP, this.onConfirm, this);
                    addEventListener(this._view.btn_add, egret.TouchEvent.TOUCH_TAP, this.onAdd, this);
                    addEventListener(this._view.btn_addTen, egret.TouchEvent.TOUCH_TAP, this.onAddTen, this);
                    addEventListener(this._view.btn_subtract, egret.TouchEvent.TOUCH_TAP, this.onSubtract, this);
                    addEventListener(this._view.btn_subtractTen, egret.TouchEvent.TOUCH_TAP, this.onSubtractTen, this);
                };
                MiningBuyCntMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                    this.setCnt(1); //重置次数
                };
                MiningBuyCntMdr.prototype.onUpdateView = function () {
                    this.count = this._proxy.team_buy_pay_num;
                    this.num = this._proxy.team_buy_num;
                    this._leftCnt = this._proxy.dail_buy_num || 0;
                    var str3 = game.TextUtil.addColor(this._leftCnt + "/" + this.num, !!this._leftCnt ? 2330156 /* GREEN */ : 16719376 /* RED */);
                    var str4 = game.StringUtil.substitute(game.getLanById("shengyugoumaicishu" /* shengyugoumaicishu */), [str3]);
                    this._view.lab_2.textFlow = game.TextUtil.parseHtml(str4);
                    this.onUpdateCost();
                };
                MiningBuyCntMdr.prototype.onUpdateCost = function () {
                    var param = game.GameConfig.getParamConfigById("team_buy_num");
                    this._view.coinItem.initIcon(param.value[0]);
                    this._view.coinItem.lab_cost.text = "" + this.getCnt * this.count;
                };
                MiningBuyCntMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                MiningBuyCntMdr.prototype.onConfirm = function () {
                    this._proxy.c2s_zhandui_buy_conquer_num(this.getCnt);
                    this.hide();
                };
                MiningBuyCntMdr.prototype.setCnt = function (cnt) {
                    this._view.lb_cnt.text = "" + cnt;
                    this.onUpdateCost();
                };
                MiningBuyCntMdr.prototype.onAdd = function () {
                    var cnt = this.getCnt;
                    if (cnt >= this._leftCnt) {
                        return;
                    }
                    this.setCnt(++cnt);
                };
                MiningBuyCntMdr.prototype.onAddTen = function () {
                    var cnt = this.getCnt;
                    if (cnt >= this._leftCnt) {
                        return;
                    }
                    this.setCnt(Math.min(cnt + 10, this._leftCnt));
                };
                MiningBuyCntMdr.prototype.onSubtract = function () {
                    var cnt = this.getCnt;
                    if (cnt <= 1) {
                        return;
                    }
                    this.setCnt(--cnt);
                };
                MiningBuyCntMdr.prototype.onSubtractTen = function () {
                    var cnt = this.getCnt;
                    if (cnt <= 1) {
                        return;
                    }
                    this.setCnt(Math.max(cnt - 10, 1));
                };
                Object.defineProperty(MiningBuyCntMdr.prototype, "getCnt", {
                    get: function () {
                        return Number(this._view.lb_cnt.text) || 1;
                    },
                    enumerable: true,
                    configurable: true
                });
                return MiningBuyCntMdr;
            }(game.MdrBase));
            more.MiningBuyCntMdr = MiningBuyCntMdr;
            __reflect(MiningBuyCntMdr.prototype, "game.mod.more.MiningBuyCntMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var MiningFightListMdr = /** @class */ (function (_super) {
                __extends(MiningFightListMdr, _super);
                function MiningFightListMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningFightListView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningFightListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(254 /* Mining */);
                    this._view.list.itemRenderer = more.MiningFightItem;
                    this._view.list.dataProvider = this._listData;
                };
                MiningFightListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.btn_add, TouchEvent.TOUCH_TAP, this.onClickAdd);
                    this.onNt("on_update_mining_fight_info" /* ON_UPDATE_MINING_FIGHT_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_mining_cnt_info" /* ON_UPDATE_MINING_CNT_INFO */, this.onUpdateCnt, this);
                };
                MiningFightListMdr.prototype.onShow = function () {
                    if (this._proxy.refresh_list || !this._proxy.conquest_list || !this._proxy.conquest_list.length) {
                        this._proxy.c2s_zhandui_conquer_show();
                        this._proxy.refresh_list = false;
                    }
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                    this.onUpdateCnt();
                };
                MiningFightListMdr.prototype.onUpdateView = function () {
                    this._listData.replaceAll(this._proxy.conquest_list);
                };
                MiningFightListMdr.prototype.onUpdateCnt = function () {
                    var conquer_num = this._proxy.conquer_num;
                    var team_conquest_num = this._proxy.team_conquest_num;
                    var color = !conquer_num ? 16719376 /* RED */ : 2330156 /* GREEN */;
                    this._view.lab_count.textFlow = game.TextUtil.parseHtml("\u6B21\u6570\uFF1A" + game.TextUtil.addColor(conquer_num + "/" + team_conquest_num, color));
                };
                MiningFightListMdr.prototype.onClickBtn = function () {
                    // if (this._refreshTime && TimeMgr.time.serverTimeSecond - this._refreshTime < 30) {
                    //     PromptBox.getIns().show(getLanById(LanDef.zhanduishengxu_tips11));
                    //     return;
                    // }
                    // this._refreshTime = TimeMgr.time.serverTimeSecond;
                    if (!this._proxy.conquer_num) {
                        game.PromptBox.getIns().show("次数不足");
                        return;
                    }
                    this._proxy.c2s_zhandui_conquer_show();
                };
                MiningFightListMdr.prototype.onClickAdd = function () {
                    if (!this._proxy.dail_buy_num) {
                        game.PromptBox.getIns().show(game.getLanById("bahuang_tips18" /* bahuang_tips18 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "46" /* MiningBuy */);
                };
                MiningFightListMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    // this._refreshTime = 0;
                };
                return MiningFightListMdr;
            }(game.MdrBase));
            more.MiningFightListMdr = MiningFightListMdr;
            __reflect(MiningFightListMdr.prototype, "game.mod.more.MiningFightListMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var ItemTapEvent = eui.ItemTapEvent;
            var MiningGiftMdr = /** @class */ (function (_super) {
                __extends(MiningGiftMdr, _super);
                function MiningGiftMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningGiftView);
                    _this._listData = new ArrayCollection();
                    _this._btnList = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(254 /* Mining */);
                    this._view.list.itemRenderer = more.MiningGiftItem;
                    this._view.list.dataProvider = this._listData;
                    this._view.list_type.itemRenderer = mod.TabSecondItem;
                    this._view.list_type.dataProvider = this._btnList;
                };
                MiningGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_type, ItemTapEvent.ITEM_TAP, this.onTabChanged, this);
                    this.onNt("on_update_mining_gift_info" /* ON_UPDATE_MINING_GIFT_INFO */, this.onUpdateView, this);
                    this.onNt("on_task_update" /* ON_TASK_UPDATE */, this.onUpdateTask, this);
                };
                MiningGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateType();
                    this.onUpdateView();
                };
                MiningGiftMdr.prototype.onUpdateType = function () {
                    var list = [
                        {
                            icon: "tubiao_kuangzhu",
                            showHint: false
                        },
                        {
                            icon: "tubiao_xiannu",
                            showHint: false
                        }
                    ];
                    this._btnList.source = list;
                    this._view.list_type.selectedIndex = 0;
                    this._type = this._view.list_type.selectedIndex + 1;
                };
                MiningGiftMdr.prototype.onUpdateView = function () {
                    // this._view.img_bg.source = ResUtil.getUiJpg("guanggaotu_mingyunhaoli_ouhuang");
                    var list = this._proxy.getGiftList(this._type);
                    this._listData.replaceAll(list);
                    this._view.list.scrollV = 0;
                };
                MiningGiftMdr.prototype.onUpdateTask = function (n) {
                    var types = n.body;
                    if (types.indexOf(48 /* Mining */) > -1) {
                        this.onUpdateView();
                    }
                };
                MiningGiftMdr.prototype.onTabChanged = function (e) {
                    this._type = e.itemIndex + 1;
                    this.onUpdateView();
                };
                MiningGiftMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return MiningGiftMdr;
            }(game.MdrBase));
            more.MiningGiftMdr = MiningGiftMdr;
            __reflect(MiningGiftMdr.prototype, "game.mod.more.MiningGiftMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var MiningLingbaoMdr = /** @class */ (function (_super) {
                __extends(MiningLingbaoMdr, _super);
                function MiningLingbaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningLingbaoView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningLingbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(254 /* Mining */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData;
                };
                MiningLingbaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    this.onNt("on_update_mining_lingbao_cnt_info" /* ON_UPDATE_MINING_LINGBAO_CNT_INFO */, this.onUpdateCnt, this);
                };
                MiningLingbaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                MiningLingbaoMdr.prototype.onUpdateView = function () {
                    var cfgArr = game.getConfigListByName("helot_call_reward.json" /* HelotCallReward */);
                    var list = [];
                    for (var _i = 0, cfgArr_11 = cfgArr; _i < cfgArr_11.length; _i++) {
                        var cfg = cfgArr_11[_i];
                        list.push(cfg.reward);
                    }
                    this._listData.replaceAll(list);
                    this.onUpdateCnt();
                };
                MiningLingbaoMdr.prototype.onUpdateCnt = function () {
                    var str = game.TextUtil.addColor(this._proxy.lingbao_cnt + "/" + this._proxy.team_lingbao_cishuxianzhi, 2330156 /* GREEN */);
                    var str2 = game.StringUtil.substitute(game.getLanById("zhanduishengxu_tips12" /* zhanduishengxu_tips12 */), [str]);
                    this._view.lab_count.textFlow = game.TextUtil.parseHtml(str2);
                    this._view.costItem.updateShow(this._proxy.team_lingbao_cost);
                };
                MiningLingbaoMdr.prototype.onClickBtn = function () {
                    if (this._proxy.lingbao_cnt >= this._proxy.team_lingbao_cishuxianzhi) {
                        game.PromptBox.getIns().show("召唤次数不足");
                        return;
                    }
                    if (!mod.BagUtil.checkPropCnt(this._proxy.team_lingbao_cost[0], this._proxy.team_lingbao_cost[1], 1 /* Dialog */)) {
                        return;
                    }
                    this._proxy.c2s_zhandui_lingbao();
                };
                MiningLingbaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return MiningLingbaoMdr;
            }(game.MdrBase));
            more.MiningLingbaoMdr = MiningLingbaoMdr;
            __reflect(MiningLingbaoMdr.prototype, "game.mod.more.MiningLingbaoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            /**虚空矿脉 */
            var MiningMainMdr = /** @class */ (function (_super) {
                __extends(MiningMainMdr, _super);
                function MiningMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            mdr: more.MiningMasterMdr,
                            title: "zhanduishengxu_tips13" /* zhanduishengxu_tips13 */,
                            icon: "kuangnubiaoqiantubiao",
                            bg: "",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "40" /* MiningMain */, "01" /* TabBtnType01 */],
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            mdr: more.MiningMdr,
                            title: "zhanduishengxu_tips14" /* zhanduishengxu_tips14 */,
                            icon: "shengxubiaoqiantubiao",
                            bg: "shengxubeijingtu",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "40" /* MiningMain */, "02" /* TabBtnType02 */],
                        }
                    ];
                    return _this;
                }
                return MiningMainMdr;
            }(mod.WndBaseMdr));
            more.MiningMainMdr = MiningMainMdr;
            __reflect(MiningMainMdr.prototype, "game.mod.more.MiningMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var TouchEvent = egret.TouchEvent;
            var TimeMgr = base.TimeMgr;
            var MiningMasterMdr = /** @class */ (function (_super) {
                __extends(MiningMasterMdr, _super);
                function MiningMasterMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.MiningMasterView);
                    _this._listData = new ArrayCollection();
                    return _this;
                }
                MiningMasterMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(254 /* Mining */);
                    this._view.list.itemRenderer = more.MiningItem;
                    this._view.list.dataProvider = this._listData;
                };
                MiningMasterMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_explain, TouchEvent.TOUCH_TAP, this.onClickExplain);
                    addEventListener(this._view.btn_zhenrong, TouchEvent.TOUCH_TAP, this.onClickZhenrong);
                    addEventListener(this._view.btn_tips, TouchEvent.TOUCH_TAP, this.onClickTips);
                    this.onNt("on_update_mining_master_info" /* ON_UPDATE_MINING_MASTER_INFO */, this.onUpdateView, this);
                };
                MiningMasterMdr.prototype.onShow = function () {
                    this._proxy.c2s_zhandui_kuanzhu_show(1);
                    _super.prototype.onShow.call(this);
                    TimeMgr.addUpdateItem(this, 1000);
                };
                MiningMasterMdr.prototype.onUpdateView = function () {
                    this._listData.replaceAll(this._proxy.list);
                    var prop = game.GameConfig.getPropConfigById(this._proxy.team_kuanmai_item);
                    this._view.img_icon.source = prop.icon;
                    this._view.lab_count.text = this._proxy.total + "/\u5C0F\u65F6";
                    var team_conquest_num = this._proxy.team_conquest_num;
                    var conquer_num = this._proxy.conquer_num;
                    // let color_conquer = !conquer_num ? WhiteColor.RED : WhiteColor.GREEN;
                    this._view.lab_fight.text = conquer_num + "/" + team_conquest_num;
                    var team_rescue_num = this._proxy.team_rescue_num;
                    var rescue_num = this._proxy.rescue_num;
                    // let color = !cnt ? WhiteColor.RED : WhiteColor.GREEN;
                    this._view.lab_help.text = rescue_num + "/" + team_rescue_num;
                };
                MiningMasterMdr.prototype.onClickExplain = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("zhanduishengxu_tips6" /* zhanduishengxu_tips6 */));
                };
                MiningMasterMdr.prototype.onClickZhenrong = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "66" /* Zhenrong */);
                };
                MiningMasterMdr.prototype.onClickTips = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "41" /* MiningTips */);
                };
                MiningMasterMdr.prototype.update = function (time) {
                    if (!this._listData || !this._listData.source || !this._listData.source.length) {
                        return;
                    }
                    for (var i = 0; i < this._view.list.numChildren; i++) {
                        var item = this._view.list.getChildAt(+i);
                        if (item) {
                            item.onUpdateTimes();
                        }
                    }
                };
                MiningMasterMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    TimeMgr.removeUpdateItem(this);
                };
                return MiningMasterMdr;
            }(game.EffectMdrBase));
            more.MiningMasterMdr = MiningMasterMdr;
            __reflect(MiningMasterMdr.prototype, "game.mod.more.MiningMasterMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            /**虚界矿脉 */
            var MiningMdr = /** @class */ (function (_super) {
                __extends(MiningMdr, _super);
                function MiningMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.MiningView);
                    _this._cnt = 2;
                    _this._other = 6;
                    return _this;
                }
                MiningMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(254 /* Mining */);
                };
                MiningMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_lingbao, TouchEvent.TOUCH_TAP, this.onClickBtn);
                    addEventListener(this._view.btn_gift, TouchEvent.TOUCH_TAP, this.onClickGift);
                    this.onNt("on_update_mining_master_info" /* ON_UPDATE_MINING_MASTER_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_mining_lingbao_cnt_info" /* ON_UPDATE_MINING_LINGBAO_CNT_INFO */, this.onUpdateCnt, this);
                };
                MiningMdr.prototype.onShow = function () {
                    this._proxy.c2s_zhandui_kuanzhu_show(2);
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                    this.onUpdateSale();
                };
                MiningMdr.prototype.onUpdateView = function () {
                    var info = this._proxy.my_info;
                    for (var i = 0; i < this._cnt; i++) {
                        var key = i + 1;
                        var item = this._view["modalItem" + key];
                        item.setData(info && info.members && info.members[i] || null, key);
                    }
                    var list = this._proxy.slave_list;
                    for (var i = 0; i < this._other; i++) {
                        var modal = this._view["modal" + (i + 1)];
                        modal.touchEnabled = false;
                        modal.visible = !!list[i];
                        if (modal.visible) {
                            modal.setModal(list[i]);
                        }
                    }
                    var prop = game.GameConfig.getPropConfigById(this._proxy.team_kuanmai_item);
                    this._view.img_icon.source = this._view.icon.source = prop.icon;
                    this._view.lab_count.text = this._proxy.total + "/\u5C0F\u65F6";
                    this.onUpdateCnt();
                };
                MiningMdr.prototype.onUpdateCnt = function () {
                    var count = mod.BagUtil.getPropCntByIdx(this._proxy.team_kuanmai_item);
                    this._view.lab_have.text = "" + count;
                    var num = count / this._proxy.team_lingbao_cost[1];
                    if (num > 1) {
                        num = 1;
                    }
                    this._view.btn_lingbao.label = Math.floor(num * 100) + "%";
                    this._view.btn_lingbao.setHint(this._proxy.getHintByLingbao());
                };
                MiningMdr.prototype.onUpdateSale = function () {
                    var param = game.GameConfig.getParamConfigById("team_product_id");
                    this._view.btn_sale.updateGift(param.value);
                };
                MiningMdr.prototype.onClickBtn = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "44" /* MiningLingbao */);
                };
                MiningMdr.prototype.onClickGift = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "45" /* MiningGift */);
                };
                MiningMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return MiningMdr;
            }(game.EffectMdrBase));
            more.MiningMdr = MiningMdr;
            __reflect(MiningMdr.prototype, "game.mod.more.MiningMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var MiningResultFailView = game.mod.more.MiningResultFailView;
            var MiningResultFailMdr = /** @class */ (function (_super) {
                __extends(MiningResultFailMdr, _super);
                function MiningResultFailMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", MiningResultFailView);
                    _this._btnList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningResultFailMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(254 /* Mining */);
                };
                MiningResultFailMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                MiningResultFailMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    // this.addEftByParent(UIEftSrc.Default, this._view.grp_eft, 0, 0, 0, null, 1, 1, false);
                    if (this._showArgs.type == 1 || this._showArgs.type == 2) {
                        this._view.img_title.source = "jiejiushibai";
                    }
                    else {
                        this._view.img_title.source = "zhengfushibai";
                    }
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                    //
                    this._view.icon_group.removeChildren();
                    this._btnList.length = 0;
                    var jumpData = null;
                    var jumpId = 0;
                    if (!mod.PayUtil.checkFirstCharge()) {
                        //未来首充过
                        jumpData = game.JumpDataList[40 /* FirstCharge */];
                        jumpId = 40 /* FirstCharge */;
                    }
                    else if (mod.PayUtil.checkTequanling()) {
                        //特权
                        jumpData = game.JumpDataList[44 /* PrerogativeWrit */];
                        jumpId = 44 /* PrerogativeWrit */;
                    }
                    else {
                        //充值
                        jumpData = game.JumpDataList[46 /* StoreXianyu */];
                        jumpId = 46 /* StoreXianyu */;
                    }
                    this.addBtn(jumpData, jumpId);
                };
                MiningResultFailMdr.prototype.addBtn = function (data, jumpId) {
                    var btn = new mod.Btn();
                    btn.skinName = "skins.common.CommonBtn1Skin";
                    btn.iconDisplay.source = data.icon || "huashen_task_tab1";
                    btn.width = 94;
                    btn.height = 94;
                    btn["jumpId"] = jumpId;
                    this._view.icon_group.addChild(btn);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(btn, egret.TouchEvent.TOUCH_TAP, this.jumpFunc, this);
                };
                //
                MiningResultFailMdr.prototype.jumpFunc = function (e) {
                    this.hide();
                    if (e.target instanceof mod.Btn) {
                        var jumpId = e.target["jumpId"];
                        mod.ViewMgr.getIns().showViewByID(jumpId);
                    }
                };
                MiningResultFailMdr.prototype.onHide = function () {
                    this._proxy.c2s_zhandui_kuanzhu_show(1);
                    this.removeEft();
                    _super.prototype.onHide.call(this);
                };
                return MiningResultFailMdr;
            }(game.EffectMdrBase));
            more.MiningResultFailMdr = MiningResultFailMdr;
            __reflect(MiningResultFailMdr.prototype, "game.mod.more.MiningResultFailMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var MiningResultWinMdr = /** @class */ (function (_super) {
                __extends(MiningResultWinMdr, _super);
                function MiningResultWinMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningResultWinView);
                    _this._btnList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningResultWinMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(254 /* Mining */);
                };
                MiningResultWinMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                MiningResultWinMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    // this.addEftByParent(UIEftSrc.Default, this._view.grp_eft, 0, 0, 0, null, 1, 1, false);
                    if (this._showArgs.type == 1 || this._showArgs.type == 2) {
                        this._view.img_title.source = "jiejiuchenggong";
                        this._view.lab_tips1.text = "恭喜您解救成功";
                        this._view.lab_tips2.text = this._showArgs.name + "\u5DF2\u6446\u8131\u4ED9\u81E3";
                    }
                    else {
                        this._view.img_title.source = "zhengfuchenggong";
                        this._view.lab_tips1.text = "恭喜您征服仙臣成功";
                        this._view.lab_tips2.text = this._showArgs.name + "\u5DF2\u6210\u4E3A\u60A8\u7684\u4ED9\u81E3";
                    }
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                };
                MiningResultWinMdr.prototype.onHide = function () {
                    this._proxy.c2s_zhandui_kuanzhu_show(1);
                    this.removeEft();
                    _super.prototype.onHide.call(this);
                };
                return MiningResultWinMdr;
            }(game.EffectMdrBase));
            more.MiningResultWinMdr = MiningResultWinMdr;
            __reflect(MiningResultWinMdr.prototype, "game.mod.more.MiningResultWinMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TouchEvent = egret.TouchEvent;
            var MiningSaveMdr = /** @class */ (function (_super) {
                __extends(MiningSaveMdr, _super);
                function MiningSaveMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningSaveView);
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningSaveMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(254 /* Mining */);
                };
                MiningSaveMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn, TouchEvent.TOUCH_TAP, this.onClickBtn);
                };
                MiningSaveMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                MiningSaveMdr.prototype.onUpdateView = function () {
                    var team_rescue_num = this._proxy.team_rescue_num;
                    var cnt = this._proxy.rescue_num;
                    var color = !cnt ? 16719376 /* RED */ : 2330156 /* GREEN */;
                    this._view.lab_count.textFlow = game.TextUtil.parseHtml("\u89E3\u6551\uFF1A" + game.TextUtil.addColor(cnt + "/" + team_rescue_num, color));
                    var info = this._showArgs.kuanzhu;
                    this._view.head1.updateShow(info.head, info.head_frame, info.sex, info.vip);
                    this._view.lab_name1.text = info.name;
                    this._view.power1.setPowerValue(info.god);
                    var my_info = this._proxy.my_info;
                    var my_teammate = my_info && my_info.memeber;
                    this._view.head2.updateShow(my_teammate.head, my_teammate.head_frame, info.sex, info.vip);
                    this._view.lab_name2.text = my_teammate.name;
                    this._view.power2.setPowerValue(my_teammate.god);
                };
                MiningSaveMdr.prototype.onClickBtn = function () {
                    var proxy = game.getProxy("59" /* Friend */, 231 /* Friend */);
                    proxy.c2s_friend_pvp_challenge(this._showArgs.kuanzhu.role_id, {
                        type: 1,
                        target_id: this._showArgs.memeber.role_id
                    });
                };
                MiningSaveMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return MiningSaveMdr;
            }(game.EffectMdrBase));
            more.MiningSaveMdr = MiningSaveMdr;
            __reflect(MiningSaveMdr.prototype, "game.mod.more.MiningSaveMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ArrayCollection = eui.ArrayCollection;
            var MiningTipsMdr = /** @class */ (function (_super) {
                __extends(MiningTipsMdr, _super);
                function MiningTipsMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.MiningTipsView);
                    _this._listData = new ArrayCollection();
                    _this.isEasyHide = true;
                    return _this;
                }
                MiningTipsMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.touchEnabled = false;
                    this._proxy = this.retProxy(254 /* Mining */);
                    this._view.list.itemRenderer = more.MiningTipsItem;
                    this._view.list.dataProvider = this._listData;
                };
                MiningTipsMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_mining_logs_info" /* ON_UPDATE_MINING_LOGS_INFO */, this.onUpdateView, this);
                };
                MiningTipsMdr.prototype.onShow = function () {
                    this._proxy.c2s_zhandui_zhanbao_show();
                    _super.prototype.onShow.call(this);
                    // this.onUpdateView();
                };
                MiningTipsMdr.prototype.onUpdateView = function () {
                    this._listData.replaceAll(this._proxy.logs);
                };
                MiningTipsMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                return MiningTipsMdr;
            }(game.EffectMdrBase));
            more.MiningTipsMdr = MiningTipsMdr;
            __reflect(MiningTipsMdr.prototype, "game.mod.more.MiningTipsMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanGiftItem = /** @class */ (function (_super) {
                __extends(XujieJitanGiftItem, _super);
                function XujieJitanGiftItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                XujieJitanGiftItem.prototype.onAddToStage = function () {
                    _super.prototype.onAddToStage.call(this);
                    this._proxy = game.getProxy("61" /* More */, 253 /* XujieJitan */);
                };
                XujieJitanGiftItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    var needLv = data.cfg.level;
                    var color = data.curLv >= needLv ? 2330156 /* GREEN */ : 16719376 /* RED */;
                    var str = game.StringUtil.substitute(game.getLanById("xujiejitan_tips7" /* xujiejitan_tips7 */), [data.cfg.level]) + game.TextUtil.addColor("(" + data.curLv + "/" + needLv + ")", color);
                    this.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    this.img_bought.visible = data.status == 2 /* Draw */;
                    this.btn_buy.visible = !this.img_bought.visible;
                    this.btn_buy.label = data.status == 1 /* Finish */ ? game.getLanById("lingqu" /* lingqu */) : game.getLanById("goto" /* goto */);
                    this.btn_buy.setHint(data.status == 1 /* Finish */);
                    if (data.status == 1 /* Finish */) {
                        this.btn_buy.setYellow();
                    }
                    else {
                        this.btn_buy.setBlue();
                    }
                    this._listData.replaceAll(data.cfg.rewards);
                };
                XujieJitanGiftItem.prototype.onClick = function () {
                    if (!this.data) {
                        return;
                    }
                    if (this.data.status == 1 /* Finish */) {
                        this._proxy.sendJitanButtonClick(206 /* Oper206 */, this.data.cfg.index);
                        return;
                    }
                    mod.ViewMgr.getIns().back();
                };
                return XujieJitanGiftItem;
            }(mod.BaseGiftItemRender));
            more.XujieJitanGiftItem = XujieJitanGiftItem;
            __reflect(XujieJitanGiftItem.prototype, "game.mod.more.XujieJitanGiftItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanGiftMainMdr = /** @class */ (function (_super) {
                __extends(XujieJitanGiftMainMdr, _super);
                function XujieJitanGiftMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "shengjilibaobiaoqiantubiao",
                            mdr: more.XujieJitanGiftMdr,
                            title: "xujiejitan_tips6" /* xujiejitan_tips6 */,
                            bg: "",
                            openIdx: 0,
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "21" /* XujieJitanGiftMain */, "01" /* TabBtnType01 */]
                        }
                    ];
                    return _this;
                }
                return XujieJitanGiftMainMdr;
            }(mod.WndBaseMdr));
            more.XujieJitanGiftMainMdr = XujieJitanGiftMainMdr;
            __reflect(XujieJitanGiftMainMdr.prototype, "game.mod.more.XujieJitanGiftMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanGiftMdr = /** @class */ (function (_super) {
                __extends(XujieJitanGiftMdr, _super);
                function XujieJitanGiftMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", mod.BaseGiftView);
                    return _this;
                }
                XujieJitanGiftMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(253 /* XujieJitan */);
                    this._view.timeItem.visible = this._view.iconBigReward.visible = false;
                    this._view.list.itemRenderer = more.XujieJitanGiftItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.updateBanner('xujiejitan_guanggaotu', true);
                };
                XujieJitanGiftMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_zhandui_jitan_base_info" /* ON_UPDATE_ZHANDUI_JITAN_BASE_INFO */, this.updateView, this);
                };
                XujieJitanGiftMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                XujieJitanGiftMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieJitanGiftMdr.prototype.updateView = function () {
                    var cfgs = game.getConfigListByName("zhandui_jitan_libao.json" /* ZhanduiJitanLibao */);
                    var list = [];
                    var drawList = [];
                    for (var _i = 0, cfgs_13 = cfgs; _i < cfgs_13.length; _i++) {
                        var cfg = cfgs_13[_i];
                        if (!cfg) {
                            continue;
                        }
                        var canReceive = this._proxy.canReceiveGift(cfg.index);
                        var status = 0 /* NotFinish */;
                        var isReceived = this._proxy.isGiftReceived(cfg.index);
                        if (isReceived) {
                            status = 2 /* Draw */;
                        }
                        else if (canReceive) {
                            status = 1 /* Finish */;
                        }
                        var itemData = {
                            cfg: cfg,
                            status: status,
                            curLv: this._proxy.jitan_level
                        };
                        if (isReceived) {
                            drawList.push(itemData);
                        }
                        else {
                            list.push(itemData);
                        }
                    }
                    //仅展示10条数据
                    if (list.length < 10) {
                        var disCnt = 10 - list.length; //缺几条数据
                        var drawLen = drawList.length;
                        var starI = drawLen > disCnt ? drawLen - disCnt : 0;
                        for (var i = starI; i < drawLen; i++) {
                            list.push(drawList[i]); //取后面几条补齐
                        }
                    }
                    else {
                        list.length = 10;
                    }
                    // SortTools.sortReward(list);
                    this._listData.replaceAll(list);
                };
                return XujieJitanGiftMdr;
            }(game.MdrBase));
            more.XujieJitanGiftMdr = XujieJitanGiftMdr;
            __reflect(XujieJitanGiftMdr.prototype, "game.mod.more.XujieJitanGiftMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XujieJitanHuanhuaMdr = /** @class */ (function (_super) {
                __extends(XujieJitanHuanhuaMdr, _super);
                function XujieJitanHuanhuaMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieJitanHuanhuaView);
                    _this._selIdx = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieJitanHuanhuaMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(253 /* XujieJitan */);
                    this._view.list.itemRenderer = more.XujieJitanHuanhuaItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieJitanHuanhuaMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_huanhua, egret.TouchEvent.TOUCH_TAP, this.onClickHuanhua, this);
                    addEventListener(this._view.btn_upstar, egret.TouchEvent.TOUCH_TAP, this.onClickUpstar, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_zhandui_jitan_base_info" /* ON_UPDATE_ZHANDUI_JITAN_BASE_INFO */, this.onUpdateView, this);
                };
                XujieJitanHuanhuaMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.onUpdateView();
                };
                XujieJitanHuanhuaMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                    this._selCfg = null;
                };
                XujieJitanHuanhuaMdr.prototype.onUpdateView = function () {
                    this.updateListData();
                    this.updateView();
                };
                XujieJitanHuanhuaMdr.prototype.updateListData = function () {
                    var _this = this;
                    var cfgs = game.getConfigListByName("zhandui_jitan_huanhua.json" /* ZhanduiJitanHuanhua */);
                    var list = [];
                    for (var _i = 0, cfgs_14 = cfgs; _i < cfgs_14.length; _i++) {
                        var cfg = cfgs_14[_i];
                        var info = this._proxy.getHuanhuaInfo(cfg.index);
                        var itemData = {
                            cfg: cfg,
                            showHint: this._proxy.canActOrUpstar(cfg.index),
                            star: info && info.star || 0,
                            isBattle: false,
                            isSel: false
                        };
                        list.push(itemData);
                    }
                    list.sort(function (a, b) {
                        if (a.cfg.index == _this._proxy.now_use_id) {
                            return -1;
                        }
                        if (b.cfg.index == _this._proxy.now_use_id) {
                            return 1;
                        }
                        if (a.showHint != b.showHint) {
                            return a.showHint ? -1 : 1;
                        }
                        if (a.cfg.quality != b.cfg.quality) {
                            return a.cfg.quality - b.cfg.quality;
                        }
                        return a.cfg.index - b.cfg.index;
                    });
                    if (this._selCfg) {
                        var size = list.length;
                        for (var i = 0; i < size; i++) {
                            var item = list[i];
                            if (item && item.cfg.index == this._selCfg.index) {
                                this._selIdx = i;
                                break;
                            }
                        }
                    }
                    else {
                        this._selCfg = list[this._selIdx].cfg;
                    }
                    for (var i = 0; i < list.length; i++) {
                        list[i].isSel = i == this._selIdx;
                    }
                    this._listData.replaceAll(list);
                    this._view.list.selectedIndex = this._selIdx;
                };
                XujieJitanHuanhuaMdr.prototype.updateView = function () {
                    if (!this._selCfg) {
                        return;
                    }
                    this._view.nameItem.updateShow(this._selCfg.name, this._selCfg.quality);
                    this.removeEffect(this._effId);
                    this._effId = this.addAnimate(this._selCfg.index, this._view.gr_eft);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(this._selCfg.desc);
                    this._view.img_name.source = "zhanduijitan_huanhua_" + this._selCfg.index;
                    var info = this._proxy.getHuanhuaInfo(this._selCfg.index);
                    var star = info && info.star || 0;
                    if (star >= this._selCfg.costs.length) {
                        star = this._selCfg.costs.length - 1; //满星，则取最后一个
                    }
                    var strList = [];
                    var buffCfg = game.getConfigByNameId("buff.json" /* Buff */, this._selCfg.buff_ids[star]);
                    if (buffCfg) {
                        strList.push(buffCfg.des);
                    }
                    if (this._selCfg.special_ids) {
                        for (var i = 0; i < this._selCfg.special_ids.length; i++) {
                            var cfg = game.getConfigByNameId("new_privilege.json" /* NewPrivilege */, this._selCfg.special_ids[i]);
                            if (cfg) {
                                strList.push(cfg.desc); //todo
                            }
                        }
                    }
                    this._view.lb_buff.textFlow = game.TextUtil.parseHtml(strList.join('\n'));
                    var isActed = this._proxy.isHuanhuaActed(this._selCfg.index);
                    this._view.btn_huanhua.visible = isActed;
                    if (isActed) {
                        var nowUseId = this._proxy.now_use_id;
                        this._view.btn_huanhua.icon = this._selCfg.index == nowUseId ? 'xiexiatubiao' : 'huanhuatubiao';
                    }
                    this.updateStar();
                    this.updateCost();
                };
                XujieJitanHuanhuaMdr.prototype.updateStar = function () {
                    var info = this._proxy.getHuanhuaInfo(this._selCfg.index);
                    var star = info && info.star || 0;
                    this._view.starListView.updateBigStar(star);
                };
                XujieJitanHuanhuaMdr.prototype.updateCost = function () {
                    var info = this._proxy.getHuanhuaInfo(this._selCfg.index);
                    var star = info && info.star || 0;
                    var isMaxStar = star >= this._selCfg.costs.length;
                    if (isMaxStar) {
                        star = this._selCfg.costs.length - 1;
                    }
                    var cost = this._selCfg.costs[star];
                    var cnt = this._proxy.shuijin_value;
                    this._view.coin.initIcon(cost[0]);
                    this._view.coin.lab_cost.text = cnt + "/" + cost[1];
                    if (isMaxStar) {
                        this._view.btn_upstar.updateMaxStar();
                        return;
                    }
                    this._view.btn_upstar.updateCost(cost, star > 0, '', false, this._proxy.shuijin_value);
                    this._view.btn_upstar.img_cost.visible = false;
                    this._view.btn_upstar.setHint(this._proxy.canActOrUpstar(this._selCfg.index));
                };
                XujieJitanHuanhuaMdr.prototype.onClickHuanhua = function () {
                    var nowUseId = this._proxy.now_use_id;
                    var isUsing = this._selCfg.index == nowUseId;
                    if (isUsing) {
                        this._proxy.sendJitanButtonClick(205 /* Oper205 */, null, 0);
                        return;
                    }
                    this._proxy.sendJitanButtonClick(205 /* Oper205 */, null, this._selCfg.index);
                };
                XujieJitanHuanhuaMdr.prototype.onClickUpstar = function () {
                    if (!this._proxy.canActOrUpstar(this._selCfg.index, true)) {
                        return;
                    }
                    var info = this._proxy.getHuanhuaInfo(this._selCfg.index);
                    var star = info && info.star || 0;
                    var cost = this._selCfg.costs[star];
                    if (!cost) {
                        return;
                    }
                    var propCfg = game.GameConfig.getPropConfigById(cost[0]);
                    var str = "\u662F\u5426\u82B1\u8D39" + game.TextUtil.addColor(cost[1] + (propCfg && propCfg.name || ''), 2330156 /* GREEN */)
                        + (star == 0 ? game.getLanById("active" /* active */) : game.getLanById("upstar" /* upstar */)) + this._selCfg.name;
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.upstarHandler, [this._selCfg.index]));
                };
                XujieJitanHuanhuaMdr.prototype.upstarHandler = function (index) {
                    this._proxy.sendJitanButtonClick(204 /* Oper204 */, null, index);
                };
                XujieJitanHuanhuaMdr.prototype.onClickList = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    var list = this._listData.source;
                    var preData = list[this._selIdx];
                    if (preData) {
                        preData.isSel = false;
                        this._listData.itemUpdated(preData);
                    }
                    var data = e.item;
                    data.isSel = true;
                    this._listData.itemUpdated(data);
                    this._selIdx = itemIdx;
                    this._selCfg = data.cfg;
                    this.updateView();
                };
                //todo 赛季期限，处理 XujieJitanHuanhuaItem 的倒计时
                XujieJitanHuanhuaMdr.prototype.update = function (time) {
                };
                return XujieJitanHuanhuaMdr;
            }(game.EffectMdrBase));
            more.XujieJitanHuanhuaMdr = XujieJitanHuanhuaMdr;
            __reflect(XujieJitanHuanhuaMdr.prototype, "game.mod.more.XujieJitanHuanhuaMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XujieJitanLingbaoMdr = /** @class */ (function (_super) {
                __extends(XujieJitanLingbaoMdr, _super);
                function XujieJitanLingbaoMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XujieJitanLingbaoView);
                    _this._classId = 3 /* Amass3 */;
                    _this._type = 3 /* Jitan */;
                    return _this;
                }
                XujieJitanLingbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(253 /* XujieJitan */);
                    this._consecrateProxy = facade.retMod("57" /* Consecrate */).retProxy(225 /* Consecrate */);
                    this._view.list_item.itemRenderer = mod.AmassItem;
                    this._view.list_item.dataProvider = this._itemList = new eui.ArrayCollection();
                    this._view.list_suit.itemRenderer = mod.BaseZhuangshiItem;
                    this._view.list_suit.dataProvider = this._suitList = new eui.ArrayCollection();
                };
                XujieJitanLingbaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.img_goto, egret.TouchEvent.TOUCH_TAP, this.onClickGoto, this);
                    addEventListener(this._view.btn_up, egret.TouchEvent.TOUCH_TAP, this.onClickBtnUp, this);
                    addEventListener(this._view.list_item, eui.ItemTapEvent.ITEM_TAP, this.onClickItem, this);
                    this.onNt("on_update_amass_info" /* ON_UPDATE_AMASS_INFO */, this.onInfoUpdate, this);
                    this.onNt("on_bag_update_by_prop_type" /* ON_BAG_UPDATE_BY_PROP_TYPE */, this.onBagUpdate, this);
                };
                XujieJitanLingbaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._types = this._consecrateProxy.getAmassTypes(this._classId);
                    if (this._type == 3 /* Jitan */) {
                        this._selType = this._types[0];
                    }
                    else {
                        this._selType = this._types[1];
                    }
                    this.typeUpdateInfo();
                };
                XujieJitanLingbaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieJitanLingbaoMdr.prototype.typeUpdateInfo = function () {
                    this.updateBar();
                    this.updateItemList();
                    this.updateSuitList();
                };
                XujieJitanLingbaoMdr.prototype.onInfoUpdate = function () {
                    this.typeUpdateInfo();
                };
                /** 通用背包事件监听 */
                XujieJitanLingbaoMdr.prototype.onBagUpdate = function (n) {
                    var types = n.body;
                    if (types.indexOf(36 /* ZhanduiLingbao */) < 0) {
                        return;
                    }
                    this.updateBar();
                    this.updateItemList();
                };
                XujieJitanLingbaoMdr.prototype.updateBar = function () {
                    var cfg = game.getConfigByNameId("amass_suit.json" /* AmassSuit */, this._selType);
                    var typeStr = cfg.icon;
                    this._view.img_type.source = "tujian_name_" + typeStr;
                    var curVal = this._consecrateProxy.getAmassActNum(this._classId, this._selType);
                    this._curCnt = curVal;
                    var indexList = this._consecrateProxy.getAmassIndexList(this._classId, this._selType);
                    var maxVal = indexList.length;
                    this._view.bar.show(curVal, maxVal, false, 0, false);
                    var canUp = this._consecrateProxy.canAmassTypeUp(this._classId, this._selType);
                    this._view.btn_up.visible = canUp;
                    this._view.btn_up.redPoint.visible = canUp;
                    this._view.img_goto.visible = !canUp;
                };
                XujieJitanLingbaoMdr.prototype.updateItemList = function () {
                    var indexList = this._consecrateProxy.getAmassIndexList(this._classId, this._selType).concat();
                    if (this._itemList.source.length) {
                        this._itemList.replaceAll(indexList);
                    }
                    else {
                        this._itemList.source = indexList;
                    }
                };
                XujieJitanLingbaoMdr.prototype.updateSuitList = function () {
                    var suitList = [];
                    var cfg = game.getConfigByNameId("amass_suit.json" /* AmassSuit */, this._selType);
                    for (var _i = 0, _a = cfg.suit; _i < _a.length; _i++) {
                        var info = _a[_i];
                        var needCnt = info[0];
                        var suitId = info[1];
                        var suitCfg = game.getConfigByNameId("suit_effect.json" /* SuitEffect */, suitId);
                        var desc = "";
                        if (this._curCnt >= needCnt) {
                            //激活
                            desc = game.TextUtil.addColor("◆ " + suitCfg.effect_show, 3496307 /* DEFAULT */) + game.TextUtil.addColor("（" + game.getLanById("actived" /* actived */)
                                + "）", 2330156 /* GREEN */);
                        }
                        else {
                            desc = "◆ " + suitCfg.effect_show + game.TextUtil.addColor("（" + game.getLanById("collected" /* collected */)
                                + this._curCnt + "/" + needCnt + "）", 16719376 /* RED */);
                        }
                        suitList.push(desc);
                    }
                    if (this._suitList.source.length) {
                        this._suitList.replaceAll(suitList);
                    }
                    else {
                        this._suitList.source = suitList;
                    }
                };
                XujieJitanLingbaoMdr.prototype.onClickGoto = function () {
                    var cfg = game.getConfigByNameId("amass_suit.json" /* AmassSuit */, this._selType);
                    mod.ViewMgr.getIns().showViewByID(cfg.jump_id);
                };
                XujieJitanLingbaoMdr.prototype.onClickBtnUp = function () {
                    this._consecrateProxy.c2s_amass_advance(this._classId, 1 /* OneKey */, this._selType);
                };
                XujieJitanLingbaoMdr.prototype.onClickItem = function (e) {
                    var index = e.item;
                    var cfg = this._consecrateProxy.getAmassCfg(index);
                    facade.showView("57" /* Consecrate */, "21" /* AmassUp */, { classId: this._classId, cfg: cfg });
                };
                return XujieJitanLingbaoMdr;
            }(game.MdrBase));
            more.XujieJitanLingbaoMdr = XujieJitanLingbaoMdr;
            __reflect(XujieJitanLingbaoMdr.prototype, "game.mod.more.XujieJitanLingbaoMdr");
            var XujieJitanLingbaoMdr2 = /** @class */ (function (_super) {
                __extends(XujieJitanLingbaoMdr2, _super);
                function XujieJitanLingbaoMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 2 /* Kuangmai */;
                    return _this;
                }
                return XujieJitanLingbaoMdr2;
            }(XujieJitanLingbaoMdr));
            more.XujieJitanLingbaoMdr2 = XujieJitanLingbaoMdr2;
            __reflect(XujieJitanLingbaoMdr2.prototype, "game.mod.more.XujieJitanLingbaoMdr2");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanLingbaoSecondMainMdr = /** @class */ (function (_super) {
                __extends(XujieJitanLingbaoSecondMainMdr, _super);
                function XujieJitanLingbaoSecondMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "jitantubiao",
                            mdr: more.XujieJitanLingbaoMdr,
                            title: "xujiejitan_tips2" /* xujiejitan_tips2 */,
                            bg: "",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "02" /* Btn2 */, "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "kuangmaitubiao",
                            mdr: more.XujieJitanLingbaoMdr2,
                            title: "xujiejitan_tips2" /* xujiejitan_tips2 */,
                            bg: "",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "02" /* Btn2 */, "02" /* TabBtnType02 */]
                        }
                    ];
                    return _this;
                }
                XujieJitanLingbaoSecondMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.img_bg.visible = false;
                };
                XujieJitanLingbaoSecondMainMdr.prototype.onTabChanged = function () {
                    _super.prototype.onTabChanged.call(this);
                    this.sendNt("update_wnd_second_mdr_top" /* UPDATE_WND_SECOND_MDR_TOP */);
                };
                return XujieJitanLingbaoSecondMainMdr;
            }(mod.WndSecondMdr));
            more.XujieJitanLingbaoSecondMainMdr = XujieJitanLingbaoSecondMainMdr;
            __reflect(XujieJitanLingbaoSecondMainMdr.prototype, "game.mod.more.XujieJitanLingbaoSecondMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanMainMdr = /** @class */ (function (_super) {
                __extends(XujieJitanMainMdr, _super);
                function XujieJitanMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "xujiejitanbiaoqiantubiao",
                            mdr: more.XujieJitanMdr,
                            title: "xujiejitan_tips1" /* xujiejitan_tips1 */,
                            bg: "xujiejitan_bg",
                            coinIndex2: 1453501001 /* XujieJitanJiasu */,
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "01" /* Btn1 */]
                        },
                        {
                            btnType: "02" /* Btn2 */,
                            icon: "xujielingbaobiaoqiantubiao",
                            mdr: more.XujieJitanLingbaoSecondMainMdr,
                            title: "xujiejitan_tips2" /* xujiejitan_tips2 */,
                            bg: "",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */, "02" /* Btn2 */]
                        }
                    ];
                    return _this;
                }
                return XujieJitanMainMdr;
            }(mod.WndBaseMdr));
            more.XujieJitanMainMdr = XujieJitanMainMdr;
            __reflect(XujieJitanMainMdr.prototype, "game.mod.more.XujieJitanMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var XujieJitanMdr = /** @class */ (function (_super) {
                __extends(XujieJitanMdr, _super);
                function XujieJitanMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XujieJitanView);
                    return _this;
                }
                XujieJitanMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(253 /* XujieJitan */);
                };
                XujieJitanMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_gift, egret.TouchEvent.TOUCH_TAP, this.onClickGift, this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_upstar, egret.TouchEvent.TOUCH_TAP, this.onClickUpstar, this);
                    addEventListener(this._view.sacrificeItem, egret.TouchEvent.TOUCH_TAP, this.onClickSacrificeItem, this);
                    addEventListener(this._view.btn_huanhua, egret.TouchEvent.TOUCH_TAP, this.onClickHuanhua, this);
                    this.onNt("on_update_zhandui_jitan_base_info" /* ON_UPDATE_ZHANDUI_JITAN_BASE_INFO */, this.updateView, this);
                    this.onNt("on_update_zhandui_jitan_gongfeng_info" /* ON_UPDATE_ZHANDUI_JITAN_GONGFENG_INFO */, this.updateView, this);
                    this.onNt("on_bag_update_by_bag_type" /* ON_BAG_UPDATE_BY_BAG_TYPE */, this.onBagUpdateByBagType, this);
                };
                XujieJitanMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.sendJitanButtonClick(207 /* Oper207 */);
                };
                XujieJitanMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._effId = null;
                    this._effSrc = null;
                };
                XujieJitanMdr.prototype.updateView = function () {
                    this._view.seasonComp.updateShow();
                    this._view.sacrificeItem.updateShow();
                    this._view.itemComp.updateShow();
                    this.updateCost();
                    this.updateModel();
                    //正在献祭中的，开启倒计时
                    var sacrificeInfo = this._proxy.getSacrificeInfo();
                    this._view.sacrificeItem.visible = !!sacrificeInfo;
                    if (sacrificeInfo) {
                        if (!TimeMgr.hasUpdateItem(this)) {
                            TimeMgr.addUpdateItem(this, 1000);
                        }
                        this.update(TimeMgr.time);
                    }
                    else {
                        TimeMgr.removeUpdateItem(this);
                    }
                    this._view.btn_gift.setHint(this._proxy.getLibaoHint());
                    this._view.btn_huanhua.setHint(this._proxy.getHuanhuaHint());
                };
                XujieJitanMdr.prototype.updateCost = function () {
                    var isMaxLv = this._proxy.isMaxLv(); //是否满级
                    this._view.img_max.visible = isMaxLv;
                    this._view.gr_cost.visible = !isMaxLv;
                    var value = this._proxy.value;
                    var lvCfg = this._proxy.getLvConfig();
                    if (isMaxLv) {
                        var lv = this._proxy.jitan_level;
                        lvCfg = this._proxy.getLvConfig(lv - 1);
                        value = 0;
                    }
                    var cost = lvCfg.cost;
                    if (this._view.gr_cost.visible) {
                        this._view.coin.initIcon(cost[0]);
                        this._view.coin.lab_cost.text = value + "/" + cost[1];
                    }
                    this._view.btn_upstar.updateCost(cost, false, "", false, value);
                    this._view.btn_upstar.img_cost.visible = false;
                    // this._view.btn_upstar.setHint(cnt >= cost[1]);
                };
                XujieJitanMdr.prototype.updateModel = function () {
                    var lv = this._proxy.jitan_level;
                    var stageStr = game.ResUtil.getChineseFontStr(lv) + "j";
                    this.addBmpFont(stageStr, game.BmpTextCfg[204 /* Stage */], this._view.gr_lv, false, 1, true);
                    var cfg = this._proxy.getHuanhuaCfg();
                    if (cfg && (!this._effSrc || this._effSrc != cfg.index)) {
                        this._view.nameItem.updateShow(cfg.name, cfg.quality);
                        this._effSrc = cfg.index;
                        this.removeEffect(this._effId);
                        this._effId = this.addAnimate(cfg.index, this._view.gr_eft);
                    }
                };
                XujieJitanMdr.prototype.onClickGift = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "21" /* XujieJitanGiftMain */);
                };
                XujieJitanMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xujiejitan_tips3" /* xujiejitan_tips3 */));
                };
                XujieJitanMdr.prototype.onClickUpstar = function () {
                    if (this._proxy.canUpstar(true)) {
                        //todo
                    }
                };
                XujieJitanMdr.prototype.onClickSacrificeItem = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "23" /* XujieJitanSpeedUp */);
                };
                XujieJitanMdr.prototype.onClickHuanhua = function () {
                    facade.showView("61" /* More */, "22" /* XujieJitanHuanhua */);
                };
                XujieJitanMdr.prototype.update = function (time) {
                    if (this._view.sacrificeItem.visible) {
                        this._view.sacrificeItem.updateTime();
                    }
                };
                XujieJitanMdr.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(9 /* XujieJitan */) > -1) {
                        this._view.itemComp.updateShow();
                    }
                };
                return XujieJitanMdr;
            }(game.EffectMdrBase));
            more.XujieJitanMdr = XujieJitanMdr;
            __reflect(XujieJitanMdr.prototype, "game.mod.more.XujieJitanMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieJitanShelfMdr = /** @class */ (function (_super) {
                __extends(XujieJitanShelfMdr, _super);
                function XujieJitanShelfMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieJitanShelfView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieJitanShelfMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(253 /* XujieJitan */);
                    this._view.list.itemRenderer = more.XujieJitanShelfItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieJitanShelfMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.btn, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_bag_update_by_bag_type" /* ON_BAG_UPDATE_BY_BAG_TYPE */, this.onBagUpdateByBagType, this);
                    this.onNt("on_close_zhandui_jitan_shelf" /* ON_CLOSE_ZHANDUI_JITAN_SHELF */, this.hide, this);
                };
                XujieJitanShelfMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("xujiejitan_tips4" /* xujiejitan_tips4 */));
                    this.updateView();
                };
                XujieJitanShelfMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieJitanShelfMdr.prototype.updateView = function () {
                    var datas = this._proxy.getBagDatas();
                    datas.sort(function (a, b) {
                        if (a.quality != b.quality) {
                            return b.quality - a.quality;
                        }
                        return a.index - b.index;
                    });
                    this._listData.replaceAll(datas);
                };
                //todo
                XujieJitanShelfMdr.prototype.onClick = function () {
                    var prop = [];
                    var num = this._proxy.getSpaceCount();
                    var source = this._listData.source || [];
                    for (var i = 0; i < source.length; i++) {
                        if (num <= 0) {
                            break;
                        }
                        var info = source[i];
                        var len = num > info.count ? info.count : num;
                        for (var i_2 = 0; i_2 < len; i_2++) {
                            prop.push(info.index);
                        }
                        num -= info.count;
                    }
                    if (prop && prop.length) {
                        this._proxy.sendJitanButtonClick(200 /* Oper200 */, null, null, prop);
                        this.hide();
                    }
                };
                XujieJitanShelfMdr.prototype.onBagUpdateByBagType = function (n) {
                    var types = n.body;
                    if (types.indexOf(9 /* XujieJitan */) > -1) {
                        this.updateView();
                    }
                };
                return XujieJitanShelfMdr;
            }(game.MdrBase));
            more.XujieJitanShelfMdr = XujieJitanShelfMdr;
            __reflect(XujieJitanShelfMdr.prototype, "game.mod.more.XujieJitanShelfMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var TimeMgr = base.TimeMgr;
            var XujieJitanSpeedUpMdr = /** @class */ (function (_super) {
                __extends(XujieJitanSpeedUpMdr, _super);
                function XujieJitanSpeedUpMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieJitanSpeedUpView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieJitanSpeedUpMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(253 /* XujieJitan */);
                };
                XujieJitanSpeedUpMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide);
                    addEventListener(this._view.grp_tips, egret.TouchEvent.TOUCH_TAP, this.onClickSpeedUp, this);
                    addEventListener(this._view.grp_all, egret.TouchEvent.TOUCH_TAP, this.onClickAllSpeedUp, this);
                    this.onNt("on_update_zhandui_jitan_gongfeng_info" /* ON_UPDATE_ZHANDUI_JITAN_GONGFENG_INFO */, this.updateView, this);
                };
                XujieJitanSpeedUpMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("xujiejitan_tips5" /* xujiejitan_tips5 */));
                    this._view.secondPop.updateBgSrc(game.ResUtil.getUiJpg("gongfeng_bg3")); //todo
                    this.updateView();
                    TimeMgr.addUpdateItem(this, 1000);
                    this.update(TimeMgr.time);
                };
                XujieJitanSpeedUpMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._leftTimeSingle = 0;
                    this._leftTimeTotal = 0;
                    this._prop = null;
                    TimeMgr.removeUpdateItem(this);
                };
                XujieJitanSpeedUpMdr.prototype.updateView = function () {
                    var sacrificeInfo = this._proxy.getSacrificeInfo();
                    if (!sacrificeInfo) {
                        return;
                    }
                    this._leftTimeSingle = sacrificeInfo.endtime.toNumber() - TimeMgr.time.serverTimeSecond;
                    this._leftTimeTotal = this._proxy.getTotalPropTime();
                    this._prop = game.PropData.create(sacrificeInfo.idx);
                    this._view.icon.setData(this._prop);
                    this._view.lab_name.textFlow = this._view.icon.getPropName();
                    var time = this._proxy.total_speed_time;
                    var str = game.TimeUtil.formatSecond(time, time > game.Second.Day ? "d天HH时" : "HH时mm分");
                    this._view.lab_havetime.text = "" + str;
                };
                XujieJitanSpeedUpMdr.prototype.onClickSpeedUp = function () {
                    if (!this._proxy.total_speed_time) {
                        mod.ViewMgr.getIns().showGainWaysTips(1453501001 /* XujieJitanJiasu */);
                        return;
                    }
                    var time = Math.min(this._leftTimeSingle, this._proxy.total_speed_time);
                    var str = "\u662F\u5426\u6D88\u8017" + game.TextUtil.addColor(game.TimeUtil.formatSecond(time, time > game.Second.Day ? "d天HH时" : "HH时mm分"), 1022764 /* GREEN */) + "\u5FEB\u901F\u732E\u796D";
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.sendSpeedUp, [1]));
                };
                XujieJitanSpeedUpMdr.prototype.onClickAllSpeedUp = function () {
                    if (!this._proxy.total_speed_time) {
                        mod.ViewMgr.getIns().showGainWaysTips(1453501001 /* XujieJitanJiasu */);
                        return;
                    }
                    var time = Math.min(this._leftTimeTotal, this._proxy.total_speed_time);
                    var str = "\u662F\u5426\u6D88\u8017" + game.TextUtil.addColor(game.TimeUtil.formatSecond(time, time > game.Second.Day ? "d天HH时" : "HH时mm分"), 1022764 /* GREEN */) + "\u5FEB\u901F\u732E\u796D";
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.sendSpeedUp, [2]));
                };
                //1单个加速，2全部加速
                XujieJitanSpeedUpMdr.prototype.sendSpeedUp = function (oper) {
                    if (oper === void 0) { oper = 1; }
                    this._proxy.sendJitanButtonClick(202 /* Oper202 */, null, null, null, oper);
                    this.hide();
                };
                XujieJitanSpeedUpMdr.prototype.update = function (time) {
                    this.onUpdateTime();
                };
                XujieJitanSpeedUpMdr.prototype.onUpdateTime = function () {
                    if (!this._prop) {
                        return;
                    }
                    this._leftTimeSingle--;
                    if (this._leftTimeSingle < 0) {
                        this._leftTimeSingle = 0;
                    }
                    this._view.lab_time.text = game.TimeUtil.formatSecond(this._leftTimeSingle, this._leftTimeSingle > game.Second.Day ? "d天HH时" : "HH时mm分");
                    this._leftTimeTotal--;
                    if (this._leftTimeTotal < 0) {
                        this._leftTimeTotal = 0;
                    }
                    this._view.lab_alltime.text = game.TimeUtil.formatSecond(this._leftTimeTotal, this._leftTimeTotal > game.Second.Day ? "d天HH时" : "HH时mm分");
                };
                return XujieJitanSpeedUpMdr;
            }(game.MdrBase));
            more.XujieJitanSpeedUpMdr = XujieJitanSpeedUpMdr;
            __reflect(XujieJitanSpeedUpMdr.prototype, "game.mod.more.XujieJitanSpeedUpMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieLingbaoMdr = /** @class */ (function (_super) {
                __extends(XujieLingbaoMdr, _super);
                function XujieLingbaoMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.classId = 3 /* Amass3 */;
                    return _this;
                }
                XujieLingbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._view.btn_last.visible = this._view.btn_next.visible = false;
                };
                //更新选中 todo
                XujieLingbaoMdr.prototype.updateSelIndex = function (isUpdate) {
                    var lastSelIndex = this._view.list_type.selectedIndex;
                    var selIndex = lastSelIndex >= 0 ? lastSelIndex : 0;
                    var canUp = false; //是否可以升级
                    for (var i = 0; i < this._types.length; ++i) {
                        var type = this._types[i];
                        if (this._proxy.canAmassTypeUp(this.classId, type)) {
                            //选中可以升级的
                            selIndex = i;
                            canUp = true;
                            break;
                        }
                    }
                    this._selType = this._types[selIndex];
                    this._view.list_type.selectedIndex = selIndex;
                };
                XujieLingbaoMdr.prototype.getPropType = function () {
                    return 36 /* ZhanduiLingbao */;
                };
                return XujieLingbaoMdr;
            }(mod.AmassBaseMdr));
            more.XujieLingbaoMdr = XujieLingbaoMdr;
            __reflect(XujieLingbaoMdr.prototype, "game.mod.more.XujieLingbaoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XujieTansuoBossGridMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoBossGridMdr, _super);
                function XujieTansuoBossGridMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoBossGridView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoBossGridMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoBossGridMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_zhanbao, egret.TouchEvent.TOUCH_TAP, this.onClickZhanbao, this);
                    addEventListener(this._view.btn_challenge, egret.TouchEvent.TOUCH_TAP, this.onClickChallenge, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                };
                XujieTansuoBossGridMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this.updateView();
                };
                XujieTansuoBossGridMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieTansuoBossGridMdr.prototype.onUpdateView = function () {
                    var data = this._gridItemData;
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    if (gridInfo && gridInfo.grid_type == 0 /* Null */) {
                        this.hide();
                        return;
                    }
                    this.updateView();
                };
                //todo 背景图
                XujieTansuoBossGridMdr.prototype.updateView = function () {
                    var data = this._gridItemData;
                    var grid = data.grid;
                    var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, grid[1]);
                    this._view.secondPop.updateTitleStr(monsterCfg && monsterCfg.name || '');
                    var power = grid[2];
                    this.addBmpFont(power + '', game.BmpTextCfg[222 /* XujietansuoTbs */], this._view.gr_power, true, 1, false, 0, true);
                    var rewardCfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, grid[4]);
                    if (rewardCfg) {
                        this._listData.replaceAll(rewardCfg.content);
                    }
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    var hp = gridInfo && gridInfo.boss_hp ? gridInfo.boss_hp.toNumber() : 0;
                    var maxHp = gridInfo && gridInfo.boss_max_hp ? gridInfo.boss_max_hp.toNumber() : 0;
                    this._view.bar.show(hp, maxHp, false, 0, false, 0 /* Percent */);
                    var cfg = game.getConfigByNameId("zhandui_tansuo_type.json" /* ZhanduiTansuoType */, data.type);
                    this._view.nameItem.updateShow(cfg.name);
                };
                XujieTansuoBossGridMdr.prototype.onClickZhanbao = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "61" /* XujieTansuoZhanbao */, this._gridItemData);
                };
                XujieTansuoBossGridMdr.prototype.onClickChallenge = function () {
                    var data = this._gridItemData;
                    if (!this._proxy.shenling_list) {
                        game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips15" /* xujietansuo_tips15 */));
                        return;
                    }
                    var legionAttr = this._proxy.legion_attr;
                    var curPower = legionAttr && legionAttr.legion_god ? legionAttr.legion_god.toNumber() : 0;
                    var needPower = this._gridItemData.grid[2];
                    var mainProxy = game.getProxy("05" /* Main */, 3 /* Main */);
                    var isSel = mainProxy.getNotTipsType(2 /* XujieTansuo */);
                    if (!isSel) {
                        if (curPower < needPower) {
                            mod.ViewMgr.getIns().showNotTips(game.getLanById("xujietansuo_tips5" /* xujietansuo_tips5 */), 2 /* XujieTansuo */, Handler.alloc(this, this.confirmFunc));
                            return;
                        }
                    }
                    this.confirmFunc();
                };
                XujieTansuoBossGridMdr.prototype.confirmFunc = function () {
                    var data = this._gridItemData;
                    if (!data) {
                        return;
                    }
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    if (gridInfo && gridInfo.is_challenge) {
                        //可以扫荡 todo
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "62" /* XujieTansuoSaodang */, this._gridItemData);
                    }
                    else {
                        //直接挑战 todo
                        this._proxy.c2s_zhandui_xujietansuo_role_click(5 /* Oper5 */, data.type, data.layer, data.row, data.col);
                    }
                };
                return XujieTansuoBossGridMdr;
            }(game.EffectMdrBase));
            more.XujieTansuoBossGridMdr = XujieTansuoBossGridMdr;
            __reflect(XujieTansuoBossGridMdr.prototype, "game.mod.more.XujieTansuoBossGridMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoBusinessGridMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoBusinessGridMdr, _super);
                function XujieTansuoBusinessGridMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoBusinessGridView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoBusinessGridMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoBusinessGridMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                    this.onNt("on_view_hide" /* ON_VIEW_HIDE */, this.hide, this);
                };
                XujieTansuoBusinessGridMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this._data = this._gridItemData.grid;
                    this.updateView();
                };
                XujieTansuoBusinessGridMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieTansuoBusinessGridMdr.prototype.onUpdateView = function () {
                    var data = this._gridItemData;
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    if (gridInfo && gridInfo.grid_type == 0 /* Null */) {
                        this.hide();
                        return;
                    }
                    this.updateView();
                };
                XujieTansuoBusinessGridMdr.prototype.updateView = function () {
                    var cfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, this._data[4]);
                    if (cfg) {
                        this._listData.replaceAll(cfg.content);
                    }
                    var cost = [this._data[1], this._data[2]];
                    this._view.icon.data = cost;
                    var bagCnt = mod.BagUtil.getPropCntByIdx(cost[0]);
                    var cnt = cost[1];
                    var color = bagCnt >= cnt ? 8585074 /* GREEN */ : 16731212 /* RED */;
                    var str = game.TextUtil.addColor(game.StringUtil.getHurtNumStr(bagCnt) + "/" + game.StringUtil.getHurtNumStr(cnt), color);
                    this._view.icon.updateCnt(str);
                };
                XujieTansuoBusinessGridMdr.prototype.onClick = function () {
                    if (!mod.BagUtil.checkPropCntUp(this._data[1], this._data[2])) {
                        return;
                    }
                    //商店格子购买
                    var gridData = this._gridItemData;
                    this._proxy.c2s_zhandui_xujietansuo_role_click(2 /* Oper2 */, gridData.type, gridData.layer, gridData.row, gridData.col);
                };
                return XujieTansuoBusinessGridMdr;
            }(game.MdrBase));
            more.XujieTansuoBusinessGridMdr = XujieTansuoBusinessGridMdr;
            __reflect(XujieTansuoBusinessGridMdr.prototype, "game.mod.more.XujieTansuoBusinessGridMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var XujieTansuoExpeditionGridMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoExpeditionGridMdr, _super);
                function XujieTansuoExpeditionGridMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoExpeditionGridView);
                    _this._endTime = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoExpeditionGridMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listReward = new eui.ArrayCollection();
                    this._view.list_avatar.itemRenderer = mod.AvatarIcon;
                    this._view.list_avatar.dataProvider = this._listAvatar = new eui.ArrayCollection();
                };
                XujieTansuoExpeditionGridMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    addEventListener(this._view.list_avatar, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                };
                XujieTansuoExpeditionGridMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this._data = this._gridItemData.grid;
                    this.updateListAvatar();
                    this.updateView();
                    this.updateTimeInfo();
                };
                XujieTansuoExpeditionGridMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._endTime = 0;
                };
                XujieTansuoExpeditionGridMdr.prototype.onUpdateView = function () {
                    // let gridData = this._gridItemData;
                    // this._proxy.getGridInfo(gridData.type, gridData.layer, gridData.row, gridData.col);
                    var gridInfo = this._proxy.getExpeditionGridInfo();
                    if (!gridInfo || (gridInfo && gridInfo.grid_type == 0 /* Null */)) {
                        this.hide();
                        return;
                    }
                    this.updateListAvatar();
                    this.updateView();
                    this.updateTimeInfo();
                };
                XujieTansuoExpeditionGridMdr.prototype.updateTimeInfo = function () {
                    // let gridData = this._gridItemData;
                    // this._proxy.getGridInfo(gridData.type, gridData.layer, gridData.row, gridData.col);
                    var grid = this._proxy.getExpeditionGridInfo();
                    this._view.btn_do.setHint(false);
                    if (grid && grid.endtime && grid.endtime.notEquals(Long.ZERO)) {
                        var endTime = grid.endtime.toNumber();
                        var leftTime = endTime - TimeMgr.time.serverTimeSecond;
                        if (leftTime <= 0) {
                            this._view.timeItem.visible = false;
                            this._view.btn_do.visible = true;
                            this._view.btn_do.label = game.getLanById("lingqu" /* lingqu */);
                            this._view.btn_do.setHint(true);
                            TimeMgr.removeUpdateItem(this);
                            this._endTime = 0;
                        }
                        else {
                            this._view.timeItem.visible = true;
                            this._view.btn_do.visible = false;
                            this._endTime = endTime;
                            TimeMgr.addUpdateItem(this, 1000);
                            this.update(TimeMgr.time);
                        }
                    }
                    else {
                        //已领取
                        this._view.timeItem.visible = false;
                        this._view.btn_do.visible = true;
                        this._view.btn_do.label = game.getLanById("xujietansuo_tips22" /* xujietansuo_tips22 */);
                        TimeMgr.removeUpdateItem(this);
                        this._endTime = 0;
                    }
                };
                XujieTansuoExpeditionGridMdr.prototype.updateView = function () {
                    var cfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, this._data[5]);
                    if (cfg) {
                        this._listReward.replaceAll(cfg.content);
                    }
                    var desc = game.StringUtil.substitute(game.getLanById("xujietansuo_tips11" /* xujietansuo_tips11 */), [this._data[1], game.QualityTypeSrName[this._data[2]]]);
                    var satisfy = this.isQualitySatisfy();
                    var color = satisfy ? 8585074 /* GREEN */ : 7835024 /* GRAY */;
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(desc, color));
                    this._view.checkBox.selected = satisfy;
                };
                //品质是否满足
                XujieTansuoExpeditionGridMdr.prototype.isQualitySatisfy = function () {
                    var cnt = this._data[1];
                    var quality = this._data[2];
                    var source = this._listAvatar.source || [];
                    if (source && source.length) {
                        var needCnt = 0;
                        for (var _i = 0, source_1 = source; _i < source_1.length; _i++) {
                            var item = source_1[_i];
                            if (!item || !item.cfg) {
                                continue;
                            }
                            if (item.cfg.quality >= quality) {
                                needCnt++;
                            }
                        }
                        if (needCnt >= cnt) {
                            return true;
                        }
                    }
                    return false;
                };
                XujieTansuoExpeditionGridMdr.prototype.updateListAvatar = function () {
                    var cnt = this._data[1];
                    //神灵数据
                    var list = [];
                    // let gridData = this._gridItemData;
                    // this._proxy.getGridInfo(gridData.type, gridData.layer, gridData.row, gridData.col);
                    var grid = this._proxy.getExpeditionGridInfo();
                    var shenlingList = [];
                    if (grid && grid.unitlist) {
                        for (var _i = 0, _a = grid.unitlist; _i < _a.length; _i++) {
                            var id = _a[_i];
                            shenlingList.push(id.toNumber());
                        }
                    }
                    for (var i = 0; i < shenlingList.length; i++) {
                        list.push({
                            cfg: game.getConfigByNameId("shenling.json" /* Shenling */, shenlingList[i]),
                            showHint: false,
                            star: 0,
                            isBattle: false
                        });
                    }
                    list.length = cnt;
                    this._listAvatar.replaceAll(list);
                    this._view.currentState = cnt + '';
                };
                XujieTansuoExpeditionGridMdr.prototype.onClick = function () {
                    var data = this._gridItemData;
                    if (this._view.btn_do.label == game.getLanById("lingqu" /* lingqu */)) {
                        this._proxy.c2s_zhandui_xujietansuo_role_click(4 /* Oper4 */, data.type, data.layer, data.row, data.col);
                        this.hide();
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "59" /* XujieTansuoExpeditionShenLing */, data);
                };
                XujieTansuoExpeditionGridMdr.prototype.onClickList = function (e) {
                    var item = e.item;
                    if (!item || !item.cfg) {
                        mod.ViewMgr.getIns().showSecondPop("61" /* More */, "59" /* XujieTansuoExpeditionShenLing */, this._gridItemData);
                        return;
                    }
                    e.stopPropagation();
                    var cfg = item.cfg;
                    mod.ViewMgr.getIns().showPropTips(cfg.index);
                };
                XujieTansuoExpeditionGridMdr.prototype.update = function (time) {
                    var leftTime = this._endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        this.updateTimeInfo();
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                };
                return XujieTansuoExpeditionGridMdr;
            }(game.MdrBase));
            more.XujieTansuoExpeditionGridMdr = XujieTansuoExpeditionGridMdr;
            __reflect(XujieTansuoExpeditionGridMdr.prototype, "game.mod.more.XujieTansuoExpeditionGridMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoExpeditionShenLingMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoExpeditionShenLingMdr, _super);
                function XujieTansuoExpeditionShenLingMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoExpeditionShenLingView);
                    _this._seledType = 0 /* Default */;
                    _this._seledList = [];
                    _this._maxCnt = 8;
                    _this._itemList = [];
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoExpeditionShenLingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    this._view.list_menu.itemRenderer = mod.ShenlingTypeBtn;
                    this._view.list_menu.dataProvider = this._listMenu = new eui.ArrayCollection();
                    this._view.list.itemRenderer = mod.AvatarIconLongPress;
                    this._view.list.dataProvider = this._listAvatar = new eui.ArrayCollection();
                    for (var i = 0; i < this._maxCnt; i++) {
                        this._itemList.push(this._view["item" + i]);
                    }
                };
                XujieTansuoExpeditionShenLingMdr.prototype.addListeners = function () {
                    var _this = this;
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_oneKey, egret.TouchEvent.TOUCH_TAP, this.onClickOneKey, this);
                    addEventListener(this._view.btn_sure, egret.TouchEvent.TOUCH_TAP, this.onSure, this);
                    addEventListener(this._view.list_menu, eui.ItemTapEvent.ITEM_TAP, this.onClickListMenu, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this._itemList.forEach(function (item) {
                        addEventListener(item, egret.TouchEvent.TOUCH_TAP, _this.onClickItem, _this);
                    });
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                };
                XujieTansuoExpeditionShenLingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this._data = this._gridItemData.grid;
                    // this._view.secondPop.updateTitleStr('');//todo
                    this._listMenu.replaceAll(game.ShenLingTypeBtnAry);
                    this.onSwitchType();
                    this._view.list_menu.selectedIndex = this._seledType;
                };
                XujieTansuoExpeditionShenLingMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.onResetScroller();
                    this._seledType = 0 /* Default */;
                    this._seledList = [];
                };
                XujieTansuoExpeditionShenLingMdr.prototype.onResetScroller = function () {
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                //开始远征处理
                XujieTansuoExpeditionShenLingMdr.prototype.onUpdateView = function () {
                    this.hide();
                };
                XujieTansuoExpeditionShenLingMdr.prototype.onSwitchType = function (type) {
                    if (type === void 0) { type = 0 /* Default */; }
                    this._seledType = type;
                    this.updateListAvatar();
                    this.updateTopInfo();
                    this.updateCondition();
                };
                XujieTansuoExpeditionShenLingMdr.prototype.updateListAvatar = function () {
                    var list = this.getList();
                    var listData = [];
                    for (var _i = 0, list_11 = list; _i < list_11.length; _i++) {
                        var item = list_11[_i];
                        var info = this._shenlingProxy.getInfoByIndex(item.index);
                        var cfg = this._shenlingProxy.getShenLingCfg(item.index);
                        if (!cfg || cfg.quality != this._data[2]) {
                            continue;
                        }
                        listData.push({
                            cfg: cfg,
                            showHint: false,
                            isBattle: item.isBattle,
                            star: info && info.star || 0
                        });
                    }
                    this._listAvatar.replaceAll(listData);
                };
                XujieTansuoExpeditionShenLingMdr.prototype.getList = function () {
                    if (this._seledType != 0 /* Default */) {
                        return this.getListData(this._seledType);
                    }
                    var list = [];
                    var _list = [];
                    for (var _i = 0, ShenLingTypeAry_2 = game.ShenLingTypeAry; _i < ShenLingTypeAry_2.length; _i++) {
                        var i = ShenLingTypeAry_2[_i];
                        var typeList = this.getListData(i);
                        if (!typeList || !typeList.length) {
                            continue;
                        }
                        for (var _a = 0, typeList_3 = typeList; _a < typeList_3.length; _a++) {
                            var info = typeList_3[_a];
                            if (info && info.isBattle) {
                                list.push(info);
                            }
                            else {
                                _list.push(info);
                            }
                        }
                    }
                    list = list.concat(_list);
                    return list;
                };
                XujieTansuoExpeditionShenLingMdr.prototype.getListData = function (type) {
                    var list = [];
                    var infoList = this._shenlingProxy.getActedListByType(type);
                    for (var _i = 0, infoList_2 = infoList; _i < infoList_2.length; _i++) {
                        var info = infoList_2[_i];
                        var data = {
                            index: info.index.toNumber(),
                            isBattle: false
                        };
                        if (this.isBattle(info.index.toNumber())) {
                            data.isBattle = true;
                            list.unshift(data);
                        }
                        else {
                            list.push(data);
                        }
                    }
                    return list;
                };
                //是否上阵
                XujieTansuoExpeditionShenLingMdr.prototype.isBattle = function (index) {
                    return this._seledList.indexOf(index) > -1;
                };
                XujieTansuoExpeditionShenLingMdr.prototype.updateCondition = function () {
                    var desc = game.StringUtil.substitute(game.getLanById("xujietansuo_tips11" /* xujietansuo_tips11 */), [this._data[1], game.QualityTypeSrName[this._data[2]]]);
                    var satisfy = this.isQualitySatisfy();
                    var color = satisfy ? 8585074 /* GREEN */ : 7835024 /* GRAY */;
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(game.TextUtil.addColor(desc, color));
                    this._view.checkBox.selected = satisfy;
                };
                //品质是否满足
                XujieTansuoExpeditionShenLingMdr.prototype.isQualitySatisfy = function () {
                    var cnt = this._data[1];
                    var quality = this._data[2];
                    var needCnt = 0;
                    for (var i = 0; i < this._maxCnt; i++) {
                        var icon = this._view["item" + i];
                        if (!icon) {
                            continue;
                        }
                        var itemData = icon.data;
                        if (itemData && itemData.cfg && itemData.cfg.quality >= quality) {
                            needCnt++;
                        }
                    }
                    return needCnt >= cnt;
                };
                XujieTansuoExpeditionShenLingMdr.prototype.updateTopInfo = function () {
                    var list = this._seledList; //已上阵的 todo
                    var cnt = this._data[1]; //需要数量
                    for (var i = 0; i < this._maxCnt; i++) {
                        var icon = this._view["item" + i];
                        if (list[i]) {
                            var info = this._shenlingProxy.getInfoByIndex(list[i]);
                            icon.data = {
                                cfg: this._shenlingProxy.getShenLingCfg(list[i]),
                                star: info && info.star || 0,
                                showHint: false,
                                isBattle: true,
                                isSel: false
                            };
                        }
                        else {
                            icon.data = null;
                        }
                        if (i >= cnt) {
                            icon.img_icon.source = "common_gray_icon"; //todo
                        }
                    }
                };
                //一键上阵
                XujieTansuoExpeditionShenLingMdr.prototype.onClickOneKey = function () {
                    var cnt = this._data[1];
                    var seledList = this._seledList;
                    var listSource = this._listAvatar.source || [];
                    if (listSource.length < cnt) {
                        game.PromptBox.getIns().show(game.getLanById("tiaojianbuzu" /* tiaojianbuzu */));
                        return;
                    }
                    // todo
                    for (var _i = 0, listSource_1 = listSource; _i < listSource_1.length; _i++) {
                        var item = listSource_1[_i];
                        var id = item.cfg.index;
                        if (seledList.indexOf(id) > -1) {
                            continue;
                        }
                        if (seledList.length >= cnt) {
                            break;
                        }
                        seledList.push(id);
                    }
                    this.onSwitchType(this._seledType);
                };
                //开始远征
                XujieTansuoExpeditionShenLingMdr.prototype.onSure = function () {
                    var cnt = this._data[1];
                    if (this._seledList && this._seledList.length < cnt) {
                        game.PromptBox.getIns().show(game.getLanById("tiaojianbuzu" /* tiaojianbuzu */));
                        return;
                    }
                    var gridData = this._gridItemData;
                    var list = [];
                    for (var _i = 0, _a = this._seledList; _i < _a.length; _i++) {
                        var id = _a[_i];
                        list.push(Long.fromValue(id));
                    }
                    //上阵神灵，开始远征
                    this._proxy.c2s_zhandui_xujietansuo_role_click(3 /* Oper3 */, gridData.type, gridData.layer, gridData.row, gridData.col, list);
                };
                //选中类型
                XujieTansuoExpeditionShenLingMdr.prototype.onClickListMenu = function (e) {
                    var type = e.item;
                    if (type == this._seledType) {
                        return;
                    }
                    if (type != 0 /* Default */) {
                        var info = this._shenlingProxy.getTypeInfo(type);
                        if (!info || !info.upindex) {
                            game.PromptBox.getIns().show(game.getLanById("shenling_tips5" /* shenling_tips5 */));
                            this._view.list_menu.selectedIndex = game.ShenLingTypeBtnAry.indexOf(this._seledType);
                            return;
                        }
                    }
                    this.onResetScroller();
                    this.onSwitchType(type);
                };
                //点击单个，上阵
                XujieTansuoExpeditionShenLingMdr.prototype.onClickList = function (e) {
                    if (this._seledList.length >= this._data[1]) {
                        game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips12" /* xujietansuo_tips12 */));
                        return;
                    }
                    var data = e.item;
                    if (this._seledList.indexOf(data.cfg.index) > -1) {
                        game.PromptBox.getIns().show(game.getLanById("shenling_tips15" /* shenling_tips15 */));
                        return;
                    }
                    data.isBattle = true;
                    this._listAvatar.itemUpdated(data);
                    this._seledList.push(data.cfg.index);
                    game.PromptBox.getIns().show(game.getLanById("shenling_tips14" /* shenling_tips14 */));
                    this.onSwitchType(this._seledType);
                };
                //点击单个，下阵
                XujieTansuoExpeditionShenLingMdr.prototype.onClickItem = function (e) {
                    var data = e.currentTarget.data;
                    if (!data) {
                        return;
                    }
                    var index = data.cfg.index;
                    var idx = this._seledList.indexOf(index);
                    if (idx > -1) {
                        this._seledList.splice(idx, 1);
                    }
                    var itemIdx = this._itemList.indexOf(e.currentTarget);
                    var item = this._itemList[itemIdx];
                    if (item) {
                        item.data = null;
                    }
                    this.onSwitchType(this._seledType);
                };
                return XujieTansuoExpeditionShenLingMdr;
            }(game.MdrBase));
            more.XujieTansuoExpeditionShenLingMdr = XujieTansuoExpeditionShenLingMdr;
            __reflect(XujieTansuoExpeditionShenLingMdr.prototype, "game.mod.more.XujieTansuoExpeditionShenLingMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoLayerMainMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoLayerMainMdr, _super);
                function XujieTansuoLayerMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xujietansuo_tab",
                            mdr: more.XujieTansuoLayerMdr,
                            title: "xujietansuo_tips1" /* xujietansuo_tips1 */,
                            bg: "xujietansuo_bg1",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */, "01" /* Btn1 */, "01" /* TabBtnType01 */]
                        }
                    ];
                    return _this;
                }
                return XujieTansuoLayerMainMdr;
            }(mod.WndBaseMdr));
            more.XujieTansuoLayerMainMdr = XujieTansuoLayerMainMdr;
            __reflect(XujieTansuoLayerMainMdr.prototype, "game.mod.more.XujieTansuoLayerMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var facade = base.facade;
            var XujieTansuoLayerMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoLayerMdr, _super);
                function XujieTansuoLayerMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoLayerView);
                    _this._type = 1; //区域
                    _this._curLayer = 1; //层数
                    _this._scrollerH = 0;
                    _this._viewportH = 0;
                    return _this;
                }
                XujieTansuoLayerMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list_layer.itemRenderer = more.XujieTansuoLayerItem;
                    this._view.list_layer.dataProvider = this._listLayer = new eui.ArrayCollection();
                    this._scrollerH = this._view.scroller.height;
                    this._viewportH = this._view.gridView.height;
                };
                XujieTansuoLayerMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_showlayer, egret.TouchEvent.TOUCH_TAP, this.onClickLayer, this);
                    addEventListener(this._view.btn_zhanlipin, egret.TouchEvent.TOUCH_TAP, this.onClickZhanlipin, this);
                    addEventListener(this._view.btn_zhenrong, egret.TouchEvent.TOUCH_TAP, this.onClickZhenrong, this);
                    addEventListener(this._view.btn_yuanzheng, egret.TouchEvent.TOUCH_TAP, this.onClickYuanzheng, this);
                    addEventListener(this._view.list_layer, eui.ItemTapEvent.ITEM_TAP, this.onClickListLayer, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                    this.onNt("on_goto_xujietansuo_next_layer" /* ON_GOTO_XUJIETANSUO_NEXT_LAYER */, this.onGotoNextLayer, this);
                    this.onNt("on_update_xujietansuo_records_info" /* ON_UPDATE_XUJIETANSUO_RECORDS_INFO */, this.onUpdateZhanlipin, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.onUpdateZhenrong, this);
                };
                XujieTansuoLayerMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._type = this._showArgs && this._showArgs[0] || 1;
                    if (!this._type) {
                        return;
                    }
                    this.resetScroller();
                    var layer = 1;
                    if (this._type == this._proxy.now_type) {
                        layer = this._proxy.now_layer; //当前区域的当前层数
                    }
                    else if (this._proxy.canGotoMaxLayer(this._type)) {
                        layer = this._proxy.getMaxLayerByType(this._type); //进入最高层
                    }
                    this._curLayer = layer;
                    this._proxy.c2s_zhandui_xujietansuo_quyu_info(this._type, layer);
                    this.onUpdateZhanlipin();
                    this.onUpdateZhenrong();
                };
                XujieTansuoLayerMdr.prototype.resetScroller = function () {
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = this._viewportH - this._scrollerH;
                };
                XujieTansuoLayerMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._curLayer = 1;
                    this._type = 1;
                    this._view.gr_layer.visible = false;
                    this._view.btn_showlayer.scaleY = 1;
                };
                XujieTansuoLayerMdr.prototype.onUpdateView = function () {
                    this.updateView();
                };
                XujieTansuoLayerMdr.prototype.updateView = function () {
                    var str = game.StringUtil.substitute(game.getLanById("xujietansuo_tips14" /* xujietansuo_tips14 */), [this._curLayer]);
                    this.addBmpFont(str, game.BmpTextCfg[223 /* XujietansuoLayer */], this._view.gr_layerfont, true, 1, true);
                    this.updateCost();
                    var progress = this._proxy.getProgressByLayer(this._type, this._curLayer);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(game.getLanById("xujietansuo_tips13" /* xujietansuo_tips13 */) + ' ' + game.TextUtil.addColor(progress + '%', 2330156 /* GREEN */));
                    //全部格子
                    this._view.gridView.updateView(this._type, this._curLayer);
                    //远征格子
                    var expeditionInfo = this._proxy.getExpeditionGridInfo();
                    if (expeditionInfo) {
                        this._view.btn_yuanzheng.visible = true;
                        this._view.btn_yuanzheng.setHint(this._proxy.getExpeditionHint());
                        var endTime = expeditionInfo.endtime ? expeditionInfo.endtime.toNumber() : 0;
                        if (endTime && endTime > TimeMgr.time.serverTimeSecond) {
                            TimeMgr.addUpdateItem(this, 1000);
                            this.update(TimeMgr.time);
                            this._view.timeItem.visible = true;
                        }
                        else {
                            TimeMgr.removeUpdateItem(this);
                            this._view.timeItem.visible = false;
                        }
                    }
                    else {
                        this._view.btn_yuanzheng.visible = this._view.timeItem.visible = false;
                        TimeMgr.removeUpdateItem(this);
                    }
                };
                XujieTansuoLayerMdr.prototype.updateCost = function () {
                    var cnt = mod.BagUtil.getPropCntByIdx(1450100154 /* XujieTansuoling */);
                    this._view.costIcon.updateShow([1450100154 /* XujieTansuoling */, 1]);
                    this._view.costIcon.setLabCost(cnt + '');
                };
                XujieTansuoLayerMdr.prototype.onClickLayer = function () {
                    var isShow = this._view.gr_layer.visible;
                    this._view.btn_showlayer.scaleY = isShow ? -1 : 1;
                    this._view.gr_layer.visible = !isShow;
                    if (this._view.gr_layer.visible) {
                        var layerCnt = this._proxy.getMaxLayerByType(this._type);
                        var list = [];
                        for (var i = 1; i <= layerCnt; i++) {
                            list.push(i);
                        }
                        this._listLayer.replaceAll(list);
                        this._view.list_layer.selectedIndex = this._curLayer - 1 || 0;
                    }
                };
                XujieTansuoLayerMdr.prototype.onClickZhanlipin = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "54" /* XujieTansuoZhanlipin */);
                };
                XujieTansuoLayerMdr.prototype.onClickZhenrong = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "66" /* Zhenrong */);
                };
                //todo
                XujieTansuoLayerMdr.prototype.onClickYuanzheng = function () {
                    var data = this._proxy.getExpeditionGridItemData();
                    facade.showView("61" /* More */, "58" /* XujieTansuoExpeditionGrid */, data);
                };
                XujieTansuoLayerMdr.prototype.onClickListLayer = function (e) {
                    var layer = e.item;
                    if (layer == this._curLayer) {
                        return;
                    }
                    //某层未开启
                    if (!this._proxy.isActedByLayer(this._type, layer, true)) {
                        this._view.list_layer.selectedIndex = this._curLayer - 1;
                        return;
                    }
                    this._curLayer = layer;
                    this.resetScroller();
                    this.onClickLayer();
                    this._proxy.c2s_zhandui_xujietansuo_quyu_info(this._type, this._curLayer);
                };
                //通过传送进入下一层
                XujieTansuoLayerMdr.prototype.onGotoNextLayer = function (n) {
                    this._curLayer = n.body;
                    this.resetScroller();
                    this._proxy.c2s_zhandui_xujietansuo_quyu_info(this._type, this._curLayer);
                };
                XujieTansuoLayerMdr.prototype.update = function (time) {
                    var info = this._proxy.getExpeditionGridInfo();
                    var endTime = info && info.endtime ? info.endtime.toNumber() : 0;
                    var leftTime = endTime - time.serverTimeSecond;
                    if (leftTime <= 0) {
                        TimeMgr.removeUpdateItem(this);
                        this.updateView(); //todo 刷新
                        return;
                    }
                    this._view.timeItem.updateLeftTime(leftTime);
                    this._view.gridView.updateTime(); //远征格子倒计时
                };
                //战利品按钮红点
                XujieTansuoLayerMdr.prototype.onUpdateZhanlipin = function () {
                    var hint = this._proxy.getZhanlipinHint();
                    this._view.btn_zhanlipin.setHint(hint);
                };
                //阵容红点
                XujieTansuoLayerMdr.prototype.onUpdateZhenrong = function () {
                    this._view.btn_zhenrong.setHint(this._proxy.getZhenrongHint());
                };
                XujieTansuoLayerMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(1450100154 /* XujieTansuoling */) > -1) {
                        this.updateCost();
                    }
                };
                return XujieTansuoLayerMdr;
            }(game.EffectMdrBase));
            more.XujieTansuoLayerMdr = XujieTansuoLayerMdr;
            __reflect(XujieTansuoLayerMdr.prototype, "game.mod.more.XujieTansuoLayerMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoMainMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoMainMdr, _super);
                function XujieTansuoMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Btn1 */,
                            icon: "xujietansuo_tab",
                            mdr: more.XujieTansuoMdr,
                            title: "xujietansuo_tips1" /* xujietansuo_tips1 */,
                            bg: "xujietansuo_bg",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */, "01" /* Btn1 */]
                        },
                        {
                            btnType: "02" /* Btn2 */,
                            icon: "tab_5_giving",
                            mdr: more.XujieTansuoMdr,
                            title: "xujietansuo_tips21" /* xujietansuo_tips21 */,
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */, "02" /* Btn2 */]
                        }
                    ];
                    return _this;
                }
                XujieTansuoMainMdr.prototype.updateViewShow = function () {
                    var type = this.getDefaultBtnType();
                    if (this._showArgs) {
                        if (Array.isArray(this._showArgs)) {
                            type = this._showArgs.shift();
                            this._tab.params = this._showArgs;
                        }
                        else {
                            type = this._showArgs;
                        }
                    }
                    //从战令跳转回来，强制第一个页签
                    if (type == "02" /* Btn2 */) {
                        type = "01" /* Btn1 */;
                    }
                    this._tab.selectIndex = Math.max(this.getMdrPosByType(type), 0);
                    this._tab.show();
                };
                XujieTansuoMainMdr.prototype.onTabChanged = function () {
                    _super.prototype.onTabChanged.call(this);
                    var data = this._btnList.source[this._tab.selectIndex];
                    if (data && data.btnType == "02" /* Btn2 */) {
                        mod.ViewMgr.getIns().showView("27" /* Activity */, "38" /* Giving */, ["05" /* TabBtnType05 */]);
                    }
                };
                return XujieTansuoMainMdr;
            }(mod.WndBaseMdr));
            more.XujieTansuoMainMdr = XujieTansuoMainMdr;
            __reflect(XujieTansuoMainMdr.prototype, "game.mod.more.XujieTansuoMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var facade = base.facade;
            var XujieTansuoMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoMdr, _super);
                function XujieTansuoMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoView);
                    _this._selIdx = 0; //当前选中的区域
                    return _this;
                }
                XujieTansuoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listReward = new eui.ArrayCollection();
                    this._view.list_area.itemRenderer = more.XujieTansuoAreaItem;
                    this._view.list_area.dataProvider = this._listArea = new eui.ArrayCollection();
                };
                XujieTansuoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_rank, egret.TouchEvent.TOUCH_TAP, this.onClickRank, this);
                    addEventListener(this._view.btn_zhanlipin, egret.TouchEvent.TOUCH_TAP, this.onClickZhanlipin, this);
                    addEventListener(this._view.btn_yuanzheng, egret.TouchEvent.TOUCH_TAP, this.onClickYuanzheng, this);
                    addEventListener(this._view.btn_tansuo, egret.TouchEvent.TOUCH_TAP, this.onClickTansuo, this);
                    addEventListener(this._view.btn_zhenrong, egret.TouchEvent.TOUCH_TAP, this.onClickZhenrong, this);
                    addEventListener(this._view.list_area, eui.ItemTapEvent.ITEM_TAP, this.onClickArea, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_xujietansuo_records_info" /* ON_UPDATE_XUJIETANSUO_RECORDS_INFO */, this.onUpdateZhanlipin, this);
                    this.onNt("on_update_xujietansuo_rank_info" /* ON_UPDATE_XUJIETANSUO_RANK_INFO */, this.onUpdateTopTeam, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.onUpdateZhenrong, this);
                };
                XujieTansuoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.c2s_zhandui_xujietansuo_role_click(7 /* Oper7 */);
                    var nowType = this._proxy.now_type;
                    var nowLayer = this._proxy.now_layer || 1;
                    this._proxy.c2s_zhandui_xujietansuo_quyu_info(nowType, nowLayer);
                    this.onUpdateZhanlipin();
                    this.onUpdateZhenrong();
                };
                XujieTansuoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                };
                XujieTansuoMdr.prototype.onUpdateView = function () {
                    this.updateListData();
                    this.onUpdateTopTeam();
                    this.updateView();
                };
                //战利品按钮红点
                XujieTansuoMdr.prototype.onUpdateZhanlipin = function () {
                    var hint = this._proxy.getZhanlipinHint();
                    this._view.btn_zhanlipin.setHint(hint);
                };
                //阵容红点
                XujieTansuoMdr.prototype.onUpdateZhenrong = function () {
                    this._view.btn_zhenrong.setHint(this._proxy.getZhenrongHint());
                };
                XujieTansuoMdr.prototype.onUpdateTopTeam = function () {
                    this._view.mapView.updateView(this._selIdx + 1, this._proxy.now_type);
                };
                XujieTansuoMdr.prototype.updateListData = function () {
                    var list = [];
                    var cfgs = game.getConfigListByName("zhandui_tansuo_type.json" /* ZhanduiTansuoType */);
                    var nowType = this._proxy.now_type;
                    var selIdx;
                    for (var i = 0; i < cfgs.length; i++) {
                        var cfg = cfgs[i];
                        if (cfg.type == nowType) {
                            selIdx = i; //最新的探索的区域
                        }
                        list.push({
                            cfg: cfg,
                            isActed: this._proxy.isActedByType(cfg.type),
                            progress: this._proxy.getProgressByType(cfg.type)
                        });
                    }
                    this._listArea.replaceAll(list);
                    if (this._proxy.seledArea != null) {
                        selIdx = this._proxy.seledArea; //正在探索的区域
                    }
                    else {
                        this._proxy.seledArea = selIdx || 0;
                    }
                    this._view.list_area.selectedIndex = this._selIdx = selIdx;
                };
                XujieTansuoMdr.prototype.updateView = function () {
                    var itemData = this._listArea.source[this._selIdx];
                    var cfg = itemData.cfg;
                    if (!cfg) {
                        return;
                    }
                    this._listReward.replaceAll(cfg.rewards);
                    //todo 远征按钮处理
                    var expeditionInfo = this._proxy.getExpeditionGridInfo();
                    this._view.btn_yuanzheng.visible = !!expeditionInfo;
                    var expeditionHint = this._proxy.getExpeditionHint();
                    if (this._view.btn_yuanzheng.visible) {
                        this._view.btn_yuanzheng.setHint(expeditionHint);
                    }
                    this._view.btn_tansuo.setHint(this._proxy.getTansuoHint());
                    var cnt = this._proxy.team_count;
                    this._view.gr_team.visible = cnt > 0;
                    var str = game.StringUtil.substitute(game.getLanById("xujietansuo_tips3" /* xujietansuo_tips3 */), [cnt]);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                };
                XujieTansuoMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("xujietansuo_tips4" /* xujietansuo_tips4 */));
                };
                //todo
                XujieTansuoMdr.prototype.onClickRank = function () {
                    var itemData = this._listArea.source[this._selIdx];
                    var type = itemData && itemData.cfg ? itemData.cfg.type : 1;
                    mod.ViewMgr.getIns().showView("61" /* More */, "52" /* XujieTansuoRankMain */, ['01', type]);
                };
                XujieTansuoMdr.prototype.onClickZhanlipin = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "54" /* XujieTansuoZhanlipin */);
                };
                //todo
                XujieTansuoMdr.prototype.onClickYuanzheng = function () {
                    var data = this._proxy.getExpeditionGridItemData();
                    facade.showView("61" /* More */, "58" /* XujieTansuoExpeditionGrid */, data);
                };
                //todo
                XujieTansuoMdr.prototype.onClickTansuo = function () {
                    var itemData = this._listArea.source[this._selIdx];
                    var type = itemData && itemData.cfg ? itemData.cfg.type : 1;
                    // WndBaseMdr参数处理，需要这么传入
                    mod.ViewMgr.getIns().showView("61" /* More */, "53" /* XujieTansuoLayerMain */, ['01', type]);
                };
                XujieTansuoMdr.prototype.onClickZhenrong = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "66" /* Zhenrong */);
                };
                XujieTansuoMdr.prototype.onClickArea = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    var cfg = e.item.cfg;
                    if (!this._proxy.isActedByType(cfg.type, true)) {
                        this._view.list_area.selectedIndex = this._selIdx;
                        return;
                    }
                    this._selIdx = itemIdx;
                    this._proxy.seledArea = itemIdx;
                    this.onUpdateTopTeam();
                    this.updateView();
                };
                return XujieTansuoMdr;
            }(game.MdrBase));
            more.XujieTansuoMdr = XujieTansuoMdr;
            __reflect(XujieTansuoMdr.prototype, "game.mod.more.XujieTansuoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankMainMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoRankMainMdr, _super);
                function XujieTansuoRankMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "ui_tab_rank_",
                            mdr: more.XujieTansuoRankMdr,
                            title: "pass_rank" /* pass_rank */,
                            bg: "xujietansuo_rank_bg"
                        }
                    ];
                    return _this;
                }
                return XujieTansuoRankMainMdr;
            }(mod.WndBaseMdr));
            more.XujieTansuoRankMainMdr = XujieTansuoRankMainMdr;
            __reflect(XujieTansuoRankMainMdr.prototype, "game.mod.more.XujieTansuoRankMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoRankMdr, _super);
                function XujieTansuoRankMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoRankView);
                    return _this;
                }
                XujieTansuoRankMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list_rank.itemRenderer = more.XujieTansuoRankItem;
                    this._view.list_rank.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoRankMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    // let addEventListener = this.onEgret.bind(this);
                    this.onNt("on_update_xujietansuo_rank_info" /* ON_UPDATE_XUJIETANSUO_RANK_INFO */, this.onUpdateView, this);
                };
                XujieTansuoRankMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.c2s_zhandui_xujietansuo_role_click(7 /* Oper7 */);
                };
                XujieTansuoRankMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieTansuoRankMdr.prototype.onUpdateView = function () {
                    this.updateTopThree();
                    this.updateListData();
                    this.updateView();
                };
                //第几名数据
                XujieTansuoRankMdr.prototype.getRankInfo = function (rankNo) {
                    var info = this._proxy.getRankInfo(rankNo);
                    return { rankNo: rankNo, rankInfo: info };
                };
                //更新前三名
                XujieTansuoRankMdr.prototype.updateTopThree = function () {
                    this._view.rankItem0.data = this.getRankInfo(1);
                    this._view.rankItem1.data = this.getRankInfo(2);
                    this._view.rankItem2.data = this.getRankInfo(3);
                };
                //todo
                XujieTansuoRankMdr.prototype.updateListData = function () {
                    var list = [];
                    //1-5
                    for (var i = 1; i <= 5; i++) {
                        var rankNoInfo = this._proxy.getRankInfo(i); //服务端排行数据
                        var progress = rankNoInfo ? this._proxy.getRankProgressByRow(rankNoInfo.map_index, rankNoInfo.layer, rankNoInfo.row) : 0;
                        list.push({
                            rank: [i, i],
                            info: rankNoInfo,
                            progress: progress
                        });
                    }
                    //6-10
                    list.push({
                        rank: [6, 10],
                        info: null,
                        progress: null
                    });
                    //11-20
                    list.push({
                        rank: [11, 20],
                        info: null,
                        progress: null
                    });
                    //20+
                    // list.push({
                    //     rank: [20],
                    //     info: null,
                    //     progress: null
                    // });
                    this._listData.replaceAll(list);
                };
                XujieTansuoRankMdr.prototype.updateView = function () {
                    var myRankInfo = this._proxy.my_team_rank;
                    var rankNo = myRankInfo ? myRankInfo.rank_num : 0;
                    var rankNoStr = game.getLanById("compete_mars_16" /* compete_mars_16 */);
                    if (rankNo > 0 && rankNo <= game.MAX_RANK_NUM) {
                        rankNoStr = rankNo + '';
                    }
                    else if (rankNo > game.MAX_RANK_NUM) {
                        rankNoStr = game.MAX_RANK_NUM + '+';
                    }
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("xujietansuo_tips20" /* xujietansuo_tips20 */), [rankNoStr]));
                    var progress = myRankInfo ? this._proxy.getRankProgressByRow(myRankInfo.map_index, myRankInfo.layer, myRankInfo.row) : 0;
                    var type = myRankInfo ? myRankInfo.map_index : 0;
                    var cfg = this._proxy.getTypeCfg(type);
                    this._view.lab_num.textFlow = game.TextUtil.parseHtml((cfg && cfg.name || '') + '：' + progress + '%');
                };
                return XujieTansuoRankMdr;
            }(game.MdrBase));
            more.XujieTansuoRankMdr = XujieTansuoRankMdr;
            __reflect(XujieTansuoRankMdr.prototype, "game.mod.more.XujieTansuoRankMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRankSectionMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoRankSectionMdr, _super);
                function XujieTansuoRankSectionMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", mod.RankSectionView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoRankSectionMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = more.XujieTansuoRankSectionItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.img_type2.source = "tansuojindu";
                    this._view.img_type2.horizontalCenter = 215;
                };
                XujieTansuoRankSectionMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XujieTansuoRankSectionMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._rank = this._showArgs;
                    this.updateView();
                };
                XujieTansuoRankSectionMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                //排名数据
                XujieTansuoRankSectionMdr.prototype.getRankInfo = function (rankNo) {
                    return this._proxy.getRankInfo(rankNo);
                };
                XujieTansuoRankSectionMdr.prototype.updateView = function () {
                    var list = [];
                    for (var i = this._rank[0]; i <= this._rank[1]; i++) {
                        var rankInfo = this.getRankInfo(i);
                        var progress_1 = rankInfo ? this._proxy.getRankProgressByRow(rankInfo.map_index, rankInfo.layer, rankInfo.row) : 0;
                        list.push({
                            rank: [i],
                            info: this.getRankInfo(i),
                            progress: progress_1
                        });
                    }
                    this._listData.replaceAll(list);
                    var myRankInfo = this._proxy.my_team_rank;
                    var progress = myRankInfo ? this._proxy.getRankProgressByRow(myRankInfo.map_index, myRankInfo.layer, myRankInfo.row) : 0;
                    var cfg = this._proxy.getTypeCfg(myRankInfo && myRankInfo.map_index || 0);
                    this._view.lab_score.textFlow = game.TextUtil.parseHtml(cfg && cfg.name + '：' + progress + '%');
                    var myRankNo = myRankInfo ? myRankInfo.rank_num : 0;
                    var myRankStr = game.getLanById("compete_mars_16" /* compete_mars_16 */);
                    if (0 < myRankNo && myRankNo <= game.MAX_RANK_NUM) {
                        myRankStr = myRankNo + '';
                    }
                    else if (myRankNo > game.MAX_RANK_NUM) {
                        myRankStr = game.MAX_RANK_NUM + '+';
                    }
                    this._view.lab_rank.textFlow = game.TextUtil.parseHtml(game.StringUtil.substitute(game.getLanById("xujietansuo_tips20" /* xujietansuo_tips20 */), [myRankStr]));
                };
                return XujieTansuoRankSectionMdr;
            }(game.MdrBase));
            more.XujieTansuoRankSectionMdr = XujieTansuoRankSectionMdr;
            __reflect(XujieTansuoRankSectionMdr.prototype, "game.mod.more.XujieTansuoRankSectionMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoRewardGridMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoRewardGridMdr, _super);
                function XujieTansuoRewardGridMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoRewardGridView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoRewardGridMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoRewardGridMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.onUpdateView, this);
                    this.onNt("on_view_hide" /* ON_VIEW_HIDE */, this.hide, this);
                };
                XujieTansuoRewardGridMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this._data = this._gridItemData.grid;
                    this.updateView();
                };
                XujieTansuoRewardGridMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieTansuoRewardGridMdr.prototype.onUpdateView = function () {
                    var data = this._gridItemData;
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    if (gridInfo && gridInfo.grid_type == 0 /* Null */) {
                        this.hide();
                        return;
                    }
                    this.updateView();
                };
                XujieTansuoRewardGridMdr.prototype.updateView = function () {
                    var taskId = this._data[1];
                    var task = mod.TaskUtil.getTask(taskId);
                    if (!task) {
                        DEBUG && console.error("\u6CA1\u6709 " + taskId + " \u4EFB\u52A1\u6570\u636E");
                        return;
                    }
                    var taskDesc = mod.TaskUtil.getTaskDesc(task);
                    this._view.lb_cond.textFlow = game.TextUtil.parseHtml(taskDesc);
                    var taskCfg = mod.TaskUtil.getCfg(taskId);
                    this._listData.replaceAll(taskCfg.rewards);
                };
                // todo gridview需监听任务变化，刷新grid状态
                XujieTansuoRewardGridMdr.prototype.onClick = function () {
                    var taskId = this._data[1];
                    var task = mod.TaskUtil.getTask(taskId);
                    mod.TaskUtil.clickTask(task);
                };
                return XujieTansuoRewardGridMdr;
            }(game.MdrBase));
            more.XujieTansuoRewardGridMdr = XujieTansuoRewardGridMdr;
            __reflect(XujieTansuoRewardGridMdr.prototype, "game.mod.more.XujieTansuoRewardGridMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoSaodangMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoSaodangMdr, _super);
                function XujieTansuoSaodangMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoSaodangView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoSaodangMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = mod.Icon;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoSaodangMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_saodang, egret.TouchEvent.TOUCH_TAP, this.onClickSaodang, this);
                    addEventListener(this._view.btn_challenge, egret.TouchEvent.TOUCH_TAP, this.onClickChallenge, this);
                    this.onNt("on_btn_buy_cnt_post" /* ON_BTN_BUY_CNT_POST */, this.onBtnBuyCntPost, this);
                    this.onNt("on_update_xujietansuo_base_info" /* ON_UPDATE_XUJIETANSUO_BASE_INFO */, this.updateView, this);
                    this.onNt("on_bag_update_by_prop_index" /* ON_BAG_UPDATE_BY_PROP_INDEX */, this.onBagUpdateByPropIndex, this);
                };
                XujieTansuoSaodangMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this.updateView();
                };
                XujieTansuoSaodangMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                //监听协议，扫荡数据变化
                XujieTansuoSaodangMdr.prototype.onUpdateView = function () {
                    this.updateView();
                };
                //最近伤害记录
                XujieTansuoSaodangMdr.prototype.getHurt = function () {
                    var gridInfo = this._gridInfo;
                    if (!gridInfo) {
                        return 0;
                    }
                    return gridInfo.last_hurt_value ? gridInfo.last_hurt_value.toNumber() : 0;
                };
                //todo 最近的伤害，血条
                XujieTansuoSaodangMdr.prototype.updateView = function () {
                    var data = this._gridItemData;
                    var grid = data.grid;
                    var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, grid[1]);
                    if (!monsterCfg) {
                        return;
                    }
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    this._gridInfo = gridInfo;
                    this._view.lb_name.text = monsterCfg.name;
                    this._view.img_icon.source = monsterCfg.res_id;
                    var cfg = game.getConfigByNameId("reward_preview.json" /* RewardPreview */, grid[4]);
                    if (cfg) {
                        this._listData.replaceAll(cfg.content);
                    }
                    var hurt = this.getHurt();
                    this._view.lb_record.textFlow = game.TextUtil.parseHtml("\u6700\u8FD1\u4F24\u5BB3\u8BB0\u5F55\uFF1A" + hurt);
                    var hp = gridInfo && gridInfo.boss_hp ? gridInfo.boss_hp.toNumber() : 0;
                    var maxHp = gridInfo && gridInfo.boss_max_hp ? gridInfo.boss_max_hp.toNumber() : 0;
                    this._view.bar.show(hp, maxHp, false, 0, false, 0 /* Percent */);
                    //最大扫荡次数
                    var leftCnt = 0;
                    var cnt = mod.BagUtil.getPropCntByIdx(1450100154 /* XujieTansuoling */);
                    if (hurt) {
                        leftCnt = Math.ceil(hp / hurt); //使boss死亡
                    }
                    if (leftCnt && leftCnt < cnt) {
                        cnt = leftCnt;
                    }
                    this._view.btnListView.setMaxCnt(cnt);
                    this._view.btnListView.setCostCnt(1450100154 /* XujieTansuoling */, cnt);
                    this.updateHurtStr(cnt);
                };
                //次数更新
                XujieTansuoSaodangMdr.prototype.onBtnBuyCntPost = function (n) {
                    var cnt = n.body;
                    this.updateHurtStr(cnt);
                };
                //对boss造成xx伤害（y%）
                XujieTansuoSaodangMdr.prototype.updateHurtStr = function (cnt) {
                    var hurt = this.getHurt() * cnt;
                    var maxHp = this._gridInfo && this._gridInfo.boss_max_hp ? this._gridInfo.boss_max_hp.toNumber() : 1;
                    var progress = Math.max(0, Math.floor(hurt * 100 / maxHp)); // 造成的伤害/boss血量
                    var str = game.StringUtil.substitute(game.getLanById("xujietansuo_tips19" /* xujietansuo_tips19 */), [game.TextUtil.addColor(game.StringUtil.getHurtNumStr(hurt), 2330156 /* GREEN */), progress]);
                    this._view.lb_hurt.textFlow = game.TextUtil.parseHtml(str);
                };
                //todo
                XujieTansuoSaodangMdr.prototype.onClickSaodang = function () {
                    var cnt = this._view.btnListView.getCnt();
                    if (!mod.BagUtil.checkPropCntUp(1450100154 /* XujieTansuoling */, cnt)) {
                        return;
                    }
                    var data = this._gridItemData;
                    this._proxy.c2s_zhandui_xujietansuo_role_click(6 /* Oper6 */, data.type, data.layer, data.row, data.col, null, cnt);
                };
                //todo
                XujieTansuoSaodangMdr.prototype.onClickChallenge = function () {
                    if (!mod.BagUtil.checkPropCntUp(1450100154 /* XujieTansuoling */, 1)) {
                        return;
                    }
                    var data = this._gridItemData;
                    this._proxy.c2s_zhandui_xujietansuo_role_click(5 /* Oper5 */, data.type, data.layer, data.row, data.col);
                    this.hide();
                };
                XujieTansuoSaodangMdr.prototype.onBagUpdateByPropIndex = function (n) {
                    var indexs = n.body;
                    if (indexs.indexOf(1450100154 /* XujieTansuoling */) > -1) {
                        this.updateView();
                    }
                };
                return XujieTansuoSaodangMdr;
            }(game.MdrBase));
            more.XujieTansuoSaodangMdr = XujieTansuoSaodangMdr;
            __reflect(XujieTansuoSaodangMdr.prototype, "game.mod.more.XujieTansuoSaodangMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoZhanbaoMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoZhanbaoMdr, _super);
                function XujieTansuoZhanbaoMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoZhanbaoView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoZhanbaoMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = more.XujieTansuoZhanbaoItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoZhanbaoMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                };
                XujieTansuoZhanbaoMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this._gridItemData = this._showArgs;
                    this.updateView();
                };
                XujieTansuoZhanbaoMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieTansuoZhanbaoMdr.prototype.updateView = function () {
                    var data = this._gridItemData;
                    var gridInfo = this._proxy.getGridInfo(data.type, data.layer, data.row, data.col);
                    if (gridInfo && gridInfo.records) {
                        this._listData.replaceAll(gridInfo.records);
                    }
                };
                return XujieTansuoZhanbaoMdr;
            }(game.MdrBase));
            more.XujieTansuoZhanbaoMdr = XujieTansuoZhanbaoMdr;
            __reflect(XujieTansuoZhanbaoMdr.prototype, "game.mod.more.XujieTansuoZhanbaoMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var XujieTansuoZhanlipinMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoZhanlipinMdr, _super);
                function XujieTansuoZhanlipinMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoZhanlipinView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoZhanlipinMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list.itemRenderer = more.XujieTansuoZhanlipinItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                XujieTansuoZhanlipinMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClick, this);
                    this.onNt("on_update_xujietansuo_records_info" /* ON_UPDATE_XUJIETANSUO_RECORDS_INFO */, this.updateView, this);
                };
                XujieTansuoZhanlipinMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                XujieTansuoZhanlipinMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                XujieTansuoZhanlipinMdr.prototype.updateView = function () {
                    var list = this._proxy.rewards_records;
                    this._listData.replaceAll(list);
                    this._view.btn_do.setHint(list && list.length > 0);
                };
                XujieTansuoZhanlipinMdr.prototype.onClick = function () {
                    if (this._proxy.canGetZhanlipin(true)) {
                        //todo 一键获取战利品
                        this._proxy.c2s_zhandui_xujietansuo_role_click(1 /* Oper1 */);
                    }
                };
                return XujieTansuoZhanlipinMdr;
            }(game.MdrBase));
            more.XujieTansuoZhanlipinMdr = XujieTansuoZhanlipinMdr;
            __reflect(XujieTansuoZhanlipinMdr.prototype, "game.mod.more.XujieTansuoZhanlipinMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Tween = base.Tween;
            var facade = base.facade;
            var TimeMgr = base.TimeMgr;
            var Handler = base.Handler;
            var delayCall = base.delayCall;
            var clearDelay = base.clearDelay;
            /**
             * A 我方
             * B 敌方
             *
             * A 攻击 B  把B秒了  测试ok
             * B 攻击 A  把A秒了  测试ok
             * AB互相攻击，一方死亡 （n回合）测试ok
             * AB同时攻击 （1回合，n回合）todo 待测试 大头
             * 回血 todo 待测试
             * 反弹伤害 todo 待测试
             * 直接伤害 todo 待测试
             */
            var TBSFightMdr = /** @class */ (function (_super) {
                __extends(TBSFightMdr, _super);
                function TBSFightMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.TBSFightView);
                    /**当前回合*/
                    _this._curRound = 0;
                    //超过此回合数则出现跳过按钮
                    _this._skipRound = 4;
                    return _this;
                }
                TBSFightMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this.btsMgr = more.TBSModelMgr.getIns();
                };
                TBSFightMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_skip, egret.TouchEvent.TOUCH_TAP, this.onClickSkin, this);
                    this.onNt("togetherFight", this.onTogetherFight, this); //todo 测试
                    this.onNt("on_tbs_fight_hide" /* ON_TBS_FIGHT_HIDE */, this.dealHide, this);
                };
                TBSFightMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                    this.updateModel();
                    //开始回合处理
                    console.info("tbs_fight rounds\uFF1A", this._proxy.round_records.length);
                    this.doRound();
                };
                TBSFightMdr.prototype.dealHide = function () {
                    this._proxy.result_info = null;
                    this.hide();
                };
                TBSFightMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.btsMgr.onRemove();
                    this._view.gr_model0.removeChildren();
                    this._view.gr_model1.removeChildren();
                    Tween.remove(this._view.gr_model0);
                    Tween.remove(this._view.gr_model1);
                    this._curRound = 0;
                    this._curRoundStruct = null;
                    this._battleRecordList = null;
                    this._actorEntity = null;
                    this._enemyEntity = null;
                    if (this._delayCallId) {
                        clearDelay(this._delayCallId);
                    }
                    this._proxy.round_records = null;
                };
                TBSFightMdr.prototype.updateView = function () {
                    this.updateActorView();
                    this.updateEnemyView();
                };
                //更新模型
                TBSFightMdr.prototype.updateModel = function () {
                    this.btsMgr.updateActor(this.getActorEntity(), this._view.gr_model0);
                    this.btsMgr.updateEnemy(this.getEnemyEntity(), this._view.gr_model1);
                };
                //我方初始信息
                TBSFightMdr.prototype.getActorEntity = function () {
                    var info = this._proxy.myself_info;
                    if (!this._actorEntity) {
                        this._actorEntity = info;
                    }
                    return this._actorEntity;
                };
                //敌方初始信息
                TBSFightMdr.prototype.getEnemyEntity = function () {
                    var info = this._proxy.target_info;
                    if (!this._enemyEntity) {
                        this._enemyEntity = info;
                    }
                    return this._enemyEntity;
                };
                //更新实体血量，每次战斗都要更新血量
                TBSFightMdr.prototype.updateEntityHp = function (data) {
                    if (!data) {
                        return;
                    }
                    var myInfo = this._proxy.myself_info;
                    var myId = myInfo && myInfo.role_id ? myInfo.role_id : null; //我的id
                    var actorId = data.actor && data.actor.id || null; //动作方id
                    if (myId && actorId && myId.equals(actorId)) {
                        this._actorEntity.legion_data.hp = data.actor.hp;
                        this._enemyEntity.legion_data.hp = data.target.hp;
                    }
                    else {
                        this._actorEntity.legion_data.hp = data.target.hp;
                        this._enemyEntity.legion_data.hp = data.actor.hp;
                    }
                };
                //己方数据
                TBSFightMdr.prototype.updateActorView = function () {
                    var actor = this._actorEntity ? this._actorEntity : this.getActorEntity();
                    if (!actor) {
                        return;
                    }
                    var role = this._proxy.myself_info;
                    this._view.lab_name1.text = role && role.name || '';
                    var hp = !this._actorEntity ? 1 : actor.legion_data.hp.toNumber();
                    var maxHp = !this._actorEntity ? 1 : actor.legion_data.legion_max_hp.toNumber();
                    this._view.img_hp1.width = 150 * (hp / maxHp);
                    if (role) {
                        this._view.head1.updateShow(role.head, role.head_frame, role.sex, role.vip);
                    }
                    var power = actor.legion_data.legion_god && actor.legion_data.legion_god.toNumber() || 0;
                    this.addBmpFont(power + '', game.BmpTextCfg[100 /* CommonPower */], this._view.grp_power1);
                    if (!this._actorEntity) {
                        this._actorEntity = actor;
                    }
                };
                //敌方数据
                TBSFightMdr.prototype.updateEnemyView = function () {
                    var enemy = this._enemyEntity ? this._enemyEntity : this.getEnemyEntity();
                    if (!enemy) {
                        return;
                    }
                    if (enemy.role_id && enemy.role_id.notEquals(Long.ZERO)) {
                        //玩家
                        this._view.head2.visible = true;
                        this._view.img_boss2.visible = false;
                        var role = this._proxy.target_info;
                        if (role.head) {
                            this._view.head2.updateShow(role.head, role.head_frame, role.sex, role.vip);
                        }
                        this._view.lab_name2.text = role && role.name ? role.name : '';
                    }
                    else {
                        //boss
                        this._view.head2.visible = false;
                        this._view.img_boss2.visible = true;
                        var monsterCfg = game.getConfigByNameId("monster1.json" /* Monster */, enemy.boss_id ? enemy.boss_id.toNumber() : 0);
                        this._view.lab_name2.text = monsterCfg && monsterCfg.name || '';
                        this._view.img_boss2.source = monsterCfg && monsterCfg.res_id || '';
                    }
                    var hp = !this._enemyEntity ? 1 : enemy.legion_data.hp.toNumber();
                    var maxHp = !this._enemyEntity ? 1 : enemy.legion_data.legion_max_hp.toNumber();
                    this._view.img_hp2.width = 150 * (hp / maxHp);
                    var power = enemy.legion_data.legion_god && enemy.legion_data.legion_god.toNumber() || 0;
                    this.addBmpFont(power + '', game.BmpTextCfg[100 /* CommonPower */], this._view.grp_power2);
                    if (!this._enemyEntity) {
                        this._enemyEntity = enemy;
                    }
                };
                //跳过按钮，当前回合超过4，出现跳过按钮
                TBSFightMdr.prototype.onClickSkin = function () {
                    if (this._curRound > this._skipRound) {
                        this._battleRecordList = null;
                        this._curBattleRecords = null;
                        this._proxy.round_records = null;
                    }
                };
                /**=============================== 攻击等处理 ===============================*/
                //己方攻击
                TBSFightMdr.prototype.onActorFight = function (data) {
                    var _this = this;
                    var val = data && data.value ? data.value.toNumber() : 0;
                    var startX = this._view.gr_model0.x;
                    var startY = this._view.gr_model0.y;
                    this._view.setChildIndex(this._view.gr_model0, this._view.numChildren - 2); //跳过按钮在最上
                    Tween.get(this._view.gr_model0)
                        .to({ x: this._view.gr_model1.x - 100, y: this._view.gr_model1.y + 100 }, 500)
                        .exec(Handler.alloc(this, function () {
                        if (val) {
                            more.TBSTxtMgr.getIns().show(val + '', _this._view.gr_model1);
                        }
                        _this.updateView();
                    }))
                        .delay(200)
                        .to({ x: startX, y: startY }, 500)
                        .exec(Handler.alloc(this, function () {
                        _this._curBattleRecords = null;
                    }));
                };
                //敌方攻击
                TBSFightMdr.prototype.onEnemyFight = function (data) {
                    var _this = this;
                    var val = data && data.value ? data.value.toNumber() : 0;
                    var startX = this._view.gr_model1.x;
                    var startY = this._view.gr_model1.y;
                    this._view.setChildIndex(this._view.gr_model1, this._view.numChildren - 2);
                    Tween.get(this._view.gr_model1)
                        .to({ x: this._view.gr_model0.x + 100, y: this._view.gr_model0.y - 100 }, 500)
                        .exec(Handler.alloc(this, function () {
                        if (val) {
                            more.TBSTxtMgr.getIns().show(val + '', _this._view.gr_model0);
                        }
                        _this.updateView();
                    }))
                        .delay(200)
                        .to({ x: startX, y: startY }, 500)
                        .exec(Handler.alloc(this, function () {
                        _this._curBattleRecords = null;
                    }));
                };
                //双方一起攻击 todo
                TBSFightMdr.prototype.onTogetherFight = function (actor, enemy) {
                    var _this = this;
                    var obj = this.getXYObj();
                    var disX = obj.x;
                    var disY = obj.y;
                    //我方移动
                    var startX0 = this._view.gr_model0.x;
                    var startY0 = this._view.gr_model0.y;
                    this._view.setChildIndex(this._view.gr_model0, this._view.numChildren - 2);
                    Tween.get(this._view.gr_model0)
                        .to({ x: startX0 + disX, y: startY0 - disY }, 500)
                        .delay(200)
                        .to({ x: startX0, y: startY0 }, 500);
                    //敌方移动
                    var startX1 = this._view.gr_model1.x;
                    var startY1 = this._view.gr_model1.y;
                    Tween.get(this._view.gr_model1)
                        .to({ x: startX1 - disX, y: startY1 + disY }, 500)
                        .exec(Handler.alloc(this, function () {
                        _this.updateView();
                        if (actor && actor.value) {
                            more.TBSTxtMgr.getIns().show(actor.value.toString(), _this._view.gr_model1);
                        }
                        if (enemy && enemy.value) {
                            more.TBSTxtMgr.getIns().show(enemy.value.toString(), _this._view.gr_model0);
                        }
                    }))
                        .delay(200)
                        .to({ x: startX1, y: startY1 }, 500)
                        .exec(Handler.alloc(this, function () {
                        _this._curBattleRecords = null;
                    }));
                };
                TBSFightMdr.prototype.getXYObj = function () {
                    var x0 = this._view.gr_model0.x;
                    var y0 = this._view.gr_model0.y;
                    var x1 = this._view.gr_model1.x;
                    var y1 = this._view.gr_model1.y;
                    var disX = Math.abs(x0 - x1) * 0.5 - 50;
                    var disY = Math.abs(y0 - y1) * 0.5 - 50;
                    return { x: disX, y: disY };
                };
                /**=============================== 回合战斗处理 ===============================*/
                //下回合信息
                TBSFightMdr.prototype.getNextRoundRecords = function () {
                    var records = this._proxy.round_records;
                    if (records && records.length) {
                        return records.shift();
                    }
                    return null;
                };
                //所有的回合结束，处理结算界面
                TBSFightMdr.prototype.checkAllRoundFinished = function () {
                    var record = this.getNextRoundRecords();
                    if (record) {
                        return;
                    }
                    TimeMgr.removeUpdateItem(this);
                    if (this._proxy.msg) {
                        var msg_2 = this._proxy.msg;
                        if (msg_2.is_success) {
                            mod.ViewMgr.getIns().showSecondPop("61" /* More */, "47" /* MiningResultWin */, msg_2);
                        }
                        else {
                            mod.ViewMgr.getIns().showSecondPop("61" /* More */, "48" /* MiningResultFail */, msg_2);
                        }
                        this.hide();
                        this._proxy.msg = null;
                        return;
                    }
                    var info = this._proxy.result_info;
                    if (info && info.kill_rewards) {
                        // 击杀奖励界面
                        facade.showView("61" /* More */, "64" /* XujieTansuoSceneResultKill */, info);
                    }
                    else if (info && info.challenge_rewards) {
                        // 击打奖励界面
                        facade.showView("61" /* More */, "63" /* XujieTansuoSceneResult */, info);
                    }
                    else {
                        // todo 没有奖励则直接关闭
                        // todo 其他界面结算界面处理
                        this.hide();
                        this._proxy.result_info = null;
                        facade.showView("61" /* More */, "68" /* XujieTansuoSceneResultFail */);
                    }
                };
                //回合提示
                TBSFightMdr.prototype.showRoundTips = function (round) {
                    var _this = this;
                    var totalRound = 15; //写死15回合
                    var curStr = "第" + round + "/" + totalRound + "回";
                    this.addBmpFont(curStr, game.BmpTextCfg[222 /* XujietansuoTbs */], this._view.grp_lv, true, 1, true);
                    Tween.remove(this._view.grp_tips);
                    this._view.grp_tips.visible = true;
                    this._view.setChildIndex(this._view.grp_tips, this._view.numChildren - 2);
                    Tween.get(this._view.grp_tips)
                        .delay(1000)
                        .exec(Handler.alloc(this, function () {
                        _this._view.grp_tips.visible = false;
                    }));
                };
                //处理每回合
                TBSFightMdr.prototype.doRound = function () {
                    var _this = this;
                    var curRound = this.getNextRoundRecords();
                    if (!curRound) {
                        this.checkAllRoundFinished();
                        return;
                    }
                    this._view.btn_skip.visible = curRound.round > this._skipRound;
                    if (curRound.round != this._curRound) {
                        TimeMgr.removeUpdateItem(this);
                        this.showRoundTips(curRound.round); //回合数提示
                    }
                    if (this._delayCallId) {
                        clearDelay(this._delayCallId);
                    }
                    this._delayCallId = delayCall(Handler.alloc(this, function () {
                        _this._curRound = curRound.round; //当前回合
                        _this._curRoundStruct = curRound; //当前回合数据记录
                        _this.doRoundBattle();
                        TimeMgr.addUpdateItem(_this, 1000);
                    }), 1000);
                };
                //处理每回合的战斗 todo
                TBSFightMdr.prototype.doRoundBattle = function () {
                    var _a;
                    var roundStruct = this._curRoundStruct;
                    if (!roundStruct) {
                        // this.doRound();//进入下一回合处理
                        return;
                    }
                    //动作分类
                    var obj = (_a = {},
                        _a[0 /* Attack */] = [],
                        _a[1 /* Blood */] = [],
                        _a[3 /* DirectInjury */] = [],
                        _a[2 /* ReboundInjury */] = [],
                        _a);
                    var battleStr = ''; //todo 测试打印
                    var list = roundStruct.now_list || [];
                    for (var i = 0; i < list.length; i++) {
                        var item = list[i];
                        if (!obj[item.hit_type]) {
                            obj[item.hit_type] = [];
                        }
                        if (item.hit_type == 2 /* ReboundInjury */) {
                            //反弹伤害，需要找到其关联的普攻伤害（最近原则），其一组
                            var attackList_1 = obj[0 /* Attack */] || [];
                            var size = Math.max(0, attackList_1.length - 1);
                            obj[item.hit_type][size] = item;
                        }
                        else {
                            obj[item.hit_type].push(item);
                        }
                        //测试打印拼接
                        if (item && item.actor) {
                            var isMyself = this._proxy.isMyself(item.actor.id);
                            if (isMyself) {
                                battleStr += " [my_" + item.hit_type + "]";
                            }
                            else {
                                battleStr += " [target_" + item.hit_type + "]";
                            }
                        }
                    }
                    console.info("tbs_fight round" + roundStruct.round + " " + battleStr);
                    //转换成二维数组
                    var roundList = [];
                    var attackList = obj[0 /* Attack */];
                    if (attackList.length == 1) {
                        //一方攻击
                        roundList.push([attackList[0]]); //普攻
                        var reboundList = obj[2 /* ReboundInjury */];
                        if (reboundList && reboundList[0]) {
                            roundList.push([reboundList[0]]); //反弹伤害
                        }
                        var directList = obj[3 /* DirectInjury */];
                        for (var _i = 0, directList_1 = directList; _i < directList_1.length; _i++) {
                            var item = directList_1[_i];
                            roundList.push([item]); //直接伤害
                        }
                        var bloodList = obj[1 /* Blood */];
                        for (var _b = 0, bloodList_1 = bloodList; _b < bloodList_1.length; _b++) {
                            var item = bloodList_1[_b];
                            roundList.push([item]); //回血
                        }
                    }
                    else if (attackList.length == 2) {
                        //双方都有攻击
                        if (this._proxy.is_legion_speed_equal) {
                            //同时进行
                            roundList.push([attackList[0], attackList[1]]); //普攻，只有敌我一起行动，才会是两个
                            var reboundList = obj[2 /* ReboundInjury */];
                            var reboundL = [];
                            if (reboundList[0]) {
                                reboundL.push(reboundList[0]);
                            }
                            if (reboundList[1]) {
                                reboundL.push(reboundList[1]);
                            }
                            roundList.push(reboundL); //反弹伤害
                            var directList = obj[3 /* DirectInjury */];
                            for (var _c = 0, directList_2 = directList; _c < directList_2.length; _c++) {
                                var item = directList_2[_c];
                                roundList.push([item]); //直接伤害
                            }
                            var bloodList = obj[1 /* Blood */];
                            for (var _d = 0, bloodList_2 = bloodList; _d < bloodList_2.length; _d++) {
                                var item = bloodList_2[_d];
                                roundList.push([item]); //回血
                            }
                        }
                        else {
                            //依次进行
                            if (this._proxy.is_legion_speed_greater) {
                                roundList.push([attackList[0]]); //A普攻
                                var reboundList = obj[2 /* ReboundInjury */];
                                if (reboundList[0]) {
                                    roundList.push([reboundList[0]]); //A反弹伤害
                                }
                                roundList.push([attackList[1]]); //B普攻
                                if (reboundList[1]) {
                                    roundList.push(reboundList[1]); //B反弹伤害
                                }
                                var directList = obj[3 /* DirectInjury */];
                                for (var _e = 0, directList_3 = directList; _e < directList_3.length; _e++) {
                                    var item = directList_3[_e];
                                    roundList.push([item]); //直接伤害
                                }
                                var bloodList = obj[1 /* Blood */];
                                for (var _f = 0, bloodList_3 = bloodList; _f < bloodList_3.length; _f++) {
                                    var item = bloodList_3[_f];
                                    roundList.push([item]); //回血
                                }
                            }
                            else {
                                roundList.push([attackList[1]]); //B普攻
                                var reboundList = obj[2 /* ReboundInjury */];
                                if (reboundList[1]) {
                                    roundList.push([reboundList[1]]); //B反弹伤害
                                }
                                roundList.push([attackList[0]]); //A普攻
                                if (reboundList[0]) {
                                    roundList.push(reboundList[0]); //A反弹伤害
                                }
                                var directList = obj[3 /* DirectInjury */];
                                for (var _g = 0, directList_4 = directList; _g < directList_4.length; _g++) {
                                    var item = directList_4[_g];
                                    roundList.push([item]); //直接伤害
                                }
                                var bloodList = obj[1 /* Blood */];
                                for (var _h = 0, bloodList_4 = bloodList; _h < bloodList_4.length; _h++) {
                                    var item = bloodList_4[_h];
                                    roundList.push([item]); //回血
                                }
                            }
                        }
                    }
                    this._battleRecordList = roundList;
                };
                TBSFightMdr.prototype.update = function (time) {
                    //当前这个动作没完成
                    if (this._curBattleRecords) {
                        return;
                    }
                    //这一轮的动作播放完成，进入下一回合
                    if (!this._battleRecordList || !this._battleRecordList.length) {
                        TimeMgr.removeUpdateItem(this);
                        this.doRound(); //下一回合
                        return;
                    }
                    //当前这个动作处理完成，进入下一个动作处理
                    this._curBattleRecords = this._battleRecordList.shift();
                    this.doBattleRecord();
                };
                //每帧处理动作 todo
                TBSFightMdr.prototype.doBattleRecord = function () {
                    if (!this._curBattleRecords) {
                        return;
                    }
                    var itemList = this._curBattleRecords;
                    var isAttack = itemList[0] && itemList[0].hit_type == 0 /* Attack */;
                    var isTogether = false;
                    if (isAttack && itemList.length == 2) {
                        isTogether = true;
                    }
                    if (isTogether) {
                        //敌我双方一起行动 todo todo todo
                        var item0 = itemList[0];
                        var item1 = itemList[1];
                        var isMyself = this._proxy.isMyself(item0.actor.id);
                        this._actorEntity.legion_data.hp = isMyself ? item0.actor.hp : item1.actor.hp;
                        this._enemyEntity.legion_data.hp = isMyself ? item1.actor.hp : item0.actor.hp;
                        this.onTogetherFight(isMyself ? item0 : item1, isMyself ? item1 : item0);
                        return;
                    }
                    for (var _i = 0, itemList_1 = itemList; _i < itemList_1.length; _i++) {
                        var item = itemList_1[_i];
                        var isMyself = this._proxy.isMyself(item.actor.id);
                        this.updateEntityHp(item);
                        if (item.hit_type == 1 /* Blood */) {
                            //飘字回血 todo 表现
                            // PromptBox.getIns().show(`回血飘字`);
                            var val = item.value ? item.value.toNumber() : 0;
                            if (val) {
                                var group = isMyself ? this._view.gr_model0 : this._view.gr_model1;
                                more.TBSTxtMgr.getIns().show(val + '', group);
                            }
                            this._curBattleRecords = null;
                        }
                        else if (item.hit_type == 3 /* DirectInjury */) {
                            //直接攻击 todo 表现
                            // PromptBox.getIns().show(`直接攻击表现`);
                            var val = item.value ? item.value.toNumber() : 0;
                            if (val) {
                                var group = isMyself ? this._view.gr_model0 : this._view.gr_model1;
                                more.TBSTxtMgr.getIns().show(val + '', group);
                            }
                            this._curBattleRecords = null;
                        }
                        else if (item.hit_type == 0 /* Attack */) {
                            //普通攻击
                            if (isMyself) {
                                this.onActorFight(item);
                            }
                            else {
                                this.onEnemyFight(item);
                            }
                        }
                        else if (item.hit_type == 2 /* ReboundInjury */) {
                            //反弹伤害 todo 表现
                            // PromptBox.getIns().show(`反弹伤害`);
                            var val = item.value ? item.value.toNumber() : 0;
                            if (val) {
                                var group = isMyself ? this._view.gr_model0 : this._view.gr_model1;
                                more.TBSTxtMgr.getIns().show(val + '', group);
                            }
                            this._curBattleRecords = null;
                        }
                    }
                };
                return TBSFightMdr;
            }(game.EffectMdrBase));
            more.TBSFightMdr = TBSFightMdr;
            __reflect(TBSFightMdr.prototype, "game.mod.more.TBSFightMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Pool = base.Pool;
            /**
             * 回合制模型控制器 todo
             */
            var TBSModelMgr = /** @class */ (function () {
                function TBSModelMgr() {
                    this._radius = 130;
                    /**
                     * 己方12个神灵布局，锚点的x正方向是12
                     * 相对于group的锚点，象限不同
                     */
                    this._angle = [
                        //xy: ++, +-, --, -+
                        [-210, 60, -30, -120],
                        [-240, 30, -60, -150],
                        [90, 0, -90, -180] //12 3 6 9
                    ];
                    /**敌方布局*/
                    this._enemyAngle = [
                        [-30, -120, -210, 60],
                        [-60, -150, -240, 30],
                        [-90, -180, 90, 0] //6 9 12 3
                    ];
                }
                TBSModelMgr.getIns = function () {
                    if (!this._instance) {
                        this._instance = new TBSModelMgr();
                    }
                    return this._instance;
                };
                //获取角度
                TBSModelMgr.prototype.getAngle = function (idx) {
                    var row = Math.abs(Math.ceil(idx / 4 - 1));
                    var col = (idx % 4 == 0) ? 3 : idx % 4 - 1;
                    return this._angle[row][col];
                };
                //获取x
                TBSModelMgr.prototype.getX = function (idx) {
                    var angle = this.getAngle(idx);
                    var x = this._radius * Math.sin(angle * Math.PI / 180);
                    // console.log(`btsmgr ${idx} ${angle} x:`, x);
                    return x;
                };
                //获取y
                TBSModelMgr.prototype.getY = function (idx) {
                    var angle = this.getAngle(idx);
                    var y = this._radius * Math.cos(angle * Math.PI / 180);
                    // console.log(`btsmgr ${idx} ${angle} y:`, y);
                    return y;
                };
                /**
                 * 添加神灵模型 (其他模型暂时不需要展示）
                 * @param list 神灵列表
                 * @param gr 容器
                 * @param dir 方向，默认右上
                 */
                TBSModelMgr.prototype.addGeneral = function (list, gr, dir) {
                    if (dir === void 0) { dir = 2 /* RIGHT_UP */; }
                    var len = list && list.length || 0;
                    if (!len) {
                        return;
                    }
                    for (var i = 1; i <= len; i++) {
                        var model = Pool.alloc(TBSModelItem);
                        model.onAddGeneral(list[i - 1], dir);
                        model.x = this.getX(i);
                        model.y = this.getY(i);
                        gr.addChild(model);
                    }
                };
                /**
                 * 己方
                 * @param info
                 * @param gr
                 * @param dir 默认右上
                 */
                TBSModelMgr.prototype.updateActor = function (info, gr, dir) {
                    if (dir === void 0) { dir = 2 /* RIGHT_UP */; }
                    if (!this._gr_model0) {
                        this._gr_model0 = gr;
                    }
                    if (!this._proxy) {
                        this._proxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                    }
                    var list = [];
                    var entityList = info.legion_data && info.legion_data.entity_list ? info.legion_data.entity_list : [];
                    for (var _i = 0, entityList_1 = entityList; _i < entityList_1.length; _i++) {
                        var item = entityList_1[_i];
                        if (item.entity_type == 1 /* Shenling */) {
                            //神灵信息
                            list.push(item.id.toNumber());
                        }
                    }
                    this.addGeneral(list, gr, dir);
                    if (info && info.role_id) {
                        var model = Pool.alloc(TBSModelItem);
                        model.onAddRole(this._proxy.myself_info, dir);
                        model.x = 0;
                        model.y = 0;
                        gr.addChild(model);
                    }
                };
                /**
                 * 敌方
                 * @param info
                 * @param gr
                 * @param dir 默认左下
                 */
                TBSModelMgr.prototype.updateEnemy = function (info, gr, dir) {
                    if (dir === void 0) { dir = 6 /* LEFT_DOWN */; }
                    if (!this._gr_model1) {
                        this._gr_model1 = gr;
                    }
                    if (!this._proxy) {
                        this._proxy = game.getProxy("61" /* More */, 256 /* XujieTansuo */);
                    }
                    if (info && info.role_id) {
                        var list = [];
                        var entityList = info.legion_data && info.legion_data.entity_list ? info.legion_data.entity_list : [];
                        for (var _i = 0, entityList_2 = entityList; _i < entityList_2.length; _i++) {
                            var item = entityList_2[_i];
                            if (item.entity_type == 1 /* Shenling */) {
                                //神灵信息
                                list.push(item.id.toNumber());
                            }
                        }
                        this.addGeneral(list, gr, dir);
                        //敌方为玩家
                        var model = Pool.alloc(TBSModelItem);
                        model.onAddRole(this._proxy.target_info, dir);
                        model.x = 0;
                        model.y = 0;
                        gr.addChild(model);
                    }
                    else if (info && info.boss_id) {
                        //敌方为boss
                        var model = Pool.alloc(TBSModelItem);
                        model.onAddMonster(info.boss_id.toNumber(), dir);
                        model.x = 0;
                        model.y = 0;
                        gr.addChild(model);
                    }
                };
                TBSModelMgr.prototype.onRemove = function () {
                    if (this._gr_model0) {
                        var size = this._gr_model0.numChildren;
                        for (var i = 0; i < size; i++) {
                            var child = this._gr_model0.getChildAt(i);
                            if (child && child instanceof TBSModelItem) {
                                Pool.release(child);
                            }
                        }
                        this._gr_model0.removeChildren();
                        this._gr_model0 = null;
                    }
                    if (this._gr_model1) {
                        var size = this._gr_model1.numChildren;
                        for (var i = 0; i < size; i++) {
                            var child = this._gr_model1.getChildAt(i);
                            if (child && child instanceof TBSModelItem) {
                                Pool.release(child);
                            }
                        }
                        this._gr_model1.removeChildren();
                        this._gr_model1 = null;
                    }
                };
                return TBSModelMgr;
            }());
            more.TBSModelMgr = TBSModelMgr;
            __reflect(TBSModelMgr.prototype, "game.mod.more.TBSModelMgr");
            /**模型容器*/
            var TBSModelItem = /** @class */ (function (_super) {
                __extends(TBSModelItem, _super);
                function TBSModelItem() {
                    var _this = _super.call(this) || this;
                    _this._dsp = new egret.DisplayObjectContainer();
                    _this._dsp.removeChildren();
                    _this.name = 'btsModelItem';
                    _this.addChild(_this._dsp);
                    _this._hub = new game.UIEftHub(_this._dsp);
                    _this._url = null;
                    return _this;
                }
                TBSModelItem.prototype.dispose = function () {
                    this.onRelease();
                };
                TBSModelItem.prototype.onAlloc = function () {
                };
                TBSModelItem.prototype.onRelease = function () {
                    this._hub.removeAllEffects();
                    this._url = null;
                };
                // 添加神灵模型
                TBSModelItem.prototype.onAddGeneral = function (index, dir) {
                    if (dir === void 0) { dir = 2 /* RIGHT_UP */; }
                    var url = game.ResUtil.getModelUrl(index, dir, "std" /* STAND */);
                    if (this._url == url) {
                        return;
                    }
                    var type = game.PropData.getPropParse(index);
                    var scale = 1;
                    if (game.AlterXDirs3[dir]) {
                        scale = game.AlterXDirs3[dir]; //左下方向，需要处理
                    }
                    if (type == 400 /* Shenling */) {
                        this._dsp.scaleX = 0.7 * scale;
                        this._dsp.scaleY = 0.7;
                    }
                    else {
                        this._dsp.scaleX = scale;
                        this._dsp.scaleY = 1;
                    }
                    this._url = url;
                    this._hub.add(url, 0, 0, null, 0, this._dsp, -1);
                };
                // 添加玩家模型
                TBSModelItem.prototype.onAddRole = function (teammate, dir) {
                    if (dir === void 0) { dir = 2 /* RIGHT_UP */; }
                    var body = game.ResUtil.getModelName(teammate.fashion, teammate.sex);
                    var weaponStr = game.ResUtil.getModelName(teammate.weapon);
                    var wingStr = game.ResUtil.getModelName(teammate.wing, teammate.sex, false);
                    this._hub.updateUIRole(body, weaponStr, wingStr, this._dsp, 1, dir, "std" /* STAND */, false);
                };
                // 添加怪物模型
                TBSModelItem.prototype.onAddMonster = function (id, dir) {
                    if (dir === void 0) { dir = 6 /* LEFT_DOWN */; }
                    var scale = 1;
                    if (game.AlterXDirs3[dir]) {
                        scale = game.AlterXDirs3[dir]; //左下方向，需要处理
                    }
                    this._dsp.scaleX = scale;
                    this._hub.addMonster(id, this._dsp);
                };
                return TBSModelItem;
            }(eui.Component));
            more.TBSModelItem = TBSModelItem;
            __reflect(TBSModelItem.prototype, "game.mod.more.TBSModelItem", ["base.PoolObject", "base.DisposeObject"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Pool = base.Pool;
            var BaseBmpNum = game.scene.BaseBmpNum;
            var TBSTxtMgr = /** @class */ (function () {
                function TBSTxtMgr() {
                }
                TBSTxtMgr.getIns = function () {
                    if (!this._instance) {
                        this._instance = new TBSTxtMgr();
                    }
                    return this._instance;
                };
                /**
                 * @param {string} dmgStr 伤害文本
                 * @param {egret.DisplayObjectContainer} display 添加到对象
                 * @param {number} x
                 * @param {number} y
                 * @param {number} dir 1右飘2左飘
                 * */
                TBSTxtMgr.prototype.show = function (dmgStr, display, x, y, dir) {
                    if (x === void 0) { x = 0; }
                    if (y === void 0) { y = 0; }
                    if (dir === void 0) { dir = 1; }
                    var type = 1;
                    var cfg = game.getConfigByNameId("battle_figure.json" /* BattleFigure */, type);
                    var bmp = Pool.alloc(BaseBmpNum);
                    display.addChild(bmp.dsp);
                    var atcObj = JSON.parse(cfg.act_json);
                    bmp.setText(dmgStr, x, y, dir, type, cfg.font_name, atcObj.total, cfg.has_word, false);
                    bmp.showTween();
                };
                return TBSTxtMgr;
            }());
            more.TBSTxtMgr = TBSTxtMgr;
            __reflect(TBSTxtMgr.prototype, "game.mod.more.TBSTxtMgr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XujieTansuoSceneResultFailMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoSceneResultFailMdr, _super);
                function XujieTansuoSceneResultFailMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoSceneResultFailView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoSceneResultFailMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                };
                return XujieTansuoSceneResultFailMdr;
            }(game.EffectMdrBase));
            more.XujieTansuoSceneResultFailMdr = XujieTansuoSceneResultFailMdr;
            __reflect(XujieTansuoSceneResultFailMdr.prototype, "game.mod.more.XujieTansuoSceneResultFailMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XujieTansuoSceneResultKillMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoSceneResultKillMdr, _super);
                function XujieTansuoSceneResultKillMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoSceneResultKillView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoSceneResultKillMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                };
                XujieTansuoSceneResultKillMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XujieTansuoSceneResultKillMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                };
                XujieTansuoSceneResultKillMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.sendNt("on_tbs_fight_hide" /* ON_TBS_FIGHT_HIDE */); //todo
                };
                XujieTansuoSceneResultKillMdr.prototype.updateView = function () {
                    var data = this._showArgs;
                    var name = data.role_info ? data.role_info.name : '';
                    var targetName = data.target_name;
                    var str = game.StringUtil.substitute(game.getLanById("xujietansuo_tips25" /* xujietansuo_tips25 */), [game.TextUtil.addColor(name, 16757068 /* ORANGE */), targetName]);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    this._view.lb_damage.text = data.damage_value.toString();
                    //挑战奖励
                    this._view.resultReward0.updateRewardList(data.challenge_rewards || []);
                    //击杀奖励
                    this._view.resultReward1.updateRewardList(data.kill_rewards || []);
                };
                return XujieTansuoSceneResultKillMdr;
            }(game.MdrBase));
            more.XujieTansuoSceneResultKillMdr = XujieTansuoSceneResultKillMdr;
            __reflect(XujieTansuoSceneResultKillMdr.prototype, "game.mod.more.XujieTansuoSceneResultKillMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Handler = base.Handler;
            var XujieTansuoSceneResultMdr = /** @class */ (function (_super) {
                __extends(XujieTansuoSceneResultMdr, _super);
                function XujieTansuoSceneResultMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.XujieTansuoSceneResultView);
                    _this.isEasyHide = true;
                    return _this;
                }
                XujieTansuoSceneResultMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                };
                XujieTansuoSceneResultMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                XujieTansuoSceneResultMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs) {
                        return;
                    }
                    this.updateView();
                    this._view.closeTips.updateShow(10, Handler.alloc(this, this.hide));
                };
                XujieTansuoSceneResultMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.sendNt("on_tbs_fight_hide" /* ON_TBS_FIGHT_HIDE */); //todo
                };
                XujieTansuoSceneResultMdr.prototype.updateView = function () {
                    var data = this._showArgs;
                    var name = data.role_info ? data.role_info.name : '';
                    var targetName = data.target_name;
                    var str = game.StringUtil.substitute(game.getLanById("xujietansuo_tips25" /* xujietansuo_tips25 */), [game.TextUtil.addColor(name, 16757068 /* ORANGE */), targetName]);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    this._view.lb_damage.text = data.damage_value && data.damage_value.toString() || '0';
                    var hp = data.remaining_hp && data.remaining_hp.toNumber() || 0;
                    var maxHp = data.max_hp && data.max_hp.toNumber() || 1;
                    this._view.lb_hp.text = (hp * 100 / maxHp).toFixed(2) + '%';
                    this._view.resultReward.updateRewardList(data.challenge_rewards || []);
                };
                return XujieTansuoSceneResultMdr;
            }(game.MdrBase));
            more.XujieTansuoSceneResultMdr = XujieTansuoSceneResultMdr;
            __reflect(XujieTansuoSceneResultMdr.prototype, "game.mod.more.XujieTansuoSceneResultMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var attributes = msg.attributes;
            var ZhenrongAttrMdr = /** @class */ (function (_super) {
                __extends(ZhenrongAttrMdr, _super);
                function ZhenrongAttrMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ZhenrongAttrView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ZhenrongAttrMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._slProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    this._view.listAttr1.itemRenderer = mod.AttrItemRender;
                    this._view.listAttr1.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZhenrongAttrMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                };
                ZhenrongAttrMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._view.secondPop.updateTitleStr(game.getLanById("xujietansuo_tips23" /* xujietansuo_tips23 */));
                    this._view.name0.setTitle(game.TextUtil.getAttrsText("legion_god" /* legion_god */));
                    this._view.name1.setTitle(game.getLanById("passive_skill" /* passive_skill */));
                    this.updateView();
                };
                ZhenrongAttrMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZhenrongAttrMdr.prototype.updateView = function () {
                    var legionAttr = this._proxy.legion_attr;
                    var attrs = new attributes();
                    if (legionAttr) {
                        var keys = Object.keys(legionAttr);
                        for (var _i = 0, keys_7 = keys; _i < keys_7.length; _i++) {
                            var key = keys_7[_i];
                            if (key == "legion_god" /* legion_god */) {
                                continue;
                            }
                            attrs[key] = legionAttr[key];
                        }
                    }
                    this._view.listAttr0.updateAttr(attrs);
                    var legionGod = legionAttr["legion_god" /* legion_god */] || 0;
                    this._view.power.setPowerValue(legionGod, '军团仙力:');
                    var list = [];
                    for (var _a = 0, LegionTypeAry_1 = game.LegionTypeAry; _a < LegionTypeAry_1.length; _a++) {
                        var type = LegionTypeAry_1[_a];
                        var idList = this._proxy.getShangzhenIdList(type);
                        if (type == 1 /* Shenling */) {
                            for (var _b = 0, idList_1 = idList; _b < idList_1.length; _b++) {
                                var id = idList_1[_b];
                                var info = this._slProxy.getInfoByIndex(id);
                                var slCfg = this._slProxy.getShenLingCfg(id);
                                var starCfg = this._slProxy.getStarCfg(id, info && info.star);
                                if (starCfg && starCfg.legion_buff) {
                                    list.push(slCfg.name + ': ' + this.getLegionBuffDesc(starCfg.legion_buff));
                                }
                            }
                        }
                        else if (type == 2 /* Huashen */) {
                            for (var _c = 0, idList_2 = idList; _c < idList_2.length; _c++) {
                                var id = idList_2[_c];
                                var huashenCfg = game.getConfigByNameId("huashen.json" /* Huashen */, id);
                                if (huashenCfg && huashenCfg.legion_buff) {
                                    list.push(huashenCfg.name + ': ' + this.getLegionBuffDesc(huashenCfg.legion_buff));
                                }
                            }
                        }
                        else {
                            // todo 女神的
                        }
                    }
                    this._listData.replaceAll(list);
                };
                //军团buff描述
                ZhenrongAttrMdr.prototype.getLegionBuffDesc = function (buffId) {
                    var legionBuffCfg = game.getConfigByNameId("legion_buff.json" /* LegionBuff */, buffId);
                    return game.TextUtil.addColor(legionBuffCfg && legionBuffCfg.desc || '', 2330156 /* GREEN */);
                };
                return ZhenrongAttrMdr;
            }(game.MdrBase));
            more.ZhenrongAttrMdr = ZhenrongAttrMdr;
            __reflect(ZhenrongAttrMdr.prototype, "game.mod.more.ZhenrongAttrMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var AchieveView = /** @class */ (function (_super) {
                __extends(AchieveView, _super);
                function AchieveView() {
                    var _this = _super.call(this) || this;
                    _this.skinName = "skins.more.AchieveSkin";
                    return _this;
                }
                return AchieveView;
            }(eui.Component));
            more.AchieveView = AchieveView;
            __reflect(AchieveView.prototype, "game.mod.more.AchieveView");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongMdr = /** @class */ (function (_super) {
                __extends(ZhenrongMdr, _super);
                function ZhenrongMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ZhenrongView);
                    //todo
                    _this._btnData = [
                        {
                            icon: "tubiao_shenling",
                            param: 1 /* Shenling */
                        },
                        {
                            icon: "tubiao_huashen",
                            param: 2 /* Huashen */
                        },
                        {
                            icon: "tubiao_nvshen",
                            param: 3 /* Nvshen */
                        }
                    ];
                    _this.isEasyHide = true;
                    return _this;
                }
                ZhenrongMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._view.list_btn.itemRenderer = mod.TabSecondItem;
                    this._view.list_btn.dataProvider = this._listBtn = new eui.ArrayCollection();
                    this._view.list_shenling.itemRenderer = more.ZhenrongItem;
                    this._view.list_shenling.dataProvider = this._listShenling = new eui.ArrayCollection();
                    this._view.list_huashen.itemRenderer = more.ZhenrongItem;
                    this._view.list_huashen.dataProvider = this._listHuashen = new eui.ArrayCollection();
                    this._view.list_attr.itemRenderer = mod.AttrItemRender;
                    this._view.list_attr.dataProvider = this._listAttr = new eui.ArrayCollection();
                };
                ZhenrongMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.btn_onekey, egret.TouchEvent.TOUCH_TAP, this.onClickOnekey, this);
                    addEventListener(this._view.btn_desc, egret.TouchEvent.TOUCH_TAP, this.onClickAttr, this);
                    addEventListener(this._view.list_btn, eui.ItemTapEvent.ITEM_TAP, this.onClickListBtn, this);
                    addEventListener(this._view.list_shenling, eui.ItemTapEvent.ITEM_TAP, this.onClickModel, this);
                    addEventListener(this._view.list_huashen, eui.ItemTapEvent.ITEM_TAP, this.onClickModel, this);
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.onUpdateView, this);
                };
                ZhenrongMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._legionTypeAry = game.LegionTypeAry;
                    this.updateListBtn();
                    this.updateView();
                };
                ZhenrongMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZhenrongMdr.prototype.onUpdateView = function () {
                    this.updateView();
                    this._view.btn_onekey.setHint(this._proxy.getZhenrongHint());
                };
                ZhenrongMdr.prototype.updateView = function () {
                    var type = this._legionTypeAry[this._selIdx];
                    var isShenling = type == 1 /* Shenling */;
                    this._view.list_shenling.visible = isShenling;
                    this._view.list_huashen.visible = !isShenling;
                    var actedList = this._proxy.getShangzhenIdList(type);
                    actedList.length = game.LegionTypeCnt[type];
                    if (isShenling) {
                        this._listShenling.replaceAll(actedList);
                    }
                    else if (!isShenling) {
                        this._listHuashen.replaceAll(actedList);
                    }
                    this.updatePower();
                };
                //todo
                ZhenrongMdr.prototype.updatePower = function () {
                    var power;
                    var legionAttr = this._proxy.legion_attr;
                    var attr = new msg.attributes();
                    if (legionAttr) {
                        var keys = Object.keys(legionAttr);
                        for (var _i = 0, keys_8 = keys; _i < keys_8.length; _i++) {
                            var key = keys_8[_i];
                            attr[key] = legionAttr[key];
                        }
                        power = legionAttr.legion_god;
                    }
                    this._view.godPower.setPowerValue(power || 0);
                    var attrList = [];
                    if (attr && Object.keys(attr).length) {
                        var keys = game.TextUtil.getAttrOrderKeys(attr);
                        for (var i = 0; i < keys.length; i++) {
                            var k = keys[i];
                            var a = game.TextUtil.getAttrsText(k);
                            var val = attr[k];
                            var v = game.TextUtil.getAttrsPerCent(k, val);
                            attrList.push(game.TextUtil.addColor(a, 0xdaecfa) + game.TextUtil.addColor(' +' + v, 0x00ff48));
                        }
                    }
                    this._listAttr.replaceAll(attrList);
                };
                ZhenrongMdr.prototype.updateListBtn = function () {
                    this._listBtn.replaceAll(this._btnData);
                    this._view.list_btn.selectedIndex = this._selIdx = 0;
                };
                ZhenrongMdr.prototype.onClickOnekey = function () {
                    this._proxy.sendShangzhenOnekey();
                };
                ZhenrongMdr.prototype.onClickAttr = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "69" /* ZhenrongAttr */);
                };
                ZhenrongMdr.prototype.onClickListBtn = function (e) {
                    var idx = e.itemIndex;
                    if (idx == this._selIdx) {
                        return;
                    }
                    //化神、女神开启否
                    if ((this._legionTypeAry[idx] == 2 /* Huashen */ && !this._proxy.isHuashenOpen(true))
                        || (this._legionTypeAry[idx] == 3 /* Nvshen */ && !this._proxy.isNvshenOpen(true))) {
                        this._view.list_btn.selectedIndex = this._selIdx;
                        return;
                    }
                    this._selIdx = idx;
                    this.updateView();
                };
                ZhenrongMdr.prototype.onClickModel = function () {
                    var type = this._legionTypeAry[this._selIdx]; //第几个页签，传入number也可
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "67" /* ZhenrongShangzhen */, type);
                };
                return ZhenrongMdr;
            }(game.MdrBase));
            more.ZhenrongMdr = ZhenrongMdr;
            __reflect(ZhenrongMdr.prototype, "game.mod.more.ZhenrongMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongNvshenMdr = /** @class */ (function (_super) {
                __extends(ZhenrongNvshenMdr, _super);
                function ZhenrongNvshenMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    /**类型*/
                    _this._legionType = 3 /* Nvshen */;
                    return _this;
                }
                return ZhenrongNvshenMdr;
            }(more.ZhenrongHuashenMdr));
            more.ZhenrongNvshenMdr = ZhenrongNvshenMdr;
            __reflect(ZhenrongNvshenMdr.prototype, "game.mod.more.ZhenrongNvshenMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhenrongShangzhenSecondMainMdr = /** @class */ (function (_super) {
                __extends(ZhenrongShangzhenSecondMainMdr, _super);
                function ZhenrongShangzhenSecondMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._height = 1120;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "tubiao_shenlingshangzhen",
                            mdr: more.ZhenrongShenlingMdr,
                            title: game.getLanById("general_tips" /* general_tips */) + game.getLanById("shangzhen" /* shangzhen */),
                            bg: "",
                            openIdx: 0,
                            hintTypes: []
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "tubiao_huashenshangzhen",
                            mdr: more.ZhenrongHuashenMdr,
                            title: game.getLanById("huashen_tips" /* huashen_tips */) + game.getLanById("shangzhen" /* shangzhen */),
                            bg: "",
                            openIdx: 0,
                            hintTypes: []
                        } /*,
                        {
                            btnType: MdrTabBtnType.TabBtnType03,
                            icon: "tubiao_nvshenshangzhen",
                            mdr: ZhenrongNvshenMdr,
                            title: "女神上阵",
                            bg: "",
                            openIdx: 0,
                            hintTypes: []
                        }*/
                    ];
                    return _this;
                }
                ZhenrongShangzhenSecondMainMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                };
                ZhenrongShangzhenSecondMainMdr.prototype.onTabCheck = function (index) {
                    var data = this._btnList.source[index];
                    if (data && data.btnType == "03" /* TabBtnType03 */) {
                        if (!this._proxy.isNvshenOpen(true)) {
                            return false;
                        }
                    }
                    else if (data && data.btnType == "02" /* TabBtnType02 */) {
                        if (!this._proxy.isHuashenOpen(true)) {
                            return false;
                        }
                    }
                    return true;
                };
                return ZhenrongShangzhenSecondMainMdr;
            }(mod.WndSecondMainMdr));
            more.ZhenrongShangzhenSecondMainMdr = ZhenrongShangzhenSecondMainMdr;
            __reflect(ZhenrongShangzhenSecondMainMdr.prototype, "game.mod.more.ZhenrongShangzhenSecondMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            /**
             * 神灵上阵
             * 前端做个假上阵处理，只有点击一键或者关闭界面，才会最终上阵
             */
            var ZhenrongShenlingMdr = /** @class */ (function (_super) {
                __extends(ZhenrongShenlingMdr, _super);
                function ZhenrongShenlingMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhenrongShenlingView);
                    _this._seledType = 0 /* Default */;
                    _this._legionType = 1 /* Shenling */;
                    _this._maxCnt = 0;
                    _this._itemList = [];
                    return _this;
                }
                ZhenrongShenlingMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(256 /* XujieTansuo */);
                    this._shenlingProxy = game.getProxy("45" /* Shenling */, 189 /* Shenling */);
                    this._view.list_menu.itemRenderer = mod.ShenlingTypeBtn;
                    this._view.list_menu.dataProvider = this._listMenu = new eui.ArrayCollection();
                    this._view.list.itemRenderer = mod.AvatarIconLongPress;
                    this._view.list.dataProvider = this._listAvatar = new eui.ArrayCollection();
                    this._maxCnt = game.LegionTypeCnt[this._legionType];
                    for (var i = 0; i < this._maxCnt; i++) {
                        if (this._view["item" + i]) {
                            this._itemList.push(this._view["item" + i]);
                        }
                    }
                };
                ZhenrongShenlingMdr.prototype.addListeners = function () {
                    var _this = this;
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_oneKey, egret.TouchEvent.TOUCH_TAP, this.onClickOneKey, this);
                    addEventListener(this._view.list_menu, eui.ItemTapEvent.ITEM_TAP, this.onClickListMenu, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this._itemList.forEach(function (item) {
                        addEventListener(item, egret.TouchEvent.TOUCH_TAP, _this.onClickItem, _this);
                    });
                    this.onNt("on_update_zhenrong_info" /* ON_UPDATE_ZHENRONG_INFO */, this.onUpdateView, this);
                };
                ZhenrongShenlingMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.initShangzhenList();
                    this._listMenu.replaceAll(game.ShenLingTypeBtnAry);
                    this.onSwitchType();
                    this._view.list_menu.selectedIndex = this._seledType;
                };
                ZhenrongShenlingMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this.onResetScroller();
                    this.finallyShangzhen();
                    this._seledType = 0 /* Default */;
                    this._seledList = null;
                };
                ZhenrongShenlingMdr.prototype.onResetScroller = function () {
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                //初始上阵的数据
                ZhenrongShenlingMdr.prototype.initShangzhenList = function () {
                    this._seledList = this._proxy.getShangzhenIdList(this._legionType);
                };
                ZhenrongShenlingMdr.prototype.onUpdateView = function () {
                    this.initShangzhenList(); //重置服务端真实上阵的神灵
                    this.updateListAvatar();
                    this.updateTopItemList();
                };
                ZhenrongShenlingMdr.prototype.onSwitchType = function (type) {
                    if (type === void 0) { type = 0 /* Default */; }
                    this._seledType = type;
                    this.updateListAvatar();
                    this.updateTopItemList();
                };
                //更新已上阵的信息
                ZhenrongShenlingMdr.prototype.updateTopItemList = function () {
                    var list = this._seledList; //当前上阵的神灵id
                    for (var i = 0; i < this._maxCnt; i++) {
                        var icon = this._view["item" + i];
                        if (!icon) {
                            return;
                        }
                        var index = list[i];
                        if (index) {
                            var info = this._shenlingProxy.getInfoByIndex(index);
                            icon.data = {
                                cfg: this._shenlingProxy.getShenLingCfg(index),
                                star: info && info.star || 0,
                                showHint: false,
                                isBattle: true,
                                isSel: false
                            };
                        }
                        else {
                            icon.data = null;
                        }
                    }
                };
                ZhenrongShenlingMdr.prototype.updateListAvatar = function () {
                    var list = this.getList();
                    var listData = [];
                    for (var _i = 0, list_12 = list; _i < list_12.length; _i++) {
                        var item = list_12[_i];
                        var info = this._shenlingProxy.getInfoByIndex(item.index);
                        listData.push({
                            cfg: this._shenlingProxy.getShenLingCfg(item.index),
                            showHint: false,
                            isBattle: item.isBattle,
                            star: info && info.star || 0
                        });
                    }
                    this._listAvatar.replaceAll(listData);
                };
                ZhenrongShenlingMdr.prototype.getList = function () {
                    if (this._seledType != 0 /* Default */) {
                        return this.getListData(this._seledType);
                    }
                    var list = [];
                    var _list = [];
                    for (var _i = 0, ShenLingTypeAry_3 = game.ShenLingTypeAry; _i < ShenLingTypeAry_3.length; _i++) {
                        var i = ShenLingTypeAry_3[_i];
                        var typeList = this.getListData(i);
                        if (!typeList || !typeList.length) {
                            continue;
                        }
                        for (var _a = 0, typeList_4 = typeList; _a < typeList_4.length; _a++) {
                            var info = typeList_4[_a];
                            if (info && info.isBattle) {
                                list.push(info);
                            }
                            else {
                                _list.push(info);
                            }
                        }
                    }
                    list = list.concat(_list);
                    return list;
                };
                ZhenrongShenlingMdr.prototype.getListData = function (type) {
                    var list = [];
                    var infoList = this._shenlingProxy.getActedListByType(type);
                    var limitQuality = this._proxy.getShenlingLimitQuality();
                    for (var _i = 0, infoList_3 = infoList; _i < infoList_3.length; _i++) {
                        var info = infoList_3[_i];
                        if (!info) {
                            continue;
                        }
                        var cfg = this._shenlingProxy.getShenLingCfg(info.index.toNumber());
                        if (!cfg || cfg.quality < limitQuality) {
                            continue;
                        }
                        var data = {
                            index: info.index.toNumber(),
                            isBattle: false
                        };
                        if (this.isBattle(info.index.toNumber())) {
                            data.isBattle = true;
                            list.unshift(data);
                        }
                        else {
                            list.push(data);
                        }
                    }
                    return list;
                };
                //是否上阵
                ZhenrongShenlingMdr.prototype.isBattle = function (index) {
                    return this._seledList.indexOf(index) > -1;
                };
                //一键上阵
                ZhenrongShenlingMdr.prototype.onClickOneKey = function () {
                    this._proxy.sendShangzhen(this._legionType, 2);
                };
                //选中类型
                ZhenrongShenlingMdr.prototype.onClickListMenu = function (e) {
                    var type = e.item;
                    if (type == this._seledType) {
                        return;
                    }
                    if (type != 0 /* Default */) {
                        var info = this._shenlingProxy.getTypeInfo(type);
                        if (!info || !info.upindex) {
                            game.PromptBox.getIns().show(game.getLanById("shenling_tips5" /* shenling_tips5 */));
                            this._view.list_menu.selectedIndex = game.ShenLingTypeBtnAry.indexOf(this._seledType);
                            return;
                        }
                    }
                    this.onResetScroller();
                    this.onSwitchType(type);
                };
                //点击单个，上阵
                ZhenrongShenlingMdr.prototype.onClickList = function (e) {
                    if (this._seledList.length >= this._maxCnt) {
                        game.PromptBox.getIns().show(game.getLanById("xujietansuo_tips12" /* xujietansuo_tips12 */));
                        return;
                    }
                    var data = e.item;
                    if (this._seledList.indexOf(data.cfg.index) > -1) {
                        game.PromptBox.getIns().show(game.getLanById("shenling_tips15" /* shenling_tips15 */));
                        return;
                    }
                    data.isBattle = true;
                    this._listAvatar.itemUpdated(data);
                    this._seledList.push(data.cfg.index);
                    game.PromptBox.getIns().show(game.getLanById("shenling_tips14" /* shenling_tips14 */));
                    this.onSwitchType(this._seledType);
                };
                //点击单个，下阵
                ZhenrongShenlingMdr.prototype.onClickItem = function (e) {
                    var data = e.currentTarget.data;
                    if (!data) {
                        return;
                    }
                    var index = data.cfg.index;
                    var idx = this._seledList.indexOf(index);
                    if (idx > -1) {
                        this._seledList.splice(idx, 1);
                    }
                    var itemIdx = this._itemList.indexOf(e.currentTarget);
                    var item = this._itemList[itemIdx];
                    if (item) {
                        item.data = null;
                    }
                    this.onSwitchType(this._seledType);
                };
                //关闭界面最终上阵处理
                ZhenrongShenlingMdr.prototype.finallyShangzhen = function () {
                    var map = new Map();
                    var info = this._proxy.getShangzhenInfo(this._legionType);
                    if (info && info.unitlist) {
                        //后端真上阵数据
                        info.unitlist.forEach(function (item) {
                            map.set(item.toNumber(), true);
                        });
                    }
                    var seledSize = this._seledList.length;
                    var sameCnt = 0;
                    if (map.size == seledSize) {
                        //前端假上阵数据
                        this._seledList.forEach(function (item) {
                            if (map.get(item)) {
                                sameCnt++;
                            }
                        });
                    }
                    if (map.size != seledSize || sameCnt != seledSize) {
                        this._proxy.sendShangzhen(this._legionType, 3, this._seledList);
                    }
                };
                return ZhenrongShenlingMdr;
            }(game.MdrBase));
            more.ZhenrongShenlingMdr = ZhenrongShenlingMdr;
            __reflect(ZhenrongShenlingMdr.prototype, "game.mod.more.ZhenrongShenlingMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiBuildMainMdr = /** @class */ (function (_super) {
                __extends(ZhanduiBuildMainMdr, _super);
                function ZhanduiBuildMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "zhandui_icon",
                            mdr: more.ZhanduiBuildMdr,
                            title: "zhandui_tips1" /* zhandui_tips1 */,
                            bg: "zhandui_bg",
                            openIdx: 1041670222 /* Zhandui */
                        }
                    ];
                    return _this;
                }
                return ZhanduiBuildMainMdr;
            }(mod.WndBaseMdr));
            more.ZhanduiBuildMainMdr = ZhanduiBuildMainMdr;
            __reflect(ZhanduiBuildMainMdr.prototype, "game.mod.more.ZhanduiBuildMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiBuildMdr = /** @class */ (function (_super) {
                __extends(ZhanduiBuildMdr, _super);
                function ZhanduiBuildMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhanduiBuildView);
                    return _this;
                }
                ZhanduiBuildMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                };
                ZhanduiBuildMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_create, egret.TouchEvent.TOUCH_TAP, this.onClickCreate, this);
                    addEventListener(this._view.btn_join, egret.TouchEvent.TOUCH_TAP, this.onClickJoin, this);
                    this.onNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */, this.updateView, this);
                };
                ZhanduiBuildMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.sendButtonClick(100 /* Oper100 */);
                };
                ZhanduiBuildMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZhanduiBuildMdr.prototype.updateView = function () {
                    var num = this._proxy.total_team_count;
                    var str = game.StringUtil.substitute(game.getLanById("zhandui_tips4" /* zhandui_tips4 */), [game.TextUtil.addColor(num + '', 8585074 /* GREEN */)]);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                    this.onTeam();
                };
                ZhanduiBuildMdr.prototype.onClickCreate = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "12" /* ZhanduiCreate */);
                };
                ZhanduiBuildMdr.prototype.onClickJoin = function () {
                    //从聊天频道点击跳转的，只需要展示一条，此打开请求数据放到这里
                    this._proxy.sendButtonClick(3 /* Oper3 */);
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "13" /* ZhanduiJoin */);
                };
                ZhanduiBuildMdr.prototype.onTeam = function () {
                    var team = this._proxy.haveTeam();
                    if (team) {
                        mod.ViewMgr.getIns().showView("61" /* More */, "14" /* ZhanduiMain */);
                    }
                };
                return ZhanduiBuildMdr;
            }(game.MdrBase));
            more.ZhanduiBuildMdr = ZhanduiBuildMdr;
            __reflect(ZhanduiBuildMdr.prototype, "game.mod.more.ZhanduiBuildMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var ZhanduiConstructMdr = /** @class */ (function (_super) {
                __extends(ZhanduiConstructMdr, _super);
                function ZhanduiConstructMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhanduiConstructView);
                    return _this;
                }
                ZhanduiConstructMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list_reward.itemRenderer = mod.Icon;
                    this._view.list_reward.dataProvider = this._listReward = new eui.ArrayCollection();
                    this._view.list.itemRenderer = more.ZhanduiConstructItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.scroller['hasScissor'] = true;
                    this._view.img_got1.visible = false;
                };
                ZhanduiConstructMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_get, egret.TouchEvent.TOUCH_TAP, this.onClickGet, this);
                    addEventListener(this._view.btn_go, egret.TouchEvent.TOUCH_TAP, this.onClickGo, this);
                    this.onNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */, this.updateView, this);
                };
                ZhanduiConstructMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                ZhanduiConstructMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                //开始收益时间处理
                ZhanduiConstructMdr.prototype.updateExpTime = function () {
                    var createTime = this._proxy.join_time;
                    if (!createTime) {
                        TimeMgr.removeUpdateItem(this);
                        this._view.btn_go.visible = true;
                        this._view.lb_desc.visible = false;
                        return;
                    }
                    var nextDayTime = game.TimeUtil.getNextDayTime(createTime, false, 1);
                    var curTime = TimeMgr.time.serverTimeSecond;
                    if (curTime < nextDayTime) {
                        var leftTime = nextDayTime - curTime;
                        var hours = Math.floor(leftTime / game.Second.Hour);
                        var mins = Math.floor((leftTime - hours * game.Second.Hour) / game.Second.Minute);
                        var timeStr = hours + game.getLanById("shijian_2" /* shijian_2 */) + mins + game.getLanById("shijian_3" /* shijian_3 */); //x时x分
                        if (hours == 0 && mins == 0) {
                            timeStr = leftTime + game.getLanById("shijian_4" /* shijian_4 */); //xx秒
                        }
                        var str = game.StringUtil.substitute(game.getLanById("zhandui_tips32" /* zhandui_tips32 */), [game.TextUtil.addColor(timeStr, 8585074 /* GREEN */)]);
                        this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                        this._view.lb_desc.visible = true;
                        TimeMgr.addUpdateItem(this, 1000);
                    }
                    else {
                        this._view.lb_desc.visible = false;
                        TimeMgr.removeUpdateItem(this);
                    }
                    this._view.btn_go.visible = !this._view.lb_desc.visible;
                };
                ZhanduiConstructMdr.prototype.update = function (time) {
                    this.updateExpTime();
                };
                ZhanduiConstructMdr.prototype.updateView = function () {
                    this.updateExpTime();
                    this._view.img_flag.source = game.ResUtil.getZhanduiFlag(this._proxy.flag_index);
                    this._view.lb_lv.text = this._proxy.team_level + game.getLanById("lv" /* lv */);
                    var lv = this._proxy.team_level;
                    var cfg = this._proxy.getLevelCfg(!this._proxy.isMaxLv() ? lv + 1 : lv);
                    var maxExp = cfg && cfg.point || 0;
                    var curExp = this._proxy.team_point;
                    this._view.bar.show(curExp, maxExp, false, 0, true, 1 /* Value */);
                    //判断显示已满级
                    if (this._proxy.isMaxLv()) {
                        //显示已满级标签
                        this._view.img_got1.visible = true;
                        //按钮和文本都不显示
                        this._view.lb_desc.visible = false;
                        this._view.btn_go.visible = false;
                    }
                    var list = [];
                    var cfgs = game.getConfigListByName("zhandui_dengji.json" /* ZhanduiDengji */);
                    for (var i = 0; i < cfgs.length; i++) {
                        var cfg_3 = cfgs[i];
                        var cfgBefore = cfgs[i - 1];
                        var cfgNext = cfgs[i + 1];
                        var val = curExp == 0 && i == 0 ? cfg_3.point + 1 : curExp; //当前值 (1级时候进度条需要满，这里直接设置+1)
                        //上个配置的值
                        var start = cfgBefore && Math.floor((cfg_3.point - cfgBefore.point) / 2) + (cfgBefore && cfgBefore.point) || 0;
                        //下一个目标值
                        var target = cfg_3.point;
                        //进度条结束值(下个目标值的一半）
                        var next = cfgNext && Math.floor((cfgNext.point - cfg_3.point) / 2) + cfg_3.point || 0;
                        var barData = {
                            val: val,
                            start: start,
                            target: target,
                            next: next
                        };
                        list.push({ cfg: cfgs[i], vBarData: barData });
                    }
                    this._listData.replaceAll(list);
                    this.updateReward();
                };
                ZhanduiConstructMdr.prototype.updateReward = function () {
                    var lv = this._proxy.team_level;
                    var cfg = this._proxy.getLevelCfg(lv);
                    this._listReward.replaceAll(cfg && cfg.day_rewards || []);
                    var isGot = this._proxy.isGotReward();
                    this._view.img_got.visible = isGot;
                    this._view.btn_get.visible = !isGot;
                    if (!isGot) {
                        this._view.btn_get.setHint(this._proxy.canGetReward());
                    }
                };
                ZhanduiConstructMdr.prototype.onClickGet = function () {
                    if (this._proxy.canGetReward()) {
                        this._proxy.c2s_zhandui_get_day_rewards();
                    }
                    else {
                        game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("lingqi_tips10" /* lingqi_tips10 */), ['']));
                    }
                };
                ZhanduiConstructMdr.prototype.onClickGo = function () {
                    mod.ViewMgr.getIns().showViewByID(30 /* Daily */);
                };
                return ZhanduiConstructMdr;
            }(game.MdrBase));
            more.ZhanduiConstructMdr = ZhanduiConstructMdr;
            __reflect(ZhanduiConstructMdr.prototype, "game.mod.more.ZhanduiConstructMdr", ["base.UpdateItem"]);
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiCreateItem = /** @class */ (function (_super) {
                __extends(ZhanduiCreateItem, _super);
                function ZhanduiCreateItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ZhanduiCreateItem.prototype.dataChanged = function () {
                    var data = this.data;
                    if (!data) {
                        return;
                    }
                    this.img_flag.source = game.ResUtil.getZhanduiFlag(data.index);
                };
                return ZhanduiCreateItem;
            }(mod.IconSel));
            more.ZhanduiCreateItem = ZhanduiCreateItem;
            __reflect(ZhanduiCreateItem.prototype, "game.mod.more.ZhanduiCreateItem");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiCreateMdr = /** @class */ (function (_super) {
                __extends(ZhanduiCreateMdr, _super);
                function ZhanduiCreateMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ZhanduiCreateView);
                    _this._selIdx = 0;
                    _this.isEasyHide = true;
                    return _this;
                }
                ZhanduiCreateMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list.itemRenderer = more.ZhanduiCreateItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZhanduiCreateMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_create, egret.TouchEvent.TOUCH_TAP, this.onClickCreate, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_view_hide" /* ON_VIEW_HIDE */, this.hide, this);
                };
                ZhanduiCreateMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._listData.replaceAll(this._proxy.getQizhiCfgList());
                    this._view.list.selectedIndex = this._selIdx;
                    this.updateView();
                };
                ZhanduiCreateMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                    this._cost = null;
                    this._view.lb_input.text = '';
                };
                ZhanduiCreateMdr.prototype.updateView = function () {
                    var selCfg = this._listData.source[this._selIdx];
                    if (!selCfg) {
                        return;
                    }
                    this._selCfg = selCfg;
                    this._view.costIcon.visible = true;
                    this._cost = this._proxy.getCreateCost();
                    this._view.costIcon.updateShow(this._cost);
                };
                ZhanduiCreateMdr.prototype.onClickCreate = function () {
                    var text = this._view.lb_input.text;
                    if (!text) {
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips7" /* zhandui_tips7 */));
                        return;
                    }
                    if (this._cost && !mod.BagUtil.checkPropCnt(this._cost[0], this._cost[1], 1 /* Dialog */)) {
                        return;
                    }
                    this._proxy.sendButtonClickCreate(this._selCfg.index, text);
                    this.hide();
                };
                ZhanduiCreateMdr.prototype.onClickList = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIdx;
                    this.updateView();
                };
                return ZhanduiCreateMdr;
            }(game.MdrBase));
            more.ZhanduiCreateMdr = ZhanduiCreateMdr;
            __reflect(ZhanduiCreateMdr.prototype, "game.mod.more.ZhanduiCreateMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiFlagMdr = /** @class */ (function (_super) {
                __extends(ZhanduiFlagMdr, _super);
                function ZhanduiFlagMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhanduiFlagView);
                    _this._selIdx = 0;
                    _this._btnType = 0; //1使用，2购买
                    return _this;
                }
                ZhanduiFlagMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list.itemRenderer = more.ZhanduiFlagItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZhanduiFlagMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_use, egret.TouchEvent.TOUCH_TAP, this.onClickUse, this);
                    addEventListener(this._view.list, eui.ItemTapEvent.ITEM_TAP, this.onClickList, this);
                    this.onNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */, this.updateView, this);
                };
                ZhanduiFlagMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this.updateView();
                };
                ZhanduiFlagMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._selIdx = 0;
                    this._btnType = 0;
                    this._selCfg = null;
                };
                ZhanduiFlagMdr.prototype.updateView = function () {
                    this.udpateListData();
                    this.updateTopInfo();
                    this.updateBottomInfo();
                };
                ZhanduiFlagMdr.prototype.udpateListData = function () {
                    var list = [];
                    var cfgs = game.getConfigListByName("zhandui_qizhi.json" /* ZhanduiQizhi */);
                    var usingIndex = this._proxy.flag_index;
                    var actedList = this._proxy.flag_list;
                    for (var _i = 0, cfgs_15 = cfgs; _i < cfgs_15.length; _i++) {
                        var cfg = cfgs_15[_i];
                        var type = 0;
                        if (usingIndex == cfg.index) {
                            type = 2;
                        }
                        else if (actedList.indexOf(cfg.index) > -1) {
                            type = 1;
                        }
                        var itemData = {
                            cfg: cfg,
                            type: type
                        };
                        list.push(itemData);
                    }
                    list.sort(function (a, b) {
                        var typeA = a.type;
                        var typeB = b.type;
                        if (typeA != typeB) {
                            return typeB - typeA;
                        }
                        return a.cfg.index - b.cfg.index;
                    });
                    this._listData.replaceAll(list);
                    if (this._selCfg) {
                        var size = list.length;
                        for (var i = 0; i < size; i++) {
                            var cfg = list[i].cfg;
                            if (cfg && cfg.index == this._selCfg.index) {
                                this._selIdx = i;
                                break;
                            }
                        }
                    }
                    else {
                        this._selCfg = list[this._selIdx] && list[this._selIdx].cfg || null;
                    }
                    this._view.list.selectedIndex = this._selIdx;
                };
                ZhanduiFlagMdr.prototype.updateTopInfo = function () {
                    if (!this._selCfg) {
                        return;
                    }
                    this._view.img_flag.source = game.ResUtil.getZhanduiFlag(this._selCfg.index);
                    this._view.lb_name.text = this._selCfg.name;
                    var level = this._proxy.team_level;
                    var nextCfg = this._proxy.getLevelCfg(level + 1);
                    if (!nextCfg) {
                        this._view.lb_desc.visible = false;
                        this._view.img_di.visible = false;
                        return;
                    }
                    var curExp = this._proxy.team_point;
                    var diffExp = nextCfg.point - curExp;
                    var str = game.StringUtil.substitute(game.getLanById("zhandui_tips27" /* zhandui_tips27 */), [diffExp]);
                    this._view.lb_desc.textFlow = game.TextUtil.parseHtml(str);
                };
                ZhanduiFlagMdr.prototype.updateBottomInfo = function () {
                    this._view.img_used.visible = this._view.btn_use.visible = this._view.lb_actCond.visible = false;
                    if (!this._selCfg) {
                        return;
                    }
                    //正在使用
                    if (this._selCfg.index == this._proxy.flag_index) {
                        this._view.img_used.visible = true;
                        return;
                    }
                    //激活未使用
                    if (this._proxy.flag_list.indexOf(this._selCfg.index) > -1) {
                        this._view.btn_use.visible = true;
                        this._view.btn_use.label = game.getLanById("use1" /* use1 */);
                        this._view.btn_use.resetCost();
                        this._btnType = 1;
                        return;
                    }
                    //未激活的，通过战队等级条件解锁
                    var level = this._proxy.team_level;
                    var condLv = this._selCfg.cond;
                    if (condLv && condLv > level) {
                        this._view.lb_actCond.visible = true;
                        this._view.lb_actCond.text = game.StringUtil.substitute(game.getLanById("zhandui_tips28" /* zhandui_tips28 */), [condLv]);
                        return;
                    }
                    if (this._selCfg.costs) {
                        this._view.btn_use.visible = true;
                        this._view.btn_use.label = '';
                        this._view.btn_use.setCost(this._selCfg.costs[0]);
                        this._btnType = 2;
                        return;
                    }
                };
                ZhanduiFlagMdr.prototype.onClickUse = function () {
                    if (!this._selCfg) {
                        return;
                    }
                    //使用
                    if (this._btnType == 1 && !this._proxy.isCaption()) {
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips10" /* zhandui_tips10 */));
                        return;
                    }
                    var cost = this._selCfg.costs && this._selCfg.costs[0] || null;
                    if (this._btnType == 2 && cost && !mod.BagUtil.checkPropCntUp(cost[0], cost[1])) {
                        return;
                    }
                    var type = this._btnType == 1 ? 8 /* Oper8 */ : 2 /* Oper2 */; //8使用，2购买
                    this._proxy.sendButtonClickQizhi(type, this._selCfg.index);
                };
                ZhanduiFlagMdr.prototype.onClickList = function (e) {
                    var itemIdx = e.itemIndex;
                    if (itemIdx == this._selIdx) {
                        return;
                    }
                    this._selIdx = itemIdx;
                    this._selCfg = e.item.cfg;
                    this.updateTopInfo();
                    this.updateBottomInfo();
                };
                return ZhanduiFlagMdr;
            }(game.MdrBase));
            more.ZhanduiFlagMdr = ZhanduiFlagMdr;
            __reflect(ZhanduiFlagMdr.prototype, "game.mod.more.ZhanduiFlagMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var TimeMgr = base.TimeMgr;
            var ZhanduiInviteListMdr = /** @class */ (function (_super) {
                __extends(ZhanduiInviteListMdr, _super);
                function ZhanduiInviteListMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ZhanduiInviteListView);
                    _this._isSendSuccess = false; //是否发送成功
                    _this._chatChannel = 5 /* Zhandui */;
                    _this.isEasyHide = true;
                    return _this;
                }
                ZhanduiInviteListMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list.itemRenderer = more.ZhanduiInviteItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                    this._view.editable_value.inputType = egret.TextFieldInputType.TEL;
                    var str = game.StringUtil.substitute(game.getLanById("zhandui_tips8" /* zhandui_tips8 */), [game.TextUtil.addLinkHtmlTxt(game.getLanById("zhandui_tips9" /* zhandui_tips9 */), 2330156 /* GREEN */, '')]);
                    this._view.lb_noteam.textFlow = game.TextUtil.parseHtml(str);
                };
                ZhanduiInviteListMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.secondPop.btn_close, egret.TouchEvent.TOUCH_TAP, this.hide, this);
                    addEventListener(this._view.checkbox1, egret.TouchEvent.TOUCH_TAP, this.onClickCheckbox1, this);
                    addEventListener(this._view.checkbox2, egret.TouchEvent.TOUCH_TAP, this.onClickCheckbox2, this);
                    addEventListener(this._view.lb_noteam, egret.TextEvent.LINK, this.onClickLabel, this);
                    addEventListener(this._view.editable_value, egret.TextEvent.FOCUS_OUT, this.onFocusOut, this);
                    addEventListener(this._view.editable_value, egret.Event.CHANGE, this.onChangeValue, this);
                    this.onNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */, this.updateView, this);
                    this.onNt("on_update_zhandui_team_role_apply_list_info" /* ON_UPDATE_ZHANDUI_TEAM_ROLE_APPLY_LIST_INFO */, this.updateView, this);
                    this.onNt("on_send_success" /* ON_SEND_SUCCESS */, this.onSendSuccess, this);
                };
                ZhanduiInviteListMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.sendButtonClick(9 /* Oper9 */);
                    this.updateView();
                };
                ZhanduiInviteListMdr.prototype.onSendSuccess = function () {
                    this._isSendSuccess = true;
                };
                ZhanduiInviteListMdr.prototype.onHide = function () {
                    this._isSendSuccess = false;
                    this._sendTime = 0;
                    _super.prototype.onHide.call(this);
                };
                ZhanduiInviteListMdr.prototype.updateView = function () {
                    this._view.checkbox1.selected = this._proxy.is_check_apply;
                    this._view.checkbox2.selected = this._proxy.is_check_power;
                    this._view.editable_value.text = Math.floor(this._proxy.limit_showpower / 10000) + '';
                    var list = this._proxy.role_apply_list;
                    if (!list || !list.length) {
                        this._view.currentState = 'noteam';
                        return;
                    }
                    this._view.currentState = 'team';
                    this._listData.replaceAll(list);
                };
                ZhanduiInviteListMdr.prototype.onClickCheckbox1 = function () {
                    this._proxy.is_check_apply = !this._proxy.is_check_apply; //取反，本地做个缓存，服务端不更
                    this._proxy.sendButtonClick(16 /* Oper16 */);
                };
                ZhanduiInviteListMdr.prototype.onClickCheckbox2 = function () {
                    var val = +this._view.editable_value.text;
                    var isSel = this._view.checkbox2.selected;
                    if (isSel && !val) {
                        this._view.checkbox2.selected = val > 0;
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips29" /* zhandui_tips29 */));
                        return;
                    }
                    this.onClickEditable();
                };
                ZhanduiInviteListMdr.prototype.onClickLabel = function () {
                    //CD限制
                    var cfg = game.getConfigByNameId("chat_limit.json" /* Chat */, this._chatChannel);
                    var cfgCd = 0;
                    var lv = game.RoleVo.ins.level;
                    if (cfg && cfg.CD) {
                        var i = 0;
                        for (var len = cfg.CD.length; i < len; i++) {
                            if (lv < cfg.CD[i][0]) {
                                break;
                            }
                        }
                        cfgCd = cfg.CD[(i > 0 ? i - 1 : 0)][1]; //取配置的CD
                    }
                    //等级限制，满足150级才能请求
                    if (lv >= cfg.limits[0]) {
                        //客户端额外CD限制，防止点击过快
                        if (!this._isSendSuccess) {
                            if (this._sendTime && TimeMgr.time.serverTimeSecond - this._sendTime < cfgCd + 1) {
                                game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("zhandui_tips33" /* zhandui_tips33 */), [cfgCd]));
                                return;
                            }
                            this._proxy.sendButtonClick(11 /* Oper11 */);
                            game.PromptBox.getIns().show(game.getLanById("zhandui_tips31" /* zhandui_tips31 */));
                        }
                        this._isSendSuccess = false;
                        this._sendTime = TimeMgr.time.serverTimeSecond;
                    }
                    else {
                        var limit = cfg.limits[0];
                        game.PromptBox.getIns().show(game.StringUtil.substitute(game.getLanById("zhandui_tips34" /* zhandui_tips34 */), [limit]));
                    }
                };
                ZhanduiInviteListMdr.prototype.getPowerLimit = function () {
                    var valStr = this._view.editable_value.text || '0';
                    return (+valStr) * 10000;
                };
                ZhanduiInviteListMdr.prototype.onClickEditable = function () {
                    var val = this.getPowerLimit();
                    var isSel = this._view.checkbox2.selected;
                    this._proxy.is_check_power = isSel; //取反，本地做个缓存，服务端不更
                    this._proxy.limit_showpower = val;
                    this._proxy.sendButtonClickPower(isSel ? val : null);
                };
                ZhanduiInviteListMdr.prototype.onFocusOut = function () {
                    if (!this._view.checkbox2.selected) {
                        return;
                    }
                    var val = this.getPowerLimit();
                    this._proxy.limit_showpower = val;
                    if (val == 0) {
                        this._view.checkbox2.selected = false;
                        this._proxy.is_check_power = false;
                    }
                    this._proxy.sendButtonClickPower(this._view.checkbox2.selected ? val : null);
                };
                ZhanduiInviteListMdr.prototype.onChangeValue = function () {
                    var val = +this._view.editable_value.text;
                    if (val > 9999) {
                        val = 9999;
                    }
                    this._view.editable_value.text = val + '';
                };
                return ZhanduiInviteListMdr;
            }(game.MdrBase));
            more.ZhanduiInviteListMdr = ZhanduiInviteListMdr;
            __reflect(ZhanduiInviteListMdr.prototype, "game.mod.more.ZhanduiInviteListMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiJoinMdr = /** @class */ (function (_super) {
                __extends(ZhanduiJoinMdr, _super);
                function ZhanduiJoinMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ZhanduiJoinView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ZhanduiJoinMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list.itemRenderer = more.ZhanduiJoinItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZhanduiJoinMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_refresh, egret.TouchEvent.TOUCH_TAP, this.onClickRefresh, this);
                    addEventListener(this._view.btn_search, egret.TouchEvent.TOUCH_TAP, this.onClickSearch, this);
                    this.onNt("on_update_zhandui_apply_list_info" /* ON_UPDATE_ZHANDUI_APPLY_LIST_INFO */, this.updateView, this);
                    this.onNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */, this.hide, this);
                };
                ZhanduiJoinMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    // this._proxy.sendButtonClick(3); //从聊天频道点击跳转的，只需要展示一条
                    this.updateView();
                };
                ZhanduiJoinMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.lb_input.text = '';
                    this._view.scroller.stopAnimation();
                    this._view.scroller.viewport.scrollV = 0;
                };
                ZhanduiJoinMdr.prototype.updateView = function () {
                    var list = this._proxy.can_apply_list || [];
                    this._listData.replaceAll(list);
                };
                ZhanduiJoinMdr.prototype.onClickRefresh = function () {
                    this._proxy.sendButtonClick(5 /* Oper5 */);
                };
                ZhanduiJoinMdr.prototype.onClickSearch = function () {
                    var text = this._view.lb_input.text;
                    if (!text) {
                        return;
                    }
                    this._proxy.sendButtonClickTeamname(6 /* Oper6 */, text);
                };
                return ZhanduiJoinMdr;
            }(game.MdrBase));
            more.ZhanduiJoinMdr = ZhanduiJoinMdr;
            __reflect(ZhanduiJoinMdr.prototype, "game.mod.more.ZhanduiJoinMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiLevelSecondMainMdr = /** @class */ (function (_super) {
                __extends(ZhanduiLevelSecondMainMdr, _super);
                function ZhanduiLevelSecondMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._height = 1060; //secondPop默认高度
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "zhanduitubiao1",
                            mdr: more.ZhanduiConstructMdr,
                            title: "zhandui_tips5" /* zhandui_tips5 */,
                            bg: "",
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "01" /* TabBtnType01 */]
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "zhanduitubiao2",
                            mdr: more.ZhanduiFlagMdr,
                            title: "zhandui_tips5" /* zhandui_tips5 */,
                            bg: ""
                        }
                    ];
                    return _this;
                }
                ZhanduiLevelSecondMainMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_view_hide" /* ON_VIEW_HIDE */, this.hide, this);
                };
                return ZhanduiLevelSecondMainMdr;
            }(mod.WndSecondMainMdr));
            more.ZhanduiLevelSecondMainMdr = ZhanduiLevelSecondMainMdr;
            __reflect(ZhanduiLevelSecondMainMdr.prototype, "game.mod.more.ZhanduiLevelSecondMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiMainMdr = /** @class */ (function (_super) {
                __extends(ZhanduiMainMdr, _super);
                function ZhanduiMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* Xujie */,
                            icon: "xujie_icon",
                            mdr: more.ZhanduiMdr,
                            title: "zhandui_tips11" /* zhandui_tips11 */,
                            bg: "xujie_bg",
                            openIdx: 1041670222 /* Zhandui */,
                            hintTypes: ["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */]
                        }
                    ];
                    return _this;
                }
                return ZhanduiMainMdr;
            }(mod.WndBaseMdr));
            more.ZhanduiMainMdr = ZhanduiMainMdr;
            __reflect(ZhanduiMainMdr.prototype, "game.mod.more.ZhanduiMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var Tween = base.Tween;
            var ZhanduiMdr = /** @class */ (function (_super) {
                __extends(ZhanduiMdr, _super);
                function ZhanduiMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhanduiView);
                    return _this;
                }
                ZhanduiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                };
                ZhanduiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_rule, egret.TouchEvent.TOUCH_TAP, this.onClickRule, this);
                    addEventListener(this._view.btn_jixing, egret.TouchEvent.TOUCH_TAP, this.onClickJixing, this);
                    addEventListener(this._view.btn_rename, egret.TouchEvent.TOUCH_TAP, this.onClickRename, this);
                    addEventListener(this._view.btn_apply, egret.TouchEvent.TOUCH_TAP, this.onClickApply, this);
                    addEventListener(this._view.btn_channel, egret.TouchEvent.TOUCH_TAP, this.onClickChannel, this);
                    addEventListener(this._view.img_flag, egret.TouchEvent.TOUCH_TAP, this.onClickFlag, this);
                    addEventListener(this._view.btn_jitan, egret.TouchEvent.TOUCH_TAP, this.onClickJitan, this);
                    addEventListener(this._view.btn_tansuo, egret.TouchEvent.TOUCH_TAP, this.onClickTansuo, this);
                    addEventListener(this._view.btn_kuangmai, egret.TouchEvent.TOUCH_TAP, this.onClickKuangmai, this);
                    this.onNt("on_update_zhandui_base_info" /* ON_UPDATE_ZHANDUI_BASE_INFO */, this.onUpdateView, this);
                    this.onNt("on_update_zhandui_team_role_apply_list_info" /* ON_UPDATE_ZHANDUI_TEAM_ROLE_APPLY_LIST_INFO */, this.onUpdateBtnHint, this);
                    this.onNt("on_update_zhandui_jitan_base_info" /* ON_UPDATE_ZHANDUI_JITAN_BASE_INFO */, this.updateBtnInfo, this);
                };
                ZhanduiMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.sendButtonClick(100 /* Oper100 */);
                    this.updateBtnInfo();
                    this.isShowEft();
                    this.updateData();
                };
                ZhanduiMdr.prototype.isShowEft = function () {
                    this.removeEft();
                    this.addEftByParent("xujiecloud" /* XuJieCloud */, this._view.group_eft1);
                    this.addEftByParent("xujiecloud" /* XuJieCloud */, this._view.group_eft2);
                    this.addEftByParent("xujiecloud" /* XuJieCloud */, this._view.group_eft3);
                    this.addEftByParent("xujiecloud" /* XuJieCloud */, this._view.group_eft4);
                    this.addEftByParent("xujiecloud" /* XuJieCloud */, this._view.group_eft5);
                };
                ZhanduiMdr.prototype.onHide = function () {
                    Tween.remove(this._view.group_eft1);
                    Tween.remove(this._view.group_eft2);
                    Tween.remove(this._view.group_eft3);
                    Tween.remove(this._view.group_eft4);
                    Tween.remove(this._view.group_eft5);
                    this.sendNt("on_update_zhandui_check_view_hide" /* ON_UPDATE_ZHANDUI_CHECK_VIEW_HIDE */);
                    _super.prototype.onHide.call(this);
                };
                ZhanduiMdr.prototype.updateData = function () {
                    Tween.remove(this._view.group_eft1);
                    Tween.remove(this._view.group_eft2);
                    Tween.remove(this._view.group_eft3);
                    Tween.remove(this._view.group_eft4);
                    Tween.remove(this._view.group_eft5);
                    Tween.get(this._view.group_eft1, { loop: true })
                        .to({ x: 160, alpha: 1 }, 3000)
                        .to({ x: 160, alpha: 0 }, 3000);
                    Tween.get(this._view.group_eft2, { loop: true })
                        .to({ x: 530, alpha: 1 }, 3000)
                        .to({ x: 530, alpha: 0 }, 3000);
                    Tween.get(this._view.group_eft3, { loop: true })
                        .to({ x: 160, alpha: 1 }, 3000)
                        .to({ x: 160, alpha: 0 }, 3000);
                    Tween.get(this._view.group_eft4, { loop: true })
                        .to({ x: 530, alpha: 1 }, 3000)
                        .to({ x: 530, alpha: 0 }, 3000);
                    Tween.get(this._view.group_eft5, { loop: true })
                        .to({ x: 530, alpha: 1 }, 3000)
                        .to({ x: 530, alpha: 0 }, 3000);
                };
                ZhanduiMdr.prototype.onUpdateView = function () {
                    if (!this._proxy.haveTeam()) {
                        mod.ViewMgr.getIns().showMain(); //退出队伍后，返回主界面
                        return;
                    }
                    this.updateView();
                    this.updateData();
                };
                ZhanduiMdr.prototype.onUpdateBtnHint = function () {
                    this._view.btn_apply.setHint(this._proxy.getApplyHint());
                };
                ZhanduiMdr.prototype.updateView = function () {
                    var num = this._proxy.total_team_count;
                    var str = game.StringUtil.substitute(game.getLanById("zhandui_tips4" /* zhandui_tips4 */), [game.TextUtil.addColor(num + '', 8585074 /* GREEN */)]);
                    this._view.lb_text.textFlow = game.TextUtil.parseHtml(str);
                    this._view.lb_name.text = this._proxy.team_name;
                    this._view.lb_lv.text = this._proxy.team_level + game.getLanById("lv" /* lv */);
                    this._view.img_flag.source = game.ResUtil.getZhanduiFlag(this._proxy.flag_index);
                    var teamRoles = this._proxy.team_roles;
                    this._view.teammateItem0.data = teamRoles[0];
                    this._view.teammateItem1.data = teamRoles[1];
                    this._view.teammateItem2.data = teamRoles[2];
                    this._view.teammateItem3.data = teamRoles[3];
                    this.onUpdateBtnHint();
                    this._view.redPoint.visible = this._proxy.getRewardHint();
                };
                ZhanduiMdr.prototype.onClickRule = function () {
                    mod.ViewMgr.getIns().showRuleTips(game.getLanById("zhandui_tips13" /* zhandui_tips13 */));
                };
                ZhanduiMdr.prototype.onClickJixing = function () {
                    mod.ViewMgr.getIns().showView("61" /* More */, "19" /* ZhanduiXianjiMain */);
                };
                ZhanduiMdr.prototype.onClickRename = function () {
                    if (!this._proxy.isCaption()) {
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips10" /* zhandui_tips10 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "15" /* ZhanduiRename */);
                };
                ZhanduiMdr.prototype.onClickApply = function () {
                    if (!this._proxy.isCaption()) {
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips10" /* zhandui_tips10 */));
                        return;
                    }
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "16" /* ZhanduiInviteList */);
                };
                ZhanduiMdr.prototype.onClickChannel = function () {
                    mod.ViewMgr.getIns().showView("25" /* Chat */, "01" /* ChatMain */, "05" /* Zhandui */);
                };
                ZhanduiMdr.prototype.onClickFlag = function () {
                    mod.ViewMgr.getIns().showSecondPop("61" /* More */, "17" /* ZhanduiLevelSecondMainMdr */);
                };
                ZhanduiMdr.prototype.onClickJitan = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670226 /* XujieJitan */, true)) {
                        return;
                    }
                    mod.ViewMgr.getIns().showView("61" /* More */, "20" /* XujieJitanMain */);
                };
                ZhanduiMdr.prototype.onClickTansuo = function () {
                    if (!mod.ViewMgr.getIns().checkViewOpen(1041670223 /* XujieTansuo */, true)) {
                        return;
                    }
                    // PromptBox.getIns().show(`墟界探索，敬请期待`);
                    mod.ViewMgr.getIns().showView("61" /* More */, "51" /* XujieTansuoMain */);
                };
                ZhanduiMdr.prototype.onClickKuangmai = function () {
                    // PromptBox.getIns().show(`墟界矿脉，敬请期待`);
                    mod.ViewMgr.getIns().showView("61" /* More */, "40" /* MiningMain */);
                };
                //todo 其他系统入口红点处理
                ZhanduiMdr.prototype.updateBtnInfo = function () {
                    var tansuoHint = mod.HintMgr.getHint(["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "51" /* XujieTansuoMain */]);
                    this._view.btn_tansuo.setData(1 /* Tansuo */, tansuoHint);
                    var kuangmaiHint = mod.HintMgr.getHint(["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "40" /* MiningMain */]);
                    this._view.btn_kuangmai.setData(2 /* Kuangmai */, kuangmaiHint);
                    var jitanHint = mod.HintMgr.getHint(["61" /* More */, "14" /* ZhanduiMain */, "01" /* Xujie */, "20" /* XujieJitanMain */]);
                    this._view.btn_jitan.setData(3 /* Jitan */, jitanHint);
                };
                return ZhanduiMdr;
            }(game.EffectMdrBase));
            more.ZhanduiMdr = ZhanduiMdr;
            __reflect(ZhanduiMdr.prototype, "game.mod.more.ZhanduiMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiRenameMdr = /** @class */ (function (_super) {
                __extends(ZhanduiRenameMdr, _super);
                function ZhanduiRenameMdr() {
                    var _this = _super.call(this, game.Layer.modal) || this;
                    _this._view = _this.mark("_view", more.ZhanduiRenameView);
                    _this.isEasyHide = true;
                    return _this;
                }
                ZhanduiRenameMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                };
                ZhanduiRenameMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.btn_do, egret.TouchEvent.TOUCH_TAP, this.onClickDo, this);
                };
                ZhanduiRenameMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    var cost = this._proxy.getRenameCost();
                    this._view.btn_do.setCost(cost);
                };
                ZhanduiRenameMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                    this._view.lb_input.text = '';
                };
                ZhanduiRenameMdr.prototype.onClickDo = function () {
                    var text = this._view.lb_input.text;
                    if (!text) {
                        game.PromptBox.getIns().show(game.getLanById("zhandui_tips7" /* zhandui_tips7 */));
                        return;
                    }
                    this._proxy.sendButtonClickTeamname(7 /* Oper7 */, text);
                    this.hide();
                };
                return ZhanduiRenameMdr;
            }(game.MdrBase));
            more.ZhanduiRenameMdr = ZhanduiRenameMdr;
            __reflect(ZhanduiRenameMdr.prototype, "game.mod.more.ZhanduiRenameMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var stage = egret.lifecycle.stage;
            var Handler = base.Handler;
            /**
             * 策划文档：玩家头像，点击其他玩家头像显示如下按钮，操作逻辑与仙友相同不再赘述
             */
            var ZhanduiTeammateCheckMdr = /** @class */ (function (_super) {
                __extends(ZhanduiTeammateCheckMdr, _super);
                function ZhanduiTeammateCheckMdr() {
                    var _this = _super.call(this, game.Layer.tip) || this;
                    _this._view = _this.mark("_view", more.ZhanduiTeammateCheckView);
                    return _this;
                }
                ZhanduiTeammateCheckMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list_btn.itemRenderer = mod.BtnTabItem;
                    this._view.list_btn.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZhanduiTeammateCheckMdr.prototype.addListeners = function () {
                    var _this = this;
                    _super.prototype.addListeners.call(this);
                    var addEventListener = this.onEgret.bind(this);
                    addEventListener(this._view.list_btn, egret.Event.CHANGING, this.onClickBtn);
                    egret.callLater(function () {
                        addEventListener(stage, egret.TouchEvent.TOUCH_TAP, _this.onClickOther);
                    }, this);
                    this.onNt("on_update_zhandui_check_view_hide" /* ON_UPDATE_ZHANDUI_CHECK_VIEW_HIDE */, this.hide, this);
                };
                ZhanduiTeammateCheckMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    if (!this._showArgs || !this._showArgs.data) {
                        return;
                    }
                    var point = this._showArgs.point;
                    this._view.x = point.x;
                    this._view.y = point.y;
                    this.initTypeList();
                };
                ZhanduiTeammateCheckMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZhanduiTeammateCheckMdr.prototype.initTypeList = function () {
                    var datas = [];
                    datas.push({ name: game.getLanById("chat_cue20" /* chat_cue20 */) }); //查看
                    datas.push({ name: game.getLanById("chat_cue22" /* chat_cue22 */) }); //私聊
                    var isMyself = this._proxy.isMyself(this._showArgs.data);
                    if (this._proxy.isCaption() && !isMyself) {
                        datas.push({ name: game.getLanById("zhandui_tips14" /* zhandui_tips14 */) }); //转移队长
                        datas.push({ name: game.getLanById("zhandui_tips15" /* zhandui_tips15 */) }); //移出战队
                    }
                    else if (isMyself) {
                        datas.pop();
                        datas.push({ name: game.getLanById("zhandui_tips16" /* zhandui_tips16 */) }); //退出战队
                    }
                    this._listData.source = datas;
                    this._view.list_btn.selectedIndex = -1;
                };
                ZhanduiTeammateCheckMdr.prototype.onClickBtn = function () {
                    var item = this._view.list_btn.selectedItem;
                    if (!item) {
                        return;
                    }
                    var name = item.name;
                    var info = this._showArgs.data;
                    if (name == game.getLanById("chat_cue20" /* chat_cue20 */)) {
                        mod.ViewMgr.getIns().showRoleTips(info.role_id, info.server_id);
                    }
                    else if (name == game.getLanById("chat_cue22" /* chat_cue22 */)) {
                        mod.ViewMgr.getIns().chat(info);
                    }
                    else if (name == game.getLanById("zhandui_tips16" /* zhandui_tips16 */)) {
                        this.onClickQuit();
                    }
                    else if (name == game.getLanById("zhandui_tips14" /* zhandui_tips14 */)) {
                        mod.ViewMgr.getIns().showConfirm(game.StringUtil.substitute(game.getLanById("zhandui_tips17" /* zhandui_tips17 */), [info.name]), Handler.alloc(this, this.transferCaption, [info.role_id]));
                    }
                    else if (name == game.getLanById("zhandui_tips15" /* zhandui_tips15 */)) {
                        mod.ViewMgr.getIns().showConfirm(game.StringUtil.substitute(game.getLanById("zhandui_tips18" /* zhandui_tips18 */), [info.name]), Handler.alloc(this, this.removeTeammate, [info.role_id]));
                    }
                    this.hide();
                };
                ZhanduiTeammateCheckMdr.prototype.onClickQuit = function () {
                    var isCaption = this._proxy.isCaption();
                    var str = isCaption ? game.getLanById("zhandui_tips19" /* zhandui_tips19 */) : game.getLanById("zhandui_tips20" /* zhandui_tips20 */);
                    if (isCaption && this._proxy.team_roles.length > 1) {
                        str = game.getLanById("zhandui_tips20" /* zhandui_tips20 */); //队长退出战队时,战队还有其他人
                    }
                    mod.ViewMgr.getIns().showConfirm(str, Handler.alloc(this, this.confirmQuit));
                };
                ZhanduiTeammateCheckMdr.prototype.confirmQuit = function () {
                    this._proxy.sendButtonClick(14 /* Oper14 */);
                };
                ZhanduiTeammateCheckMdr.prototype.transferCaption = function (role_id) {
                    this._proxy.sendButtonClickRoleId(12 /* Oper12 */, role_id);
                };
                ZhanduiTeammateCheckMdr.prototype.removeTeammate = function (role_id) {
                    this._proxy.sendButtonClickRoleId(13 /* Oper13 */, role_id);
                };
                ZhanduiTeammateCheckMdr.prototype.onClickOther = function (e) {
                    var point = this._view.localToGlobal();
                    if (e.stageX < point.x || e.stageX > point.x + this._view.width
                        || e.stageY < point.y || e.stageY > point.y + this._view.height) {
                        this.hide();
                    }
                };
                return ZhanduiTeammateCheckMdr;
            }(game.MdrBase));
            more.ZhanduiTeammateCheckMdr = ZhanduiTeammateCheckMdr;
            __reflect(ZhanduiTeammateCheckMdr.prototype, "game.mod.more.ZhanduiTeammateCheckMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiXianjiMainMdr = /** @class */ (function (_super) {
                __extends(ZhanduiXianjiMainMdr, _super);
                function ZhanduiXianjiMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "xianji_icon",
                            mdr: more.ZhanduiXianjiSecondMainMdr,
                            title: "zhandui_tips21" /* zhandui_tips21 */,
                            bg: ""
                        }
                    ];
                    return _this;
                }
                return ZhanduiXianjiMainMdr;
            }(mod.WndBaseMdr));
            more.ZhanduiXianjiMainMdr = ZhanduiXianjiMainMdr;
            __reflect(ZhanduiXianjiMainMdr.prototype, "game.mod.more.ZhanduiXianjiMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiXianjiMdr = /** @class */ (function (_super) {
                __extends(ZhanduiXianjiMdr, _super);
                function ZhanduiXianjiMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._view = _this.mark("_view", more.ZhanduiXianjiView);
                    /**1功绩，2事件*/
                    _this._type = 1;
                    return _this;
                }
                ZhanduiXianjiMdr.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this._proxy = this.retProxy(251 /* Zhandui */);
                    this._view.list.itemRenderer = more.ZhanduiXianjiItem;
                    this._view.list.dataProvider = this._listData = new eui.ArrayCollection();
                };
                ZhanduiXianjiMdr.prototype.addListeners = function () {
                    _super.prototype.addListeners.call(this);
                    this.onNt("on_update_zhandui_records" /* ON_UPDATE_ZHANDUI_RECORDS */, this.updateView, this);
                };
                ZhanduiXianjiMdr.prototype.onShow = function () {
                    _super.prototype.onShow.call(this);
                    this._proxy.sendButtonClick(this._type == 1 ? 17 /* Oper17 */ : 18 /* Oper18 */);
                };
                ZhanduiXianjiMdr.prototype.onHide = function () {
                    _super.prototype.onHide.call(this);
                };
                ZhanduiXianjiMdr.prototype.updateView = function () {
                    this._listData.replaceAll(this._proxy.getStrs(this._type));
                };
                return ZhanduiXianjiMdr;
            }(game.MdrBase));
            more.ZhanduiXianjiMdr = ZhanduiXianjiMdr;
            __reflect(ZhanduiXianjiMdr.prototype, "game.mod.more.ZhanduiXianjiMdr");
            var ZhanduiXianjiMdr2 = /** @class */ (function (_super) {
                __extends(ZhanduiXianjiMdr2, _super);
                function ZhanduiXianjiMdr2() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._type = 2;
                    return _this;
                }
                return ZhanduiXianjiMdr2;
            }(ZhanduiXianjiMdr));
            more.ZhanduiXianjiMdr2 = ZhanduiXianjiMdr2;
            __reflect(ZhanduiXianjiMdr2.prototype, "game.mod.more.ZhanduiXianjiMdr2");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
var game;
(function (game) {
    var mod;
    (function (mod) {
        var more;
        (function (more) {
            var ZhanduiXianjiSecondMainMdr = /** @class */ (function (_super) {
                __extends(ZhanduiXianjiSecondMainMdr, _super);
                function ZhanduiXianjiSecondMainMdr() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this._btnData = [
                        {
                            btnType: "01" /* TabBtnType01 */,
                            icon: "gongjitubiao1",
                            mdr: more.ZhanduiXianjiMdr,
                            bg: ""
                        },
                        {
                            btnType: "02" /* TabBtnType02 */,
                            icon: "gongjitubiao2",
                            mdr: more.ZhanduiXianjiMdr2,
                            bg: ""
                        }
                    ];
                    return _this;
                }
                return ZhanduiXianjiSecondMainMdr;
            }(mod.WndSecondMdr));
            more.ZhanduiXianjiSecondMainMdr = ZhanduiXianjiSecondMainMdr;
            __reflect(ZhanduiXianjiSecondMainMdr.prototype, "game.mod.more.ZhanduiXianjiSecondMainMdr");
        })(more = mod.more || (mod.more = {}));
    })(mod = game.mod || (game.mod = {}));
})(game || (game = {}));
//# sourceMappingURL=more.js.map